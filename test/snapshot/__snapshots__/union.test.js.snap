// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test unions intersection mixed with union 1`] = `
Program {
  "children": [
    _Function {
      "arguments": [
        Parameter {
          "attrGroups": [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "test",
          },
          "nullable": false,
          "readonly": false,
          "type": IntersectionType {
            "kind": "intersectiontype",
            "name": null,
            "types": [
              Name {
                "kind": "name",
                "name": "foo",
                "resolution": "uqn",
              },
              Name {
                "kind": "name",
                "name": "bar",
                "resolution": "uqn",
              },
              Name {
                "kind": "name",
                "name": "baz",
                "resolution": "uqn",
              },
            ],
          },
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": [],
      "body": Block {
        "children": [],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": false,
      },
      "nullable": false,
      "type": null,
    },
  ],
  "errors": [
    Error {
      "expected": undefined,
      "kind": "error",
      "line": 1,
      "message": "Unexpect token "|", "|" and "&" can not be mixed on line 1",
      "token": undefined,
    },
  ],
  "kind": "program",
}
`;

exports[`Test unions intersection with reference 1`] = `
Program {
  "children": [
    _Function {
      "arguments": [
        Parameter {
          "attrGroups": [],
          "byref": true,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "test",
          },
          "nullable": false,
          "readonly": false,
          "type": IntersectionType {
            "kind": "intersectiontype",
            "name": null,
            "types": [
              Name {
                "kind": "name",
                "name": "foo",
                "resolution": "uqn",
              },
              Name {
                "kind": "name",
                "name": "bar",
                "resolution": "uqn",
              },
            ],
          },
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": [],
      "body": Block {
        "children": [],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": false,
      },
      "nullable": false,
      "type": null,
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`Test unions intersection with three types 1`] = `
Program {
  "children": [
    _Function {
      "arguments": [
        Parameter {
          "attrGroups": [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "test",
          },
          "nullable": false,
          "readonly": false,
          "type": IntersectionType {
            "kind": "intersectiontype",
            "name": null,
            "types": [
              Name {
                "kind": "name",
                "name": "foo",
                "resolution": "uqn",
              },
              Name {
                "kind": "name",
                "name": "bar",
                "resolution": "uqn",
              },
              Name {
                "kind": "name",
                "name": "baz",
                "resolution": "uqn",
              },
            ],
          },
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": [],
      "body": Block {
        "children": [],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": false,
      },
      "nullable": false,
      "type": null,
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`Test unions intersection with variadic 1`] = `
Program {
  "children": [
    _Function {
      "arguments": [
        Parameter {
          "attrGroups": [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "test",
          },
          "nullable": false,
          "readonly": false,
          "type": IntersectionType {
            "kind": "intersectiontype",
            "name": null,
            "types": [
              Name {
                "kind": "name",
                "name": "foo",
                "resolution": "uqn",
              },
              Name {
                "kind": "name",
                "name": "bar",
                "resolution": "uqn",
              },
            ],
          },
          "value": null,
          "variadic": true,
        },
      ],
      "attrGroups": [],
      "body": Block {
        "children": [],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": false,
      },
      "nullable": false,
      "type": null,
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`Test unions simple intersection 1`] = `
Program {
  "children": [
    _Function {
      "arguments": [
        Parameter {
          "attrGroups": [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "test",
          },
          "nullable": false,
          "readonly": false,
          "type": IntersectionType {
            "kind": "intersectiontype",
            "name": null,
            "types": [
              Name {
                "kind": "name",
                "name": "foo",
                "resolution": "uqn",
              },
              Name {
                "kind": "name",
                "name": "bar",
                "resolution": "uqn",
              },
            ],
          },
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": [],
      "body": Block {
        "children": [],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": false,
      },
      "nullable": false,
      "type": null,
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`Test unions simple union 1`] = `
Program {
  "children": [
    _Function {
      "arguments": [
        Parameter {
          "attrGroups": [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "test",
          },
          "nullable": false,
          "readonly": false,
          "type": UnionType {
            "kind": "uniontype",
            "name": null,
            "types": [
              Name {
                "kind": "name",
                "name": "foo",
                "resolution": "uqn",
              },
              Name {
                "kind": "name",
                "name": "bar",
                "resolution": "uqn",
              },
            ],
          },
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": [],
      "body": Block {
        "children": [],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": false,
      },
      "nullable": false,
      "type": null,
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`Test unions union mixed with intersection 1`] = `
Program {
  "children": [
    _Function {
      "arguments": [
        Parameter {
          "attrGroups": [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "test",
          },
          "nullable": false,
          "readonly": false,
          "type": UnionType {
            "kind": "uniontype",
            "name": null,
            "types": [
              Name {
                "kind": "name",
                "name": "foo",
                "resolution": "uqn",
              },
              Name {
                "kind": "name",
                "name": "bar",
                "resolution": "uqn",
              },
              Name {
                "kind": "name",
                "name": "baz",
                "resolution": "uqn",
              },
            ],
          },
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": [],
      "body": Block {
        "children": [],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": false,
      },
      "nullable": false,
      "type": null,
    },
  ],
  "errors": [
    Error {
      "expected": undefined,
      "kind": "error",
      "line": 1,
      "message": "Unexpect token "&", "|" and "&" can not be mixed on line 1",
      "token": undefined,
    },
  ],
  "kind": "program",
}
`;

exports[`Test unions union with reference 1`] = `
Program {
  "children": [
    _Function {
      "arguments": [
        Parameter {
          "attrGroups": [],
          "byref": true,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "test",
          },
          "nullable": false,
          "readonly": false,
          "type": UnionType {
            "kind": "uniontype",
            "name": null,
            "types": [
              Name {
                "kind": "name",
                "name": "foo",
                "resolution": "uqn",
              },
              Name {
                "kind": "name",
                "name": "bar",
                "resolution": "uqn",
              },
            ],
          },
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": [],
      "body": Block {
        "children": [],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": false,
      },
      "nullable": false,
      "type": null,
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`Test unions union with three types 1`] = `
Program {
  "children": [
    _Function {
      "arguments": [
        Parameter {
          "attrGroups": [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "test",
          },
          "nullable": false,
          "readonly": false,
          "type": UnionType {
            "kind": "uniontype",
            "name": null,
            "types": [
              Name {
                "kind": "name",
                "name": "foo",
                "resolution": "uqn",
              },
              Name {
                "kind": "name",
                "name": "bar",
                "resolution": "uqn",
              },
              Name {
                "kind": "name",
                "name": "baz",
                "resolution": "uqn",
              },
            ],
          },
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": [],
      "body": Block {
        "children": [],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": false,
      },
      "nullable": false,
      "type": null,
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`Test unions union with variadic 1`] = `
Program {
  "children": [
    _Function {
      "arguments": [
        Parameter {
          "attrGroups": [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "test",
          },
          "nullable": false,
          "readonly": false,
          "type": UnionType {
            "kind": "uniontype",
            "name": null,
            "types": [
              Name {
                "kind": "name",
                "name": "foo",
                "resolution": "uqn",
              },
              Name {
                "kind": "name",
                "name": "bar",
                "resolution": "uqn",
              },
            ],
          },
          "value": null,
          "variadic": true,
        },
      ],
      "attrGroups": [],
      "body": Block {
        "children": [],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": false,
      },
      "nullable": false,
      "type": null,
    },
  ],
  "errors": [],
  "kind": "program",
}
`;
