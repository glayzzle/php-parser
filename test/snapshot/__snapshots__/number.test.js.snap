// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test numbers binary with 2 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "b",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "0",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": undefined,
      "kind": "expressionstatement",
    },
  ],
  "errors": [
    Error {
      "expected": ";",
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error, unexpected 'b2' (T_STRING), expecting ';' on line 1",
      "token": "'b2' (T_STRING)",
    },
    Error {
      "expected": "EXPR",
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error on line 1",
      "token": "the end of file (EOF)",
    },
  ],
  "kind": "program",
}
`;

exports[`Test numbers exponent empty 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "e",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "7",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": undefined,
      "kind": "expressionstatement",
    },
  ],
  "errors": [
    Error {
      "expected": ";",
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error, unexpected 'EX' (T_STRING), expecting ';' on line 1",
      "token": "'EX' (T_STRING)",
    },
    Error {
      "expected": "EXPR",
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error on line 1",
      "token": "the end of file (EOF)",
    },
  ],
  "kind": "program",
}
`;

exports[`Test numbers exponent with letter 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "d",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "7",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Bin {
        "kind": "bin",
        "left": Name {
          "kind": "name",
          "name": "E",
          "resolution": "uqn",
        },
        "right": Name {
          "kind": "name",
          "name": "a",
          "resolution": "uqn",
        },
        "type": "-",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": [
    Error {
      "expected": ";",
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error, unexpected 'E' (T_STRING), expecting ';' on line 1",
      "token": "'E' (T_STRING)",
    },
  ],
  "kind": "program",
}
`;

exports[`Test numbers hexa without hex 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "0",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": undefined,
      "kind": "expressionstatement",
    },
  ],
  "errors": [
    Error {
      "expected": ";",
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error, unexpected 'xx' (T_STRING), expecting ';' on line 1",
      "token": "'xx' (T_STRING)",
    },
    Error {
      "expected": "EXPR",
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error on line 1",
      "token": "the end of file (EOF)",
    },
  ],
  "kind": "program",
}
`;

exports[`Test numbers multiple points 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "b",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "1.0",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Number {
        "kind": "number",
        "value": ".5",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": [
    Error {
      "expected": ";",
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error, unexpected '.5' (T_DNUMBER), expecting ';' on line 1",
      "token": "'.5' (T_DNUMBER)",
    },
  ],
  "kind": "program",
}
`;

exports[`Test numbers test common cases 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": Number {
        "kind": "number",
        "value": "1234",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
        "operator": "=",
        "right": Unary {
          "kind": "unary",
          "type": "-",
          "what": Number {
            "kind": "number",
            "value": "1.5",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "b",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "1234",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "c",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "9223372036854775807",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "c",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "9223372036854775808",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "d",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "0x1A",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "d",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "0xFF",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "e",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "0b1011",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "f",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "0123",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "g",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "1.2e3",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "h",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "7E-10",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`Test numbers underscore #1 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "e",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "7",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": undefined,
      "kind": "expressionstatement",
    },
  ],
  "errors": [
    Error {
      "expected": ";",
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error, unexpected '__0' (T_STRING), expecting ';' on line 1",
      "token": "'__0' (T_STRING)",
    },
    Error {
      "expected": "EXPR",
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error on line 1",
      "token": "the end of file (EOF)",
    },
  ],
  "kind": "program",
}
`;

exports[`Test numbers underscore #2 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "e",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "7.",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": undefined,
      "kind": "expressionstatement",
    },
  ],
  "errors": [
    Error {
      "expected": ";",
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error, unexpected '_0' (T_STRING), expecting ';' on line 1",
      "token": "'_0' (T_STRING)",
    },
    Error {
      "expected": "EXPR",
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error on line 1",
      "token": "the end of file (EOF)",
    },
  ],
  "kind": "program",
}
`;

exports[`Test numbers underscore #3 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "e",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "7",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Name {
        "kind": "name",
        "name": "_",
        "resolution": "uqn",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Number {
        "kind": "number",
        "value": ".0",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": [
    Error {
      "expected": ";",
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error, unexpected '_' (T_STRING), expecting ';' on line 1",
      "token": "'_' (T_STRING)",
    },
    Error {
      "expected": ";",
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error, unexpected '.0' (T_DNUMBER), expecting ';' on line 1",
      "token": "'.0' (T_DNUMBER)",
    },
  ],
  "kind": "program",
}
`;

exports[`Test numbers underscore #4 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "e",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "7",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": undefined,
      "kind": "expressionstatement",
    },
  ],
  "errors": [
    Error {
      "expected": ";",
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error, unexpected 'e_0' (T_STRING), expecting ';' on line 1",
      "token": "'e_0' (T_STRING)",
    },
    Error {
      "expected": "EXPR",
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error on line 1",
      "token": "the end of file (EOF)",
    },
  ],
  "kind": "program",
}
`;

exports[`Test numbers underscore #5 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "e",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "7_",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": undefined,
      "kind": "expressionstatement",
    },
  ],
  "errors": [
    Error {
      "expected": ";",
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error, unexpected 'e0' (T_STRING), expecting ';' on line 1",
      "token": "'e0' (T_STRING)",
    },
    Error {
      "expected": "EXPR",
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error on line 1",
      "token": "the end of file (EOF)",
    },
  ],
  "kind": "program",
}
`;

exports[`Test numbers variant (for coverage) 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "d",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "7",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Bin {
        "kind": "bin",
        "left": Name {
          "kind": "name",
          "name": "e",
          "resolution": "uqn",
        },
        "right": Name {
          "kind": "name",
          "name": "a",
          "resolution": "uqn",
        },
        "type": "+",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": [
    Error {
      "expected": ";",
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error, unexpected 'e' (T_STRING), expecting ';' on line 1",
      "token": "'e' (T_STRING)",
    },
  ],
  "kind": "program",
}
`;
