// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test comments issues fix #55 1`] = `
Program {
  "children": [
    If {
      "alternate": null,
      "body": Block {
        "children": [
          If {
            "alternate": null,
            "body": Block {
              "children": [],
              "kind": "block",
              "leadingComments": [
                CommentLine {
                  "kind": "commentline",
                  "offset": 51,
                  "value": "// inner statements
",
                },
              ],
            },
            "kind": "if",
            "shortForm": true,
            "test": Boolean {
              "kind": "boolean",
              "raw": "true",
              "value": true,
            },
          },
        ],
        "kind": "block",
        "trailingComments": [
          CommentLine {
            "kind": "commentline",
            "offset": 88,
            "value": "// another comment
",
          },
        ],
      },
      "kind": "if",
      "shortForm": true,
      "test": Boolean {
        "kind": "boolean",
        "raw": "true",
        "value": true,
      },
      "trailingComments": [
        CommentLine {
          "kind": "commentline",
          "offset": 122,
          "value": "// 2nd comment
",
        },
      ],
    },
  ],
  "comments": [
    CommentLine {
      "kind": "commentline",
      "offset": 51,
      "value": "// inner statements
",
    },
    CommentLine {
      "kind": "commentline",
      "offset": 88,
      "value": "// another comment
",
    },
    CommentLine {
      "kind": "commentline",
      "offset": 122,
      "value": "// 2nd comment
",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`Test comments issues fix #126 : new option 1`] = `
Program {
  "children": [
    If {
      "alternate": If {
        "alternate": null,
        "body": Block {
          "children": [
            ExpressionStatement {
              "expression": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "a",
                },
                "operator": "=",
                "right": Number {
                  "kind": "number",
                  "value": "2",
                },
                "trailingComments": [
                  CommentBlock {
                    "kind": "commentblock",
                    "offset": 119,
                    "value": "/* trailing 2 */",
                  },
                ],
              },
              "kind": "expressionstatement",
              "trailingComments": [
                CommentLine {
                  "kind": "commentline",
                  "offset": 148,
                  "value": "// trailing assing
",
                },
              ],
            },
          ],
          "kind": "block",
        },
        "kind": "if",
        "leadingComments": [
          CommentLine {
            "kind": "commentline",
            "offset": 57,
            "value": "// Don't parsed :(
",
          },
        ],
        "shortForm": false,
        "test": Boolean {
          "kind": "boolean",
          "raw": "false",
          "value": false,
        },
      },
      "body": Block {
        "children": [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "a",
              },
              "operator": "=",
              "right": Number {
                "kind": "number",
                "value": "1",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Boolean {
        "kind": "boolean",
        "raw": "true",
        "value": true,
      },
      "trailingComments": [
        CommentLine {
          "kind": "commentline",
          "offset": 185,
          "value": "// trailing elseif
",
        },
      ],
    },
  ],
  "comments": [
    CommentLine {
      "kind": "commentline",
      "offset": 57,
      "value": "// Don't parsed :(
",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 119,
      "value": "/* trailing 2 */",
    },
    CommentLine {
      "kind": "commentline",
      "offset": 148,
      "value": "// trailing assing
",
    },
    CommentLine {
      "kind": "commentline",
      "offset": 185,
      "value": "// trailing elseif
",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`Test comments issues fix #189 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "var",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "leadingComments": [
            CommentLine {
              "kind": "commentline",
              "offset": 30,
              "value": "// Comment 1
",
            },
          ],
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'string1'",
              "unicode": false,
              "value": "string1",
            },
            "right": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'string2'",
              "unicode": false,
              "value": "string2",
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "leadingComments": [
              CommentLine {
                "kind": "commentline",
                "offset": 61,
                "value": "// Comment 2
",
              },
              CommentLine {
                "kind": "commentline",
                "offset": 80,
                "value": "// Comment 3
",
              },
            ],
            "raw": "'string3'",
            "unicode": false,
            "value": "string3",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "comments": [
    CommentLine {
      "kind": "commentline",
      "offset": 30,
      "value": "// Comment 1
",
    },
    CommentLine {
      "kind": "commentline",
      "offset": 61,
      "value": "// Comment 2
",
    },
    CommentLine {
      "kind": "commentline",
      "offset": 80,
      "value": "// Comment 3
",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`Test comments issues fix #193 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
        "operator": "=",
        "right": Call {
          "arguments": [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "leadingComments": [
              CommentLine {
                "kind": "commentline",
                "offset": 29,
                "value": "// Comment Before
",
              },
            ],
            "offset": Identifier {
              "kind": "identifier",
              "leadingComments": [
                CommentLine {
                  "kind": "commentline",
                  "offset": 70,
                  "value": "// Comment After
",
                },
              ],
              "name": "each",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "var",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "comments": [
    CommentLine {
      "kind": "commentline",
      "offset": 29,
      "value": "// Comment Before
",
    },
    CommentLine {
      "kind": "commentline",
      "offset": 70,
      "value": "// Comment After
",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`Test comments issues fix #250 : Leading comments are treated as trailing comments 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": Call {
        "arguments": [],
        "kind": "call",
        "loc": Location {
          "end": Position {
            "column": 6,
            "line": 3,
            "offset": 18,
          },
          "source": "foo();",
          "start": Position {
            "column": 0,
            "line": 3,
            "offset": 12,
          },
        },
        "what": Name {
          "kind": "name",
          "loc": Location {
            "end": Position {
              "column": 3,
              "line": 3,
              "offset": 15,
            },
            "source": "foo",
            "start": Position {
              "column": 0,
              "line": 3,
              "offset": 12,
            },
          },
          "name": "foo",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
      "leadingComments": [
        CommentLine {
          "kind": "commentline",
          "loc": Location {
            "end": Position {
              "column": 0,
              "line": 3,
              "offset": 12,
            },
            "source": "// leading
",
            "start": Position {
              "column": 0,
              "line": 2,
              "offset": 1,
            },
          },
          "offset": 1,
          "value": "// leading
",
        },
      ],
      "loc": Location {
        "end": Position {
          "column": 6,
          "line": 3,
          "offset": 18,
        },
        "source": "foo();",
        "start": Position {
          "column": 0,
          "line": 3,
          "offset": 12,
        },
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": [],
        "kind": "call",
        "loc": Location {
          "end": Position {
            "column": 19,
            "line": 5,
            "offset": 45,
          },
          "source": "bar() /* inner */ ;",
          "start": Position {
            "column": 0,
            "line": 5,
            "offset": 26,
          },
        },
        "trailingComments": [
          CommentBlock {
            "kind": "commentblock",
            "loc": Location {
              "end": Position {
                "column": 17,
                "line": 5,
                "offset": 43,
              },
              "source": "/* inner */",
              "start": Position {
                "column": 6,
                "line": 5,
                "offset": 32,
              },
            },
            "offset": 32,
            "value": "/* inner */",
          },
        ],
        "what": Name {
          "kind": "name",
          "loc": Location {
            "end": Position {
              "column": 3,
              "line": 5,
              "offset": 29,
            },
            "source": "bar",
            "start": Position {
              "column": 0,
              "line": 5,
              "offset": 26,
            },
          },
          "name": "bar",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
      "leadingComments": [
        CommentLine {
          "kind": "commentline",
          "loc": Location {
            "end": Position {
              "column": 0,
              "line": 5,
              "offset": 26,
            },
            "source": "// bar
",
            "start": Position {
              "column": 0,
              "line": 4,
              "offset": 19,
            },
          },
          "offset": 19,
          "value": "// bar
",
        },
      ],
      "loc": Location {
        "end": Position {
          "column": 19,
          "line": 5,
          "offset": 45,
        },
        "source": "bar() /* inner */ ;",
        "start": Position {
          "column": 0,
          "line": 5,
          "offset": 26,
        },
      },
      "trailingComments": [
        CommentLine {
          "kind": "commentline",
          "loc": Location {
            "end": Position {
              "column": 0,
              "line": 7,
              "offset": 58,
            },
            "source": "// trailing
",
            "start": Position {
              "column": 0,
              "line": 6,
              "offset": 46,
            },
          },
          "offset": 46,
          "value": "// trailing
",
        },
      ],
    },
  ],
  "comments": [
    CommentLine {
      "kind": "commentline",
      "loc": Location {
        "end": Position {
          "column": 0,
          "line": 3,
          "offset": 12,
        },
        "source": "// leading
",
        "start": Position {
          "column": 0,
          "line": 2,
          "offset": 1,
        },
      },
      "offset": 1,
      "value": "// leading
",
    },
    CommentLine {
      "kind": "commentline",
      "loc": Location {
        "end": Position {
          "column": 0,
          "line": 5,
          "offset": 26,
        },
        "source": "// bar
",
        "start": Position {
          "column": 0,
          "line": 4,
          "offset": 19,
        },
      },
      "offset": 19,
      "value": "// bar
",
    },
    CommentBlock {
      "kind": "commentblock",
      "loc": Location {
        "end": Position {
          "column": 17,
          "line": 5,
          "offset": 43,
        },
        "source": "/* inner */",
        "start": Position {
          "column": 6,
          "line": 5,
          "offset": 32,
        },
      },
      "offset": 32,
      "value": "/* inner */",
    },
    CommentLine {
      "kind": "commentline",
      "loc": Location {
        "end": Position {
          "column": 0,
          "line": 7,
          "offset": 58,
        },
        "source": "// trailing
",
        "start": Position {
          "column": 0,
          "line": 6,
          "offset": 46,
        },
      },
      "offset": 46,
      "value": "// trailing
",
    },
  ],
  "errors": [],
  "kind": "program",
  "loc": Location {
    "end": Position {
      "column": 8,
      "line": 7,
      "offset": 66,
    },
    "source": "
// leading
foo();
// bar
bar() /* inner */ ;
// trailing
        ",
    "start": Position {
      "column": 0,
      "line": 1,
      "offset": 0,
    },
  },
}
`;

exports[`Test comments issues fix #278 1`] = `
Program {
  "children": [
    Class {
      "attrGroups": [],
      "body": [
        Method {
          "arguments": [],
          "attrGroups": [],
          "body": Block {
            "children": [
              Return {
                "expr": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "array",
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": true,
          "kind": "method",
          "leadingComments": [
            CommentBlock {
              "kind": "commentblock",
              "offset": 51,
              "value": "/**
     * Description
     */",
            },
          ],
          "name": Identifier {
            "kind": "identifier",
            "name": "bar",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
        Method {
          "arguments": [],
          "attrGroups": [],
          "body": Block {
            "children": [
              Return {
                "expr": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "array",
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": true,
          "kind": "method",
          "leadingComments": [
            CommentBlock {
              "kind": "commentblock",
              "offset": 155,
              "value": "/**
     * Description
     */",
            },
          ],
          "name": Identifier {
            "kind": "identifier",
            "name": "baz",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
        Method {
          "arguments": [],
          "attrGroups": [],
          "body": Block {
            "children": [
              Return {
                "expr": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "array",
                },
                "kind": "return",
              },
            ],
            "kind": "block",
            "trailingComments": [
              CommentLine {
                "kind": "commentline",
                "offset": 364,
                "value": "// true trailing comment
",
              },
            ],
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": true,
          "kind": "method",
          "leadingComments": [
            CommentBlock {
              "kind": "commentblock",
              "offset": 261,
              "value": "/**
     * Description
     */",
            },
          ],
          "name": Identifier {
            "kind": "identifier",
            "name": "woo",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "leadingComments": [
        CommentBlock {
          "kind": "commentblock",
          "offset": 1,
          "value": "/**
 * Class description
 */",
        },
      ],
      "name": Identifier {
        "kind": "identifier",
        "name": "FooClass",
      },
    },
  ],
  "comments": [
    CommentBlock {
      "kind": "commentblock",
      "offset": 1,
      "value": "/**
 * Class description
 */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 51,
      "value": "/**
     * Description
     */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 155,
      "value": "/**
     * Description
     */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 261,
      "value": "/**
     * Description
     */",
    },
    CommentLine {
      "kind": "commentline",
      "offset": 364,
      "value": "// true trailing comment
",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`Test comments issues fix call comments 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": Call {
        "arguments": [
          Array {
            "items": [],
            "kind": "array",
            "loc": Location {
              "end": Position {
                "column": 2,
                "line": 3,
                "offset": 25,
              },
              "source": "array // comment
()",
              "start": Position {
                "column": 5,
                "line": 2,
                "offset": 6,
              },
            },
            "shortForm": false,
          },
        ],
        "kind": "call",
        "loc": Location {
          "end": Position {
            "column": 4,
            "line": 3,
            "offset": 27,
          },
          "source": "call(array // comment
());",
          "start": Position {
            "column": 0,
            "line": 2,
            "offset": 1,
          },
        },
        "what": Name {
          "kind": "name",
          "loc": Location {
            "end": Position {
              "column": 4,
              "line": 2,
              "offset": 5,
            },
            "source": "call",
            "start": Position {
              "column": 0,
              "line": 2,
              "offset": 1,
            },
          },
          "name": "call",
          "resolution": "uqn",
          "trailingComments": [
            CommentLine {
              "kind": "commentline",
              "loc": Location {
                "end": Position {
                  "column": 0,
                  "line": 3,
                  "offset": 23,
                },
                "source": "// comment
",
                "start": Position {
                  "column": 11,
                  "line": 2,
                  "offset": 12,
                },
              },
              "offset": 12,
              "value": "// comment
",
            },
          ],
        },
      },
      "kind": "expressionstatement",
      "loc": Location {
        "end": Position {
          "column": 4,
          "line": 3,
          "offset": 27,
        },
        "source": "call(array // comment
());",
        "start": Position {
          "column": 0,
          "line": 2,
          "offset": 1,
        },
      },
    },
  ],
  "comments": [
    CommentLine {
      "kind": "commentline",
      "loc": Location {
        "end": Position {
          "column": 0,
          "line": 3,
          "offset": 23,
        },
        "source": "// comment
",
        "start": Position {
          "column": 11,
          "line": 2,
          "offset": 12,
        },
      },
      "offset": 12,
      "value": "// comment
",
    },
  ],
  "errors": [],
  "kind": "program",
  "loc": Location {
    "end": Position {
      "column": 8,
      "line": 4,
      "offset": 36,
    },
    "source": "
call(array // comment
());
        ",
    "start": Position {
      "column": 0,
      "line": 1,
      "offset": 0,
    },
  },
}
`;

exports[`Test comments issues impl #194 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "foo",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "leadingComments": [
            CommentBlock {
              "kind": "commentblock",
              "offset": 37,
              "value": "/* trail foo */",
            },
            CommentBlock {
              "kind": "commentblock",
              "offset": 55,
              "value": "/* lead 1 */",
            },
          ],
          "value": "1",
        },
        "trailingComments": [
          CommentBlock {
            "kind": "commentblock",
            "offset": 70,
            "value": "/* trail 1 */",
          },
        ],
      },
      "kind": "expressionstatement",
      "leadingComments": [
        CommentLine {
          "kind": "commentline",
          "offset": 9,
          "value": "// lead assign
",
        },
      ],
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "leadingComments": [
              CommentBlock {
                "kind": "commentblock",
                "offset": 123,
                "value": "/* lead arg */",
              },
            ],
            "raw": ""arg"",
            "trailingComments": [
              CommentBlock {
                "kind": "commentblock",
                "offset": 144,
                "value": "/* trail arg */",
              },
            ],
            "unicode": false,
            "value": "arg",
          },
        ],
        "kind": "call",
        "trailingComments": [
          CommentBlock {
            "kind": "commentblock",
            "offset": 162,
            "value": "/* trail call */",
          },
        ],
        "what": Name {
          "kind": "name",
          "name": "callback",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
      "leadingComments": [
        CommentLine {
          "kind": "commentline",
          "offset": 93,
          "value": "// lead call
",
        },
      ],
      "trailingComments": [
        CommentBlock {
          "kind": "commentblock",
          "offset": 189,
          "value": "/* trail program */",
        },
      ],
    },
  ],
  "comments": [
    CommentLine {
      "kind": "commentline",
      "offset": 9,
      "value": "// lead assign
",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 37,
      "value": "/* trail foo */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 55,
      "value": "/* lead 1 */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 70,
      "value": "/* trail 1 */",
    },
    CommentLine {
      "kind": "commentline",
      "offset": 93,
      "value": "// lead call
",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 123,
      "value": "/* lead arg */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 144,
      "value": "/* trail arg */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 162,
      "value": "/* trail call */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 189,
      "value": "/* trail program */",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`Test comments multi line comments test function 1`] = `
Program {
  "children": [
    _Function {
      "arguments": [
        Parameter {
          "attrGroups": [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "leadingComments": [
            CommentBlock {
              "kind": "commentblock",
              "offset": 98,
              "value": "/* @var something */",
            },
          ],
          "name": Identifier {
            "kind": "identifier",
            "name": "arg",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": [],
      "body": Block {
        "children": [
          Return {
            "expr": Variable {
              "curly": false,
              "kind": "variable",
              "name": "arg",
              "trailingComments": [
                CommentBlock {
                  "kind": "commentblock",
                  "offset": 168,
                  "value": "/* ignore */",
                },
              ],
            },
            "kind": "return",
            "leadingComments": [
              CommentLine {
                "kind": "commentline",
                "offset": 137,
                "value": "// inner
",
              },
            ],
          },
        ],
        "kind": "block",
      },
      "byref": true,
      "kind": "function",
      "leadingComments": [
        CommentBlock {
          "kind": "commentblock",
          "offset": 9,
          "value": "/**
         * Description
         */",
        },
      ],
      "name": Identifier {
        "kind": "identifier",
        "leadingComments": [
          CommentBlock {
            "kind": "commentblock",
            "offset": 65,
            "value": "/* ignore */",
          },
          CommentBlock {
            "kind": "commentblock",
            "offset": 80,
            "value": "/* ignore */",
          },
        ],
        "name": "name",
      },
      "nullable": false,
      "type": null,
    },
  ],
  "comments": [
    CommentBlock {
      "kind": "commentblock",
      "offset": 9,
      "value": "/**
         * Description
         */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 65,
      "value": "/* ignore */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 80,
      "value": "/* ignore */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 98,
      "value": "/* @var something */",
    },
    CommentLine {
      "kind": "commentline",
      "offset": 137,
      "value": "// inner
",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 168,
      "value": "/* ignore */",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`Test comments multi line comments test if statements 1`] = `
Program {
  "children": [
    If {
      "alternate": If {
        "alternate": If {
          "alternate": Block {
            "children": [],
            "kind": "block",
            "leadingComments": [
              CommentBlock {
                "kind": "commentblock",
                "offset": 351,
                "value": "/* ignore */",
              },
              CommentBlock {
                "kind": "commentblock",
                "offset": 369,
                "value": "/* ignore */",
              },
            ],
          },
          "body": Block {
            "children": [],
            "kind": "block",
            "leadingComments": [
              CommentBlock {
                "kind": "commentblock",
                "offset": 284,
                "value": "/* ignore */",
              },
              CommentBlock {
                "kind": "commentblock",
                "offset": 297,
                "value": "/* ignore */",
              },
              CommentBlock {
                "kind": "commentblock",
                "offset": 311,
                "value": "/* ignore */",
              },
              CommentBlock {
                "kind": "commentblock",
                "offset": 324,
                "value": "/* ignore */",
              },
            ],
          },
          "kind": "if",
          "leadingComments": [
            CommentBlock {
              "kind": "commentblock",
              "offset": 231,
              "value": "/* ignore */",
            },
          ],
          "shortForm": false,
          "test": Boolean {
            "kind": "boolean",
            "leadingComments": [
              CommentBlock {
                "kind": "commentblock",
                "offset": 251,
                "value": "/* ignore */",
              },
              CommentBlock {
                "kind": "commentblock",
                "offset": 265,
                "value": "/* ignore */",
              },
            ],
            "raw": "false",
            "value": false,
          },
        },
        "body": Block {
          "children": [],
          "kind": "block",
          "leadingComments": [
            CommentBlock {
              "kind": "commentblock",
              "offset": 190,
              "value": "/* ignore */",
            },
            CommentBlock {
              "kind": "commentblock",
              "offset": 204,
              "value": "/* ignore */",
            },
          ],
        },
        "kind": "if",
        "leadingComments": [
          CommentBlock {
            "kind": "commentblock",
            "offset": 89,
            "value": "/* ignore */",
          },
          CommentBlock {
            "kind": "commentblock",
            "offset": 107,
            "value": "/* ignore */",
          },
          CommentLine {
            "kind": "commentline",
            "offset": 128,
            "value": "// else with a inner if single statement :
",
          },
        ],
        "shortForm": false,
        "test": Boolean {
          "kind": "boolean",
          "raw": "true",
          "value": true,
        },
      },
      "body": Block {
        "children": [
          Noop {
            "kind": "noop",
            "leadingComments": [
              CommentLine {
                "kind": "commentline",
                "offset": 61,
                "value": "# inner statement
",
              },
            ],
          },
        ],
        "kind": "block",
        "leadingComments": [
          CommentBlock {
            "kind": "commentblock",
            "offset": 38,
            "value": "/* ignore */",
          },
        ],
      },
      "kind": "if",
      "shortForm": false,
      "test": Boolean {
        "kind": "boolean",
        "leadingComments": [
          CommentBlock {
            "kind": "commentblock",
            "offset": 12,
            "value": "/* ignore */",
          },
          CommentBlock {
            "kind": "commentblock",
            "offset": 26,
            "value": "/* */",
          },
        ],
        "raw": "true",
        "value": true,
      },
    },
    If {
      "alternate": null,
      "body": Block {
        "children": [],
        "kind": "block",
        "leadingComments": [
          CommentBlock {
            "kind": "commentblock",
            "offset": 415,
            "value": "/* ignore */",
          },
          CommentBlock {
            "kind": "commentblock",
            "offset": 430,
            "value": "/* ignore */",
          },
          CommentBlock {
            "kind": "commentblock",
            "offset": 451,
            "value": "/* ignore */",
          },
        ],
        "trailingComments": [
          CommentBlock {
            "kind": "commentblock",
            "offset": 470,
            "value": "/* ignore */",
          },
          CommentBlock {
            "kind": "commentblock",
            "offset": 483,
            "value": "/* ignore */",
          },
        ],
      },
      "kind": "if",
      "shortForm": true,
      "test": Boolean {
        "kind": "boolean",
        "raw": "false",
        "value": false,
      },
    },
  ],
  "comments": [
    CommentBlock {
      "kind": "commentblock",
      "offset": 12,
      "value": "/* ignore */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 26,
      "value": "/* */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 38,
      "value": "/* ignore */",
    },
    CommentLine {
      "kind": "commentline",
      "offset": 61,
      "value": "# inner statement
",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 89,
      "value": "/* ignore */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 107,
      "value": "/* ignore */",
    },
    CommentLine {
      "kind": "commentline",
      "offset": 128,
      "value": "// else with a inner if single statement :
",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 190,
      "value": "/* ignore */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 204,
      "value": "/* ignore */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 231,
      "value": "/* ignore */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 251,
      "value": "/* ignore */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 265,
      "value": "/* ignore */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 284,
      "value": "/* ignore */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 297,
      "value": "/* ignore */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 311,
      "value": "/* ignore */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 324,
      "value": "/* ignore */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 351,
      "value": "/* ignore */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 369,
      "value": "/* ignore */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 415,
      "value": "/* ignore */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 430,
      "value": "/* ignore */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 451,
      "value": "/* ignore */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 470,
      "value": "/* ignore */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 483,
      "value": "/* ignore */",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`Test comments multi line comments test try statements 1`] = `
Program {
  "children": [
    Try {
      "always": Block {
        "children": [
          Noop {
            "kind": "noop",
            "leadingComments": [
              CommentBlock {
                "kind": "commentblock",
                "offset": 218,
                "value": "/* ignore */",
              },
            ],
          },
        ],
        "kind": "block",
        "leadingComments": [
          CommentBlock {
            "kind": "commentblock",
            "offset": 182,
            "value": "/* zz */",
          },
          CommentBlock {
            "kind": "commentblock",
            "offset": 199,
            "value": "/* yy */",
          },
        ],
      },
      "body": Block {
        "children": [
          Noop {
            "kind": "noop",
            "leadingComments": [
              CommentLine {
                "kind": "commentline",
                "offset": 36,
                "value": "# inner statement
",
              },
            ],
          },
        ],
        "kind": "block",
        "leadingComments": [
          CommentBlock {
            "kind": "commentblock",
            "offset": 13,
            "value": "/* ignore */",
          },
        ],
      },
      "catches": [
        Catch {
          "body": Block {
            "children": [
              Noop {
                "kind": "noop",
                "leadingComments": [
                  CommentBlock {
                    "kind": "commentblock",
                    "offset": 163,
                    "value": "/* ee */",
                  },
                ],
              },
            ],
            "kind": "block",
            "leadingComments": [
              CommentBlock {
                "kind": "commentblock",
                "offset": 134,
                "value": "/* bb */",
              },
              CommentBlock {
                "kind": "commentblock",
                "offset": 144,
                "value": "/* dd */",
              },
            ],
          },
          "kind": "catch",
          "leadingComments": [
            CommentBlock {
              "kind": "commentblock",
              "offset": 64,
              "value": "/* dd */",
            },
          ],
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "leadingComments": [
              CommentBlock {
                "kind": "commentblock",
                "offset": 122,
                "value": "/* aa */",
              },
            ],
            "name": "e",
          },
          "what": [
            Name {
              "kind": "name",
              "leadingComments": [
                CommentBlock {
                  "kind": "commentblock",
                  "offset": 79,
                  "value": "/* zz */",
                },
              ],
              "name": "\\Exception",
              "resolution": "fqn",
            },
            Name {
              "kind": "name",
              "leadingComments": [
                CommentBlock {
                  "kind": "commentblock",
                  "offset": 99,
                  "value": "/* 1 */",
                },
                CommentBlock {
                  "kind": "commentblock",
                  "offset": 109,
                  "value": "/* 2 */",
                },
              ],
              "name": "\\Foo",
              "resolution": "fqn",
            },
          ],
        },
      ],
      "kind": "try",
      "trailingComments": [
        CommentLine {
          "kind": "commentline",
          "offset": 241,
          "value": "// end
",
        },
      ],
    },
  ],
  "comments": [
    CommentBlock {
      "kind": "commentblock",
      "offset": 13,
      "value": "/* ignore */",
    },
    CommentLine {
      "kind": "commentline",
      "offset": 36,
      "value": "# inner statement
",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 64,
      "value": "/* dd */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 79,
      "value": "/* zz */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 99,
      "value": "/* 1 */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 109,
      "value": "/* 2 */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 122,
      "value": "/* aa */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 134,
      "value": "/* bb */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 144,
      "value": "/* dd */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 163,
      "value": "/* ee */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 182,
      "value": "/* zz */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 199,
      "value": "/* yy */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 218,
      "value": "/* ignore */",
    },
    CommentLine {
      "kind": "commentline",
      "offset": 241,
      "value": "// end
",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`Test comments test classes 1`] = `
Program {
  "children": [
    Class {
      "attrGroups": [],
      "body": [
        PropertyStatement {
          "isStatic": false,
          "kind": "propertystatement",
          "leadingComments": [
            CommentBlock {
              "kind": "commentblock",
              "offset": 72,
              "value": "/* hehe */",
            },
            CommentLine {
              "kind": "commentline",
              "offset": 94,
              "value": "// @var test
",
            },
          ],
          "properties": [
            Property {
              "attrGroups": [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "test",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
            },
            Property {
              "attrGroups": [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "toto",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
            },
          ],
          "visibility": "protected",
        },
        PropertyStatement {
          "isStatic": true,
          "kind": "propertystatement",
          "leadingComments": [
            CommentLine {
              "kind": "commentline",
              "offset": 149,
              "value": "// ignored comment
",
            },
            CommentBlock {
              "kind": "commentblock",
              "offset": 177,
              "value": "/** @var Class */",
            },
          ],
          "properties": [
            Property {
              "attrGroups": [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "foo",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": Number {
                "kind": "number",
                "value": "123",
              },
            },
          ],
          "visibility": "public",
        },
        Method {
          "arguments": [],
          "attrGroups": [],
          "body": Block {
            "children": [],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "leadingComments": [
            CommentBlock {
              "kind": "commentblock",
              "offset": 239,
              "value": "/** ignored also **/",
            },
            CommentBlock {
              "kind": "commentblock",
              "offset": 269,
              "value": "/**
          * @return void
          */",
            },
          ],
          "name": Identifier {
            "kind": "identifier",
            "name": "void",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "leadingComments": [
        CommentBlock {
          "kind": "commentblock",
          "offset": 7,
          "value": "/**
       * Description
       */",
        },
      ],
      "name": Identifier {
        "kind": "identifier",
        "leadingComments": [
          CommentBlock {
            "kind": "commentblock",
            "offset": 54,
            "value": "/* ignore */",
          },
        ],
        "name": "name",
      },
    },
  ],
  "comments": [
    CommentBlock {
      "kind": "commentblock",
      "offset": 7,
      "value": "/**
       * Description
       */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 54,
      "value": "/* ignore */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 72,
      "value": "/* hehe */",
    },
    CommentLine {
      "kind": "commentline",
      "offset": 94,
      "value": "// @var test
",
    },
    CommentLine {
      "kind": "commentline",
      "offset": 149,
      "value": "// ignored comment
",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 177,
      "value": "/** @var Class */",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 239,
      "value": "/** ignored also **/",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 269,
      "value": "/**
          * @return void
          */",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`Test comments test single line comments 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "foo",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "123",
        },
        "trailingComments": [
          CommentLine {
            "kind": "commentline",
            "offset": 65,
            "value": "// 123
",
          },
        ],
      },
      "kind": "expressionstatement",
      "leadingComments": [
        CommentLine {
          "kind": "commentline",
          "offset": 7,
          "value": "# some information
",
        },
        CommentLine {
          "kind": "commentline",
          "offset": 32,
          "value": "// another line
",
        },
      ],
      "trailingComments": [
        CommentBlock {
          "kind": "commentblock",
          "offset": 80,
          "value": "/* done */",
        },
      ],
    },
  ],
  "comments": [
    CommentLine {
      "kind": "commentline",
      "offset": 7,
      "value": "# some information
",
    },
    CommentLine {
      "kind": "commentline",
      "offset": 32,
      "value": "// another line
",
    },
    CommentLine {
      "kind": "commentline",
      "offset": 65,
      "value": "// 123
",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 80,
      "value": "/* done */",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;
