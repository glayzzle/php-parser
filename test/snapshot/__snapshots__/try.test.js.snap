// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`boolean finally 1`] = `
Program {
  "children": [
    Try {
      "always": Block {
        "children": [
          ExpressionStatement {
            "expression": Call {
              "arguments": [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "do_something_other",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": [
          ExpressionStatement {
            "expression": Call {
              "arguments": [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "call",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": [
        Catch {
          "body": Block {
            "children": [
              ExpressionStatement {
                "expression": Call {
                  "arguments": [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "do_something",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": [
            Name {
              "kind": "name",
              "name": "Exception",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`boolean fully qualified name #2 1`] = `
Program {
  "children": [
    Try {
      "always": null,
      "body": Block {
        "children": [
          ExpressionStatement {
            "expression": Call {
              "arguments": [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "call",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": [
        Catch {
          "body": Block {
            "children": [
              ExpressionStatement {
                "expression": Call {
                  "arguments": [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "do_something",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": [
            Name {
              "kind": "name",
              "name": "\\Exception\\Foo",
              "resolution": "fqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`boolean fully qualified name 1`] = `
Program {
  "children": [
    Try {
      "always": null,
      "body": Block {
        "children": [
          ExpressionStatement {
            "expression": Call {
              "arguments": [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "call",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": [
        Catch {
          "body": Block {
            "children": [
              ExpressionStatement {
                "expression": Call {
                  "arguments": [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "do_something",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": [
            Name {
              "kind": "name",
              "name": "\\Exception",
              "resolution": "fqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`boolean multiple catch #2 1`] = `
Program {
  "children": [
    Try {
      "always": null,
      "body": Block {
        "children": [
          ExpressionStatement {
            "expression": Call {
              "arguments": [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "call",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": [
        Catch {
          "body": Block {
            "children": [
              ExpressionStatement {
                "expression": Call {
                  "arguments": [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "do_something",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": [
            Name {
              "kind": "name",
              "name": "MyException",
              "resolution": "uqn",
            },
            Name {
              "kind": "name",
              "name": "Foo\\Exception",
              "resolution": "qn",
            },
            Name {
              "kind": "name",
              "name": "\\Exception",
              "resolution": "fqn",
            },
            Name {
              "kind": "name",
              "name": "\\Exception\\Foo",
              "resolution": "fqn",
            },
            Name {
              "kind": "name",
              "name": "Exception",
              "resolution": "rn",
            },
          ],
        },
      ],
      "kind": "try",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`boolean multiple catch 1`] = `
Program {
  "children": [
    Try {
      "always": null,
      "body": Block {
        "children": [
          ExpressionStatement {
            "expression": Call {
              "arguments": [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "call",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": [
        Catch {
          "body": Block {
            "children": [
              ExpressionStatement {
                "expression": Call {
                  "arguments": [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "do_something",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": [
            Name {
              "kind": "name",
              "name": "MyException",
              "resolution": "uqn",
            },
            Name {
              "kind": "name",
              "name": "MyOtherException",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`boolean multiple catch without variable 1`] = `
Program {
  "children": [
    Try {
      "always": null,
      "body": Block {
        "children": [
          ExpressionStatement {
            "expression": Call {
              "arguments": [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "call",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": [
        Catch {
          "body": Block {
            "children": [
              ExpressionStatement {
                "expression": Call {
                  "arguments": [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "do_something",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": null,
          "what": [
            Name {
              "kind": "name",
              "name": "MyException",
              "resolution": "uqn",
            },
            Name {
              "kind": "name",
              "name": "MyOtherException",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`boolean qualified name 1`] = `
Program {
  "children": [
    Try {
      "always": null,
      "body": Block {
        "children": [
          ExpressionStatement {
            "expression": Call {
              "arguments": [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "call",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": [
        Catch {
          "body": Block {
            "children": [
              ExpressionStatement {
                "expression": Call {
                  "arguments": [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "do_something",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": [
            Name {
              "kind": "name",
              "name": "Foo\\Exception",
              "resolution": "qn",
            },
          ],
        },
      ],
      "kind": "try",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`boolean relative name 1`] = `
Program {
  "children": [
    Try {
      "always": null,
      "body": Block {
        "children": [
          ExpressionStatement {
            "expression": Call {
              "arguments": [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "call",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": [
        Catch {
          "body": Block {
            "children": [
              ExpressionStatement {
                "expression": Call {
                  "arguments": [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "do_something",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": [
            Name {
              "kind": "name",
              "name": "Exception",
              "resolution": "rn",
            },
          ],
        },
      ],
      "kind": "try",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`boolean simple 1`] = `
Program {
  "children": [
    Try {
      "always": null,
      "body": Block {
        "children": [
          ExpressionStatement {
            "expression": Call {
              "arguments": [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "call",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": [
        Catch {
          "body": Block {
            "children": [
              ExpressionStatement {
                "expression": Call {
                  "arguments": [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "do_something",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": [
            Name {
              "kind": "name",
              "name": "Exception",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`boolean without variable 1`] = `
Program {
  "children": [
    Try {
      "always": null,
      "body": Block {
        "children": [
          ExpressionStatement {
            "expression": Call {
              "arguments": [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "call",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": [
        Catch {
          "body": Block {
            "children": [
              ExpressionStatement {
                "expression": Call {
                  "arguments": [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "do_something",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": null,
          "what": [
            Name {
              "kind": "name",
              "name": "Exception",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;
