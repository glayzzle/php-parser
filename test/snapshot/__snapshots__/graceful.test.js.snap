// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test graceful mode to suppress errors interface 1`] = `
Program {
  "children": [
    Interface {
      "attrGroups": [],
      "body": [],
      "extends": null,
      "kind": "interface",
      "name": Identifier {
        "kind": "identifier",
        "name": "foo",
      },
    },
  ],
  "errors": [
    Error {
      "expected": "{",
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error, unexpected 'implement' (T_STRING), expecting '{' on line 1",
      "token": "'implement' (T_STRING)",
    },
    Error {
      "expected": [
        198,
        182,
      ],
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error, unexpected 'baz' (T_STRING) on line 1",
      "token": "'baz' (T_STRING)",
    },
    Error {
      "expected": [
        198,
        182,
      ],
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error, unexpected '{' on line 1",
      "token": "'{'",
    },
  ],
  "kind": "program",
}
`;

exports[`Test graceful mode to suppress errors should contain 2 errors 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "var",
        },
        "operator": "=",
        "right": Closure {
          "arguments": [],
          "attrGroups": [],
          "body": Block {
            "children": [
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "foo",
                  },
                  "operator": "=",
                  "right": undefined,
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isStatic": false,
          "kind": "closure",
          "nullable": false,
          "type": null,
          "uses": [],
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": [
    Error {
      "expected": "EXPR",
      "kind": "error",
      "line": 4,
      "message": "Parse Error : syntax error, unexpected '}' on line 4",
      "token": "'}'",
    },
    Error {
      "expected": ";",
      "kind": "error",
      "line": 5,
      "message": "Parse Error : syntax error, unexpected '}', expecting ';' on line 5",
      "token": "'}'",
    },
  ],
  "kind": "program",
}
`;

exports[`Test graceful mode to suppress errors should fail ! 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": New {
        "arguments": [],
        "kind": "new",
        "what": StaticLookup {
          "kind": "staticlookup",
          "offset": Literal {
            "kind": "literal",
            "value": Call {
              "arguments": [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "call",
                "resolution": "uqn",
              },
            },
          },
          "what": Name {
            "kind": "name",
            "name": "Foo",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`Test graceful mode to suppress errors should fail with '[' and '}' 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": OffsetLookup {
        "kind": "offsetlookup",
        "offset": Variable {
          "curly": false,
          "kind": "variable",
          "name": "bar",
        },
        "what": Variable {
          "curly": false,
          "kind": "variable",
          "name": "obj",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": undefined,
      "kind": "expressionstatement",
    },
  ],
  "errors": [
    Error {
      "expected": "]",
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error, unexpected '}', expecting ']' on line 1",
      "token": "'}'",
    },
    Error {
      "expected": ";",
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error, unexpected '}', expecting ';' on line 1",
      "token": "'}'",
    },
    Error {
      "expected": "EXPR",
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error, unexpected '}' on line 1",
      "token": "'}'",
    },
  ],
  "kind": "program",
}
`;

exports[`Test graceful mode to suppress errors should fail with '{' and ']' 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": OffsetLookup {
        "kind": "offsetlookup",
        "offset": Variable {
          "curly": false,
          "kind": "variable",
          "name": "foo",
        },
        "what": Variable {
          "curly": false,
          "kind": "variable",
          "name": "obj",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": undefined,
      "kind": "expressionstatement",
    },
  ],
  "errors": [
    Error {
      "expected": "}",
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error, unexpected ']', expecting '}' on line 1",
      "token": "']'",
    },
    Error {
      "expected": ";",
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error, unexpected ']', expecting ';' on line 1",
      "token": "']'",
    },
    Error {
      "expected": "EXPR",
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error, unexpected ']' on line 1",
      "token": "']'",
    },
  ],
  "kind": "program",
}
`;

exports[`Test graceful mode to suppress errors staticlookup 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": StaticLookup {
        "kind": "staticlookup",
        "offset": Literal {
          "kind": "literal",
          "value": Call {
            "arguments": [],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "call",
              "resolution": "uqn",
            },
          },
        },
        "what": Name {
          "kind": "name",
          "name": "Order",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": [
    Error {
      "expected": "(",
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error, unexpected ';', expecting '(' on line 1",
      "token": "';'",
    },
  ],
  "kind": "program",
}
`;

exports[`Test graceful mode to suppress errors test class 1`] = `
Program {
  "children": [
    Class {
      "attrGroups": [],
      "body": [
        PropertyStatement {
          "isStatic": false,
          "kind": "propertystatement",
          "properties": [
            Property {
              "attrGroups": null,
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "onst",
              },
              "nullable": Name {
                "kind": "name",
                "name": "foo",
                "resolution": "uqn",
              },
              "readonly": false,
              "type": [],
              "value": null,
            },
          ],
          "visibility": "",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "foo",
      },
    },
  ],
  "errors": [
    Error {
      "expected": 222,
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error, unexpected 'const' (T_CONST), expecting T_VARIABLE on line 1",
      "token": "'const' (T_CONST)",
    },
    Error {
      "expected": [
        ",",
        ";",
        "=",
      ],
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error, unexpected 'A' (T_STRING) on line 1",
      "token": "'A' (T_STRING)",
    },
    Error {
      "expected": ";",
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error, unexpected 'A' (T_STRING), expecting ';' on line 1",
      "token": "'A' (T_STRING)",
    },
    Error {
      "expected": [
        198,
        222,
        182,
      ],
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error, unexpected '=' on line 1",
      "token": "'='",
    },
    Error {
      "expected": [
        198,
        222,
        182,
      ],
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error, unexpected '1' (T_LNUMBER) on line 1",
      "token": "'1' (T_LNUMBER)",
    },
    Error {
      "expected": "}",
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error, expecting '}' on line 1",
      "token": "the end of file (EOF)",
    },
  ],
  "kind": "program",
}
`;

exports[`Test graceful mode to suppress errors test expr 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "b",
          },
          "right": undefined,
          "type": "-",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "foo",
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": [
    Error {
      "expected": "EXPR",
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error, unexpected ';' on line 1",
      "token": "';'",
    },
    Error {
      "expected": ";",
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error, unexpected '$foo' (T_VARIABLE), expecting ';' on line 1",
      "token": "'$foo' (T_VARIABLE)",
    },
  ],
  "kind": "program",
}
`;

exports[`Test graceful mode to suppress errors test flags (2) 1`] = `
Program {
  "children": [
    Class {
      "attrGroups": [],
      "body": [
        Method {
          "arguments": [],
          "attrGroups": [],
          "body": null,
          "byref": false,
          "isAbstract": true,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "func",
          },
          "nullable": false,
          "type": null,
          "visibility": "",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "foo",
      },
    },
  ],
  "errors": [
    Error {
      "expected": 187,
      "kind": "error",
      "line": 2,
      "message": "Parse Error : syntax error, unexpected 'final' (T_FINAL), expecting T_CLASS on line 2",
      "token": "'final' (T_FINAL)",
    },
    Error {
      "expected": ";",
      "kind": "error",
      "line": 4,
      "message": "Parse Error : syntax error, expecting ';' on line 4",
      "token": "the end of file (EOF)",
    },
    Error {
      "expected": "}",
      "kind": "error",
      "line": 4,
      "message": "Parse Error : syntax error, expecting '}' on line 4",
      "token": "the end of file (EOF)",
    },
  ],
  "kind": "program",
}
`;

exports[`Test graceful mode to suppress errors test flags (3) 1`] = `
Program {
  "children": [
    Trait {
      "body": [
        Method {
          "arguments": [],
          "attrGroups": [],
          "body": null,
          "byref": false,
          "isAbstract": true,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "func",
          },
          "nullable": false,
          "type": null,
          "visibility": "",
        },
      ],
      "kind": "trait",
      "name": Identifier {
        "kind": "identifier",
        "name": "foo",
      },
    },
  ],
  "errors": [
    Error {
      "expected": 187,
      "kind": "error",
      "line": 2,
      "message": "Parse Error : syntax error, unexpected 'final' (T_FINAL), expecting T_CLASS on line 2",
      "token": "'final' (T_FINAL)",
    },
    Error {
      "expected": ";",
      "kind": "error",
      "line": 4,
      "message": "Parse Error : syntax error, expecting ';' on line 4",
      "token": "the end of file (EOF)",
    },
    Error {
      "expected": "}",
      "kind": "error",
      "line": 4,
      "message": "Parse Error : syntax error, expecting '}' on line 4",
      "token": "the end of file (EOF)",
    },
  ],
  "kind": "program",
}
`;

exports[`Test graceful mode to suppress errors test flags 1`] = `
Program {
  "children": [
    Interface {
      "attrGroups": [],
      "body": [
        Method {
          "arguments": [],
          "attrGroups": [],
          "body": null,
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "func",
          },
          "nullable": false,
          "type": null,
          "visibility": "",
        },
      ],
      "extends": null,
      "kind": "interface",
      "name": Identifier {
        "kind": "identifier",
        "name": "foo",
      },
    },
  ],
  "errors": [
    Error {
      "expected": 187,
      "kind": "error",
      "line": 2,
      "message": "Parse Error : syntax error, unexpected 'final' (T_FINAL), expecting T_CLASS on line 2",
      "token": "'final' (T_FINAL)",
    },
    Error {
      "expected": undefined,
      "kind": "error",
      "line": 3,
      "message": "Parse Error : syntax error, unexpected 'abstract' (T_ABSTRACT) on line 3",
      "token": "'abstract' (T_ABSTRACT)",
    },
    Error {
      "expected": ";",
      "kind": "error",
      "line": 4,
      "message": "Parse Error : syntax error, expecting ';' on line 4",
      "token": "the end of file (EOF)",
    },
    Error {
      "expected": "}",
      "kind": "error",
      "line": 4,
      "message": "Parse Error : syntax error, expecting '}' on line 4",
      "token": "the end of file (EOF)",
    },
  ],
  "kind": "program",
}
`;

exports[`Test graceful mode to suppress errors test function arguments 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": Call {
        "arguments": [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "arg",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "bar",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "foo",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "foo",
        },
        "operator": "=",
        "right": New {
          "arguments": [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "baz",
            },
            Noop {
              "kind": "noop",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "bar",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": undefined,
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Variable {
        "curly": false,
        "kind": "variable",
        "name": "foo",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": undefined,
      "kind": "expressionstatement",
    },
  ],
  "errors": [
    Error {
      "expected": ")",
      "kind": "error",
      "line": 3,
      "message": "Parse Error : syntax error, unexpected ',', expecting ')' on line 3",
      "token": "','",
    },
    Error {
      "expected": ";",
      "kind": "error",
      "line": 3,
      "message": "Parse Error : syntax error, unexpected ',', expecting ';' on line 3",
      "token": "','",
    },
    Error {
      "expected": "EXPR",
      "kind": "error",
      "line": 3,
      "message": "Parse Error : syntax error, unexpected ',' on line 3",
      "token": "','",
    },
    Error {
      "expected": ";",
      "kind": "error",
      "line": 3,
      "message": "Parse Error : syntax error, unexpected '$foo' (T_VARIABLE), expecting ';' on line 3",
      "token": "'$foo' (T_VARIABLE)",
    },
    Error {
      "expected": ";",
      "kind": "error",
      "line": 3,
      "message": "Parse Error : syntax error, unexpected ')', expecting ';' on line 3",
      "token": "')'",
    },
    Error {
      "expected": "EXPR",
      "kind": "error",
      "line": 3,
      "message": "Parse Error : syntax error, unexpected ')' on line 3",
      "token": "')'",
    },
  ],
  "kind": "program",
}
`;

exports[`Test graceful mode to suppress errors test method chains 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": PropertyLookup {
        "kind": "propertylookup",
        "offset": Identifier {
          "kind": "identifier",
          "name": "",
        },
        "what": Call {
          "arguments": [
            Call {
              "arguments": [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "once",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "this",
                },
              },
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "expects",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "controller",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": [
    Error {
      "expected": [
        105,
        222,
        "$",
        "{",
      ],
      "kind": "error",
      "line": 4,
      "message": "Parse Error : syntax error on line 4",
      "token": "the end of file (EOF)",
    },
  ],
  "kind": "program",
}
`;

exports[`Test graceful mode to suppress errors trait 1`] = `
Program {
  "children": [
    Trait {
      "body": [
        PropertyStatement {
          "isStatic": false,
          "kind": "propertystatement",
          "properties": [
            Property {
              "attrGroups": null,
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "mplement",
              },
              "nullable": Name {
                "kind": "name",
                "name": "bar",
                "resolution": "uqn",
              },
              "readonly": false,
              "type": [],
              "value": null,
            },
          ],
          "visibility": "",
        },
      ],
      "kind": "trait",
      "name": Identifier {
        "kind": "identifier",
        "name": "foo",
      },
    },
  ],
  "errors": [
    Error {
      "expected": "{",
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error, unexpected 'extends' (T_EXTENDS), expecting '{' on line 1",
      "token": "'extends' (T_EXTENDS)",
    },
    Error {
      "expected": 222,
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error, unexpected 'implement' (T_STRING), expecting T_VARIABLE on line 1",
      "token": "'implement' (T_STRING)",
    },
    Error {
      "expected": [
        ",",
        ";",
        "=",
      ],
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error, unexpected 'baz' (T_STRING) on line 1",
      "token": "'baz' (T_STRING)",
    },
    Error {
      "expected": ";",
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error, unexpected 'baz' (T_STRING), expecting ';' on line 1",
      "token": "'baz' (T_STRING)",
    },
    Error {
      "expected": [
        198,
        222,
        182,
      ],
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error, unexpected '{' on line 1",
      "token": "'{'",
    },
  ],
  "kind": "program",
}
`;
