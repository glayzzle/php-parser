// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test list expressions array with empty values #2 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": List {
          "items": [
            Noop {
              "kind": "noop",
            },
            Noop {
              "kind": "noop",
            },
            Noop {
              "kind": "noop",
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'foo'",
                "unicode": false,
                "value": "foo",
              },
            },
            Noop {
              "kind": "noop",
            },
            Noop {
              "kind": "noop",
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'bar'",
                "unicode": false,
                "value": "bar",
              },
            },
            Noop {
              "kind": "noop",
            },
            Noop {
              "kind": "noop",
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'baz'",
                "unicode": false,
                "value": "baz",
              },
            },
          ],
          "kind": "list",
          "shortForm": true,
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`Test list expressions array with empty values #3 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": List {
          "items": [
            Noop {
              "kind": "noop",
            },
            Noop {
              "kind": "noop",
            },
            Noop {
              "kind": "noop",
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'foo'",
                "unicode": false,
                "value": "foo",
              },
            },
            Noop {
              "kind": "noop",
            },
            Noop {
              "kind": "noop",
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'bar'",
                "unicode": false,
                "value": "bar",
              },
            },
            Noop {
              "kind": "noop",
            },
            Noop {
              "kind": "noop",
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'baz'",
                "unicode": false,
                "value": "baz",
              },
            },
            Noop {
              "kind": "noop",
            },
          ],
          "kind": "list",
          "shortForm": true,
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`Test list expressions array with empty values 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": List {
          "items": [
            Noop {
              "kind": "noop",
            },
            Noop {
              "kind": "noop",
            },
            Noop {
              "kind": "noop",
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'foo'",
                "unicode": false,
                "value": "foo",
              },
            },
            Noop {
              "kind": "noop",
            },
            Noop {
              "kind": "noop",
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'bar'",
                "unicode": false,
                "value": "bar",
              },
            },
            Noop {
              "kind": "noop",
            },
            Noop {
              "kind": "noop",
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'baz'",
                "unicode": false,
                "value": "baz",
              },
            },
          ],
          "kind": "list",
          "shortForm": true,
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`Test list expressions array with multiple trailing commas #2 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": List {
          "items": [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'foo'",
                "unicode": false,
                "value": "foo",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'bar'",
                "unicode": false,
                "value": "bar",
              },
            },
            Noop {
              "kind": "noop",
            },
            Noop {
              "kind": "noop",
            },
            Noop {
              "kind": "noop",
            },
            Noop {
              "kind": "noop",
            },
          ],
          "kind": "list",
          "shortForm": true,
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`Test list expressions array with multiple trailing commas 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": List {
          "items": [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'foo'",
                "unicode": false,
                "value": "foo",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'bar'",
                "unicode": false,
                "value": "bar",
              },
            },
            Noop {
              "kind": "noop",
            },
          ],
          "kind": "list",
          "shortForm": true,
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`Test list expressions array with trailing commas #2 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": List {
          "items": [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'foo'",
                "unicode": false,
                "value": "foo",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'bar'",
                "unicode": false,
                "value": "bar",
              },
            },
          ],
          "kind": "list",
          "shortForm": true,
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`Test list expressions array with trailing commas #3 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": List {
          "items": [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'foo'",
                "unicode": false,
                "value": "foo",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'bar'",
                "unicode": false,
                "value": "bar",
              },
            },
          ],
          "kind": "list",
          "shortForm": true,
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`Test list expressions array with trailing commas 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": List {
          "items": [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'foo'",
                "unicode": false,
                "value": "foo",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'bar'",
                "unicode": false,
                "value": "bar",
              },
            },
          ],
          "kind": "list",
          "shortForm": true,
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`Test list expressions array without trailing commas 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": List {
          "items": [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'foo'",
                "unicode": false,
                "value": "foo",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'bar'",
                "unicode": false,
                "value": "bar",
              },
            },
          ],
          "kind": "list",
          "shortForm": true,
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`Test list expressions fix #137 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": List {
          "items": [
            Noop {
              "kind": "noop",
              "loc": Location {
                "end": Position {
                  "column": 5,
                  "line": 1,
                  "offset": 5,
                },
                "source": null,
                "start": Position {
                  "column": 5,
                  "line": 1,
                  "offset": 5,
                },
              },
            },
            Noop {
              "kind": "noop",
              "loc": Location {
                "end": Position {
                  "column": 6,
                  "line": 1,
                  "offset": 6,
                },
                "source": null,
                "start": Position {
                  "column": 6,
                  "line": 1,
                  "offset": 6,
                },
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "loc": Location {
                "end": Position {
                  "column": 9,
                  "line": 1,
                  "offset": 9,
                },
                "source": null,
                "start": Position {
                  "column": 7,
                  "line": 1,
                  "offset": 7,
                },
              },
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "loc": Location {
                  "end": Position {
                    "column": 9,
                    "line": 1,
                    "offset": 9,
                  },
                  "source": null,
                  "start": Position {
                    "column": 7,
                    "line": 1,
                    "offset": 7,
                  },
                },
                "name": "a",
              },
            },
            Noop {
              "kind": "noop",
              "loc": Location {
                "end": Position {
                  "column": 10,
                  "line": 1,
                  "offset": 10,
                },
                "source": null,
                "start": Position {
                  "column": 10,
                  "line": 1,
                  "offset": 10,
                },
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "loc": Location {
                "end": Position {
                  "column": 13,
                  "line": 1,
                  "offset": 13,
                },
                "source": null,
                "start": Position {
                  "column": 11,
                  "line": 1,
                  "offset": 11,
                },
              },
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "loc": Location {
                  "end": Position {
                    "column": 13,
                    "line": 1,
                    "offset": 13,
                  },
                  "source": null,
                  "start": Position {
                    "column": 11,
                    "line": 1,
                    "offset": 11,
                  },
                },
                "name": "b",
              },
            },
          ],
          "kind": "list",
          "loc": Location {
            "end": Position {
              "column": 14,
              "line": 1,
              "offset": 14,
            },
            "source": null,
            "start": Position {
              "column": 0,
              "line": 1,
              "offset": 0,
            },
          },
          "shortForm": false,
        },
        "loc": Location {
          "end": Position {
            "column": 36,
            "line": 1,
            "offset": 36,
          },
          "source": null,
          "start": Position {
            "column": 0,
            "line": 1,
            "offset": 0,
          },
        },
        "operator": "=",
        "right": Array {
          "items": [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "loc": Location {
                "end": Position {
                  "column": 22,
                  "line": 1,
                  "offset": 22,
                },
                "source": null,
                "start": Position {
                  "column": 18,
                  "line": 1,
                  "offset": 18,
                },
              },
              "unpack": false,
              "value": NullKeyword {
                "kind": "nullkeyword",
                "loc": Location {
                  "end": Position {
                    "column": 22,
                    "line": 1,
                    "offset": 22,
                  },
                  "source": null,
                  "start": Position {
                    "column": 18,
                    "line": 1,
                    "offset": 18,
                  },
                },
                "raw": "null",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "loc": Location {
                "end": Position {
                  "column": 25,
                  "line": 1,
                  "offset": 25,
                },
                "source": null,
                "start": Position {
                  "column": 24,
                  "line": 1,
                  "offset": 24,
                },
              },
              "unpack": false,
              "value": Number {
                "kind": "number",
                "loc": Location {
                  "end": Position {
                    "column": 25,
                    "line": 1,
                    "offset": 25,
                  },
                  "source": null,
                  "start": Position {
                    "column": 24,
                    "line": 1,
                    "offset": 24,
                  },
                },
                "value": "1",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "loc": Location {
                "end": Position {
                  "column": 31,
                  "line": 1,
                  "offset": 31,
                },
                "source": null,
                "start": Position {
                  "column": 27,
                  "line": 1,
                  "offset": 27,
                },
              },
              "unpack": false,
              "value": NullKeyword {
                "kind": "nullkeyword",
                "loc": Location {
                  "end": Position {
                    "column": 31,
                    "line": 1,
                    "offset": 31,
                  },
                  "source": null,
                  "start": Position {
                    "column": 27,
                    "line": 1,
                    "offset": 27,
                  },
                },
                "raw": "null",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "loc": Location {
                "end": Position {
                  "column": 34,
                  "line": 1,
                  "offset": 34,
                },
                "source": null,
                "start": Position {
                  "column": 33,
                  "line": 1,
                  "offset": 33,
                },
              },
              "unpack": false,
              "value": Number {
                "kind": "number",
                "loc": Location {
                  "end": Position {
                    "column": 34,
                    "line": 1,
                    "offset": 34,
                  },
                  "source": null,
                  "start": Position {
                    "column": 33,
                    "line": 1,
                    "offset": 33,
                  },
                },
                "value": "2",
              },
            },
          ],
          "kind": "array",
          "loc": Location {
            "end": Position {
              "column": 35,
              "line": 1,
              "offset": 35,
            },
            "source": null,
            "start": Position {
              "column": 17,
              "line": 1,
              "offset": 17,
            },
          },
          "shortForm": true,
        },
      },
      "kind": "expressionstatement",
      "loc": Location {
        "end": Position {
          "column": 36,
          "line": 1,
          "offset": 36,
        },
        "source": null,
        "start": Position {
          "column": 0,
          "line": 1,
          "offset": 0,
        },
      },
    },
  ],
  "errors": [],
  "kind": "program",
  "loc": Location {
    "end": Position {
      "column": 36,
      "line": 1,
      "offset": 36,
    },
    "source": null,
    "start": Position {
      "column": 0,
      "line": 1,
      "offset": 0,
    },
  },
}
`;

exports[`Test list expressions fix #150 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": List {
          "items": [
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'foo'",
                "unicode": false,
                "value": "foo",
              },
              "kind": "entry",
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "name": "bar",
              },
            },
          ],
          "kind": "list",
          "shortForm": false,
        },
        "operator": "=",
        "right": Array {
          "items": [
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'foo'",
                "unicode": false,
                "value": "foo",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'bar'",
                "unicode": false,
                "value": "bar",
              },
            },
          ],
          "kind": "array",
          "shortForm": true,
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`Test list expressions handles comments in nested shorthand lists 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": List {
          "items": [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "leadingComments": [
                CommentBlock {
                  "kind": "commentblock",
                  "offset": 1,
                  "value": "/*a*/",
                },
              ],
              "trailingComments": [
                CommentBlock {
                  "kind": "commentblock",
                  "offset": 29,
                  "value": "/*e*/",
                },
              ],
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "name": "a",
                "trailingComments": [
                  CommentBlock {
                    "kind": "commentblock",
                    "offset": 8,
                    "value": "/*b*/",
                  },
                ],
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "leadingComments": [
                CommentBlock {
                  "kind": "commentblock",
                  "offset": 15,
                  "value": "/*c*/",
                },
              ],
              "trailingComments": [
                CommentBlock {
                  "kind": "commentblock",
                  "offset": 55,
                  "value": "/*i*/",
                },
              ],
              "unpack": false,
              "value": List {
                "items": [
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "leadingComments": [
                      CommentBlock {
                        "kind": "commentblock",
                        "offset": 22,
                        "value": "/*d*/",
                      },
                    ],
                    "trailingComments": [
                      CommentBlock {
                        "kind": "commentblock",
                        "offset": 43,
                        "value": "/*g*/",
                      },
                    ],
                    "unpack": false,
                    "value": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "b",
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "leadingComments": [
                      CommentBlock {
                        "kind": "commentblock",
                        "offset": 36,
                        "value": "/*f*/",
                      },
                    ],
                    "trailingComments": [
                      CommentBlock {
                        "kind": "commentblock",
                        "offset": 49,
                        "value": "/*h*/",
                      },
                    ],
                    "unpack": false,
                    "value": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "c",
                    },
                  },
                ],
                "kind": "list",
                "shortForm": true,
              },
            },
          ],
          "kind": "list",
          "shortForm": true,
        },
        "operator": "=",
        "right": Array {
          "items": [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "1",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Array {
                "items": [
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": Number {
                      "kind": "number",
                      "value": "2",
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": Number {
                      "kind": "number",
                      "value": "3",
                    },
                  },
                ],
                "kind": "array",
                "shortForm": true,
              },
            },
          ],
          "kind": "array",
          "shortForm": true,
        },
        "trailingComments": [
          CommentBlock {
            "kind": "commentblock",
            "offset": 73,
            "value": "/*j*/",
          },
        ],
      },
      "kind": "expressionstatement",
    },
  ],
  "comments": [
    CommentBlock {
      "kind": "commentblock",
      "offset": 1,
      "value": "/*a*/",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 8,
      "value": "/*b*/",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 15,
      "value": "/*c*/",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 22,
      "value": "/*d*/",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 29,
      "value": "/*e*/",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 36,
      "value": "/*f*/",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 43,
      "value": "/*g*/",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 49,
      "value": "/*h*/",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 55,
      "value": "/*i*/",
    },
    CommentBlock {
      "kind": "commentblock",
      "offset": 73,
      "value": "/*j*/",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`Test list expressions handles nested shorthand lists (fix #512) 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": List {
          "items": [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "name": "a",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": List {
                "items": [
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "b",
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "c",
                    },
                  },
                ],
                "kind": "list",
                "shortForm": true,
              },
            },
          ],
          "kind": "list",
          "shortForm": true,
        },
        "operator": "=",
        "right": Array {
          "items": [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "1",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Array {
                "items": [
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": Number {
                      "kind": "number",
                      "value": "2",
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": Number {
                      "kind": "number",
                      "value": "3",
                    },
                  },
                ],
                "kind": "array",
                "shortForm": true,
              },
            },
          ],
          "kind": "array",
          "shortForm": true,
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`Test list expressions list without trailing commas 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": List {
          "items": [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'foo'",
                "unicode": false,
                "value": "foo",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'bar'",
                "unicode": false,
                "value": "bar",
              },
            },
          ],
          "kind": "list",
          "shortForm": true,
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`Test list expressions test list statements 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": List {
          "items": [
            Entry {
              "byRef": false,
              "key": Variable {
                "curly": false,
                "kind": "variable",
                "loc": Location {
                  "end": Position {
                    "column": 7,
                    "line": 1,
                    "offset": 7,
                  },
                  "source": null,
                  "start": Position {
                    "column": 5,
                    "line": 1,
                    "offset": 5,
                  },
                },
                "name": "a",
              },
              "kind": "entry",
              "loc": Location {
                "end": Position {
                  "column": 27,
                  "line": 1,
                  "offset": 27,
                },
                "source": null,
                "start": Position {
                  "column": 5,
                  "line": 1,
                  "offset": 5,
                },
              },
              "unpack": false,
              "value": List {
                "items": [
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "loc": Location {
                      "end": Position {
                        "column": 18,
                        "line": 1,
                        "offset": 18,
                      },
                      "source": null,
                      "start": Position {
                        "column": 16,
                        "line": 1,
                        "offset": 16,
                      },
                    },
                    "unpack": false,
                    "value": Variable {
                      "curly": false,
                      "kind": "variable",
                      "loc": Location {
                        "end": Position {
                          "column": 18,
                          "line": 1,
                          "offset": 18,
                        },
                        "source": null,
                        "start": Position {
                          "column": 16,
                          "line": 1,
                          "offset": 16,
                        },
                      },
                      "name": "c",
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "loc": Location {
                      "end": Position {
                        "column": 21,
                        "line": 1,
                        "offset": 21,
                      },
                      "source": null,
                      "start": Position {
                        "column": 19,
                        "line": 1,
                        "offset": 19,
                      },
                    },
                    "unpack": false,
                    "value": Variable {
                      "curly": false,
                      "kind": "variable",
                      "loc": Location {
                        "end": Position {
                          "column": 21,
                          "line": 1,
                          "offset": 21,
                        },
                        "source": null,
                        "start": Position {
                          "column": 19,
                          "line": 1,
                          "offset": 19,
                        },
                      },
                      "name": "d",
                    },
                  },
                  Noop {
                    "kind": "noop",
                    "loc": Location {
                      "end": Position {
                        "column": 22,
                        "line": 1,
                        "offset": 22,
                      },
                      "source": null,
                      "start": Position {
                        "column": 22,
                        "line": 1,
                        "offset": 22,
                      },
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "loc": Location {
                      "end": Position {
                        "column": 25,
                        "line": 1,
                        "offset": 25,
                      },
                      "source": null,
                      "start": Position {
                        "column": 23,
                        "line": 1,
                        "offset": 23,
                      },
                    },
                    "unpack": false,
                    "value": Variable {
                      "curly": false,
                      "kind": "variable",
                      "loc": Location {
                        "end": Position {
                          "column": 25,
                          "line": 1,
                          "offset": 25,
                        },
                        "source": null,
                        "start": Position {
                          "column": 23,
                          "line": 1,
                          "offset": 23,
                        },
                      },
                      "name": "e",
                    },
                  },
                ],
                "kind": "list",
                "loc": Location {
                  "end": Position {
                    "column": 27,
                    "line": 1,
                    "offset": 27,
                  },
                  "source": null,
                  "start": Position {
                    "column": 11,
                    "line": 1,
                    "offset": 11,
                  },
                },
                "shortForm": false,
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "loc": Location {
                "end": Position {
                  "column": 31,
                  "line": 1,
                  "offset": 31,
                },
                "source": null,
                "start": Position {
                  "column": 29,
                  "line": 1,
                  "offset": 29,
                },
              },
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "loc": Location {
                  "end": Position {
                    "column": 31,
                    "line": 1,
                    "offset": 31,
                  },
                  "source": null,
                  "start": Position {
                    "column": 29,
                    "line": 1,
                    "offset": 29,
                  },
                },
                "name": "b",
              },
            },
          ],
          "kind": "list",
          "loc": Location {
            "end": Position {
              "column": 32,
              "line": 1,
              "offset": 32,
            },
            "source": null,
            "start": Position {
              "column": 0,
              "line": 1,
              "offset": 0,
            },
          },
          "shortForm": false,
        },
        "loc": Location {
          "end": Position {
            "column": 42,
            "line": 1,
            "offset": 42,
          },
          "source": null,
          "start": Position {
            "column": 0,
            "line": 1,
            "offset": 0,
          },
        },
        "operator": "=",
        "right": Array {
          "items": [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "loc": Location {
                "end": Position {
                  "column": 37,
                  "line": 1,
                  "offset": 37,
                },
                "source": null,
                "start": Position {
                  "column": 36,
                  "line": 1,
                  "offset": 36,
                },
              },
              "unpack": false,
              "value": Number {
                "kind": "number",
                "loc": Location {
                  "end": Position {
                    "column": 37,
                    "line": 1,
                    "offset": 37,
                  },
                  "source": null,
                  "start": Position {
                    "column": 36,
                    "line": 1,
                    "offset": 36,
                  },
                },
                "value": "1",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "loc": Location {
                "end": Position {
                  "column": 40,
                  "line": 1,
                  "offset": 40,
                },
                "source": null,
                "start": Position {
                  "column": 39,
                  "line": 1,
                  "offset": 39,
                },
              },
              "unpack": false,
              "value": Number {
                "kind": "number",
                "loc": Location {
                  "end": Position {
                    "column": 40,
                    "line": 1,
                    "offset": 40,
                  },
                  "source": null,
                  "start": Position {
                    "column": 39,
                    "line": 1,
                    "offset": 39,
                  },
                },
                "value": "2",
              },
            },
          ],
          "kind": "array",
          "loc": Location {
            "end": Position {
              "column": 41,
              "line": 1,
              "offset": 41,
            },
            "source": null,
            "start": Position {
              "column": 35,
              "line": 1,
              "offset": 35,
            },
          },
          "shortForm": true,
        },
      },
      "kind": "expressionstatement",
      "loc": Location {
        "end": Position {
          "column": 42,
          "line": 1,
          "offset": 42,
        },
        "source": null,
        "start": Position {
          "column": 0,
          "line": 1,
          "offset": 0,
        },
      },
    },
  ],
  "errors": [],
  "kind": "program",
  "loc": Location {
    "end": Position {
      "column": 42,
      "line": 1,
      "offset": 42,
    },
    "source": null,
    "start": Position {
      "column": 0,
      "line": 1,
      "offset": 0,
    },
  },
}
`;

exports[`Test list expressions test short list 1`] = `
Program {
  "children": [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": List {
          "items": [
            Entry {
              "byRef": false,
              "key": Variable {
                "curly": false,
                "kind": "variable",
                "loc": Location {
                  "end": Position {
                    "column": 3,
                    "line": 1,
                    "offset": 3,
                  },
                  "source": null,
                  "start": Position {
                    "column": 1,
                    "line": 1,
                    "offset": 1,
                  },
                },
                "name": "a",
              },
              "kind": "entry",
              "loc": Location {
                "end": Position {
                  "column": 19,
                  "line": 1,
                  "offset": 19,
                },
                "source": null,
                "start": Position {
                  "column": 1,
                  "line": 1,
                  "offset": 1,
                },
              },
              "unpack": false,
              "value": List {
                "items": [
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "loc": Location {
                      "end": Position {
                        "column": 10,
                        "line": 1,
                        "offset": 10,
                      },
                      "source": null,
                      "start": Position {
                        "column": 8,
                        "line": 1,
                        "offset": 8,
                      },
                    },
                    "unpack": false,
                    "value": Variable {
                      "curly": false,
                      "kind": "variable",
                      "loc": Location {
                        "end": Position {
                          "column": 10,
                          "line": 1,
                          "offset": 10,
                        },
                        "source": null,
                        "start": Position {
                          "column": 8,
                          "line": 1,
                          "offset": 8,
                        },
                      },
                      "name": "c",
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "loc": Location {
                      "end": Position {
                        "column": 13,
                        "line": 1,
                        "offset": 13,
                      },
                      "source": null,
                      "start": Position {
                        "column": 11,
                        "line": 1,
                        "offset": 11,
                      },
                    },
                    "unpack": false,
                    "value": Variable {
                      "curly": false,
                      "kind": "variable",
                      "loc": Location {
                        "end": Position {
                          "column": 13,
                          "line": 1,
                          "offset": 13,
                        },
                        "source": null,
                        "start": Position {
                          "column": 11,
                          "line": 1,
                          "offset": 11,
                        },
                      },
                      "name": "d",
                    },
                  },
                  Noop {
                    "kind": "noop",
                    "loc": Location {
                      "end": Position {
                        "column": 14,
                        "line": 1,
                        "offset": 14,
                      },
                      "source": null,
                      "start": Position {
                        "column": 14,
                        "line": 1,
                        "offset": 14,
                      },
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "loc": Location {
                      "end": Position {
                        "column": 17,
                        "line": 1,
                        "offset": 17,
                      },
                      "source": null,
                      "start": Position {
                        "column": 15,
                        "line": 1,
                        "offset": 15,
                      },
                    },
                    "unpack": false,
                    "value": Variable {
                      "curly": false,
                      "kind": "variable",
                      "loc": Location {
                        "end": Position {
                          "column": 17,
                          "line": 1,
                          "offset": 17,
                        },
                        "source": null,
                        "start": Position {
                          "column": 15,
                          "line": 1,
                          "offset": 15,
                        },
                      },
                      "name": "e",
                    },
                  },
                ],
                "kind": "list",
                "loc": Location {
                  "end": Position {
                    "column": 19,
                    "line": 1,
                    "offset": 19,
                  },
                  "source": null,
                  "start": Position {
                    "column": 7,
                    "line": 1,
                    "offset": 7,
                  },
                },
                "shortForm": true,
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "loc": Location {
                "end": Position {
                  "column": 23,
                  "line": 1,
                  "offset": 23,
                },
                "source": null,
                "start": Position {
                  "column": 21,
                  "line": 1,
                  "offset": 21,
                },
              },
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "loc": Location {
                  "end": Position {
                    "column": 23,
                    "line": 1,
                    "offset": 23,
                  },
                  "source": null,
                  "start": Position {
                    "column": 21,
                    "line": 1,
                    "offset": 21,
                  },
                },
                "name": "b",
              },
            },
          ],
          "kind": "list",
          "loc": Location {
            "end": Position {
              "column": 24,
              "line": 1,
              "offset": 24,
            },
            "source": null,
            "start": Position {
              "column": 0,
              "line": 1,
              "offset": 0,
            },
          },
          "shortForm": true,
        },
        "loc": Location {
          "end": Position {
            "column": 54,
            "line": 1,
            "offset": 54,
          },
          "source": null,
          "start": Position {
            "column": 0,
            "line": 1,
            "offset": 0,
          },
        },
        "operator": "=",
        "right": Array {
          "items": [
            Entry {
              "byRef": false,
              "key": Number {
                "kind": "number",
                "loc": Location {
                  "end": Position {
                    "column": 29,
                    "line": 1,
                    "offset": 29,
                  },
                  "source": null,
                  "start": Position {
                    "column": 28,
                    "line": 1,
                    "offset": 28,
                  },
                },
                "value": "1",
              },
              "kind": "entry",
              "loc": Location {
                "end": Position {
                  "column": 49,
                  "line": 1,
                  "offset": 49,
                },
                "source": null,
                "start": Position {
                  "column": 28,
                  "line": 1,
                  "offset": 28,
                },
              },
              "unpack": false,
              "value": Array {
                "items": [
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "loc": Location {
                      "end": Position {
                        "column": 35,
                        "line": 1,
                        "offset": 35,
                      },
                      "source": null,
                      "start": Position {
                        "column": 34,
                        "line": 1,
                        "offset": 34,
                      },
                    },
                    "unpack": false,
                    "value": Number {
                      "kind": "number",
                      "loc": Location {
                        "end": Position {
                          "column": 35,
                          "line": 1,
                          "offset": 35,
                        },
                        "source": null,
                        "start": Position {
                          "column": 34,
                          "line": 1,
                          "offset": 34,
                        },
                      },
                      "value": "5",
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "loc": Location {
                      "end": Position {
                        "column": 38,
                        "line": 1,
                        "offset": 38,
                      },
                      "source": null,
                      "start": Position {
                        "column": 37,
                        "line": 1,
                        "offset": 37,
                      },
                    },
                    "unpack": false,
                    "value": Number {
                      "kind": "number",
                      "loc": Location {
                        "end": Position {
                          "column": 38,
                          "line": 1,
                          "offset": 38,
                        },
                        "source": null,
                        "start": Position {
                          "column": 37,
                          "line": 1,
                          "offset": 37,
                        },
                      },
                      "value": "6",
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "loc": Location {
                      "end": Position {
                        "column": 41,
                        "line": 1,
                        "offset": 41,
                      },
                      "source": null,
                      "start": Position {
                        "column": 40,
                        "line": 1,
                        "offset": 40,
                      },
                    },
                    "unpack": false,
                    "value": Number {
                      "kind": "number",
                      "loc": Location {
                        "end": Position {
                          "column": 41,
                          "line": 1,
                          "offset": 41,
                        },
                        "source": null,
                        "start": Position {
                          "column": 40,
                          "line": 1,
                          "offset": 40,
                        },
                      },
                      "value": "7",
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "loc": Location {
                      "end": Position {
                        "column": 44,
                        "line": 1,
                        "offset": 44,
                      },
                      "source": null,
                      "start": Position {
                        "column": 43,
                        "line": 1,
                        "offset": 43,
                      },
                    },
                    "unpack": false,
                    "value": Number {
                      "kind": "number",
                      "loc": Location {
                        "end": Position {
                          "column": 44,
                          "line": 1,
                          "offset": 44,
                        },
                        "source": null,
                        "start": Position {
                          "column": 43,
                          "line": 1,
                          "offset": 43,
                        },
                      },
                      "value": "8",
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "loc": Location {
                      "end": Position {
                        "column": 47,
                        "line": 1,
                        "offset": 47,
                      },
                      "source": null,
                      "start": Position {
                        "column": 46,
                        "line": 1,
                        "offset": 46,
                      },
                    },
                    "unpack": false,
                    "value": Number {
                      "kind": "number",
                      "loc": Location {
                        "end": Position {
                          "column": 47,
                          "line": 1,
                          "offset": 47,
                        },
                        "source": null,
                        "start": Position {
                          "column": 46,
                          "line": 1,
                          "offset": 46,
                        },
                      },
                      "value": "9",
                    },
                  },
                ],
                "kind": "array",
                "loc": Location {
                  "end": Position {
                    "column": 49,
                    "line": 1,
                    "offset": 49,
                  },
                  "source": null,
                  "start": Position {
                    "column": 33,
                    "line": 1,
                    "offset": 33,
                  },
                },
                "shortForm": true,
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "loc": Location {
                "end": Position {
                  "column": 52,
                  "line": 1,
                  "offset": 52,
                },
                "source": null,
                "start": Position {
                  "column": 51,
                  "line": 1,
                  "offset": 51,
                },
              },
              "unpack": false,
              "value": Number {
                "kind": "number",
                "loc": Location {
                  "end": Position {
                    "column": 52,
                    "line": 1,
                    "offset": 52,
                  },
                  "source": null,
                  "start": Position {
                    "column": 51,
                    "line": 1,
                    "offset": 51,
                  },
                },
                "value": "2",
              },
            },
          ],
          "kind": "array",
          "loc": Location {
            "end": Position {
              "column": 53,
              "line": 1,
              "offset": 53,
            },
            "source": null,
            "start": Position {
              "column": 27,
              "line": 1,
              "offset": 27,
            },
          },
          "shortForm": true,
        },
      },
      "kind": "expressionstatement",
      "loc": Location {
        "end": Position {
          "column": 54,
          "line": 1,
          "offset": 54,
        },
        "source": null,
        "start": Position {
          "column": 0,
          "line": 1,
          "offset": 0,
        },
      },
    },
  ],
  "errors": [],
  "kind": "program",
  "loc": Location {
    "end": Position {
      "column": 54,
      "line": 1,
      "offset": 54,
    },
    "source": null,
    "start": Position {
      "column": 0,
      "line": 1,
      "offset": 0,
    },
  },
}
`;
