// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`classpropertyhooks abstract get + set 1`] = `
Program {
  "children": [
    Class {
      "attrGroups": [],
      "body": [
        PropertyStatement {
          "isAbstract": true,
          "isFinal": false,
          "isStatic": false,
          "kind": "propertystatement",
          "properties": [
            Property {
              "attrGroups": [],
              "hooks": [
                PropertyHook {
                  "body": null,
                  "byref": false,
                  "isFinal": false,
                  "kind": "propertyhook",
                  "name": "get",
                  "parameter": null,
                },
                PropertyHook {
                  "body": null,
                  "byref": false,
                  "isFinal": false,
                  "kind": "propertyhook",
                  "name": "set",
                  "parameter": null,
                },
              ],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "email",
              },
              "nullable": false,
              "readonly": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "string",
                "raw": "string",
              },
              "value": null,
            },
          ],
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": true,
      "isAnonymous": false,
      "isFinal": false,
      "isReadonly": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "User",
      },
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`classpropertyhooks abstract get 1`] = `
Program {
  "children": [
    Class {
      "attrGroups": [],
      "body": [
        PropertyStatement {
          "isAbstract": true,
          "isFinal": false,
          "isStatic": false,
          "kind": "propertystatement",
          "properties": [
            Property {
              "attrGroups": [],
              "hooks": [
                PropertyHook {
                  "body": null,
                  "byref": false,
                  "isFinal": false,
                  "kind": "propertyhook",
                  "name": "get",
                  "parameter": null,
                },
              ],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "email",
              },
              "nullable": false,
              "readonly": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "string",
                "raw": "string",
              },
              "value": null,
            },
          ],
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": true,
      "isAnonymous": false,
      "isFinal": false,
      "isReadonly": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "User",
      },
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`classpropertyhooks abstract set 1`] = `
Program {
  "children": [
    Class {
      "attrGroups": [],
      "body": [
        PropertyStatement {
          "isAbstract": true,
          "isFinal": false,
          "isStatic": false,
          "kind": "propertystatement",
          "properties": [
            Property {
              "attrGroups": [],
              "hooks": [
                PropertyHook {
                  "body": null,
                  "byref": false,
                  "isFinal": false,
                  "kind": "propertyhook",
                  "name": "set",
                  "parameter": null,
                },
              ],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "email",
              },
              "nullable": false,
              "readonly": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "string",
                "raw": "string",
              },
              "value": null,
            },
          ],
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": true,
      "isAnonymous": false,
      "isFinal": false,
      "isReadonly": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "User",
      },
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`classpropertyhooks can be access by reference 1`] = `
Program {
  "children": [
    Class {
      "attrGroups": [],
      "body": [
        PropertyStatement {
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "propertystatement",
          "properties": [
            Property {
              "attrGroups": [],
              "hooks": [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "_baz",
              },
              "nullable": false,
              "readonly": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "string",
                "raw": "string",
              },
              "value": null,
            },
          ],
          "visibility": "private",
        },
        PropertyStatement {
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "propertystatement",
          "properties": [
            Property {
              "attrGroups": [],
              "hooks": [
                PropertyHook {
                  "body": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "_baz",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "this",
                    },
                  },
                  "byref": true,
                  "isFinal": false,
                  "kind": "propertyhook",
                  "name": "get",
                  "parameter": null,
                },
                PropertyHook {
                  "body": Block {
                    "children": [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "_baz",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "this",
                            },
                          },
                          "operator": "=",
                          "right": Call {
                            "arguments": [
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "value",
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "strtoupper",
                              "resolution": "uqn",
                            },
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "byref": false,
                  "isFinal": false,
                  "kind": "propertyhook",
                  "name": "set",
                  "parameter": null,
                },
              ],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "baz",
              },
              "nullable": false,
              "readonly": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "string",
                "raw": "string",
              },
              "value": null,
            },
          ],
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "isReadonly": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "Foo",
      },
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`classpropertyhooks final on the hook itself 1`] = `
Program {
  "children": [
    Class {
      "attrGroups": [],
      "body": [
        PropertyStatement {
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "propertystatement",
          "properties": [
            Property {
              "attrGroups": [],
              "hooks": [
                PropertyHook {
                  "body": Block {
                    "children": [
                      If {
                        "alternate": null,
                        "body": Block {
                          "children": [
                            Throw {
                              "kind": "throw",
                              "what": New {
                                "arguments": [
                                  String {
                                    "isDoubleQuote": false,
                                    "kind": "string",
                                    "raw": "'Invalid email'",
                                    "unicode": false,
                                    "value": "Invalid email",
                                  },
                                ],
                                "kind": "new",
                                "what": Name {
                                  "kind": "name",
                                  "name": "InvalidArgumentException",
                                  "resolution": "uqn",
                                },
                              },
                            },
                          ],
                          "kind": "block",
                        },
                        "kind": "if",
                        "shortForm": false,
                        "test": Unary {
                          "kind": "unary",
                          "type": "!",
                          "what": Call {
                            "arguments": [
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "value",
                              },
                              Name {
                                "kind": "name",
                                "name": "FILTER_VALIDATE_EMAIL",
                                "resolution": "uqn",
                              },
                              Name {
                                "kind": "name",
                                "name": "FILTER_FLAG_EMAIL_UNICODE",
                                "resolution": "uqn",
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "filter_var",
                              "resolution": "uqn",
                            },
                          },
                        },
                      },
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "email",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "this",
                            },
                          },
                          "operator": "=",
                          "right": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "value",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "byref": false,
                  "isFinal": true,
                  "kind": "propertyhook",
                  "name": "set",
                  "parameter": null,
                },
              ],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "email",
              },
              "nullable": false,
              "readonly": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "string",
                "raw": "string",
              },
              "value": null,
            },
          ],
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "isReadonly": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "StandardUser",
      },
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`classpropertyhooks final on the property 1`] = `
Program {
  "children": [
    Class {
      "attrGroups": [],
      "body": [
        PropertyStatement {
          "isAbstract": false,
          "isFinal": true,
          "isStatic": false,
          "kind": "propertystatement",
          "properties": [
            Property {
              "attrGroups": [],
              "hooks": [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "name",
              },
              "nullable": false,
              "readonly": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "string",
                "raw": "string",
              },
              "value": null,
            },
          ],
          "visibility": "public",
        },
        PropertyStatement {
          "isAbstract": false,
          "isFinal": true,
          "isStatic": false,
          "kind": "propertystatement",
          "properties": [
            Property {
              "attrGroups": [],
              "hooks": [
                PropertyHook {
                  "body": Call {
                    "arguments": [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "value",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "strtolower",
                      "resolution": "uqn",
                    },
                  },
                  "byref": false,
                  "isFinal": false,
                  "kind": "propertyhook",
                  "name": "set",
                  "parameter": null,
                },
              ],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "username",
              },
              "nullable": false,
              "readonly": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "string",
                "raw": "string",
              },
              "value": null,
            },
          ],
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "isReadonly": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "User",
      },
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`classpropertyhooks getter arrow function 1`] = `
Program {
  "children": [
    Class {
      "attrGroups": [],
      "body": [
        PropertyStatement {
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "propertystatement",
          "properties": [
            Property {
              "attrGroups": [],
              "hooks": [
                PropertyHook {
                  "body": Bin {
                    "kind": "bin",
                    "left": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'mailto:'",
                      "unicode": false,
                      "value": "mailto:",
                    },
                    "right": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "email",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "this",
                      },
                    },
                    "type": ".",
                  },
                  "byref": false,
                  "isFinal": false,
                  "kind": "propertyhook",
                  "name": "get",
                  "parameter": null,
                },
              ],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "credits",
              },
              "nullable": false,
              "readonly": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "string",
                "raw": "string",
              },
              "value": null,
            },
          ],
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "isReadonly": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "BookViewModel",
      },
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`classpropertyhooks getter block 1`] = `
Program {
  "children": [
    Class {
      "attrGroups": [],
      "body": [
        PropertyStatement {
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "propertystatement",
          "properties": [
            Property {
              "attrGroups": [],
              "hooks": [
                PropertyHook {
                  "body": Block {
                    "children": [
                      ExpressionStatement {
                        "expression": Bin {
                          "kind": "bin",
                          "left": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'mailto:'",
                            "unicode": false,
                            "value": "mailto:",
                          },
                          "right": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "email",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "this",
                            },
                          },
                          "type": ".",
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "byref": false,
                  "isFinal": false,
                  "kind": "propertyhook",
                  "name": "get",
                  "parameter": null,
                },
              ],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "credits",
              },
              "nullable": false,
              "readonly": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "string",
                "raw": "string",
              },
              "value": null,
            },
          ],
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "isReadonly": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "BookViewModel",
      },
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`classpropertyhooks not supported in php < 8.4 1`] = `"Parse Error: Typed Class Constants requires PHP 8.4+ on line 2"`;

exports[`classpropertyhooks setter block form with explicit typed $value 1`] = `
Program {
  "children": [
    Class {
      "attrGroups": [],
      "body": [
        PropertyStatement {
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "propertystatement",
          "properties": [
            Property {
              "attrGroups": [],
              "hooks": [
                PropertyHook {
                  "body": Block {
                    "children": [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "tmp",
                          },
                          "operator": "=",
                          "right": Bin {
                            "kind": "bin",
                            "left": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "credits",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "this",
                              },
                            },
                            "right": Number {
                              "kind": "number",
                              "value": "1",
                            },
                            "type": "+",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "propertyName",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "this",
                            },
                          },
                          "operator": "=",
                          "right": Bin {
                            "kind": "bin",
                            "left": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "value",
                            },
                            "right": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "tmp",
                            },
                            "type": "+",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "byref": false,
                  "isFinal": false,
                  "kind": "propertyhook",
                  "name": "set",
                  "parameter": Parameter {
                    "attrGroups": [],
                    "byref": false,
                    "flags": 0,
                    "kind": "parameter",
                    "name": Identifier {
                      "kind": "identifier",
                      "name": "value",
                    },
                    "nullable": false,
                    "readonly": false,
                    "type": TypeReference {
                      "kind": "typereference",
                      "name": "int",
                      "raw": "int",
                    },
                    "value": null,
                    "variadic": false,
                  },
                },
              ],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "credits",
              },
              "nullable": false,
              "readonly": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "int",
                "raw": "int",
              },
              "value": null,
            },
          ],
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "isReadonly": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "BookViewModel",
      },
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`classpropertyhooks setter block form with explicit untyped $value 1`] = `
Program {
  "children": [
    Class {
      "attrGroups": [],
      "body": [
        PropertyStatement {
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "propertystatement",
          "properties": [
            Property {
              "attrGroups": [],
              "hooks": [
                PropertyHook {
                  "body": Block {
                    "children": [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "tmp",
                          },
                          "operator": "=",
                          "right": Bin {
                            "kind": "bin",
                            "left": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "credits",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "this",
                              },
                            },
                            "right": Number {
                              "kind": "number",
                              "value": "1",
                            },
                            "type": "+",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "propertyName",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "this",
                            },
                          },
                          "operator": "=",
                          "right": Bin {
                            "kind": "bin",
                            "left": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "value",
                            },
                            "right": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "tmp",
                            },
                            "type": "+",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "byref": false,
                  "isFinal": false,
                  "kind": "propertyhook",
                  "name": "set",
                  "parameter": Parameter {
                    "attrGroups": [],
                    "byref": false,
                    "flags": 0,
                    "kind": "parameter",
                    "name": Identifier {
                      "kind": "identifier",
                      "name": "value",
                    },
                    "nullable": false,
                    "readonly": false,
                    "type": null,
                    "value": null,
                    "variadic": false,
                  },
                },
              ],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "credits",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
            },
          ],
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "isReadonly": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "BookViewModel",
      },
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`classpropertyhooks setter block form with implicit $value 1`] = `
Program {
  "children": [
    Class {
      "attrGroups": [],
      "body": [
        PropertyStatement {
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "propertystatement",
          "properties": [
            Property {
              "attrGroups": [],
              "hooks": [
                PropertyHook {
                  "body": Block {
                    "children": [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "tmp",
                          },
                          "operator": "=",
                          "right": Bin {
                            "kind": "bin",
                            "left": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "credits",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "this",
                              },
                            },
                            "right": Number {
                              "kind": "number",
                              "value": "1",
                            },
                            "type": "+",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "propertyName",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "this",
                            },
                          },
                          "operator": "=",
                          "right": Bin {
                            "kind": "bin",
                            "left": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "value",
                            },
                            "right": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "tmp",
                            },
                            "type": "+",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "byref": false,
                  "isFinal": false,
                  "kind": "propertyhook",
                  "name": "set",
                  "parameter": null,
                },
              ],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "credits",
              },
              "nullable": false,
              "readonly": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "string",
                "raw": "string",
              },
              "value": null,
            },
          ],
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "isReadonly": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "BookViewModel",
      },
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`classpropertyhooks setter expression form with explicit typed $value 1`] = `
Program {
  "children": [
    Class {
      "attrGroups": [],
      "body": [
        PropertyStatement {
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "propertystatement",
          "properties": [
            Property {
              "attrGroups": [],
              "hooks": [
                PropertyHook {
                  "body": Assign {
                    "kind": "assign",
                    "left": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "name",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "this",
                      },
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "new_name",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "strtolower",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "byref": false,
                  "isFinal": false,
                  "kind": "propertyhook",
                  "name": "set",
                  "parameter": Parameter {
                    "attrGroups": [],
                    "byref": false,
                    "flags": 0,
                    "kind": "parameter",
                    "name": Identifier {
                      "kind": "identifier",
                      "name": "new_name",
                    },
                    "nullable": false,
                    "readonly": false,
                    "type": TypeReference {
                      "kind": "typereference",
                      "name": "string",
                      "raw": "string",
                    },
                    "value": null,
                    "variadic": false,
                  },
                },
              ],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "name",
              },
              "nullable": false,
              "readonly": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "string",
                "raw": "string",
              },
              "value": null,
            },
          ],
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "isReadonly": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "Person",
      },
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`classpropertyhooks setter expression form with explicit untyped $value 1`] = `
Program {
  "children": [
    Class {
      "attrGroups": [],
      "body": [
        PropertyStatement {
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "propertystatement",
          "properties": [
            Property {
              "attrGroups": [],
              "hooks": [
                PropertyHook {
                  "body": Assign {
                    "kind": "assign",
                    "left": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "name",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "this",
                      },
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "new_name",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "strtolower",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "byref": false,
                  "isFinal": false,
                  "kind": "propertyhook",
                  "name": "set",
                  "parameter": Parameter {
                    "attrGroups": [],
                    "byref": false,
                    "flags": 0,
                    "kind": "parameter",
                    "name": Identifier {
                      "kind": "identifier",
                      "name": "new_name",
                    },
                    "nullable": false,
                    "readonly": false,
                    "type": null,
                    "value": null,
                    "variadic": false,
                  },
                },
              ],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "name",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
            },
          ],
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "isReadonly": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "Person",
      },
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`classpropertyhooks setter expression form with implicit $value 1`] = `
Program {
  "children": [
    Class {
      "attrGroups": [],
      "body": [
        PropertyStatement {
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "propertystatement",
          "properties": [
            Property {
              "attrGroups": [],
              "hooks": [
                PropertyHook {
                  "body": Assign {
                    "kind": "assign",
                    "left": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "credits",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "this",
                      },
                    },
                    "operator": "=",
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "value",
                    },
                  },
                  "byref": false,
                  "isFinal": false,
                  "kind": "propertyhook",
                  "name": "set",
                  "parameter": null,
                },
              ],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "credits",
              },
              "nullable": false,
              "readonly": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "string",
                "raw": "string",
              },
              "value": null,
            },
          ],
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "isReadonly": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "BookViewModel",
      },
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`classpropertyhooks support default value 1`] = `
Program {
  "children": [
    Class {
      "attrGroups": [],
      "body": [
        PropertyStatement {
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "propertystatement",
          "properties": [
            Property {
              "attrGroups": [],
              "hooks": [
                PropertyHook {
                  "body": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "foo",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "this",
                    },
                  },
                  "byref": false,
                  "isFinal": false,
                  "kind": "propertyhook",
                  "name": "get",
                  "parameter": null,
                },
              ],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "foo",
              },
              "nullable": false,
              "readonly": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "string",
                "raw": "string",
              },
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'default value'",
                "unicode": false,
                "value": "default value",
              },
            },
          ],
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "isReadonly": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "Example",
      },
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`classpropertyhooks support setter + getter 1`] = `
Program {
  "children": [
    Class {
      "attrGroups": [],
      "body": [
        PropertyStatement {
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "propertystatement",
          "properties": [
            Property {
              "attrGroups": [],
              "hooks": [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "modified",
              },
              "nullable": false,
              "readonly": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "bool",
                "raw": "bool",
              },
              "value": Boolean {
                "kind": "boolean",
                "raw": "false",
                "value": false,
              },
            },
          ],
          "visibility": "private",
        },
        PropertyStatement {
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "propertystatement",
          "properties": [
            Property {
              "attrGroups": [],
              "hooks": [
                PropertyHook {
                  "body": Bin {
                    "kind": "bin",
                    "left": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "foo",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "this",
                      },
                    },
                    "right": RetIf {
                      "falseExpr": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "''",
                        "unicode": false,
                        "value": "",
                      },
                      "kind": "retif",
                      "parenthesizedExpression": true,
                      "test": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "modified",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "this",
                        },
                      },
                      "trueExpr": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "' (modified)'",
                        "unicode": false,
                        "value": " (modified)",
                      },
                    },
                    "type": ".",
                  },
                  "byref": false,
                  "isFinal": false,
                  "kind": "propertyhook",
                  "name": "get",
                  "parameter": null,
                },
                PropertyHook {
                  "body": Block {
                    "children": [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "foo",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "this",
                            },
                          },
                          "operator": "=",
                          "right": Call {
                            "arguments": [
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "value",
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "strtolower",
                              "resolution": "uqn",
                            },
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "modified",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "this",
                            },
                          },
                          "operator": "=",
                          "right": Boolean {
                            "kind": "boolean",
                            "raw": "true",
                            "value": true,
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "byref": false,
                  "isFinal": false,
                  "kind": "propertyhook",
                  "name": "set",
                  "parameter": Parameter {
                    "attrGroups": [],
                    "byref": false,
                    "flags": 0,
                    "kind": "parameter",
                    "name": Identifier {
                      "kind": "identifier",
                      "name": "value",
                    },
                    "nullable": false,
                    "readonly": false,
                    "type": TypeReference {
                      "kind": "typereference",
                      "name": "string",
                      "raw": "string",
                    },
                    "value": null,
                    "variadic": false,
                  },
                },
              ],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "foo",
              },
              "nullable": false,
              "readonly": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "string",
                "raw": "string",
              },
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'default value'",
                "unicode": false,
                "value": "default value",
              },
            },
          ],
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "isReadonly": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "Example",
      },
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`classpropertyhooks support setter + getter 2`] = `
Program {
  "children": [
    Class {
      "attrGroups": [],
      "body": [
        PropertyStatement {
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "propertystatement",
          "properties": [
            Property {
              "attrGroups": [],
              "hooks": [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "modified",
              },
              "nullable": false,
              "readonly": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "bool",
                "raw": "bool",
              },
              "value": Boolean {
                "kind": "boolean",
                "raw": "false",
                "value": false,
              },
            },
          ],
          "visibility": "private",
        },
        PropertyStatement {
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "propertystatement",
          "properties": [
            Property {
              "attrGroups": [],
              "hooks": [
                PropertyHook {
                  "body": Bin {
                    "kind": "bin",
                    "left": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "foo",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "this",
                      },
                    },
                    "right": RetIf {
                      "falseExpr": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "''",
                        "unicode": false,
                        "value": "",
                      },
                      "kind": "retif",
                      "parenthesizedExpression": true,
                      "test": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "modified",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "this",
                        },
                      },
                      "trueExpr": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "' (modified)'",
                        "unicode": false,
                        "value": " (modified)",
                      },
                    },
                    "type": ".",
                  },
                  "byref": false,
                  "isFinal": false,
                  "kind": "propertyhook",
                  "name": "get",
                  "parameter": null,
                },
                PropertyHook {
                  "body": Block {
                    "children": [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "foo",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "this",
                            },
                          },
                          "operator": "=",
                          "right": Call {
                            "arguments": [
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "value",
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "strtolower",
                              "resolution": "uqn",
                            },
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "modified",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "this",
                            },
                          },
                          "operator": "=",
                          "right": Boolean {
                            "kind": "boolean",
                            "raw": "true",
                            "value": true,
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "byref": false,
                  "isFinal": false,
                  "kind": "propertyhook",
                  "name": "set",
                  "parameter": null,
                },
              ],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "foo",
              },
              "nullable": false,
              "readonly": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "string",
                "raw": "string",
              },
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'default value'",
                "unicode": false,
                "value": "default value",
              },
            },
          ],
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "isReadonly": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "Example",
      },
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`classpropertyhooks support setter + getter 3`] = `
Program {
  "children": [
    Class {
      "attrGroups": [],
      "body": [
        PropertyStatement {
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "propertystatement",
          "properties": [
            Property {
              "attrGroups": [],
              "hooks": [
                PropertyHook {
                  "body": Bin {
                    "kind": "bin",
                    "left": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "foo",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "this",
                      },
                    },
                    "right": RetIf {
                      "falseExpr": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "''",
                        "unicode": false,
                        "value": "",
                      },
                      "kind": "retif",
                      "parenthesizedExpression": true,
                      "test": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "modified",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "this",
                        },
                      },
                      "trueExpr": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "' (modified)'",
                        "unicode": false,
                        "value": " (modified)",
                      },
                    },
                    "type": ".",
                  },
                  "byref": false,
                  "isFinal": false,
                  "kind": "propertyhook",
                  "name": "get",
                  "parameter": null,
                },
                PropertyHook {
                  "body": Call {
                    "arguments": [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "value",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "strtolower",
                      "resolution": "uqn",
                    },
                  },
                  "byref": false,
                  "isFinal": false,
                  "kind": "propertyhook",
                  "name": "set",
                  "parameter": null,
                },
              ],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "foo",
              },
              "nullable": false,
              "readonly": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "string",
                "raw": "string",
              },
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'default value'",
                "unicode": false,
                "value": "default value",
              },
            },
          ],
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "isReadonly": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "Example",
      },
    },
  ],
  "errors": [],
  "kind": "program",
}
`;
