// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`declare encoding 1`] = `
Program {
  "children": [
    Declare {
      "children": [],
      "directives": [
        DeclareDirective {
          "key": Identifier {
            "kind": "identifier",
            "name": "encoding",
          },
          "kind": "declaredirective",
          "value": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'ISO-8859-1'",
            "unicode": false,
            "value": "ISO-8859-1",
          },
        },
      ],
      "kind": "declare",
      "mode": "none",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`declare mode short 1`] = `
Program {
  "children": [
    Declare {
      "children": [
        Echo {
          "expressions": [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": ""something"",
              "unicode": false,
              "value": "something",
            },
          ],
          "kind": "echo",
          "shortForm": false,
        },
      ],
      "directives": [
        DeclareDirective {
          "key": Identifier {
            "kind": "identifier",
            "name": "ticks",
          },
          "kind": "declaredirective",
          "value": Number {
            "kind": "number",
            "value": "1",
          },
        },
      ],
      "kind": "declare",
      "mode": "short",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`declare multiple 1`] = `
Program {
  "children": [
    Declare {
      "children": [],
      "directives": [
        DeclareDirective {
          "key": Identifier {
            "kind": "identifier",
            "name": "A",
          },
          "kind": "declaredirective",
          "value": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'B'",
            "unicode": false,
            "value": "B",
          },
        },
        DeclareDirective {
          "key": Identifier {
            "kind": "identifier",
            "name": "C",
          },
          "kind": "declaredirective",
          "value": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'D'",
            "unicode": false,
            "value": "D",
          },
        },
      ],
      "kind": "declare",
      "mode": "block",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`declare nested 1`] = `
Program {
  "children": [
    Declare {
      "children": [],
      "directives": [
        DeclareDirective {
          "key": Identifier {
            "kind": "identifier",
            "name": "ticks",
          },
          "kind": "declaredirective",
          "value": Number {
            "kind": "number",
            "value": "1",
          },
        },
      ],
      "kind": "declare",
      "mode": "block",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`declare strict_types 1`] = `
Program {
  "children": [
    Declare {
      "children": [],
      "directives": [
        DeclareDirective {
          "key": Identifier {
            "kind": "identifier",
            "name": "strict_types",
          },
          "kind": "declaredirective",
          "value": Number {
            "kind": "number",
            "value": "1",
          },
        },
      ],
      "kind": "declare",
      "mode": "none",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;

exports[`declare ticks 1`] = `
Program {
  "children": [
    Declare {
      "children": [],
      "directives": [
        DeclareDirective {
          "key": Identifier {
            "kind": "identifier",
            "name": "ticks",
          },
          "kind": "declaredirective",
          "value": Number {
            "kind": "number",
            "value": "1",
          },
        },
      ],
      "kind": "declare",
      "mode": "none",
    },
  ],
  "errors": [],
  "kind": "program",
}
`;
