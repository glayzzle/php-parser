// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/dir/dir_variation3.phpt
  it("Test dir() function : usage variations - different directory permissions", function () {
    expect(parser.parseCode("<?php\n/*\n * Providing various permissions to the directory to be opened and checking\n * to see if dir() function opens the directory successfully.\n */\necho \"*** Testing dir() : different directory permissions ***\";\n// create the temporary directory\n$file_path = __DIR__;\n$dir_path = $file_path.\"/dir_variation3\";\n@mkdir($dir_path);\n/* different values for directory permissions */\n$permission_values = array(\n/*1*/  0477,  // owner has read only, other and group has rwx\n       0677,  // owner has rw only, other and group has rwx\n/*3*/  0444,  // all have read only\n       0666,  // all have rw only\n/*5*/  0400,  // owner has read only, group and others have no permission\n       0600,   // owner has rw only, group and others have no permission\n/*7*/  0470,  // owner has read only, group has rwx & others have no permission\n       0407,  // owner has read only, other has rwx & group has no permission\n/*9*/  0670,  // owner has rw only, group has rwx & others have no permission\n/*10*/ 0607   // owner has rw only, group has no permission and others have rwx\n);\n// Open directory with different permission values, read and close, expected: none of them to succeed.\nfor($count = 0; $count < count($permission_values); $count++) {\n  echo \"\\n-- Iteration \".($count + 1).\" --\\n\";\n  // try to remove the dir if exists  & create\n  $file_path = __DIR__;\n  $dir_path = $file_path.\"/dir_variation3\";\n  @chmod ($dir_path, 0777); // change dir permission to allow all operation\n  @rmdir ($dir_path);  // try n delete the dir\n  // create the dir now\n  @mkdir($dir_path);\n  // change the dir permission to test dir on it\n  var_dump( chmod($dir_path, $permission_values[$count]) );\n  // try to get dir handle\n  $d = dir($dir_path);\n  var_dump($d);   // dump the handle\n  // try read directory, expected : false\n  echo \"-- reading contents --\\n\";\n  var_dump($d->read());\n  // close directory\n  $d->close();\n}\necho \"Done\";\n?>")).toMatchSnapshot();
  });
});
