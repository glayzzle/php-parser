// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // tests/classes/iterators_001.phpt
  it("ZE2 iterators and foreach", function () {
    expect(parser.parseCode("<?php\nclass c_iter implements Iterator {\n    private $obj;\n    private $num = 0;\n    function __construct($obj) {\n        echo __METHOD__ . \"\\n\";\n        $this->num = 0;\n        $this->obj = $obj;\n    }\n    function rewind(): void {\n    }\n    function valid(): bool {\n        $more = $this->num < $this->obj->max;\n        echo __METHOD__ . ' = ' .($more ? 'true' : 'false') . \"\\n\";\n        return $more;\n    }\n    function current(): mixed {\n        echo __METHOD__ . \"\\n\";\n        return $this->num;\n    }\n    function next(): void {\n        echo __METHOD__ . \"\\n\";\n        $this->num++;\n    }\n    function key(): mixed {\n        echo __METHOD__ . \"\\n\";\n        switch($this->num) {\n            case 0: return \"1st\";\n            case 1: return \"2nd\";\n            case 2: return \"3rd\";\n            default: return \"???\";\n        }\n    }\n}\nclass c implements IteratorAggregate {\n    public $max = 3;\n    function getIterator(): Traversable {\n        echo __METHOD__ . \"\\n\";\n        return new c_iter($this);\n    }\n}\necho \"===Array===\\n\";\n$a = array(0,1,2);\nforeach($a as $v) {\n    echo \"array:$v\\n\";\n}\necho \"===Manual===\\n\";\n$t = new c();\nfor ($iter = $t->getIterator(); $iter->valid(); $iter->next()) {\n    echo $iter->current() . \"\\n\";\n}\necho \"===foreach/std===\\n\";\nforeach($t as $v) {\n    echo \"object:$v\\n\";\n}\necho \"===foreach/rec===\\n\";\nforeach($t as $v) {\n    foreach($t as $w) {\n        echo \"double:$v:$w\\n\";\n    }\n}\necho \"===foreach/key===\\n\";\nforeach($t as $i => $v) {\n    echo \"object:$i=>$v\\n\";\n}\nprint \"Done\\n\";\nexit(0);\n?>")).toMatchSnapshot();
  });
});
