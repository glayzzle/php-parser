// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/mysqli_commit_oo.phpt
  it("mysqli_commit()", function () {
    expect(parser.parseCode("<?php\n    require_once(\"connect.inc\");\n    $tmp    = NULL;\n    $link   = NULL;\n    $mysqli = new mysqli();\n    try {\n        $mysqli->commit();\n    } catch (Error $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    if (!$mysqli = new my_mysqli($host, $user, $passwd, $db, $port, $socket)) {\n        printf(\"[001] Cannot connect to the server using host=%s, user=%s, passwd=***, dbname=%s, port=%s, socket=%s\\n\",\n            $host, $user, $db, $port, $socket);\n    }\n    if (true !== ($tmp = $mysqli->commit())) {\n        printf(\"[002] Expecting boolean/true got %s/%s\\n\", gettype($tmp), $tmp);\n    }\n    if (true !== ($tmp = $mysqli->autocommit(false))) {\n        printf(\"[003] Cannot turn off autocommit, expecting true, got %s/%s\\n\", gettype($tmp), $tmp);\n    }\n    if (!$mysqli->query('DROP TABLE IF EXISTS test')) {\n        printf(\"[004] [%d] %s\\n\", $mysqli->errno, $mysqli->error);\n    }\n    if (!$mysqli->query('CREATE TABLE test(id INT) ENGINE = InnoDB')) {\n        printf(\"[005] Cannot create test table, [%d] %s\\n\", $mysqli->errno, $mysqli->error);\n    }\n    if (!$mysqli->query('INSERT INTO test(id) VALUES (1)')) {\n        printf(\"[006] [%d] %s\\n\", $mysqli->errno, $mysqli->error);\n    }\n    $tmp = $mysqli->commit();\n    if ($tmp !== true) {\n        printf(\"[007] Expecting boolean/true, got %s/%s\\n\", gettype($tmp), $tmp);\n    }\n    if (!$mysqli->query('ROLLBACK'))\n        printf(\"[008] [%d] %s\\n\", $mysqli->errno, $mysqli->error);\n    if (!$res = $mysqli->query('SELECT COUNT(*) AS num FROM test')) {\n        printf(\"[009] [%d] %s\\n\", $mysqli->errno, $mysqli->error);\n    }\n    $tmp = $res->fetch_assoc();\n    if (1 != $tmp['num']) {\n        printf(\"[010] Expecting 1 row in table test, found %d rows\\n\", $tmp['num']);\n    }\n    $res->free();\n    if (!$mysqli->query('DROP TABLE IF EXISTS test')) {\n        printf(\"[011] [%d] %s\\n\", $mysqli->errno, $mysqli->error);\n    }\n    if (!$mysqli->commit(0 , \"tx_name0123\")) {\n        printf(\"[012] [%d] %s\\n\", $mysqli->errno, $mysqli->error);\n    }\n    var_dump($mysqli->commit(0 , \"*/ nonsense\"));\n    var_dump($mysqli->commit(0 , \"tx_name ulf вендел\"));\n    var_dump($mysqli->commit(0 , \"tx_name \\t\\n\\r\\b\"));\n    if (!$mysqli->commit(MYSQLI_TRANS_COR_AND_CHAIN | MYSQLI_TRANS_COR_NO_RELEASE , \"tx_name\")) {\n        printf(\"[016] [%d] %s\\n\", $mysqli->errno, $mysqli->error);\n    }\n    $mysqli->close();\n    try {\n        $mysqli->commit();\n    } catch (Error $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    print \"done!\";")).toMatchSnapshot();
  });
});
