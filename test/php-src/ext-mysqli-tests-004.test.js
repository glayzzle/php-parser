// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/004.phpt
  it("mysqli fetch char/text", function () {
    expect(parser.parseCode("<?php\n    include (\"connect.inc\");\n    /*** test mysqli_connect 127.0.0.1 ***/\n    $link = my_mysqli_connect($host, $user, $passwd, $db, $port, $socket);\n    mysqli_select_db($link, $db);\n    if (!mysqli_query($link,\"DROP TABLE IF EXISTS test_bind_fetch\"))\n        printf(\"[001] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    if (!mysqli_query($link,\"CREATE TABLE test_bind_fetch(c1 char(10), c2 text) ENGINE=\" . $engine))\n        printf(\"[002] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    if (!mysqli_query($link, \"INSERT INTO test_bind_fetch VALUES ('1234567890', 'this is a test0')\"))\n        printf(\"[003] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    if (!mysqli_query($link, \"INSERT INTO test_bind_fetch VALUES ('1234567891', 'this is a test1')\"))\n        printf(\"[004] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    if (!mysqli_query($link, \"INSERT INTO test_bind_fetch VALUES ('1234567892', 'this is a test2')\"))\n        printf(\"[005] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    if (!mysqli_query($link, \"INSERT INTO test_bind_fetch VALUES ('1234567893', 'this is a test3')\"))\n        printf(\"[006] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    if (!$stmt = mysqli_prepare($link, \"SELECT * FROM test_bind_fetch ORDER BY c1\"))\n        printf(\"[007] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    $c1 = $c2 = NULL;\n    mysqli_stmt_bind_result($stmt, $c1, $c2);\n    mysqli_stmt_execute($stmt);\n    $i = 4;\n    while ($i--) {\n        mysqli_stmt_fetch($stmt);\n        $test = array($c1, $c2);\n        var_dump($test);\n    }\n    mysqli_stmt_close($stmt);\n    mysqli_query($link, \"DROP TABLE IF EXISTS test_bind_fetch\");\n    mysqli_close($link);\n    print \"done!\";\n?>")).toMatchSnapshot();
  });
});
