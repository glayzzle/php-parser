// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/oci8/tests/define2.phpt
  it("Test oci_define_by_name types", function () {
    expect(parser.parseCode("<?php\nrequire(__DIR__.\"/connect.inc\");\n$stmtarray = array(\n    \"drop table phptestrawtable\",\n    \"create table phptestrawtable( id number(10), fileimage raw(1000))\"\n);\noci8_test_sql_execute($c, $stmtarray);\n$stmt = oci_parse ($c, \"insert into phptestrawtable (id, fileimage) values (:id, :fileimage)\");\n$i=1;\n$fileimage = file_get_contents( __DIR__.\"/test.gif\");\n$fileimage = substr($fileimage, 0, 300);\nvar_dump(md5($fileimage));\noci_bind_by_name( $stmt, \":id\", $i, -1);\noci_bind_by_name( $stmt, \":fileimage\", $fileimage, -1, SQLT_BIN);\noci_execute($stmt, OCI_DEFAULT);\noci_commit($c);\necho \"Test 1\\n\";\n$stmt = oci_parse($c, \"SELECT fileimage FROM phptestrawtable\");\nvar_dump(oci_define_by_name($stmt, 'FILEIMAGE', $fi));\noci_execute($stmt);\nwhile (oci_fetch($stmt)) {\n    var_dump($fi);\n    echo \"file md5:\" . md5($fi) . \"\\n\";\n}\necho \"Test 2\\n\";\n$stmt = oci_parse($c, \"SELECT fileimage FROM phptestrawtable\");\nvar_dump(oci_define_by_name($stmt, 'FILEIMAGE', $fi));\noci_execute($stmt);\nwhile (oci_fetch($stmt)) {\n    var_dump($fi);\n    echo \"file md5:\" . md5($fi) . \"\\n\";\n}\necho \"Test 3 - test repeatability\\n\";\n$stmt = oci_parse($c, \"SELECT fileimage FROM phptestrawtable\");\nvar_dump(oci_define_by_name($stmt, 'FILEIMAGE', $fi, SQLT_STR));\noci_execute($stmt);\nwhile (oci_fetch($stmt)) {\n    var_dump($fi);\n    echo \"file md5:\" . md5($fi) . \"\\n\";\n}\necho \"Test 4 - wrong type\\n\";\n$stmt = oci_parse($c, \"SELECT fileimage FROM phptestrawtable\");\nvar_dump(oci_define_by_name($stmt, 'FILEIMAGE', $fi, SQLT_RSET));\noci_execute($stmt);\nwhile (oci_fetch($stmt)) {\n    var_dump($fi);\n    echo \"file md5:\" . md5($fi) . \"\\n\";\n}\n// Cleanup\n$stmtarray = array(\n    \"drop table phptestrawtable\"\n);\noci8_test_sql_execute($c, $stmtarray);\necho \"Done\\n\";\n?>")).toMatchSnapshot();
  });
});
