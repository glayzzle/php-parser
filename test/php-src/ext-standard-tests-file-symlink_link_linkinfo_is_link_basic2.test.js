// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/file/symlink_link_linkinfo_is_link_basic2.phpt
  it("Test symlink(), linkinfo(), link() and is_link() functions: basic functionality - link to dirs", function () {
    expect(parser.parseCode("<?php\n$file_path = __DIR__;\necho \"*** Testing symlink(), linkinfo(), link() and is_link() : basic functionality ***\\n\";\n/* Creating soft/hard link to the temporary dir $dirname and checking\n   linkinfo() and is_link() on the link created to $dirname */\n$dirname = \"symlink_link_linkinfo_is_link_basic2\";\nmkdir($file_path.\"/\".$dirname);\necho \"\\n*** Testing symlink(), linkinfo(), link() and is_link() on directory ***\\n\";\n// name of the soft link created to $dirname\n$sym_linkname = \"$file_path/$dirname/symlink_link_linkinfo_is_link_softlink_basic2.tmp\";\n// name of the hard link created to $dirname\n$linkname = \"$file_path/$dirname/symlink_link_linkinfo_is_link_hardlink_basic2.tmp\";\n// testing on soft link\necho \"\\n-- Testing on soft links --\\n\";\n// creating soft link to $dirname\nvar_dump( symlink(\"$file_path/$dirname\", $sym_linkname) ); // this works, expected true\n// gets information about soft link created to directory; expected: true\n$linkinfo = linkinfo($sym_linkname);\nvar_dump( is_int($linkinfo) && $linkinfo !== -1 );\n// checks if link created is soft link; expected: true\nvar_dump( is_link($sym_linkname) );\n// clear the cache\nclearstatcache();\n// testing on hard link\necho \"\\n-- Testing on hard links --\\n\";\n// creating hard link to $dirname; expected: false\nvar_dump( link(\"$file_path/$dirname\", $linkname) ); // this doesn't work, expected false\nvar_dump( linkinfo($linkname) ); // link doesn't exists as not created, expected false\nvar_dump( is_link($linkname) ); // link doesn't exists as not created, expected false\n// clear the cache\nclearstatcache();\n// deleting the links\nif (PHP_OS_FAMILY === 'Windows') {\n   rmdir($sym_linkname);\n} else {\n   unlink($sym_linkname);\n}\necho \"Done\\n\";\n?>")).toMatchSnapshot();
  });
});
