// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/file/symlink_link_linkinfo_is_link_variation9.phpt
  it("Test symlink(), linkinfo(), link() and is_link() functions : usage variations - link & lstat[dev] value", function () {
    expect(parser.parseCode("<?php\n/* Variation 9 : Check lstat of soft/hard link created\n                 Check linkinfo() value with lstat['dev']\n*/\n// temp file used\n$file_path = __DIR__;\n$dirname = $file_path.\"/symlink_link_linkinfo_is_link_variation9\";\nmkdir($dirname);\n$filename = \"$dirname/symlink_link_linkinfo_is_link_variation9.tmp\";\n// soft link name used\n$soft_link = \"$dirname/symlink_link_linkinfo_is_link_softlink_variation9.tmp\";\n// hard link name used\n$hard_link = \"$dirname/symlink_link_linkinfo_is_link_hardlink_variation9.tmp\";\n// create the file\n$fp = fopen($filename, \"w\");\nfclose($fp);\necho \"*** Checking lstat() on soft link ***\\n\";\n// create soft link\nvar_dump( symlink($filename, $soft_link) );\n// confirming that linkinfo() = lstat['dev'] , this should always match\n$linkinfo = linkinfo($soft_link);\n$s1 = lstat($soft_link);\necho \"linkinfo() returns integer !== -1: \";\nvar_dump(is_int($linkinfo) && $linkinfo !== -1);\nif( $s1[0] == $linkinfo )\n  echo \"\\nlinkinfo() value matches lstat['dev']\\n\";\nelse\n  echo \"\\nWarning: linkinfo() value doesn't match lstat['dev']\\n\";\n// delete link\nunlink($soft_link);\necho \"\\n*** Checking lstat() on hard link ***\\n\";\n// create hard link\nvar_dump( link($filename, $hard_link) );\n// confirming that linkinfo() = lstat['dev'] , this should always match\n$linkinfo = linkinfo($hard_link);\n$s1 = lstat($hard_link);\necho \"linkinfo() returns integer !== -1: \";\nvar_dump(is_int($linkinfo) && $linkinfo !== -1);\nif( $s1[0] == $linkinfo )\n  echo \"\\nlinkinfo() value matches lstat['dev']\\n\";\nelse\n  echo \"\\nWarning: linkinfo() value doesn't match lstat['dev']\\n\";\n// delete link\nunlink($hard_link);\necho \"\\n*** Checking lstat() on a soft link to directory ***\\n\";\n// create soft link\nvar_dump( symlink($dirname, $soft_link) );\n// confirming that linkinfo() = lstat['dev'], this should always match\n$linkinfo = linkinfo($soft_link);\n$s1 = lstat($soft_link);\necho \"linkinfo() returns integer !== -1: \";\nvar_dump(is_int($linkinfo) && $linkinfo !== -1);\nif( $s1[0] == $linkinfo )\n  echo \"\\nlinkinfo() value matches lstat['dev']\\n\";\nelse\n  echo \"\\nWarning: linkinfo() value doesn't match lstat['dev']\\n\";\n// delete link\nif (PHP_OS_FAMILY === 'Windows') {\n  rmdir($soft_link);\n} else {\n  unlink($soft_link);\n}\necho \"Done\\n\";\n?>")).toMatchSnapshot();
  });
});
