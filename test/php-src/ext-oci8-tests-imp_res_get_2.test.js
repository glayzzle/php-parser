// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/oci8/tests/imp_res_get_2.phpt
  it("Oracle Database 12c Implicit Result Sets: oci_get_implicit_resultset: similar to imp_res_get_1 but with unrolled loop", function () {
    expect(parser.parseCode("<?php\nrequire(__DIR__.'/connect.inc');\n// Initialization\n$stmtarray = array(\n    \"drop table imp_res_get_2_tab_1\",\n    \"create table imp_res_get_2_tab_1 (c1 number, c2 varchar2(10))\",\n    \"insert into imp_res_get_2_tab_1 values (1, 'abcde')\",\n    \"insert into imp_res_get_2_tab_1 values (2, 'fghij')\",\n    \"insert into imp_res_get_2_tab_1 values (3, 'klmno')\",\n    \"drop table imp_res_get_2_tab_2\",\n    \"create table imp_res_get_2_tab_2 (c3 varchar2(1))\",\n    \"insert into imp_res_get_2_tab_2 values ('t')\",\n    \"insert into imp_res_get_2_tab_2 values ('u')\",\n    \"insert into imp_res_get_2_tab_2 values ('v')\",\n    \"create or replace procedure imp_res_get_2_proc as\n      c1 sys_refcursor;\n    begin\n      open c1 for select * from imp_res_get_2_tab_1 order by 1;\n      dbms_sql.return_result(c1);\n      open c1 for select * from imp_res_get_2_tab_2 where rownum < 3 order by 1;\n      dbms_sql.return_result(c1);\n      open c1 for select * from dual;\n      dbms_sql.return_result (c1);\n    end;\"\n);\noci8_test_sql_execute($c, $stmtarray);\n// Run Test\necho \"Test 1\\n\";\n$s = oci_parse($c, \"begin imp_res_get_2_proc(); end;\");\noci_execute($s);\n$s1 = oci_get_implicit_resultset($s);\nwhile (($row = oci_fetch_array($s1, OCI_ASSOC+OCI_RETURN_NULLS))) {\n    foreach ($row as $item) {\n        echo \"  \".$item;\n    }\n    echo \"\\n\";\n}\n$s2 = oci_get_implicit_resultset($s);\nwhile (($row = oci_fetch_array($s2, OCI_ASSOC+OCI_RETURN_NULLS))) {\n    foreach ($row as $item) {\n        echo \"  \".$item;\n    }\n    echo \"\\n\";\n}\noci_free_statement($s2);\n$s3 = oci_get_implicit_resultset($s);\nwhile (($row = oci_fetch_array($s3, OCI_ASSOC+OCI_RETURN_NULLS))) {\n    foreach ($row as $item) {\n        echo \"  \".$item;\n    }\n    echo \"\\n\";\n}\noci_free_statement($s3);\n// Clean up\n$stmtarray = array(\n    \"drop procedure imp_res_get_2_proc\",\n    \"drop table imp_res_get_2_tab_1\",\n    \"drop table imp_res_get_2_tab_2\"\n);\noci8_test_sql_execute($c, $stmtarray);\n?>")).toMatchSnapshot();
  });
});
