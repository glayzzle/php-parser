// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/mysqli_class_mysqli_properties_no_conn.phpt
  it("Interface of the class mysqli", function () {
    expect(parser.parseCode("<?php\n    require('table.inc');\n    function dump_properties($mysqli) {\n        printf(\"\\nClass variables:\\n\");\n        $variables = array_keys(get_class_vars(get_class($mysqli)));\n        sort($variables);\n        foreach ($variables as $k => $var) {\n            try {\n                printf(\"%s = '%s'\\n\", $var, var_export($mysqli->$var, true));\n            } catch (Error $exception) {\n                echo $exception->getMessage() . \"\\n\";\n            }\n        }\n        printf(\"\\nObject variables:\\n\");\n        $variables = array_keys(get_object_vars($mysqli));\n        foreach ($variables as $k => $var) {\n            try {\n                printf(\"%s = '%s'\\n\", $var, var_export($mysqli->$var, true));\n            } catch (Error $exception) {\n                echo $exception->getMessage() . \"\\n\";\n            }\n        }\n        printf(\"\\nMagic, magic properties:\\n\");\n        try {\n            mysqli_affected_rows($mysqli);\n        } catch (Error $exception) {\n            echo $exception->getMessage() . \"\\n\";\n        }\n        try {\n            $mysqli->affected_rows;\n        } catch (Error $exception) {\n            echo $exception->getMessage() . \"\\n\";\n        }\n        printf(\"mysqli->client_info = '%s'/%s\\n\", $mysqli->client_info, gettype($mysqli->client_info));\n        printf(\"mysqli->client_version = '%s'/%s\\n\", $mysqli->client_version, gettype($mysqli->client_version));\n        try {\n            mysqli_errno($mysqli);\n        } catch (Error $exception) {\n            echo $exception->getMessage() . \"\\n\";\n        }\n        try {\n            $mysqli->errno;\n        } catch (Error $exception) {\n            echo $exception->getMessage() . \"\\n\";\n        }\n        try {\n            mysqli_error($mysqli);\n        } catch (Error $exception) {\n            echo $exception->getMessage() . \"\\n\";\n        }\n        try {\n            $mysqli->error;\n        } catch (Error $exception) {\n            echo $exception->getMessage() . \"\\n\";\n        }\n        try {\n            mysqli_field_count($mysqli);\n        } catch (Error $exception) {\n            echo $exception->getMessage() . \"\\n\";\n        }\n        try {\n            $mysqli->field_count;\n        } catch (Error $exception) {\n            echo $exception->getMessage() . \"\\n\";\n        }\n        try {\n            mysqli_insert_id($mysqli);\n        } catch (Error $exception) {\n            echo $exception->getMessage() . \"\\n\";\n        }\n        try {\n            $mysqli->insert_id;\n        } catch (Error $exception) {\n            echo $exception->getMessage() . \"\\n\";\n        }\n        try {\n            mysqli_sqlstate($mysqli);\n        } catch (Error $exception) {\n            echo $exception->getMessage() . \"\\n\";\n        }\n        try {\n            $mysqli->sqlstate;\n        } catch (Error $exception) {\n            echo $exception->getMessage() . \"\\n\";\n        }\n        try {\n            mysqli_get_host_info($mysqli);\n        } catch (Error $exception) {\n            echo $exception->getMessage() . \"\\n\";\n        }\n        try {\n            $mysqli->host_info;\n        } catch (Error $exception) {\n            echo $exception->getMessage() . \"\\n\";\n        }\n        try {\n            mysqli_info($mysqli);\n        } catch (Error $exception) {\n            echo $exception->getMessage() . \"\\n\";\n        }\n        try {\n            $mysqli->info;\n        } catch (Error $exception) {\n            echo $exception->getMessage() . \"\\n\";\n        }\n        try {\n            mysqli_thread_id($mysqli);\n        } catch (Error $exception) {\n            echo $exception->getMessage() . \"\\n\";\n        }\n        try {\n            $mysqli->thread_id;\n        } catch (Error $exception) {\n            echo $exception->getMessage() . \"\\n\";\n        }\n        try {\n            mysqli_get_proto_info($mysqli);\n        } catch (Error $exception) {\n            echo $exception->getMessage() . \"\\n\";\n        }\n        try {\n            $mysqli->protocol_version;\n        } catch (Error $exception) {\n            echo $exception->getMessage() . \"\\n\";\n        }\n        try {\n            mysqli_get_server_info($mysqli);\n        } catch (Error $exception) {\n            echo $exception->getMessage() . \"\\n\";\n        }\n        try {\n            $mysqli->server_info;\n        } catch (Error $exception) {\n            echo $exception->getMessage() . \"\\n\";\n        }\n        try {\n            mysqli_get_server_version($mysqli);\n        } catch (Error $exception) {\n            echo $exception->getMessage() . \"\\n\";\n        }\n        try {\n            $mysqli->server_version;\n        } catch (Error $exception) {\n            echo $exception->getMessage() . \"\\n\";\n        }\n        try {\n            mysqli_warning_count($mysqli);\n        } catch (Error $exception) {\n            echo $exception->getMessage() . \"\\n\";\n        }\n        try {\n            $mysqli->warning_count;\n        } catch (Error $exception) {\n            echo $exception->getMessage() . \"\\n\";\n        }\n        printf(\"\\nAccess to undefined properties:\\n\");\n        printf(\"mysqli->unknown = '%s'\\n\", @$mysqli->unknown);\n        @$mysqli->unknown = 13;\n        printf(\"setting mysqli->unknown, @mysqli_unknown = '%s'\\n\", @$mysqli->unknown);\n        $unknown = 'friday';\n        @$mysqli->unknown = $unknown;\n        printf(\"setting mysqli->unknown, @mysqli_unknown = '%s'\\n\", @$mysqli->unknown);\n        printf(\"\\nAccess hidden properties for MYSLQI_STATUS_INITIALIZED (TODO documentation):\\n\");\n        assert(@mysqli_connect_error() === @$mysqli->connect_error);\n        printf(\"mysqli->connect_error = '%s'/%s ('%s'/%s)\\n\",\n            @$mysqli->connect_error, gettype(@$mysqli->connect_error),\n            @mysqli_connect_error(), gettype(@mysqli_connect_error()));\n        assert(@mysqli_connect_errno() === @$mysqli->connect_errno);\n        printf(\"mysqli->connect_errno = '%s'/%s ('%s'/%s)\\n\",\n            @$mysqli->connect_errno, gettype(@$mysqli->connect_errno),\n            @mysqli_connect_errno(), gettype(@mysqli_connect_errno()));\n    }\n    printf(\"Without RS\\n\");\n    $mysqli = @new mysqli($host, $user, $passwd . \"invalid\", $db, $port, $socket);\n    dump_properties($mysqli);\n    printf(\"\\nWith RS\\n\");\n    $mysqli = @new mysqli($host, $user, $passwd . \"invalid\", $db, $port, $socket);\n    try {\n        $mysqli->query(\"SELECT * FROM test\");\n    } catch (Error $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    dump_properties($mysqli);\n    print \"done!\";\n?>")).toMatchSnapshot();
  });
});
