// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/dom/tests/domxpath.phpt
  it("DOMXPath Tests", function () {
    expect(parser.parseCode("<?php\nrequire_once(\"dom_test.inc\");\nfunction MyAverage($nodelist) {\n    $count = 0;\n    $val = 0;\n    foreach ($nodelist AS $node) {\n        $count++;\n        $val += $node->textContent;\n    }\n    if ($val > 0) {\n        return $val/$count;\n    } else {\n        return 0;\n    }\n}\n$dom = new DOMDocument;\n$dom->loadXML('<root xmlns=\"urn::default\"><child>myval</child></root>');\n$xpath = new DOMXPath($dom);\n$xpath->registerPHPFunctions('MyAverage');\n$xpath->registerNamespace(\"php\", \"http://php.net/xpath\");\n$xpath->registerNamespace(\"def\", \"urn::default\");\n$nodelist = $xpath->query(\"//def:child\");\nif ($node = $nodelist->item(0)) {\n    print $node->textContent.\"\\n\";\n}\n$count = $xpath->evaluate(\"count(//def:child)\");\nvar_dump($count);\n$xpathdoc = $xpath->document;\nvar_dump($xpathdoc instanceof DOMDocument);\n$root = $dom->documentElement;\n$root->appendChild($dom->createElementNS(\"urn::default\", \"testnode\", 3));\n$root->appendChild($dom->createElementNS(\"urn::default\", \"testnode\", 4));\n$root->appendChild($dom->createElementNS(\"urn::default\", \"testnode\", 4));\n$root->appendChild($dom->createElementNS(\"urn::default\", \"testnode\", 5));\n$avg = $xpath->evaluate('number(php:function(\"MyAverage\", //def:testnode))');\nvar_dump($avg);\ntry {\n    $xpath->registerPHPFunctions('non_existent');\n    $avg = $xpath->evaluate('number(php:function(\"non_existent\", //def:testnode))');\n} catch (\\Error $e) {\n    echo $e->getMessage() . \\PHP_EOL;\n}\ntry {\n    $xpath->registerPhpFunctions(['non_existant']);\n    $avg = $xpath->evaluate('number(php:function(\"non_existent\", //def:testnode))');\n} catch (\\Error $e) {\n    echo $e->getMessage() . \\PHP_EOL;\n}\n?>")).toMatchSnapshot();
  });
});
