// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/mysqli_insert_id.phpt
  it("mysqli_insert_id()", function () {
    expect(parser.parseCode("<?php\n    require_once(\"connect.inc\");\n    require('table.inc');\n    if (0 !== ($tmp = mysqli_insert_id($link)))\n        printf(\"[003] Expecting int/0, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (!$res = mysqli_query($link, \"SELECT id, label FROM test ORDER BY id LIMIT 1\")) {\n        printf(\"[004] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    }\n    if (0 !== ($tmp = mysqli_insert_id($link)))\n        printf(\"[005] Expecting int/0, got %s/%s\\n\", gettype($tmp), $tmp);\n    mysqli_free_result($res);\n    // no auto_increment column\n    if (!$res = mysqli_query($link, \"INSERT INTO test(id, label) VALUES (100, 'a')\")) {\n        printf(\"[006] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    }\n    if (0 !== ($tmp = mysqli_insert_id($link)))\n        printf(\"[007] Expecting int/0, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (!$res = mysqli_query($link, \"ALTER TABLE test MODIFY id INT NOT NULL AUTO_INCREMENT\")) {\n        printf(\"[008] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    }\n    if (!$res = mysqli_query($link, \"INSERT INTO test(label) VALUES ('a')\")) {\n        printf(\"[009] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    }\n    if (($last_id = mysqli_insert_id($link)) <= 0)\n        printf(\"[010] Expecting int/any >0, got %s/%s\\n\", gettype($last_id), $last_id);\n    if (mysqli_query($link, \"LOCK TABLE test WRITE\")) {\n        /* we need exclusive access for a moment */\n        /* let's hope nobody changes auto_increment_increment while this code executes */\n        do {\n            if (mysqli_get_server_version($link) >= 50000) {\n                if (!$res = mysqli_query($link, 'SELECT @@auto_increment_increment AS inc')) {\n                    printf(\"[011] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n                    break;\n                }\n                if (!$row = mysqli_fetch_assoc($res)) {\n                    printf(\"[012] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n                    break;\n                }\n                mysqli_free_result($res);\n                $inc = $row['inc'];\n            } else {\n                $inc = 1;\n            }\n            if (!mysqli_query($link, \"INSERT INTO test(label) VALUES ('b')\")) {\n                printf(\"[013] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n                break;\n            }\n            if (($next_id = mysqli_insert_id($link)) <= $last_id)\n                /*\n                very likely a bug, but someone could have done something on the server\n                between the second last insert and the lock, therefore don't stop just bail\n                */\n                printf(\"[014] Expecting int/any > %d, got %s/%s\\n\", $last_id, gettype($next_id), $next_id);\n            $last_id = $next_id;\n            if (!mysqli_query($link, \"INSERT INTO test(label) VALUES ('c'), ('d'), ('e')\")) {\n                printf(\"[015] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n                break;\n            }\n            /*\n            Note: For a multiple-row insert, LAST_INSERT_ID() and mysql_insert_id() actually\n            return the AUTO_INCREMENT key from the first of the inserted rows. This allows\n            multiple-row inserts to be reproduced correctly on other servers in a replication setup.\n            */\n            if (($next_id = mysqli_insert_id($link)) != $last_id + $inc) {\n                printf(\"[016] Expecting int/%d, got %s/%s\\n\", $last_id + 1, gettype($next_id), $next_id);\n                break;\n            }\n            if (!$res = mysqli_query($link, \"SELECT LAST_INSERT_ID() AS last_id\")) {\n                printf(\"[017] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n                break;\n            }\n            if (!$row = mysqli_fetch_assoc($res)) {\n                printf(\"[018] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n                break;\n            }\n            mysqli_free_result($res);\n            if ($next_id != $row['last_id']) {\n                printf(\"[019] Something is wrong, check manually. Expecting %s got %s.\\n\",\n                    $next_id, $row['last_id']);\n                break;\n            }\n        } while (false);\n        mysqli_query($link, \"UNLOCK TABLE test\");\n    }\n    if (!$res = mysqli_query($link, \"INSERT INTO test(id, label) VALUES (1000, 'a')\")) {\n        printf(\"[020] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    }\n    if (1000 !== ($tmp = mysqli_insert_id($link)))\n        printf(\"[021] Expecting int/1000, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (!$res = mysqli_query($link, \"INSERT INTO test(label) VALUES ('b'), ('c')\")) {\n        printf(\"[022] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    }\n    if (1000 >= ($tmp = mysqli_insert_id($link)))\n        printf(\"[023] Expecting int/>1000, got %s/%s\\n\", gettype($tmp), $tmp);\n    mysqli_close($link);\n    try {\n        mysqli_insert_id($link);\n    } catch (Error $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    print \"done!\";\n?>")).toMatchSnapshot();
  });
});
