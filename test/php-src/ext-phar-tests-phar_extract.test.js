// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/phar/tests/phar_extract.phpt
  it("Phar: Phar::extractTo()", function () {
    expect(parser.parseCode("<?php\n$fname = __DIR__ . '/tempmanifest1.phar.php';\n$pname = 'phar://' . $fname;\n$a = new Phar($fname);\n$a['file1.txt'] = 'hi';\n$a['file2.txt'] = 'hi2';\n$a['subdir/ectory/file.txt'] = 'hi3';\n$a->mount($pname . '/mount', __FILE__);\n$a->addEmptyDir('one/level');\n$a->extractTo(__DIR__ . '/extract', 'mount');\n$a->extractTo(__DIR__ . '/extract');\n$out = array();\nforeach (new RecursiveIteratorIterator(new RecursiveDirectoryIterator(__DIR__ . '/extract', 0x00003000), RecursiveIteratorIterator::CHILD_FIRST) as $p => $b) {\n    $out[] = $p;\n}\nsort($out);\nforeach ($out as $b) {\n    echo \"$b\\n\";\n}\n$a->extractTo(__DIR__ . '/extract1', 'file1.txt');\nvar_dump(file_get_contents(__DIR__ . '/extract1/file1.txt'));\n$a->extractTo(__DIR__ . '/extract1', 'subdir/ectory/file.txt');\nvar_dump(file_get_contents(__DIR__ . '/extract1/subdir/ectory/file.txt'));\n$a->extractTo(__DIR__ . '/extract1-2', array('file2.txt', 'one/level'));\nvar_dump(file_get_contents(__DIR__ . '/extract1-2/file2.txt'));\nvar_dump(is_dir(__DIR__ . '/extract1-2/one/level'));\ntry {\n    $a->extractTo(__DIR__ . '/whatever', new stdClass());\n} catch (TypeError $e) {\n    echo $e->getMessage(), \"\\n\";\n}\ntry {\n    $a->extractTo(array());\n} catch (TypeError $e) {\n    echo $e->getMessage(), \"\\n\";\n}\ntry {\n    $a->extractTo('');\n} catch (Exception $e) {\n    echo $e->getMessage(), \"\\n\";\n}\nfile_put_contents(__DIR__ . '/oops', 'I is file');\ntry {\n    $a->extractTo(__DIR__ . '/oops', 'file1.txt');\n} catch (Exception $e) {\n    echo $e->getMessage(), \"\\n\";\n}\ntry {\n    $a->extractTo(__DIR__ . '/oops1', array(array(), 'file1.txt'));\n} catch (Exception $e) {\n    echo $e->getMessage(), \"\\n\";\n}\ntry {\n    $a->extractTo(__DIR__ . '/extract', 'file1.txt');\n} catch (Exception $e) {\n    echo $e->getMessage(), \"\\n\";\n}\nfile_put_contents(__DIR__ . '/extract/file1.txt', 'first');\nvar_dump(file_get_contents(__DIR__ . '/extract/file1.txt'));\n$a->extractTo(__DIR__ . '/extract', 'file1.txt', true);\nvar_dump(file_get_contents(__DIR__ . '/extract/file1.txt'));\ntry {\n    $a->extractTo(str_repeat('a', 20000), 'file1.txt');\n} catch (Exception $e) {\n    echo $e->getMessage(), \"\\n\";\n}\n$a[str_repeat('a', 20000)] = 'long';\ntry {\n    $a->extractTo(__DIR__ . '/extract', str_repeat('a', 20000));\n} catch (Exception $e) {\n    echo $e->getMessage(), \"\\n\";\n}\n?>")).toMatchSnapshot();
  });
});
