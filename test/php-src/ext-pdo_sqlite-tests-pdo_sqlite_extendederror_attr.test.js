// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/pdo_sqlite/tests/pdo_sqlite_extendederror_attr.phpt
  it("PDO_sqlite: Testing PDO_SQLITE_ATTR_EXTENDED_RESULT_CODES", function () {
    expect(parser.parseCode("<?php\necho \"Creating new PDO\" . PHP_EOL;\n$db = new PDO('sqlite::memory:');\n$db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_SILENT);\n$db->exec(\"CREATE TABLE dog ( id INTEGER PRIMARY KEY, name TEXT, annoying INTEGER )\");\necho \"Inserting first time which should succeed\" . PHP_EOL;\n$db->exec(\"INSERT INTO dog VALUES (1, 'Annoying Dog', 1)\");\n$errorInfo = $db->errorInfo();\necho sprintf(\"First Error Info: SQLSTATE Error Code: (%s), Driver Specific Error Code: (%s)\", $errorInfo[0], $errorInfo[1]) . PHP_EOL;\necho \"Inserting second time which should fail\" . PHP_EOL;\n$result = $db->exec(\"INSERT INTO dog VALUES (1, 'Annoying Dog', 1)\");\n$errorInfo = $db->errorInfo();\necho sprintf(\"Second Error Info: SQLSTATE Error Code: (%s), Driver Specific Error Code: (%s)\", $errorInfo[0], $errorInfo[1]) . PHP_EOL;\necho \"Creating new PDO with Extended Result Codes turned on\" . PHP_EOL;\n$db = new PDO('sqlite::memory:', '', '', [PDO::SQLITE_ATTR_EXTENDED_RESULT_CODES => TRUE]);\n$db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_SILENT);\n$db->exec(\"CREATE TABLE dog ( id INTEGER PRIMARY KEY, name TEXT, annoying INTEGER )\");\necho \"Inserting first time which should succeed\" . PHP_EOL;\n$result = $db->exec(\"INSERT INTO dog VALUES (1, 'Annoying Dog', 1)\");\n$errorInfo = $db->errorInfo();\necho sprintf(\"First (Extended) Error Info: SQLSTATE Error Code: (%s), Driver Specific Error Code: (%s)\", $errorInfo[0], $errorInfo[1]) . PHP_EOL;\necho \"Inserting second time which should fail\" . PHP_EOL;\n$result = $db->exec(\"INSERT INTO dog VALUES (1, 'Annoying Dog', 1)\");\n$errorInfo = $db->errorInfo();\necho sprintf(\"Second (Extended) Error Info: SQLSTATE Error Code: (%s), Driver Specific Error Code: (%s)\", $errorInfo[0], $errorInfo[1]) . PHP_EOL;\n?>")).toMatchSnapshot();
  });
});
