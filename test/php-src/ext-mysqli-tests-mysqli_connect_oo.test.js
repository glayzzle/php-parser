// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/mysqli_connect_oo.phpt
  it("new mysqli()", function () {
    expect(parser.parseCode("<?php\n    require_once(\"connect.inc\");\n    $tmp    = NULL;\n    $link   = NULL;\n    $obj = new stdClass();\n    if ($mysqli = new mysqli($host, $user . 'unknown_really', $passwd . 'non_empty', $db, $port, $socket) && !mysqli_connect_errno())\n        printf(\"[003] Can connect to the server using host=%s, user=%s, passwd=***non_empty, dbname=%s, port=%s, socket=%s\\n\",\n            $host, $user . 'unknown_really', $db, $port, $socket);\n    if (false !== $mysqli)\n        printf(\"[004] Expecting boolean/false, got %s/%s\\n\", gettype($mysqli), $mysqli);\n    // Run the following tests without an anoynmous MySQL user and use a password for the test user!\n    ini_set('mysqli.default_socket', $socket);\n    if (!is_object($mysqli = new mysqli($host, $user, $passwd, $db, $port)) || (0 !== mysqli_connect_errno())) {\n        printf(\"[005] Usage of mysqli.default_socket failed\\n\") ;\n    } else {\n        $mysqli->close();\n    }\n    ini_set('mysqli.default_port', $port);\n    if (!is_object($mysqli = new mysqli($host, $user, $passwd, $db)) || (0 !== mysqli_connect_errno())) {\n        printf(\"[006] Usage of mysqli.default_port failed\\n\") ;\n    } else {\n        $mysqli->close();\n    }\n    ini_set('mysqli.default_pw', $passwd);\n    if (!is_object($mysqli = new mysqli($host, $user)) || (0 !== mysqli_connect_errno())) {\n        printf(\"[007] Usage of mysqli.default_pw failed\\n\") ;\n    } else {\n        $mysqli->close();\n    }\n    ini_set('mysqli.default_user', $user);\n    if (!is_object($mysqli = new mysqli($host)) || (0 !== mysqli_connect_errno())) {\n        printf(\"[008] Usage of mysqli.default_user failed\\n\") ;\n    } else {\n        $mysqli->close();\n    }\n    ini_set('mysqli.default_host', $host);\n    if (!is_object($mysqli = new mysqli()) || (0 !== mysqli_connect_errno())) {\n        printf(\"[012] Failed to create mysqli object\\n\");\n    } else {\n        // There shall be NO connection! Using new mysqli(void) shall not use defaults for a connection!\n        // We had long discussions on this and found that the ext/mysqli API as\n        // such is broken. As we can't fix it, we document how it has behaved from\n        // the first day on. And that's: no connection.\n        try {\n            $mysqli->query('SELECT 1');\n        } catch (Error $exception) {\n            echo $exception->getMessage() . \"\\n\";\n        }\n    }\n    if ($IS_MYSQLND) {\n        ini_set('mysqli.default_host', 'p:' . $host);\n        if (!is_object($mysqli = new mysqli())) {\n            // Due to an API flaw this shall not connect\n            printf(\"[010] Failed to create mysqli object\\n\");\n        } else {\n            // There shall be NO connection! Using new mysqli(void) shall not use defaults for a connection!\n            // We had long discussions on this and found that the ext/mysqli API as\n            // such is broken. As we can't fix it, we document how it has behaved from\n            // the first day on. And that's: no connection.\n            try {\n                $mysqli->query('SELECT 1');\n            } catch (Error $exception) {\n                echo $exception->getMessage() . \"\\n\";\n            }\n        }\n    }\n    print \"... and now Exceptions\\n\";\n    mysqli_report(MYSQLI_REPORT_OFF);\n    mysqli_report(MYSQLI_REPORT_STRICT);\n    try {\n        $mysqli = new mysqli($host, $user . 'unknown_really', $passwd . 'non_empty', $db, $port, $socket);\n        printf(\"[016] Can connect to the server using host=%s, user=%s, passwd=***non_empty, dbname=%s, port=%s, socket=%s\\n\",\n            $host, $user . 'unknown_really', $db, $port, $socket);\n        $mysqli->close();\n    } catch (mysqli_sql_exception $e) {\n        printf(\"%s\\n\", $e->getMessage());\n    }\n    ini_set('mysqli.default_socket', $socket);\n    try {\n        $mysqli = new mysqli($host, $user, $passwd, $db, $port);\n        $mysqli->close();\n    } catch (mysqli_sql_exception $e) {\n        printf(\"%s\\n\", $e->getMessage());\n        printf(\"[017] Usage of mysqli.default_socket failed\\n\") ;\n    }\n    ini_set('mysqli.default_port', $port);\n    try {\n        $mysqli = new mysqli($host, $user, $passwd, $db);\n        $mysqli->close();\n    } catch (mysqli_sql_exception $e) {\n        printf(\"%s\\n\", $e->getMessage());\n        printf(\"[018] Usage of mysqli.default_port failed\\n\") ;\n    }\n    ini_set('mysqli.default_pw', $passwd);\n    try {\n        $mysqli = new mysqli($host, $user);\n        $mysqli->close();\n    } catch (mysqli_sql_exception $e) {\n        printf(\"%s\\n\", $e->getMessage());\n        printf(\"[019] Usage of mysqli.default_pw failed\\n\");\n    }\n    ini_set('mysqli.default_user', $user);\n    try {\n        $mysqli = new mysqli($host);\n        $mysqli->close();\n    } catch (mysqli_sql_exception $e) {\n        printf(\"%s\\n\", $e->getMessage());\n        printf(\"[020] Usage of mysqli.default_user failed\\n\") ;\n    }\n    ini_set('mysqli.default_host', $host);\n    try {\n        /* NOTE that at this point one must use a different syntax! */\n        $mysqli = mysqli_init();\n        $mysqli->real_connect();\n        assert(0 === mysqli_connect_errno());\n        $mysqli->close();\n        assert(0 === mysqli_connect_errno());\n    } catch (mysqli_sql_exception $e) {\n        printf(\"%s\\n\", $e->getMessage());\n        printf(\"[021] Usage of mysqli.default_host failed\\n\");\n    }\n    print \"done!\";\n?>")).toMatchSnapshot();
  });
});
