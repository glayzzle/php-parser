// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/mysqli_real_connect.phpt
  it("mysqli_real_connect()", function () {
    expect(parser.parseCode("<?php\n    include(\"connect.inc\");\n    //  ( mysqli link [, string hostname [, string username [, string passwd [, string dbname [, int port [, string socket [, int flags]]]]]]]\n    if (!$link = mysqli_init())\n        printf(\"[002] mysqli_init() failed\\n\");\n    if (!mysqli_real_connect($link, $host, $user, $passwd, $db, $port, $socket))\n        printf(\"[003] Cannot connect to the server using host=%s, user=%s, passwd=***, dbname=%s, port=%s, socket=%s\\n\",\n            $host, $user, $db, $port, $socket);\n    mysqli_close($link);\n    if (!$link = mysqli_init())\n        printf(\"[004] mysqli_init() failed\\n\");\n    if (false !== ($tmp = mysqli_real_connect($link, $host, $user . 'unknown_really', $passwd . 'non_empty', $db, $port, $socket)))\n        printf(\"[005] Expecting boolean/false got %s/%s. Can connect to the server using host=%s, user=%s, passwd=***non_empty, dbname=%s, port=%s, socket=%s\\n\", gettype($tmp), $tmp, $host, $user . 'unknown_really', $db, $port, $socket);\n    // Run the following tests without an anoynmous MySQL user and use a password for the test user!\n    ini_set('mysqli.default_socket', $socket);\n    if (!mysqli_real_connect($link, $host, $user, $passwd, $db, $port)) {\n        printf(\"[006] Usage of mysqli.default_socket failed\\n\");\n    } else {\n        mysqli_close($link);\n        if (!$link = mysqli_init())\n            printf(\"[007] mysqli_init() failed\\n\");\n    }\n    ini_set('mysqli.default_port', $port);\n    if (!mysqli_real_connect($link, $host, $user, $passwd, $db)) {\n        printf(\"[008] Usage of mysqli.default_port failed\\n\");\n    } else {\n        mysqli_close($link);\n        if (!$link = mysqli_init())\n            printf(\"[009] mysqli_init() failed\\n\");\n    }\n    ini_set('mysqli.default_pw', $passwd);\n    if (!mysqli_real_connect($link, $host, $user)) {\n        printf(\"[010] Usage of mysqli.default_pw failed\\n\") ;\n    } else {\n        mysqli_close($link);\n        if (!$link = mysqli_init())\n            printf(\"[011] mysqli_init() failed\\n\");\n    }\n    ini_set('mysqli.default_user', $user);\n    if (!mysqli_real_connect($link, $host)) {\n        printf(\"[012] Usage of mysqli.default_user failed\\n\") ;\n    } else {\n        mysqli_close($link);\n        if (!$link = mysqli_init())\n            printf(\"[011] mysqli_init() failed\\n\");\n    }\n    ini_set('mysqli.default_host', $host);\n    if (!mysqli_real_connect($link)) {\n        printf(\"[014] Usage of mysqli.default_host failed\\n\") ;\n    } else {\n        mysqli_close($link);\n        if (!$link = mysqli_init())\n            printf(\"[015] mysqli_init() failed\\n\");\n    }\n    // CLIENT_MULTI_STATEMENTS - should be disabled silently\n    if (!mysqli_real_connect($link, $host, $user, $passwd, $db, $port, $socket, 65536))\n        printf(\"[016] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    if ($res = mysqli_query($link, \"SELECT 1 AS a; SELECT 2 AS b\")) {\n        printf(\"[017] Should have failed. CLIENT_MULTI_STATEMENT should have been disabled.\\n\");\n        var_dump($res->num_rows);\n        mysqli_next_result($link);\n        $res = mysqli_store_result($link);\n        var_dump($res->num_rows);\n    }\n    mysqli_close($link);\n    if (!$link = mysqli_init())\n        printf(\"[018] mysqli_init() failed\\n\");\n    if (ini_get('open_basedir')) {\n        // CLIENT_LOCAL_FILES should be blocked - but how to test it ?!\n        if (!mysqli_real_connect($link, $host, $user, $passwd, $db, $port, $socket, 128))\n            printf(\"[019] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n        $filename = sys_get_temp_dir() . DIRECTORY_SEPARATOR . 'mysqli_real_connect_phpt';\n        if (!$fp = fopen($filename, 'w'))\n            printf(\"[020] Cannot open temporary file %s\\n\", $filename);\n        fwrite($fp, '100;z');\n        fclose($fp);\n        // how do we test if gets forbidden because of a missing right or the flag, this test is partly bogus ?\n        if (mysqli_query($link, \"LOAD DATA LOCAL INFILE '$filename' INTO TABLE test FIELDS TERMINATED BY ';'\"))\n            printf(\"[021] LOAD DATA INFILE should have been forbidden!\\n\");\n        unlink($filename);\n    }\n    mysqli_close($link);\n    var_dump($link);\n    if ($IS_MYSQLND) {\n        ini_set('mysqli.default_host', 'p:' . $host);\n        $link = mysqli_init();\n        if (!@mysqli_real_connect($link)) {\n            printf(\"[022] Usage of mysqli.default_host=p:%s (persistent) failed\\n\", $host) ;\n        } else {\n            if (!$res = mysqli_query($link, \"SELECT 'mysqli.default_host (persistent)' AS 'testing'\"))\n                printf(\"[023] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n            $tmp = mysqli_fetch_assoc($res);\n            if ($tmp['testing'] !== 'mysqli.default_host (persistent)') {\n                printf(\"[024] Result looks strange - check manually, [%d] %s\\n\",\n                    mysqli_errno($link), mysqli_error($link));\n                var_dump($tmp);\n            }\n            mysqli_free_result($res);\n            mysqli_close($link);\n        }\n        ini_set('mysqli.default_host', 'p:');\n        $link = mysqli_init();\n        if (@mysqli_real_connect($link)) {\n            printf(\"[025] Usage of mysqli.default_host=p: did not fail\\n\") ;\n            mysqli_close($link);\n        }\n        @mysqli_close($link);\n    }\n    try {\n        mysqli_real_connect($link, $host, $user, $passwd, $db, $port, $socket);\n    } catch (Error $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    print \"done!\";\n?>")).toMatchSnapshot();
  });
});
