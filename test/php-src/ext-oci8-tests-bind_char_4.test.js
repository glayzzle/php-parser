// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/oci8/tests/bind_char_4.phpt
  it("PL/SQL oci_bind_by_name with SQLT_AFC aka CHAR to VARCHAR2 parameter", function () {
    expect(parser.parseCode("<?php\n// Same test as bind_char_3 but the PL/SQL function uses VARCHAR2 instead of CHAR\nrequire(__DIR__.'/connect.inc');\n// Initialization\n$stmtarray = array(\n    \"create or replace function bind_char_3_fn(p1 varchar2) return varchar2 as begin return p1; end;\",\n);\noci8_test_sql_execute($c, $stmtarray);\n// Run Test\necho \"Test 1.1 In Length: default.  In Type: default.  Out Length: default.          Out Type: default\\n\";\n$s = oci_parse($c, \"begin :bv2 := bind_char_3_fn(:bv1); end;\");\n$bv1 = 'abc';\n$r = oci_bind_by_name($s, ':bv1', $bv1) && oci_bind_by_name($s, ':bv2', $bv2);\nif ($r)\n    do_e($s);\nvar_dump($bv1, $bv2);\necho \"Test 1.2 In Length: default.  In Type: default.  Out Length: 10.               Out Type: default\\n\";\n$bv1 = 'abc';\n$r = oci_bind_by_name($s, ':bv1', $bv1) && oci_bind_by_name($s, ':bv2', $bv2, 10);\nif ($r)\n    do_e($s);\nvar_dump($bv1, $bv2);\necho \"Test 1.3 In Length: -1.       In Type: AFC.      Out Length: 10.               Out Type: default\\n\";\n$bv1 = 'abc';\n$r = oci_bind_by_name($s, ':bv1', $bv1, -1, SQLT_AFC) && oci_bind_by_name($s, ':bv2', $bv2, 10);\nif ($r)\n    do_e($s);\nvar_dump($bv1, $bv2);\necho \"Test 1.4 In Length: -1.       In Type: AFC.      Out Length: 10.               Out Type: AFC\\n\";\n$bv1 = 'abc';\n$r = oci_bind_by_name($s, ':bv1', $bv1, -1, SQLT_AFC) && oci_bind_by_name($s, ':bv2', $bv2, 10, SQLT_AFC);\nif ($r)\n    do_e($s);\nvar_dump($bv1, $bv2);\necho \"Test 1.5 In Length: strlen.   In Type: AFC.      Out Length: strlen(input).    Out Type: AFC\\n\";\n$bv1 = 'abc';\n$r = oci_bind_by_name($s, ':bv1', $bv1, strlen($bv1), SQLT_AFC) && oci_bind_by_name($s, ':bv2', $bv2, strlen($bv1), SQLT_AFC);\nif ($r)\n    do_e($s);\nvar_dump($bv1, $bv2);\necho \"Test 1.6 In Length: strlen.   In Type: AFC.      Out Length: strlen(input)-1.  Out Type: AFC\\n\";\n$bv1 = 'abc';\n$r = oci_bind_by_name($s, ':bv1', $bv1, strlen($bv1), SQLT_AFC) && oci_bind_by_name($s, ':bv2', $bv2, strlen($bv1)-1, SQLT_AFC);\nif ($r)\n    do_e($s);\nvar_dump($bv1, $bv2);\necho \"Test 1.7 In Length: strlen.   In Type: AFC.      Out Length: strlen(input)+1.  Out Type: AFC\\n\";\n$bv1 = 'abc';\n$r = oci_bind_by_name($s, ':bv1', $bv1, strlen($bv1), SQLT_AFC) && oci_bind_by_name($s, ':bv2', $bv2, strlen($bv1)+1, SQLT_AFC);\nif ($r)\n    do_e($s);\nvar_dump($bv1, $bv2);\necho \"\\n\\nTests with ''\\n\\n\";\necho \"Test 2.1 In Length: -1.       In Type: AFC.      Out Length: 10.               Out Type: AFC\\n\";\n$bv1 = '';\n$r = oci_bind_by_name($s, ':bv1', $bv1, -1, SQLT_AFC) && oci_bind_by_name($s, ':bv2', $bv2, 10, SQLT_AFC);\nif ($r)\n    do_e($s);\nvar_dump($bv1, $bv2);\necho \"Test 2.2 In Length: default.  In Type: default.  Out Length: 10.               Out Type: default\\n\";\n$r = oci_bind_by_name($s, ':bv1', $bv1) && oci_bind_by_name($s, ':bv2', $bv2, 10);\nif ($r)\n    do_e($s);\nvar_dump($bv1, $bv2);\necho \"Test 2.3 In Length: -1.       In Type: AFC.      Out Length: 10.               Out Type: default\\n\";\n$bv1 = '';\n$r = oci_bind_by_name($s, ':bv1', $bv1, -1, SQLT_AFC) && oci_bind_by_name($s, ':bv2', $bv2, 10);\nif ($r)\n    do_e($s);\nvar_dump($bv1, $bv2);\necho \"Test 2.4 In Length: -1.       In Type: AFC.      Out Length: 10.               Out Type: AFC\\n\";\n$bv1 = '';\n$r = oci_bind_by_name($s, ':bv1', $bv1, -1, SQLT_AFC) && oci_bind_by_name($s, ':bv2', $bv2, 10, SQLT_AFC);\nif ($r)\n    do_e($s);\nvar_dump($bv1, $bv2);\necho \"Test 2.5 In Length: -1.       In Type: AFC.      Out Length: 0.                Out Type: AFC\\n\";\n$bv1 = '';\n$r = oci_bind_by_name($s, ':bv1', $bv1, -1, SQLT_AFC) && oci_bind_by_name($s, ':bv2', $bv2, 0, SQLT_AFC);\nif ($r)\n    do_e($s);\nvar_dump($bv1, $bv2);\necho \"Test 2.6 In Length: 0.        In Type: AFC.      Out Length: 0.                Out Type: AFC\\n\";\n$bv1 = '';\n$r = oci_bind_by_name($s, ':bv1', $bv1, 0, SQLT_AFC) && oci_bind_by_name($s, ':bv2', $bv2, 0, SQLT_AFC);\nif ($r)\n    do_e($s);\nvar_dump($bv1, $bv2);\necho \"Test 2.7 In Length: 1.        In Type: AFC.      Out Length: 1.                Out Type: AFC\\n\";\n$bv1 = '';\n$r = oci_bind_by_name($s, ':bv1', $bv1, 1, SQLT_AFC) && oci_bind_by_name($s, ':bv2', $bv2, 1, SQLT_AFC);\nif ($r)\n    do_e($s);\nvar_dump($bv1, $bv2);\necho \"\\n\\nTests with NULL\\n\";\necho \"Test 3.1 In Length: -1.       In Type: AFC.      Out Length: 10.               Out Type: AFC\\n\";\n$bv1 = null;\n$r = oci_bind_by_name($s, ':bv1', $bv1, -1, SQLT_AFC) && oci_bind_by_name($s, ':bv2', $bv2, 10, SQLT_AFC);\nif ($r)\n    do_e($s);\nvar_dump($bv1, $bv2);\necho \"Test 3.2 In Length: default.  In Type: default.  Out Length: 10.               Out Type: default\\n\";\n$bv1 = null;\n$r = oci_bind_by_name($s, ':bv1', $bv1) && oci_bind_by_name($s, ':bv2', $bv2, 10);\nif ($r)\n    do_e($s);\nvar_dump($bv1, $bv2);\necho \"Test 3.3 In Length: -1.       In Type: AFC.      Out Length: 10.               Out Type: default\\n\";\n$bv1 = null;\n$r = oci_bind_by_name($s, ':bv1', $bv1, -1, SQLT_AFC) && oci_bind_by_name($s, ':bv2', $bv2, 10);\nif ($r)\n    do_e($s);\nvar_dump($bv1, $bv2);\necho \"Test 3.4 In Length: -1.       In Type: AFC.      Out Length: 10.               Out Type: AFC\\n\";\n$bv1 = null;\n$r = oci_bind_by_name($s, ':bv1', $bv1, -1, SQLT_AFC) && oci_bind_by_name($s, ':bv2', $bv2, 10, SQLT_AFC);\nif ($r)\n    do_e($s);\nvar_dump($bv1, $bv2);\necho \"Test 3.5 In Length: -1.       In Type: AFC.      Out Length: 0.                Out Type: AFC\\n\";\n$bv1 = null;\n$r = oci_bind_by_name($s, ':bv1', $bv1, -1, SQLT_AFC) && oci_bind_by_name($s, ':bv2', $bv2, 0, SQLT_AFC);\nif ($r)\n    do_e($s);\nvar_dump($bv1, $bv2);\necho \"Test 3.6 In Length: -1.       In Type: AFC.      Out Length: 1.                Out Type: AFC\\n\";\n$bv1 = null;\n$r = oci_bind_by_name($s, ':bv1', $bv1, -1, SQLT_AFC) && oci_bind_by_name($s, ':bv2', $bv2, 1, SQLT_AFC);\nif ($r)\n    do_e($s);\nvar_dump($bv1, $bv2);\nfunction do_e($s)\n{\n    echo \"  Executing:\\n\";\n    $r = @oci_execute($s);\n    if (!$r) {\n        $m = oci_error($s);\n        echo \"    Oci_execute error ORA-\".$m['code'].\"\\n\";\n        return;\n    }\n}\n// Cleanup\n$stmtarray = array(\n    \"drop function bind_char_3_fn\"\n);\noci8_test_sql_execute($c, $stmtarray);\necho \"Done\\n\";\n?>")).toMatchSnapshot();
  });
});
