// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/mysqli_report.phpt
  it("mysqli_report()", function () {
    expect(parser.parseCode("<?php\n    require_once(\"connect.inc\");\n    if (true !== ($tmp = mysqli_report(-1)))\n        printf(\"[002] Expecting boolean/true even for invalid flags, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (true !== ($tmp = mysqli_report(MYSQLI_REPORT_ERROR)))\n        printf(\"[003] Expecting boolean/true, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (true !== ($tmp = mysqli_report(MYSQLI_REPORT_STRICT)))\n        printf(\"[004] Expecting boolean/true, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (true !== ($tmp = mysqli_report(MYSQLI_REPORT_INDEX)))\n        printf(\"[005] Expecting boolean/true, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (true !== ($tmp = mysqli_report(MYSQLI_REPORT_ALL)))\n        printf(\"[007] Expecting boolean/true, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (true !== ($tmp = mysqli_report(MYSQLI_REPORT_OFF)))\n        printf(\"[008] Expecting boolean/true, got %s/%s\\n\", gettype($tmp), $tmp);\n    require('table.inc');\n    /*\n    Internal macro MYSQL_REPORT_ERROR\n    */\n    mysqli_report(MYSQLI_REPORT_ERROR);\n    mysqli_multi_query($link, \"BAR; FOO;\");\n    mysqli_query($link, \"FOO\");\n    try {\n        mysqli_kill($link, -1);\n    } catch (\\ValueError $e) {\n        echo $e->getMessage() . \\PHP_EOL;\n    }\n    // mysqli_ping() cannot be tested, because one would need to cause an error inside the C function to test it\n    mysqli_prepare($link, \"FOO\");\n    mysqli_real_query($link, \"FOO\");\n    if (@mysqli_select_db($link, \"Oh lord, let this be an unknown database name\"))\n        printf(\"[009] select_db should have failed\\n\");\n    // mysqli_store_result() and mysqli_use_result() cannot be tested, because one would need to cause an error inside the C function to test it\n    mysqli_multi_query($link, \"SELECT 1; FOO;\");\n    mysqli_autocommit($link, true);\n    mysqli_commit($link);\n    mysqli_rollback($link);\n    $stmt = mysqli_stmt_init($link);\n    mysqli_stmt_prepare($stmt, \"SELECT id FROM test WHERE id > ?\");\n    while(mysqli_more_results($link)) {\n        mysqli_next_result($link);\n        $res = mysqli_store_result($link);\n    }\n    mysqli_next_result($link);\n    $stmt = mysqli_prepare($link, \"SELECT 1\");\n    mysqli_stmt_attr_set($stmt, MYSQLI_STMT_ATTR_CURSOR_TYPE, MYSQLI_CURSOR_TYPE_FOR_UPDATE);\n    // Check that none of the above would have caused any error messages if MYSQL_REPORT_ERROR would\n    // not have been set. If that would be the case, the test would be broken.\n    mysqli_report(MYSQLI_REPORT_OFF);\n    mysqli_multi_query($link, \"BAR; FOO;\");\n    mysqli_query($link, \"FOO\");\n    try {\n        mysqli_kill($link, -1);\n    } catch (\\ValueError $e) {\n        echo $e->getMessage() . \\PHP_EOL;\n    }\n    mysqli_prepare($link, \"FOO\");\n    mysqli_real_query($link, \"FOO\");\n    mysqli_select_db($link, \"Oh lord, let this be an unknown database name\");\n    mysqli_multi_query($link, \"SELECT 1; FOO;\");\n    mysqli_autocommit($link, true);\n    mysqli_commit($link);\n    mysqli_rollback($link);\n    $stmt = mysqli_stmt_init($link);\n    mysqli_stmt_prepare($stmt, \"SELECT id FROM test WHERE id > ?\");\n    while(mysqli_more_results($link)) {\n        mysqli_next_result($link);\n        $res = mysqli_store_result($link);\n    }\n    mysqli_next_result($link);\n    $stmt = mysqli_prepare($link, \"SELECT 1\");\n    mysqli_stmt_attr_set($stmt, MYSQLI_STMT_ATTR_CURSOR_TYPE, MYSQLI_CURSOR_TYPE_FOR_UPDATE);\n    /*\n    Internal macro MYSQL_REPORT_STMT_ERROR\n    */\n    mysqli_report(MYSQLI_REPORT_ERROR);\n    $stmt = mysqli_stmt_init($link);\n    mysqli_stmt_prepare($stmt, \"FOO\");\n    $stmt = mysqli_stmt_init($link);\n    mysqli_stmt_prepare($stmt, \"SELECT id FROM test WHERE id > ?\");\n    $id = 1;\n    mysqli_kill($link, mysqli_thread_id($link));\n    mysqli_stmt_bind_param($stmt, \"i\", $id);\n    mysqli_stmt_close($stmt);\n    mysqli_close($link);\n    /* mysqli_stmt_execute() = mysql_stmt_execute cannot be tested from PHP */\n    if (!$link = my_mysqli_connect($host, $user, $passwd, $db, $port, $socket))\n            printf(\"[008] [%d] %s\\n\", mysqli_connect_errno(), mysqli_connect_error());\n    $stmt = mysqli_stmt_init($link);\n    mysqli_stmt_prepare($stmt, \"SELECT id FROM test WHERE id > ?\");\n    $id = 1;\n    mysqli_stmt_bind_param($stmt, \"i\", $id);\n    // mysqli_kill($link, mysqli_thread_id($link));\n    mysqli_stmt_execute($stmt);\n    mysqli_stmt_close($stmt);\n    mysqli_close($link);\n    /* mysqli_kill() \"trick\" does not work for any of the following because of an E_COMMANDS_OUT_OF_SYNC */\n    /* mysqli_stmt_bind_result() = mysql_stmt_bind_result() cannot be tested from PHP */\n    /* mysqli_stmt_fetch() = mysql_stmt_fetch() cannot be tested from PHP */\n    /* mysqli_stmt_result_metadata() = mysql_stmt_result_metadata() cannot be tested from PHP */\n    /* mysqli_stmt_store_result() = mysql_stmt_store_result() cannot be tested from PHP */\n    // Check\n    mysqli_report(MYSQLI_REPORT_OFF);\n    if (!$link = my_mysqli_connect($host, $user, $passwd, $db, $port, $socket))\n        printf(\"[010] [%d] %s\\n\", mysqli_connect_errno(), mysqli_connect_error());\n    $stmt = mysqli_stmt_init($link);\n    mysqli_stmt_prepare($stmt, \"FOO\");\n    $stmt = mysqli_stmt_init($link);\n    mysqli_stmt_prepare($stmt, \"SELECT id FROM test WHERE id > ?\");\n    $id = 1;\n    mysqli_kill($link, mysqli_thread_id($link));\n    mysqli_stmt_bind_param($stmt, \"i\", $id);\n    mysqli_stmt_close($stmt);\n    mysqli_close($link);\n    if (!$link = my_mysqli_connect($host, $user, $passwd, $db, $port, $socket))\n        printf(\"[011] [%d] %s\\n\", mysqli_connect_errno(), mysqli_connect_error());\n    $stmt = mysqli_stmt_init($link);\n    mysqli_stmt_prepare($stmt, \"SELECT id FROM test WHERE id > ?\");\n    $id = 1;\n    mysqli_stmt_bind_param($stmt, \"i\", $id);\n    mysqli_kill($link, mysqli_thread_id($link));\n    mysqli_stmt_execute($stmt);\n    mysqli_stmt_close($stmt);\n    mysqli_close($link);\n    /*\n    MYSQLI_REPORT_STRICT\n    MYSQLI_REPORT_STRICT --->\n    php_mysqli_report_error() ->\n        MYSQLI_REPORT_MYSQL_ERROR,\n        MYSQLI_REPORT_STMT_ERROR ->\n            already tested\n    php_mysqli_throw_sql_exception() ->\n        my_mysqli_real_connect()\n        my_mysqli_connect()\n    can't be tested: mysqli_query() via mysql_use_result()/mysql_store_result()\n    */\n    mysqli_report(MYSQLI_REPORT_OFF);\n    mysqli_report(MYSQLI_REPORT_STRICT);\n    try {\n        if ($link = my_mysqli_connect($host, $user . 'unknown_really', $passwd . 'non_empty', $db, $port, $socket))\n            printf(\"[012] Can connect to the server using host=%s, user=%s, passwd=***non_empty, dbname=%s, port=%s, socket=%s\\n\",\n                $host, $user . 'unknown_really', $db, $port, $socket);\n        mysqli_close($link);\n    } catch (mysqli_sql_exception $e) {\n        printf(\"[013] %s\\n\", $e->getMessage());\n    }\n    try {\n        if (!$link = mysqli_init())\n            printf(\"[014] [%d] %s\\n\", mysqli_connect_errno(), mysqli_connect_error());\n        if ($link = my_mysqli_real_connect($link, $host, $user . 'unknown_really', $passwd . 'non_empty', $db, $port, $socket))\n            printf(\"[015] Can connect to the server using host=%s, user=%s, passwd=***non_empty, dbname=%s, port=%s, socket=%s\\n\",\n                $host, $user . 'unknown_really', $db, $port, $socket);\n        mysqli_close($link);\n    } catch (mysqli_sql_exception $e) {\n        printf(\"[016] %s\\n\", $e->getMessage());\n    }\n    /*\n    MYSQLI_REPORT_INDEX --->\n    mysqli_query()\n    mysqli_stmt_execute()\n    mysqli_prepare()\n    mysqli_real_query()\n    mysqli_store_result()\n    mysqli_use_result()\n    No test, because of to many prerequisites:\n        - Server needs to be started with and\n            --log-slow-queries --log-queries-not-using-indexes\n        - query must cause the warning on all MySQL versions\n    TODO:\n    */\n    $log_slow_queries = false;\n    $log_queries_not_using_indexes = false;\n    mysqli_report(MYSQLI_REPORT_OFF);\n    mysqli_report(MYSQLI_REPORT_INDEX);\n    if (!$link = my_mysqli_connect($host, $user, $passwd, $db, $port, $socket))\n        printf(\"[017] [%d] %s\\n\", mysqli_connect_errno(), mysqli_connect_error());\n    if (mysqli_get_server_version($link) <= 50600) {\n        // this might cause a warning - no index used\n        if (!$res = @mysqli_query($link, \"SHOW VARIABLES LIKE 'log_slow_queries'\"))\n            printf(\"[018] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n        if (!$row = mysqli_fetch_assoc($res))\n            printf(\"[019] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n        $log_slow_query = ('ON' == $row['Value']);\n        if (mysqli_get_server_version($link) >= 50111) {\n            // this might cause a warning - no index used\n            if (!$res = @mysqli_query($link, \"SHOW VARIABLES LIKE 'log_queries_not_using_indexes'\"))\n                printf(\"[020] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n            if (!$row = mysqli_fetch_assoc($res))\n                printf(\"[021] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n            $log_queries_not_using_indexes = ('ON' == $row['Value']);\n            if ($log_slow_queries && $log_queries_not_using_indexes) {\n                for ($i = 100; $i < 20000; $i++) {\n                    if (!mysqli_query($link, \"INSERT INTO test(id, label) VALUES ($i, 'z')\"))\n                        printf(\"[022 - %d] [%d] %s\\n\", $i - 99, mysqli_errno($link), mysqli_error($link));\n                }\n                // this might cause a warning - no index used\n                if (!$res = @mysqli_query($link, \"SELECT id, label FROM test WHERE id = 1323\"))\n                    printf(\"[023] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n                mysqli_free_result($res);\n            }\n        }\n    }\n    // Maybe we've provoked an index message, maybe not.\n    // All we can do is make a few dummy calls to ensure that all codes gets executed which\n    // checks the flag. Functions to check: mysqli_query() - done above,\n    // mysqli_stmt_execute(), mysqli_prepare(), mysqli_real_query(), mysqli_store_result()\n    // mysqli_use_result(), mysqli_thread_safe(), mysqli_thread_id()\n    mysqli_report(MYSQLI_REPORT_OFF);\n    mysqli_close($link);\n    if (!$link = my_mysqli_connect($host, $user, $passwd, $db, $port, $socket))\n        printf(\"[024] [%d] %s\\n\", mysqli_connect_errno(), mysqli_connect_error());\n    if (!$stmt = mysqli_stmt_init($link))\n        printf(\"[025] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    if (!mysqli_stmt_prepare($stmt, 'SELECT id, label FROM test'))\n        printf(\"[026] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (!mysqli_stmt_execute($stmt))\n        printf(\"[027] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    mysqli_stmt_close($stmt);\n    if (!mysqli_real_query($link, 'SELECT label, id FROM test'))\n        printf(\"[028] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    if (!$res = mysqli_use_result($link))\n        printf(\"[029] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    mysqli_free_result($res);\n    if (!mysqli_real_query($link, 'SELECT label, id FROM test'))\n        printf(\"[030]  [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    if (!$res = mysqli_store_result($link))\n        printf(\"[031]  [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    mysqli_free_result($res);\n    if (!$stmt = mysqli_prepare($link, 'SELECT id * 3 FROM test'))\n        printf(\"[032] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    else\n        mysqli_stmt_close($stmt);\n    if (!mysqli_query($link, \"INSERT INTO test(id, label) VALUES (100, 'z')\", MYSQLI_USE_RESULT) ||\n            !mysqli_query($link, 'DELETE FROM test WHERE id > 50', MYSQLI_USE_RESULT))\n        printf(\"[033] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    $tmp = mysqli_thread_id($link);\n    mysqli_close($link);\n    print \"done!\";\n?>")).toMatchSnapshot();
  });
});
