// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/openssl/tests/bug65538_003.phpt
  it("Bug #65538: SSL context \"cafile\" supports phar wrapper", function () {
    expect(parser.parseCode("<?php\n$certFile = __DIR__ . DIRECTORY_SEPARATOR . 'bug65538_003.pem.tmp';\n$cacertFile = 'bug65538_003-ca.pem';\n$cacertPhar = __DIR__ . DIRECTORY_SEPARATOR . 'bug65538_003-ca.phar.tmp';\n$serverCode = <<<'CODE'\n    $serverUri = \"ssl://127.0.0.1:64321\";\n    $serverFlags = STREAM_SERVER_BIND | STREAM_SERVER_LISTEN;\n    $serverCtx = stream_context_create(['ssl' => [\n        'local_cert' => '%s',\n    ]]);\n    $server = stream_socket_server($serverUri, $errno, $errstr, $serverFlags, $serverCtx);\n    phpt_notify();\n    $client = @stream_socket_accept($server);\n    if ($client) {\n        $in = '';\n        while (!preg_match('/\\r?\\n\\r?\\n/', $in)) {\n            $in .= fread($client, 2048);\n        }\n        $response = \"HTTP/1.0 200 OK\\r\\n\"\n                  . \"Content-Type: text/plain\\r\\n\"\n                  . \"Content-Length: 12\\r\\n\"\n                  . \"Connection: close\\r\\n\"\n                  . \"\\r\\n\"\n                  . \"Hello World!\";\n        fwrite($client, $response);\n        fclose($client);\n    }\nCODE;\n$serverCode = sprintf($serverCode, $certFile);\n$peerName = 'bug65538_003';\n$clientCode = <<<'CODE'\n    $serverUri = \"https://127.0.0.1:64321/\";\n    $clientCtx = stream_context_create(['ssl' => [\n        'cafile' => 'phar://%s/%s',\n        'peer_name' => '%s',\n    ]]);\n    phpt_wait();\n    $html = file_get_contents($serverUri, false, $clientCtx);\n    var_dump($html);\nCODE;\n$clientCode = sprintf($clientCode, $cacertPhar, $cacertFile, $peerName);\ninclude 'CertificateGenerator.inc';\n$certificateGenerator = new CertificateGenerator();\n$certificateGenerator->saveNewCertAsFileWithKey($peerName, $certFile);\n$phar = new Phar($cacertPhar);\n$phar->addFromString($cacertFile, $certificateGenerator->getCaCert());\ninclude 'ServerClientTestCase.inc';\nServerClientTestCase::getInstance()->run($clientCode, $serverCode);\n?>")).toMatchSnapshot();
  });
});
