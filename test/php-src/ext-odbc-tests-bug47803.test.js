// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/odbc/tests/bug47803.phpt
  it("Bug #47803 Executing prepared statements is successful only for the first two statements", function () {
    expect(parser.parseCode("<?php\ninclude __DIR__ . \"/config.inc\";\n$create_table = \"CREATE TABLE FOO(\n        [PAR_ID] [int] NOT NULL,\n        [PAR_INT] [int] NULL,\n        [PAR_CHR] [varchar](500) NULL\n)\";\n$inserts = \"INSERT INTO FOO\n           ([PAR_ID]\n           ,[PAR_INT]\n           ,[PAR_CHR])\n     VALUES\n        (1,14,''),\n        (2,30,''),\n        (3,7,''),\n        (4,7,''),\n        (5,0,''),\n        (6,0,''),\n        (7,20130901,''),\n        (8,20140201,''),\n        (9,20140201,''),\n        (10,20140620,''),\n        (11,221,'')\";\ndate_default_timezone_set('Europe/Warsaw');\n$link = odbc_connect($dsn, $user, $pass);\nodbc_exec($link, 'CREATE DATABASE odbcTEST');\nodbc_exec($link, $create_table);\nodbc_exec($link, $inserts);\n$upd_params = array(\n    array('id'=>1, 'name'=>'test 1'),\n    array('id'=>2, 'name'=>'test 2'),\n    array('id'=>3, 'name'=>'test 3'),\n    array('id'=>4, 'name'=>'test 4'),\n    array('id'=>5, 'name'=>'test 5'),\n    array('id'=>10, 'name'=>'test 10'),\n    array('id'=>9, 'name'=>'test 9'),\n    array('id'=>8, 'name'=>'test 8'),\n    array('id'=>7, 'name'=>'test 7'),\n    array('id'=>6, 'name'=>'test 6'),\n);\n$sql = \"UPDATE FOO\n     SET [PAR_CHR] = ?\n     WHERE [PAR_ID] = ?\";\n$result = odbc_prepare($link, $sql);\nif (!$result) {\n    print ('[sql] prep: '.$sql);\n    goto out;\n}\nforeach ($upd_params as &$k) {\n    if(!odbc_execute($result, array($k['name'], $k['id']))) {\n        print ('[sql] exec: '.\"array({$k['name']}, {$k['id']})\");\n        goto out;\n    }\n}\nodbc_free_result($result);\n$sql = \"SELECT * FROM FOO WHERE [PAR_ID] = ?\";\n$result = odbc_prepare($link, $sql);\nif (!$result) {\n    print ('[sql] prep: '.$sql);\n    goto out;\n}\nforeach ($upd_params as $k) {\n    if(!odbc_execute($result, array($k['id']))) {\n        print ('[sql] exec: '.\"array({$k['id']})\");\n        goto out;\n    }\n    while (($r = odbc_fetch_array($result)) !== false) {\n        var_dump($r);\n    }\n}\nout:\nif ($result) odbc_free_result($result);\nodbc_close($link);\n?>")).toMatchSnapshot();
  });
});
