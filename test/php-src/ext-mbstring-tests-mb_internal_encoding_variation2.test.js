// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mbstring/tests/mb_internal_encoding_variation2.phpt
  it("Test mb_internal_encoding() function : usage variations - Test different encodings", function () {
    expect(parser.parseCode("<?php\n/*\n * Test all listed encoding types from php.net to check all are known to function\n * NB: The strings passed are *NOT* necessarily encoded in the encoding passed to the function.\n * This test is purely to see whether the function recognises the encoding.\n */\necho \"*** Testing mb_internal_encoding() : usage variations ***\\n\";\n$encoding = array('UCS-4',\t\t\t/*1*/\n                  'UCS-4BE',\n                  'UCS-4LE',\n                  'UCS-2',\n                  'UCS-2BE',\t\t/*5*/\n                  'UCS-2LE',\n                  'UTF-32',\n                  'UTF-32BE',\n                  'UTF-32LE',\n                  'UTF-16',\t\t\t/*10*/\n                  'UTF-16BE',\n                  'UTF-16LE',\n                  'UTF-7',\n                  'UTF7-IMAP',\n                  'UTF-8',\t\t\t/*15*/\n                  'ASCII',\n                  'EUC-JP',\n                  'SJIS',\n                  'eucJP-win',\n                  'SJIS-win',\t\t/*20*/\n                  'ISO-2022-JP',\n                  'JIS',\n                  'ISO-8859-1',\n                  'ISO-8859-2',\n                  'ISO-8859-3',\t\t/*25*/\n                  'ISO-8859-4',\n                  'ISO-8859-5',\n                  'ISO-8859-6',\n                  'ISO-8859-7',\n                  'ISO-8859-8',\t\t/*30*/\n                  'ISO-8859-9',\n                  'ISO-8859-10',\n                  'ISO-8859-13',\n                  'ISO-8859-14',\n                  'ISO-8859-15',\t/*35*/\n                  'BASE64',\t\t\t/*40*/\n                  'HTML-ENTITIES',\n                  '7bit',\n                  '8bit',\n                  'EUC-CN',\n                  'CP936',\t\t\t/*45*/\n                  'HZ',\n                  'EUC-TW',\n                  'CP950',\n                  'BIG-5',\n                  'EUC-KR',\t\t\t/*50*/\n                  'UHC',\n                  'ISO-2022-KR',\n                  'Windows-1251',\n                  'Windows-1252',\n                  'CP866',\t\t\t/*55*/\n                  'KOI8-R');\t\t/*56*/\n$iterator = 1;\nforeach($encoding as $enc) {\n    echo \"\\n-- Iteration $iterator --\\n\";\n    var_dump(mb_internal_encoding());\n    var_dump(mb_internal_encoding($enc));\n    var_dump(mb_internal_encoding());\n    $iterator++;\n}\necho \"Done\";\n?>")).toMatchSnapshot();
  });
});
