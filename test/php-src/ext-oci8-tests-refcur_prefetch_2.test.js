// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/oci8/tests/refcur_prefetch_2.phpt
  it("Prefetch with REF cursor. Test No 2", function () {
    expect(parser.parseCode("<?php\nrequire __DIR__.\"/connect.inc\";\n// Creates the necessary package and tables.\n$stmtarray = array(\n       \"DROP TABLE refcurtest\",\n       \"CREATE TABLE refcurtest (c1 NUMBER, c2 VARCHAR(20))\",\n           \"CREATE or REPLACE PACKAGE refcurpkg is\n           type refcursortype is ref cursor;\n           procedure open_ref_cur(cur1 out refcursortype);\n           procedure fetch_ref_cur(cur1 in refcursortype, c1 out number,c2 out varchar2);\n           end refcurpkg;\",\n          \"CREATE or REPLACE PACKAGE body refcurpkg is\n        procedure open_ref_cur(cur1 out refcursortype) is\n              begin\n            open cur1 for select * from refcurtest order by c1;\n          end open_ref_cur;\n         procedure fetch_ref_cur(cur1 in refcursortype, c1 out number,\n        c2 out varchar2) is\n          begin\n            fetch cur1 into c1,c2;\n        end fetch_ref_cur;\n         end refcurpkg;\"\n    );\noci8_test_sql_execute($c, $stmtarray);\n// Insert 500 rows into the table.\n$insert_sql = \"INSERT INTO refcurtest (c1, c2) VALUES (:c1,:c2)\";\nif (!($s = oci_parse($c, $insert_sql))) {\n    die(\"oci_parse(insert) failed!\\n\");\n}\nfor ($i = 0; $i <= 500; $i++) {\n    $val2 = 'test'.$i;\n    oci_bind_by_name($s,':c1',$i);\n    oci_bind_by_name($s,':c2',$val2);\n    if (!oci_execute($s)) {\n        die(\"oci_execute(insert) failed!\\n\");\n    }\n}\n// Steps to Fetch from PHP . For every sub-test,the cursor is bound and then executed.\n$sql1 = \"begin refcurpkg.open_ref_cur(:cur1); end;\";\n$s1 = oci_parse($c,$sql1);\n$cur1 = oci_new_cursor($c);\nif (!oci_bind_by_name($s1,\":cur1\",$cur1,-1,SQLT_RSET)) {\n    die(\"oci_bind_by_name(sql1) failed!\\n\");\n}\n// Steps to Fetch from PL/SQL . For every sub-test,the cursor is bound and then executed.\n$sql2 = \"begin refcurpkg.fetch_ref_cur(:curs1,:c1,:c2); end;\";\n$s2 = oci_parse($c,$sql2);\nif (!oci_bind_by_name($s2, \":curs1\", $cur1, -1, SQLT_RSET)) {\n    die(\"oci_bind_by_name(sql2) failed!\\n\");\n}\nif (!oci_bind_by_name($s2, \":c1\", $c1, -1, SQLT_INT)) {\n    die(\"oci_bind_by_name(sql2) failed!\\n\");\n}\nif (!oci_bind_by_name($s2, \":c2\", $c2, 20, SQLT_CHR)) {\n    die(\"oci_bind_by_name(sql2) failed!\\n\");\n}\necho \"------Test 1- Check Roundtrips with  prefetch 0 and 5 -----------\\n\";\noci_execute($s1);\noci_execute($cur1);\n$initial_rt = print_roundtrips($c);\noci_set_prefetch($cur1,0);\nfor ($i = 0;$i<5;$i++) {\n    var_dump(oci_fetch_row($cur1));\n}\n$cnt = (print_roundtrips($c) - $initial_rt);\necho \"Number of roundtrips made with prefetch count 0 for 5 rows is  $cnt\\n\";\n$initial_rt = print_roundtrips($c);\noci_set_prefetch($cur1,5);\nfor ($i = 0;$i<5;$i++) {\n    var_dump(oci_fetch_row($cur1));\n}\n$cnt = (print_roundtrips($c) - $initial_rt );\necho \"Number of roundtrips made with prefetch count 5 for 5 rows is  $cnt\\n\";\necho \"------Test 2 - Set Prefetch before PL/SQL fetch ----------\\n\";\n// Fetch from PHP\n$cur1 = oci_new_cursor($c);\nif (!oci_bind_by_name($s1,\":cur1\",$cur1,-1,SQLT_RSET)) {\n    die(\"oci_bind_by_name(sql1) failed!\\n\");\n}\necho \"Fetch Row from PHP\\n\";\noci_execute($s1);\noci_execute($cur1);\nvar_dump(oci_fetch_row($cur1));\noci_set_prefetch($cur1,5);\n// Fetch from PL/SQL\nif (!oci_bind_by_name($s2,\":curs1\",$cur1,-1,SQLT_RSET)) {\n    die(\"oci_bind_by_name(sql2) failed!\\n\");\n}\noci_execute($s2);\necho \"Fetch Row from PL/SQL\\n\";\nvar_dump($c1);\nvar_dump($c2);\nfunction  print_roundtrips($c) {\n    $sql_stmt = \"select value from v\\$mystat a,v\\$statname c where\n     a.statistic#=c.statistic# and c.name='SQL*Net roundtrips to/from client'\";\n    $s = oci_parse($c,$sql_stmt);\n    oci_define_by_name($s,\"VALUE\",$value);\n    oci_execute($s);\n    oci_fetch($s);\n    return $value;\n}\n// Clean up  here\n$stmtarray = array(\n    \"drop package refcurpkg\",\n    \"drop table refcurtest\"\n);\noci8_test_sql_execute($c, $stmtarray);\necho \"Done\\n\";\n?>")).toMatchSnapshot();
  });
});
