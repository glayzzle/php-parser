// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/intl/tests/msgfmt_fail2.phpt
  it("msgfmt creation failures icu >= 4.8", function () {
    expect(parser.parseCode("<?php\nfunction err($fmt) {\n    if(!$fmt) {\n        echo var_export(intl_get_error_message(), true).\"\\n\";\n    }\n}\nfunction print_exception($e) {\n    echo \"\\n\" . get_class($e) . \": \" . $e->getMessage()\n       . \" in \" . $e->getFile() . \" on line \" . $e->getLine() . \"\\n\";\n}\nfunction crt($t, $l, $s) {\n    switch(true) {\n        case $t == \"O\":\n            try {\n                return new MessageFormatter($l, $s);\n            } catch (Throwable $e) {\n                print_exception($e);\n                return null;\n            }\n            break;\n        case $t == \"C\":\n            try {\n                return MessageFormatter::create($l, $s);\n            } catch (Throwable $e) {\n                print_exception($e);\n                return null;\n            }\n            break;\n        case $t == \"P\":\n            try {\n                return msgfmt_create($l, $s);\n            } catch (Throwable $e) {\n                print_exception($e);\n                return null;\n            }\n            break;\n    }\n}\n$args = array(\n    array(null, null),\n    array(\"whatever\", \"{0,whatever}\"),\n    array(array(), array()),\n    array(\"en\", \"{0,choice}\"),\n    array(\"fr\", \"{0,\"),\n    array(\"en_US\", \"\\xD0\"),\n);\ntry {\n    $fmt = new MessageFormatter();\n} catch (TypeError $e) {\n    print_exception($e);\n    $fmt = null;\n}\nerr($fmt);\ntry {\n    $fmt = msgfmt_create();\n} catch (TypeError $e) {\n    print_exception($e);\n    $fmt = null;\n}\nerr($fmt);\ntry {\n    $fmt = MessageFormatter::create();\n} catch (TypeError $e) {\n    print_exception($e);\n    $fmt = null;\n}\nerr($fmt);\ntry {\n    $fmt = new MessageFormatter('en');\n} catch (TypeError $e) {\n    print_exception($e);\n    $fmt = null;\n}\nerr($fmt);\ntry {\n    $fmt = msgfmt_create('en');\n} catch (TypeError $e) {\n    print_exception($e);\n    $fmt = null;\n}\nerr($fmt);\ntry {\n    $fmt = MessageFormatter::create('en');\n} catch (TypeError $e) {\n    print_exception($e);\n    $fmt = null;\n}\nerr($fmt);\nforeach($args as $arg) {\n    $fmt = crt(\"O\", $arg[0], $arg[1]);\n    err($fmt);\n    $fmt = crt(\"C\", $arg[0], $arg[1]);\n    err($fmt);\n    $fmt = crt(\"P\", $arg[0], $arg[1]);\n    err($fmt);\n}\n?>")).toMatchSnapshot();
  });
});
