// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/array/array_search_variation4.phpt
  it("Test array_search() function : usage variations - haystack as resource/multi dimensional array", function () {
    expect(parser.parseCode("<?php\n/* checking for Resources */\necho \"*** Testing resource type with array_search() ***\\n\";\n//file type resource\n$file_handle = fopen(__FILE__, \"r\");\n//directory type resource\n$dir_handle = opendir( __DIR__ );\n//store resources in array for comparison.\n$resources = array($file_handle, $dir_handle);\n// search for resource type in the resource array\nvar_dump( array_search($file_handle, $resources, true) );\n//checking for (int) type resource\nvar_dump( array_search((int)$dir_handle, $resources, true) );\n/* Miscellenous input check  */\necho \"\\n*** Testing miscelleneos inputs with array_search() ***\\n\";\n//matching \"Good\" in array(0,\"hello\"), result:true in loose type check\nvar_dump( array_search(\"Good\", array(0,\"hello\")) );\n//false in strict mode\nvar_dump( array_search(\"Good\", array(0,\"hello\"), TRUE) );\n//matching integer 0 in array(\"this\"), result:true in loose type check\nvar_dump( array_search(0, array(\"this\")) );\n// false in strict mode\nvar_dump( array_search(0, array(\"this\")),TRUE );\n//matching string \"this\" in array(0), result:true in loose type check\nvar_dump( array_search(\"this\", array(0)) );\n// false in stric mode\nvar_dump( array_search(\"this\", array(0), TRUE) );\n//checking for type FALSE in multidimensional array with loose checking, result:false in loose type check\nvar_dump( array_search(FALSE,\n                   array(\"a\"=> TRUE, \"b\"=> TRUE,\n                         array(\"c\"=> TRUE, \"d\"=>TRUE)\n                        )\n                  )\n        );\n//matching string having integer in beginning, result:true in loose type check\nvar_dump( array_search('123abc', array(123)) );\nvar_dump( array_search('123abc', array(123), TRUE) ); // false in strict mode\necho \"Done\\n\";\n?>")).toMatchSnapshot();
  });
});
