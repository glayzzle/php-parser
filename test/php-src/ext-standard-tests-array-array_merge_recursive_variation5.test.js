// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/array/array_merge_recursive_variation5.phpt
  it("Test array_merge_recursive() function : usage variations - associative array with different values", function () {
    expect(parser.parseCode("<?php\n/*\n * Testing the functionality of array_merge_recursive() by passing different\n * associative arrays having different values to $arr1 argument.\n*/\necho \"*** Testing array_merge_recursive() : assoc. array with diff. values to \\$arr1 argument ***\\n\";\n// get an unset variable\n$unset_var = 10;\nunset ($unset_var);\n// get a resource variable\n$fp = fopen(__FILE__, \"r\");\n// get a class\nclass classA\n{\n  public function __toString(){\n    return \"Class A object\";\n  }\n}\n// get a heredoc string\n$heredoc = <<<EOT\nHello world\nEOT;\n// different associative arrays to be passed to $arr1 argument\n$arrays = array (\n// arrays with integer values\n/*1*/  array('0' => 0, '1' => 0),\n       array(\"one\" => 1, 'two' => 2, \"three\" => 1, 4 => 1),\n       // arrays with float values\n/*3*/  array(\"f1\" => 2.3333, \"f2\" => 2.3333, \"f3\" => array(1.1, 2.22)),\n       array(\"f1\" => 1.2, 'f2' => 3.33, 3 => 4.89999922839999, 'f4' => array(1.2, 'f4' => 1.2)),\n       // arrays with string values\n/*5*/  array(111 => \"\\tHello\", \"array\" => \"col\\tor\", 2 => \"\\v\\fworld\", 3 =>  \"\\tHello\"),\n       array(111 => '\\tHello', 'array' => 'col\\tor', 2 => '\\v\\fworld', 3 =>  '\\tHello'),\n       array(1 => \"hello\", \"string\" => $heredoc, $heredoc),\n       // array with object, unset variable and resource variable\n/*8*/  array(11 => new classA(), \"string\" => @$unset_var, \"resource\" => $fp, new classA(), $fp),\n);\n// initialise the second array\n$arr2 = array( 1 => \"one\", 2, \"string\" => \"hello\", \"array\" => array(\"a\", \"b\", \"c\"));\n// loop through each sub array of $arrays and check the behavior of array_merge_recursive()\n$iterator = 1;\nforeach($arrays as $arr1) {\n  echo \"-- Iteration $iterator --\\n\";\n  // with default argument\n  echo \"-- With default argument --\\n\";\n  var_dump( array_merge_recursive($arr1) );\n  // with more arguments\n  echo \"-- With more arguments --\\n\";\n  var_dump( array_merge_recursive($arr1, $arr2) );\n  $iterator++;\n}\n// close the file resource used\nfclose($fp);\necho \"Done\";\n?>")).toMatchSnapshot();
  });
});
