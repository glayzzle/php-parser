// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/mysqli_autocommit_oo.phpt
  it("mysqli->autocommit()", function () {
    expect(parser.parseCode("<?php\n    require_once(\"connect.inc\");\n    if (!$mysqli = new my_mysqli($host, $user, $passwd, $db, $port, $socket)) {\n        printf(\"[001] Cannot connect to the server using host=%s, user=%s, passwd=***, dbname=%s, port=%s, socket=%s\\n\",\n            $host, $user, $db, $port, $socket);\n    }\n    if (!is_bool($tmp = $mysqli->autocommit(true)))\n        printf(\"[002] Expecting boolean/any, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (!$mysqli->query('SET AUTOCOMMIT = 0'))\n        printf(\"[003] [%d] %s\\n\", $mysqli->errno, $mysqli->error);\n    if (!$res = $mysqli->query('SELECT @@autocommit as auto_commit'))\n        printf(\"[004] [%d] %s\\n\", $mysqli->errno, $mysqli->error);\n    $tmp = $res->fetch_assoc();\n    $res->free_result();\n    if ($tmp['auto_commit'])\n        printf(\"[005] Cannot turn off autocommit\\n\");\n    if (true !== ($tmp = $mysqli->autocommit( true)))\n        printf(\"[006] Expecting true, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (!$res = $mysqli->query('SELECT @@autocommit as auto_commit'))\n        printf(\"[007] [%d] %s\\n\", $mysqli->errno, $mysqli->error);\n    $tmp = $res->fetch_assoc();\n    $res->free_result();\n    if (!$tmp['auto_commit'])\n        printf(\"[008] Cannot turn on autocommit\\n\");\n    if (!$mysqli->query('DROP TABLE IF EXISTS test'))\n        printf(\"[009] [%d] %s\\n\", $mysqli->errno, $mysqli->error);\n    if (!$mysqli->query('CREATE TABLE test(id INT) ENGINE = InnoDB')) {\n        printf(\"[010] Cannot create test table, [%d] %s\\n\", $mysqli->errno, $mysqli->error);\n    }\n    if (!$mysqli->query('INSERT INTO test(id) VALUES (1)'))\n        printf(\"[011] [%d] %s\\n\", $mysqli->errno, $mysqli->error);\n    if (!$mysqli->query('ROLLBACK'))\n        printf(\"[012] [%d] %s\\n\", $mysqli->errno, $mysqli->error);\n    if (!$res = $mysqli->query('SELECT COUNT(*) AS num FROM test'))\n        printf(\"[013] [%d] %s\\n\", $mysqli->errno, $mysqli->error);\n    if ((!$tmp = $res->fetch_assoc()) || (1 != $tmp['num']))\n        printf(\"[014] Expecting 1 row in table test, found %d rows. [%d] %s\\n\",\n            $tmp['num'], $mysqli->errno, $mysqli->error);\n    $res->free_result();\n    if (!$mysqli->query('DROP TABLE IF EXISTS test'))\n        printf(\"[015] [%d] %s\\n\", $mysqli->errno, $mysqli->error);\n    if (!$mysqli->query('SET AUTOCOMMIT = 1'))\n        printf(\"[016] [%d] %s\\n\", $mysqli->errno, $mysqli->error);\n    if (!$res = $mysqli->query('SELECT @@autocommit as auto_commit'))\n        printf(\"[017] [%d] %s\\n\", $mysqli->errno, $mysqli->error);\n    $tmp = $res->fetch_assoc();\n    $res->free_result();\n    if (!$tmp['auto_commit'])\n        printf(\"[018] Cannot turn on autocommit\\n\");\n    if (true !== ($tmp = $mysqli->autocommit( false)))\n        printf(\"[019] Expecting true, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (!$mysqli->query('CREATE TABLE test(id INT) ENGINE = InnoDB')) {\n        printf(\"[020] Cannot create test table, [%d] %s\\n\", $mysqli->errno, $mysqli->error);\n    }\n    if (!$mysqli->query('INSERT INTO test(id) VALUES (1)'))\n        printf(\"[021] [%d] %s\\n\", $mysqli->errno, $mysqli->error);\n    if (!$mysqli->query('ROLLBACK'))\n        printf(\"[022] [%d] %s\\n\", $mysqli->errno, $mysqli->error);\n    if (!$res = $mysqli->query('SELECT COUNT(*) AS num FROM test'))\n        printf(\"[023] [%d] %s\\n\", $mysqli->errno, $mysqli->error);\n    $tmp = $res->fetch_assoc();\n    if (0 != $tmp['num'])\n        printf(\"[24] Expecting 0 rows in table test, found %d rows\\n\", $tmp['num']);\n    $res->free_result();\n    if (!$mysqli->query('INSERT INTO test(id) VALUES (1)'))\n        printf(\"[025] [%d] %s\\n\", $mysqli->errno, $mysqli->error);\n    if (!$mysqli->query('COMMIT'))\n        printf(\"[025] [%d] %s\\n\", $mysqli->errno, $mysqli->error);\n    if (!$res = $mysqli->query('SELECT COUNT(*) AS num FROM test'))\n        printf(\"[027] [%d] %s\\n\", $mysqli->errno, $mysqli->error);\n    if ((!$tmp = $res->fetch_assoc()) || (1 != $tmp['num']))\n        printf(\"[028] Expecting 1 row in table test, found %d rows. [%d] %s\\n\",\n            $tmp['num'], $mysqli->errno, $mysqli->error);\n    $res->free_result();\n    if (!$mysqli->query('DROP TABLE IF EXISTS test'))\n        printf(\"[029] [%d] %s\\n\", $mysqli->errno, $mysqli->error);\n    $mysqli->close();\n    try {\n        $mysqli->autocommit(false);\n    } catch (Error $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    print \"done!\";\n?>")).toMatchSnapshot();
  });
});
