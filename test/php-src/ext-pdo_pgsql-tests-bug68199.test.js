// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/pdo_pgsql/tests/bug68199.phpt
  it("Bug #68199 (PDO::pgsqlGetNotify doesn't support NOTIFY payloads)", function () {
    expect(parser.parseCode("<?php\nrequire __DIR__ . '/../../../ext/pdo/tests/pdo_test.inc';\n$db = PDOTest::test_factory(__DIR__ . '/common.phpt');\n$db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n// pgsqlGetPid should return something meaningful\n$pid = $db->pgsqlGetPid();\nvar_dump($pid > 0);\n// No listen, no notifies\nvar_dump($db->pgsqlGetNotify());\n// Listen started, no notifies\n$db->exec(\"LISTEN notifies_phpt\");\nvar_dump($db->pgsqlGetNotify());\n// No parameters with payload, use default PDO::FETCH_NUM\n$db->setAttribute(PDO::ATTR_DEFAULT_FETCH_MODE, PDO::FETCH_NUM);\n$db->exec(\"NOTIFY notifies_phpt, 'payload'\");\n$notify = $db->pgsqlGetNotify();\nvar_dump(count($notify));\nvar_dump($notify[0]);\nvar_dump($notify[1] == $pid);\nvar_dump($notify[2]);\n// No parameters with payload, use default PDO::FETCH_ASSOC\n$db->setAttribute(PDO::ATTR_DEFAULT_FETCH_MODE, PDO::FETCH_ASSOC);\n$db->exec(\"NOTIFY notifies_phpt, 'payload'\");\n$notify = $db->pgsqlGetNotify();\nvar_dump(count($notify));\nvar_dump($notify['message']);\nvar_dump($notify['pid'] == $pid);\nvar_dump($notify['payload']);\n// Test PDO::FETCH_NUM as parameter with payload\n$db->exec(\"NOTIFY notifies_phpt, 'payload'\");\n$notify = $db->pgsqlGetNotify(PDO::FETCH_NUM);\nvar_dump(count($notify));\nvar_dump($notify[0]);\nvar_dump($notify[1] == $pid);\nvar_dump($notify[2]);\n// Test PDO::FETCH_ASSOC as parameter with payload\n$db->exec(\"NOTIFY notifies_phpt, 'payload'\");\n$notify = $db->pgsqlGetNotify(PDO::FETCH_ASSOC);\nvar_dump(count($notify));\nvar_dump($notify['message']);\nvar_dump($notify['pid'] == $pid);\nvar_dump($notify['payload']);\n// Test PDO::FETCH_BOTH as parameter with payload\n$db->exec(\"NOTIFY notifies_phpt, 'payload'\");\n$notify = $db->pgsqlGetNotify(PDO::FETCH_BOTH);\nvar_dump(count($notify));\nvar_dump($notify['message']);\nvar_dump($notify['pid'] == $pid);\nvar_dump($notify['payload']);\nvar_dump($notify[0]);\nvar_dump($notify[1] == $pid);\nvar_dump($notify[2]);\n// Verify that there are no notifies queued\nvar_dump($db->pgsqlGetNotify());\n?>")).toMatchSnapshot();
  });
});
