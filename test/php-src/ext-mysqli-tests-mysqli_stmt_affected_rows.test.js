// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/mysqli_stmt_affected_rows.phpt
  it("mysqli_stmt_affected_rows()", function () {
    expect(parser.parseCode("<?php\n    require_once(\"connect.inc\");\n    if (!$link = my_mysqli_connect($host, $user, $passwd, $db, $port, $socket)) {\n        printf(\"Cannot connect to the server using host=%s, user=%s, passwd=***, dbname=%s, port=%s, socket=%s\\n\",\n            $host, $user, $db, $port, $socket);\n    }\n    $stmt = mysqli_stmt_init($link);\n    if (!mysqli_stmt_prepare($stmt, 'DROP TABLE IF EXISTS test') ||\n        !mysqli_stmt_execute($stmt)) {\n        printf(\"[003] Failed to drop old test table: [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    }\n    if (!mysqli_stmt_prepare($stmt, 'CREATE TABLE test(id INT, label CHAR(1), PRIMARY KEY(id)) ENGINE = ' . $engine) ||\n        !mysqli_stmt_execute($stmt)) {\n        printf(\"[004] Failed to create test table: [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    }\n    if (0 !== ($tmp = mysqli_stmt_affected_rows($stmt)))\n        printf(\"[005] Expecting int/0, got %s/'%s'\\n\", gettype($tmp), $tmp);\n    mysqli_stmt_close($stmt);\n    $stmt = mysqli_stmt_init($link);\n    if (!mysqli_stmt_prepare($stmt, \"INSERT INTO test(id, label) VALUES (1, 'a')\") ||\n        !mysqli_stmt_execute($stmt))\n        printf(\"[006] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    mysqli_stmt_close($stmt);\n    $stmt = mysqli_stmt_init($link);\n    if (!mysqli_stmt_prepare($stmt, \"INSERT INTO test(id, label) VALUES (100, 'z')\") ||\n        !mysqli_stmt_execute($stmt))\n        printf(\"[007] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (1 !== ($tmp = mysqli_stmt_affected_rows($stmt)))\n        printf(\"[008] Expecting int/1, got %s/%s\\n\", gettype($tmp), $tmp);\n    mysqli_stmt_close($stmt);\n    $stmt = mysqli_stmt_init($link);\n    if (!mysqli_stmt_prepare($stmt, \"INSERT INTO test(id, label) VALUES (100, 'z')\") ||\n        !mysqli_stmt_execute($stmt))\n        // NOTE: the error message varies with the MySQL Server version, dump only the error code!\n        printf(\"[009] [%d] (error message varies with the MySQL Server version, check the error code)\\n\", mysqli_stmt_errno($stmt));\n    /* an error occurred: affected rows should return -1 */\n    if (-1 !== ($tmp = mysqli_stmt_affected_rows($stmt)))\n        printf(\"[010] Expecting int/0, got %s/%s\\n\", gettype($tmp), $tmp);\n    mysqli_stmt_close($stmt);\n    $stmt = mysqli_stmt_init($link);\n    if (!mysqli_stmt_prepare($stmt, \"INSERT INTO test(id, label) VALUES (1, 'a') ON DUPLICATE KEY UPDATE id = 4\") ||\n        !mysqli_stmt_execute($stmt))\n        printf(\"[011] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (2 !== ($tmp = mysqli_stmt_affected_rows($stmt)))\n        printf(\"[012] Expecting int/2, got %s/%s\\n\", gettype($tmp), $tmp);\n    mysqli_stmt_close($stmt);\n    $stmt = mysqli_stmt_init($link);\n    if (!mysqli_stmt_prepare($stmt, \"INSERT INTO test(id, label) VALUES (2, 'b'), (3, 'c')\") ||\n        !mysqli_stmt_execute($stmt))\n        printf(\"[013] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (2 !== ($tmp = mysqli_stmt_affected_rows($stmt)))\n        printf(\"[014] Expecting int/2, got %s/%s\\n\", gettype($tmp), $tmp);\n    mysqli_stmt_close($stmt);\n    $stmt = mysqli_stmt_init($link);\n    if (!mysqli_stmt_prepare($stmt, \"INSERT IGNORE INTO test(id, label) VALUES (1, 'a')\") ||\n        !mysqli_stmt_execute($stmt))\n        printf(\"[015] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (1 !== ($tmp = mysqli_stmt_affected_rows($stmt)))\n        printf(\"[016] Expecting int/1, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (!($res = mysqli_query($link, \"SELECT count(id) AS num FROM test\")) ||\n        !($tmp = mysqli_fetch_assoc($res)))\n        printf(\"[017] [%d] %s\\n\", mysqli_error($link), mysqli_error($link));\n    $num = (int)$tmp['num'];\n    mysqli_free_result($res);\n    mysqli_stmt_close($stmt);\n    $stmt = mysqli_stmt_init($link);\n    if (!mysqli_stmt_prepare($stmt, \"INSERT INTO test(id, label) SELECT id + 10, label FROM test\") ||\n        !mysqli_stmt_execute($stmt))\n        printf(\"[018] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if ($num !== ($tmp = mysqli_stmt_affected_rows($stmt)))\n        printf(\"[019] Expecting int/%d, got %s/%s\\n\", $num, gettype($tmp), $tmp);\n    mysqli_stmt_close($stmt);\n    $stmt = mysqli_stmt_init($link);\n    if (!mysqli_stmt_prepare($stmt, \"REPLACE INTO test(id, label) values (4, 'd')\") ||\n        !mysqli_stmt_execute($stmt))\n        printf(\"[020] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (2 !== ($tmp = mysqli_stmt_affected_rows($stmt)))\n        printf(\"[021] Expecting int/2, got %s/%s\\n\", gettype($tmp), $tmp);\n    mysqli_stmt_close($stmt);\n    $stmt = mysqli_stmt_init($link);\n    if (!mysqli_stmt_prepare($stmt, \"REPLACE INTO test(id, label) values (5, 'e')\") ||\n        !mysqli_stmt_execute($stmt))\n        printf(\"[022] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (1 !== ($tmp = mysqli_stmt_affected_rows($stmt)))\n        printf(\"[023] Expecting int/1, got %s/%s\\n\", gettype($tmp), $tmp);\n    mysqli_stmt_close($stmt);\n    $stmt = mysqli_stmt_init($link);\n    if (!mysqli_stmt_prepare($stmt, \"UPDATE test SET label = 'a' WHERE id = 2\") ||\n        !mysqli_stmt_execute($stmt))\n        printf(\"[024] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (1 !== ($tmp = mysqli_stmt_affected_rows($stmt)))\n        printf(\"[025] Expecting int/1, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (!mysqli_stmt_prepare($stmt, \"UPDATE test SET label = 'a' WHERE id = 2\") ||\n        !mysqli_stmt_execute($stmt))\n        printf(\"[026] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (0 !== ($tmp = mysqli_stmt_affected_rows($stmt)))\n        printf(\"[027] Expecting int/0, got %s/%s\\n\", gettype($tmp), $tmp);\n    mysqli_stmt_close($stmt);\n    $stmt = mysqli_stmt_init($link);\n    if (!mysqli_stmt_prepare($stmt, \"UPDATE test SET label = 'a' WHERE id = 100\") ||\n        !mysqli_stmt_execute($stmt))\n        printf(\"[028] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (1 !== ($tmp = mysqli_stmt_affected_rows($stmt)))\n        printf(\"[029] Expecting int/1, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (!mysqli_stmt_prepare($stmt, 'SELECT label FROM test WHERE id = 100') ||\n        !mysqli_stmt_execute($stmt))\n        printf(\"[030] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    /* use it like num_rows */\n    /* PS are unbuffered, num_rows cannot determine the row count before all rows have been fetched and/or buffered */\n    if (-1 !== ($tmp = mysqli_stmt_affected_rows($stmt)))\n        printf(\"[031] Expecting int/-1, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (0 !== ($tmp = mysqli_stmt_num_rows($stmt)))\n        printf(\"[032] Expecting int/0, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (!mysqli_stmt_store_result($stmt))\n        printf(\"[033] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (1 !== ($tmp = mysqli_stmt_affected_rows($stmt)))\n        printf(\"[034] Expecting int/0, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (1 !== ($tmp = mysqli_stmt_num_rows($stmt)))\n        printf(\"[035] Expecting int/0, got %s/%s\\n\", gettype($tmp), $tmp);\n    mysqli_stmt_free_result($stmt);\n    mysqli_stmt_close($stmt);\n    $stmt = mysqli_stmt_init($link);\n    if (!mysqli_stmt_prepare($stmt, 'SELECT label FROM test WHERE 1 = 2') ||\n        !mysqli_stmt_execute($stmt))\n        printf(\"[036] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    /* use it like num_rows */\n    if (-1 !== ($tmp = mysqli_stmt_affected_rows($stmt)))\n        printf(\"[037] Expecting int/-1, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (true !== ($tmp = mysqli_stmt_store_result($stmt)))\n        printf(\"[038] Expecting boolean/true, got %s\\%s\\n\", gettype($tmp), $tmp);\n    if (0 !== ($tmp = mysqli_stmt_num_rows($stmt)))\n        printf(\"[039] Expecting int/0, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (0 !== ($tmp = mysqli_stmt_affected_rows($stmt)))\n        printf(\"[040] Expecting int/0, got %s/%s\\n\", gettype($tmp), $tmp);\n    /* try to use stmt_affected_rows like stmt_num_rows */\n    /* stmt_affected_rows is not really meant for SELECT! */\n    if (mysqli_stmt_prepare($stmt, 'SELECT unknown_column FROM this_table_does_not_exist') ||\n        mysqli_stmt_execute($stmt))\n        printf(\"[041] Expecting SELECT statement to fail on purpose\\n\");\n    if (-1 !== ($tmp = mysqli_stmt_affected_rows($stmt)))\n        printf(\"[042] Expecting int/-1, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (true !== ($tmp = mysqli_stmt_store_result($stmt)))\n        printf(\"[043] Expecting boolean/true, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (0 !== ($tmp = mysqli_stmt_num_rows($stmt)))\n        printf(\"[044] Expecting int/0, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (-1 !== ($tmp = mysqli_stmt_affected_rows($stmt)))\n        printf(\"[045] Expecting int/-1, got %s/%s\\n\", gettype($tmp), $tmp);\n    mysqli_stmt_close($stmt);\n    $stmt = mysqli_stmt_init($link);\n    if (!mysqli_stmt_prepare($stmt, \"DROP TABLE IF EXISTS test\") ||\n        !mysqli_stmt_execute($stmt))\n        printf(\"[046] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    mysqli_stmt_close($stmt);\n    try {\n        mysqli_stmt_affected_rows($stmt);\n    } catch (Error $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    mysqli_close($link);\n    print \"done!\";\n?>")).toMatchSnapshot();
  });
});
