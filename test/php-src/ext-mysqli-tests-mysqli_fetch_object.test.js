// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/mysqli_fetch_object.phpt
  it("mysqli_fetch_object()", function () {
    expect(parser.parseCode("<?php\n    include_once(\"connect.inc\");\n    set_error_handler('handle_catchable_fatal');\n    require('table.inc');\n    if (!$res = mysqli_query($link, \"SELECT id AS ID, label FROM test AS TEST ORDER BY id LIMIT 5\")) {\n        printf(\"[003] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    }\n    $obj = mysqli_fetch_object($res);\n    if (($obj->ID !== \"1\") || ($obj->label !== \"a\") || (get_class($obj) != 'stdClass')) {\n        printf(\"[004] Object seems wrong. [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n        var_dump($obj);\n    }\n    class mysqli_fetch_object_test {\n        public $a = null;\n        public $b = null;\n        public function toString() {\n            var_dump($this);\n        }\n    }\n    $obj = mysqli_fetch_object($res, 'mysqli_fetch_object_test');\n    if (($obj->ID !== \"2\") || ($obj->label !== \"b\") || ($obj->a !== NULL) || ($obj->b !== NULL) || (get_class($obj) != 'mysqli_fetch_object_test')) {\n        printf(\"[005] Object seems wrong. [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n        var_dump($obj);\n    }\n    class mysqli_fetch_object_construct extends mysqli_fetch_object_test {\n        public function __construct($a, $b) {\n            $this->a = $a;\n            $this->b = $b;\n        }\n    }\n    try {\n        $obj = mysqli_fetch_object($res, 'mysqli_fetch_object_construct', array());\n        if (($obj->ID !== \"3\") || ($obj->label !== \"c\") || ($obj->a !== NULL) || ($obj->b !== NULL) || (get_class($obj) != 'mysqli_fetch_object_construct')) {\n            printf(\"[006] Object seems wrong. [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n            var_dump($obj);\n        }\n    } catch (Throwable $e) {\n        echo \"Exception: \" . $e->getMessage() . \"\\n\";\n    }\n    try {\n        $obj = mysqli_fetch_object($res, 'mysqli_fetch_object_construct', array('a'));\n        if (($obj->ID !== \"4\") || ($obj->label !== \"d\") || ($obj->a !== 'a') || ($obj->b !== NULL) || (get_class($obj) != 'mysqli_fetch_object_construct')) {\n            printf(\"[007] Object seems wrong. [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n            var_dump($obj);\n        }\n    } catch (Throwable $e) {\n        echo \"Exception: \" . $e->getMessage() . \"\\n\";\n    }\n    $obj = mysqli_fetch_object($res, 'mysqli_fetch_object_construct', array('a', 'b'));\n    if (($obj->ID !== \"5\") || ($obj->label !== \"e\") || ($obj->a !== 'a') || ($obj->b !== 'b') || (get_class($obj) != 'mysqli_fetch_object_construct')) {\n        printf(\"[008] Object seems wrong. [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n        var_dump($obj);\n    }\n    var_dump(mysqli_fetch_object($res, 'mysqli_fetch_object_construct', array('a', 'b', 'c')));\n    var_dump(mysqli_fetch_object($res));\n    mysqli_free_result($res);\n    if (!$res = mysqli_query($link, \"SELECT id AS ID, label FROM test AS TEST\")) {\n        printf(\"[009] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    }\n    mysqli_free_result($res);\n    try {\n        mysqli_fetch_object($res);\n    } catch (Error $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    if (!$res = mysqli_query($link, \"SELECT id AS ID, label FROM test AS TEST ORDER BY id LIMIT 5\"))\n            printf(\"[010] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    /*\n    TODO\n    I'm using the procedural interface, this should not throw an exception.\n    Also, I did not ask to get exceptions using the mysqli_options()\n    */\n    try {\n        if (false !== ($obj = @mysqli_fetch_object($res, 'mysqli_fetch_object_construct', 'a')))\n            printf(\"[011] Should have failed\\n\");\n    } catch (Error $e) {\n        handle_catchable_fatal($e->getCode(), $e->getMessage(), $e->getFile(), $e->getLine());\n    }\n    mysqli_free_result($res);\n    if (!$res = mysqli_query($link, \"SELECT id AS ID, label FROM test AS TEST ORDER BY id LIMIT 5\"))\n        printf(\"[012] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    class mysqli_fetch_object_private_constructor extends mysqli_fetch_object_test {\n        private function __construct($a, $b) {\n            $this->a = $a;\n            $this->b = $b;\n        }\n    }\n    /*\n    TODO\n    I think we should bail out here. The following line will give a Fatal error: Call to private ... from invalid context\n    var_dump($obj = new mysqli_fetch_object_private_constructor(1, 2));\n    This does not fail.\n    */\n    $obj = mysqli_fetch_object($res, 'mysqli_fetch_object_private_constructor', array('a', 'b'));\n    mysqli_free_result($res);\n    try {\n        var_dump(mysqli_fetch_object($res, 'this_class_does_not_exist'));\n    } catch (TypeError $e) {\n        echo $e->getMessage(), \"\\n\";\n    }\n    mysqli_close($link);\n    print \"done!\";\n?>")).toMatchSnapshot();
  });
});
