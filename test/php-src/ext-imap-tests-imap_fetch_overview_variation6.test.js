// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/imap/tests/imap_fetch_overview_variation6.phpt
  it("Test imap_fetch_overview() function : usage variations - multipart message", function () {
    expect(parser.parseCode("<?php\n/*\n * Pass a multipart message to imap_fetch_overview() to test the contents of returned array\n */\necho \"*** Testing imap_fetch_overview() : usage variations ***\\n\";\nrequire_once __DIR__.'/setup/imap_include.inc';\n$stream_id = setup_test_mailbox('imapfetchoverviewvar6', 0, $mailbox); // setup temp mailbox\ncreate_multipart_message($stream_id, $mailbox);\n// refresh msg numbers\nimap_check($stream_id);\n$msg_no = 1;\n$a = imap_fetch_overview($stream_id, $msg_no);\necho \"\\n--> Object #1\\n\";\ndisplayOverviewFields($a[0]);\n/**\n * Create a multipart message with subparts\n *\n * @param resource $imap_stream\n * @param string $mailbox\n */\nfunction create_multipart_message($imap_stream, $mailbox) {\n    global $users, $domain;\n    $envelope[\"from\"]= \"foo@anywhere.com\";\n    $envelope[\"to\"]  = IMAP_USERS[0] . '@' . IMAP_MAIL_DOMAIN;\n    $envelope[\"subject\"] = \"Test msg 1\";\n    $part1[\"type\"] = TYPEMULTIPART;\n    $part1[\"subtype\"] = \"mixed\";\n    $part2[\"type\"] = TYPETEXT;\n    $part2[\"subtype\"] = \"plain\";\n    $part2[\"description\"] = \"imap_mail_compose() function\";\n    $part2[\"contents.data\"] = \"message 1:xxxxxxxxxxxxxxxxxxxxxxxxxx\";\n    $part3[\"type\"] = TYPETEXT;\n    $part3[\"subtype\"] = \"plain\";\n    $part3[\"description\"] = \"Example\";\n    $part3[\"contents.data\"] = \"message 2:yyyyyyyyyyyyyyyyyyyyyyyyyy\";\n    $file_handle = fopen(__FILE__, 'r+');\n    $file_size = 1;\n    $part4[\"type\"] = TYPEAPPLICATION;\n    $part4[\"encoding\"] = ENCBASE64;\n    $part4[\"subtype\"] = \"octet-stream\";\n    $part4[\"description\"] = 'Test';\n    $part4['disposition.type'] = 'attachment';\n    $part4['disposition'] = array ('filename' => 'Test');\n    $part4['type.parameters'] = array('name' => 'Test');\n    $part4[\"contents.data\"] = base64_encode(fread($file_handle, 1));\n    $body[1] = $part1;\n    $body[2] = $part2;\n    $body[3] = $part3;\n    $body[4] = $part4;\n    $msg = imap_mail_compose($envelope, $body);\n    if (imap_append($imap_stream, $mailbox, $msg) === false) {\n        echo imap_last_error() . \"\\n\";\n        echo \"TEST FAILED : could not append new message to mailbox '$mailbox'\\n\";\n        exit;\n    }\n}\n?>")).toMatchSnapshot();
  });
});
