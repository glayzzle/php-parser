// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/curl/tests/bug77535.phpt
  it("Bug #77535 (Invalid callback, h2 server push)", function () {
    expect(parser.parseCode("<?php\nclass MyHttpClient\n{\n    private $mh;\n    private $curl;\n    public function sendRequest()\n    {\n        if (false === $this->mh = curl_multi_init()) {\n            throw new \\RuntimeException('Unable to create a new cURL multi handle');\n        }\n        $this->addServerPushCallback();\n        $this->curl = curl_init();\n        curl_setopt($this->curl, CURLOPT_PROTOCOLS, CURLPROTO_HTTP | CURLPROTO_HTTPS);\n        curl_setopt($this->curl, CURLOPT_REDIR_PROTOCOLS, CURLPROTO_HTTP | CURLPROTO_HTTPS);\n        curl_setopt($this->curl, CURLOPT_HEADER, false);\n        curl_setopt($this->curl, CURLOPT_RETURNTRANSFER, false);\n        curl_setopt($this->curl, CURLOPT_FAILONERROR, false);\n        curl_setopt($this->curl, CURLOPT_URL, 'https://http2.golang.org/serverpush');\n        curl_setopt($this->curl, CURLOPT_HTTP_VERSION, CURL_HTTP_VERSION_2_0);\n        curl_setopt($this->curl, CURLOPT_HEADERFUNCTION, function ($ch, $data) {\n            return \\strlen($data);\n        });\n        curl_setopt($this->curl, CURLOPT_WRITEFUNCTION, function ($ch, $data) {\n            return \\strlen($data);\n        });\n        curl_multi_add_handle($this->mh, $this->curl);\n        $stillRunning = null;\n        while (true) {\n            do {\n                $mrc = curl_multi_exec($this->mh, $stillRunning);\n            } while (CURLM_CALL_MULTI_PERFORM === $mrc);\n            $info = curl_multi_info_read($this->mh);\n            while (false !== $info && $info['msg'] == CURLMSG_DONE) {\n                if (CURLMSG_DONE !== $info['msg']) {\n                    continue;\n                }\n                echo \"Start handle request.\\n\";\n                return;\n            }\n        }\n    }\n    private function addServerPushCallback(): void\n    {\n        $callback = static function () {\n            return CURL_PUSH_OK;\n        };\n        curl_multi_setopt($this->mh, CURLMOPT_PIPELINING, CURLPIPE_MULTIPLEX);\n        curl_multi_setopt($this->mh, CURLMOPT_PUSHFUNCTION, $callback);\n    }\n}\n$buzz = new MyHttpClient();\n$buzz->sendRequest();\n?>")).toMatchSnapshot();
  });
});
