// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/mysqli_explain_metadata.phpt
  it("EXPLAIN - metadata", function () {
    expect(parser.parseCode("<?php\n    require_once('connect.inc');\n    require_once('table.inc');\n    if (!$res = mysqli_query($link, 'EXPLAIN SELECT t1.*, t2.* FROM test AS t1, test AS t2'))\n        printf(\"[001] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    $num_rows \t= 0;\n    $num_fields \t= 0;\n    $field_names\t= array();\n    if (!$row = mysqli_fetch_assoc($res)) {\n        printf(\"[002] Expecting result but got no data [%d] %s\\n\",\n            mysqli_errno($link), mysqli_error($link));\n    } else {\n        $num_rows++;\n        $num_fields = count($row);\n        foreach ($row as $name => $value)\n            $field_names[$name] = gettype($value);\n    }\n    while ($row = mysqli_fetch_assoc($res))\n        $num_rows++;\n    if (($tmp = mysqli_num_rows($res)) !== $num_rows) {\n        printf(\"[003] Expecting int/%d got %s/%s\\n\",\n            $num_rows, gettype($tmp), $tmp);\n    }\n    if (($tmp = mysqli_field_count($link)) !== $num_fields) {\n        printf(\"[004] Expecting int/%d got %s/%s\\n\",\n            $num_fields, gettype($tmp), $tmp);\n    }\n    $fields = mysqli_fetch_fields($res);\n    if (($tmp = count($fields)) !== $num_fields) {\n        printf(\"[005] Expecting int/%d got %s/%s\\n\",\n            $num_fields, gettype($tmp), $tmp);\n    }\n    foreach ($fields as $k => $field) {\n        $field->max_length = 0;// change it or we will get diff error\n        if (isset($field_names[$field->name])) {\n            unset($field_names[$field->name]);\n        } else {\n            printf(\"[006] Unexpected field '%s', dumping info\\n\");\n            var_dump($field);\n        }\n    }\n    if (!empty($field_names)) {\n        printf(\"[007] Field descriptions missing for the following columns\\n\");\n        var_dump($field_names);\n    }\n    mysqli_free_result($res);\n    $stmt = mysqli_stmt_init($link);\n    /* Depending on your version, the MySQL server migit not support this */\n    if ($stmt->prepare('EXPLAIN SELECT t1.*, t2.* FROM test AS t1, test AS t2') && $stmt->execute()) {\n        if (!mysqli_stmt_store_result($stmt))\n            printf(\"[008] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n        if (!$res_meta = mysqli_stmt_result_metadata($stmt))\n            printf(\"[009] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n        if (($tmp = mysqli_stmt_num_rows($stmt)) !== $num_rows) {\n            printf(\"[010] Expecting int/%d got %s/%s\\n\",\n                $num_rows, gettype($tmp), $tmp);\n        }\n        if (($tmp = mysqli_stmt_field_count($stmt)) !== $num_fields) {\n            printf(\"[011] Expecting int/%d got %s/%s\\n\",\n                $num_fields, gettype($tmp), $tmp);\n        }\n        if (($tmp = mysqli_field_count($link)) !== $num_fields) {\n            printf(\"[013] Expecting int/%d got %s/%s\\n\",\n                $num_fields, gettype($tmp), $tmp);\n        }\n        if (($tmp = $res_meta->field_count) !== $num_fields) {\n            printf(\"[014] Expecting int/%d got %s/%s\\n\",\n                $num_fields, gettype($tmp), $tmp);\n        }\n        $fields_res_meta = mysqli_fetch_fields($res_meta);\n        if (($tmp = count($fields_res_meta)) !== $num_fields)\n            printf(\"[015] Expecting int/%d got %s/%s\\n\",\n                $num_fields, gettype($tmp), $tmp);\n        if ($fields_res_meta != $fields) {\n            printf(\"[016] Prepared Statement metadata differs from normal metadata, dumping\\n\");\n            var_dump($fields_res_meta);\n            var_dump($fields);\n        }\n        if (function_exists('mysqli_stmt_get_result') &&\n            $stmt->prepare('EXPLAIN SELECT t1.*, t2.* FROM test AS t1, test AS t2') &&\n            $stmt->execute()) {\n            if (!$res_stmt = mysqli_stmt_get_result($stmt)) {\n                printf(\"[017] Cannot fetch result from PS [%d] %s\\n\",\n                    mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n            }\n            if (($tmp = mysqli_num_rows($res_stmt)) !== $num_rows) {\n                printf(\"[018] Expecting int/%d got %s/%s\\n\",\n                    $num_rows, gettype($tmp), $tmp);\n            }\n            if ((mysqli_stmt_num_rows($stmt)) !== 0) {\n                printf(\"[019] Expecting int/0 got %s/%s\\n\", gettype($tmp), $tmp);\n            }\n            if (($tmp = mysqli_stmt_field_count($stmt)) !== $num_fields) {\n                printf(\"[020] Expecting int/%d got %s/%s\\n\",\n                    $num_fields, gettype($tmp), $tmp);\n            }\n            if (($tmp = $res_stmt->field_count) !== $num_fields) {\n                printf(\"[021] Expecting int/%d got %s/%s\\n\",\n                    $num_fields, gettype($tmp), $tmp);\n            }\n            $fields_stmt = mysqli_fetch_fields($res_stmt);\n            if (($tmp = count($fields_stmt)) !== $num_fields) {\n                printf(\"[022] Expecting int/%d got %s/%s\\n\",\n                    $num_fields, gettype($tmp), $tmp);\n            }\n            reset($fields);\n            foreach ($fields_stmt as $fields_stmt_val) {\n                $fields_val = current($fields);\n                next($fields);\n                unset($fields_stmt_val->max_length);\n                unset($fields_val->max_length);\n                if ($fields_stmt_val != $fields_val) {\n                    printf(\"[023] PS mysqli_stmt_get_result() metadata seems wrong, dumping\\n\");\n                    var_dump($fields_stmt_val);\n                    var_dump($fields_val);\n                }\n            }\n/*\n            if ($fields_stmt != $fields) {\n                printf(\"[023] PS mysqli_stmt_get_result() metadata seems wrong, dumping\\n\");\n                var_dump($fields_stmt);\n                var_dump($fields);\n            }\n*/\n            mysqli_free_result($res_stmt);\n        }\n    }\n    mysqli_stmt_close($stmt);\n    mysqli_close($link);\n    print \"done!\";\n?>")).toMatchSnapshot();
  });
});
