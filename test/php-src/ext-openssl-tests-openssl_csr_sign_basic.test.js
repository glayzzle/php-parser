// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/openssl/tests/openssl_csr_sign_basic.phpt
  it("openssl_csr_sign() tests", function () {
    expect(parser.parseCode("<?php\n$cert = \"file://\" . __DIR__ . \"/cert.crt\";\n$priv = \"file://\" . __DIR__ . \"/private_rsa_1024.key\";\n$wrong = \"wrong\";\n$pub = \"file://\" . __DIR__ . \"/public.key\";\n$config = __DIR__ . DIRECTORY_SEPARATOR . 'openssl.cnf';\n$config_arg = array('config' => $config);\n$dn = array(\n    \"countryName\" => \"BR\",\n    \"stateOrProvinceName\" => \"Rio Grande do Sul\",\n    \"localityName\" => \"Porto Alegre\",\n    \"commonName\" => \"Henrique do N. Angelo\",\n    \"emailAddress\" => \"hnangelo@php.net\"\n);\n$args = array(\n    \"digest_alg\" => \"sha1\",\n    \"private_key_bits\" => 2048,\n    \"private_key_type\" => OPENSSL_KEYTYPE_DSA,\n    \"encrypt_key\" => true,\n    \"config\" => $config\n);\n$privkey = openssl_pkey_new($config_arg);\n$csr = openssl_csr_new($dn, $privkey, $args);\nvar_dump(openssl_csr_sign($csr, null, $privkey, 365, $args));\nvar_dump(openssl_csr_sign($csr, null, $privkey, 365, $config_arg));\nvar_dump(openssl_csr_sign($csr, $cert, $priv, 365, $config_arg));\nvar_dump(openssl_csr_sign($csr, openssl_x509_read($cert), $priv, 365, $config_arg));\nvar_dump(openssl_csr_sign($csr, $wrong, $privkey, 365));\nvar_dump(openssl_csr_sign($csr, null, $wrong, 365));\nvar_dump(openssl_csr_sign($wrong, null, $privkey, 365));\ntry {\n    openssl_csr_sign(array(), null, $privkey, 365);\n} catch (TypeError $exception) {\n    echo $exception->getMessage() . \"\\n\";\n}\ntry {\n    var_dump(openssl_csr_sign($csr, array(), $privkey, 365));\n} catch (TypeError $exception) {\n    echo $exception->getMessage() . \"\\n\";\n}\ntry {\n    var_dump(openssl_csr_sign($csr, null, array(), 365));\n} catch (ValueError $exception) {\n    echo $exception->getMessage() . \"\\n\";\n}\nvar_dump(openssl_csr_sign($csr, null, $privkey, 365, $config_arg));\n?>")).toMatchSnapshot();
  });
});
