// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // tests/strings/001.phpt
  it("String functions", function () {
    expect(parser.parseCode("<?php\necho \"Testing strtok: \";\n$str = \"testing 1/2\\\\3\";\n$tok1 = strtok($str, \" \");\n$tok2 = strtok(\"/\");\n$tok3 = strtok(\"\\\\\");\n$tok4 = strtok(\".\");\nif ($tok1 != \"testing\") {\n    echo(\"failed 1\\n\");\n} elseif ($tok2 != \"1\") {\n    echo(\"failed 2\\n\");\n} elseif ($tok3 != \"2\") {\n    echo(\"failed 3\\n\");\n} elseif ($tok4 != \"3\") {\n    echo(\"failed 4\\n\");\n} else {\n    echo(\"passed\\n\");\n}\necho \"Testing strstr: \";\n$test = \"This is a test\";\n$found1 = strstr($test, chr(32));\n$found2 = strstr($test, \"a \");\nif ($found1 != \" is a test\") {\n    echo(\"failed 1\\n\");\n} elseif ($found2 != \"a test\") {\n    echo(\"failed 2\\n\");\n} else {\n    echo(\"passed\\n\");\n}\necho \"Testing strrchr: \";\n$test = \"fola fola blakken\";\n$found1 = strrchr($test, \"b\");\n$found2 = strrchr($test, chr(102));\nif ($found1 != \"blakken\") {\n    echo(\"failed 1\\n\");\n} elseif ($found2 != \"fola blakken\") {\n    echo(\"failed 2\\n\");\n}\nelse {\n    echo(\"passed\\n\");\n}\necho \"Testing strtoupper: \";\n$test = \"abCdEfg\";\n$upper = strtoupper($test);\nif ($upper == \"ABCDEFG\") {\n    echo(\"passed\\n\");\n} else {\n    echo(\"failed!\\n\");\n}\necho \"Testing strtolower: \";\n$test = \"ABcDeFG\";\n$lower = strtolower($test);\nif ($lower == \"abcdefg\") {\n    echo(\"passed\\n\");\n} else {\n    echo(\"failed!\\n\");\n}\necho \"Testing substr: \";\n$tests = $ok = 0;\n$string = \"string12345\";\n$tests++; if (substr($string, 2, 10) == \"ring12345\") { $ok++; }\n$tests++; if (substr($string, 4, 7) == \"ng12345\") { $ok++; }\n$tests++; if (substr($string, 4) == \"ng12345\") { $ok++; }\n$tests++; if (substr($string, 10, 2) == \"5\") { $ok++; }\n$tests++; if (substr($string, 6, 0) == \"\") { $ok++; }\n$tests++; if (substr($string, -2, 2) == \"45\") { $ok++; }\n$tests++; if (substr($string, 1, -1) == \"tring1234\") { $ok++; }\n$tests++; if (substr($string, -1, -2) == \"\") { $ok++; }\n$tests++; if (substr($string, -3, -2) == \"3\") { $ok++; }\nif ($tests == $ok) {\n    echo(\"passed\\n\");\n} else {\n    echo(\"failed!\\n\");\n}\n$raw = ' !\"#$%&\\'()*+,-./0123456789:;<=>?'\n     . '@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_'\n     . '`abcdefghijklmnopqrstuvwxyz{|}~'\n     . \"\\0\";\necho \"Testing rawurlencode: \";\n$encoded = rawurlencode($raw);\n$correct = '%20%21%22%23%24%25%26%27%28%29%2A%2B%2C-.%2F0123456789%3A%3B%3C%3D%3E%3F'\n         . '%40ABCDEFGHIJKLMNOPQRSTUVWXYZ%5B%5C%5D%5E_'\n         . '%60abcdefghijklmnopqrstuvwxyz%7B%7C%7D~'\n         . '%00';\nif ($encoded == $correct) {\n    echo(\"passed\\n\");\n} else {\n    echo(\"failed!\\n\");\n}\necho \"Testing rawurldecode: \";\n$decoded = rawurldecode($correct);\nif ($decoded == $raw) {\n    echo(\"passed\\n\");\n} else {\n    echo(\"failed!\\n\");\n}\necho \"Testing urlencode: \";\n$encoded = urlencode($raw);\n$correct = '+%21%22%23%24%25%26%27%28%29%2A%2B%2C-.%2F0123456789%3A%3B%3C%3D%3E%3F'\n         . '%40ABCDEFGHIJKLMNOPQRSTUVWXYZ%5B%5C%5D%5E_'\n         . '%60abcdefghijklmnopqrstuvwxyz%7B%7C%7D%7E'\n         . '%00';\nif ($encoded == $correct) {\n    echo(\"passed\\n\");\n} else {\n    echo(\"failed!\\n\");\n}\necho \"Testing urldecode: \";\n$decoded = urldecode($correct);\nif ($decoded == $raw) {\n    echo(\"passed\\n\");\n} else {\n    echo(\"failed!\\n\");\n}\necho \"Testing quotemeta: \";\n$raw = \"a.\\\\+*?\" . chr(91) . \"^\" . chr(93) . \"b\\$c\";\n$quoted = quotemeta($raw);\nif ($quoted == \"a\\\\.\\\\\\\\\\\\+\\\\*\\\\?\\\\[\\\\^\\\\]b\\\\\\$c\") {\n    echo(\"passed\\n\");\n} else {\n    echo(\"failed!\\n\");\n}\necho \"Testing ufirst: \";\n$str = \"fahrvergnuegen\";\n$uc = ucfirst($str);\nif ($uc == \"Fahrvergnuegen\") {\n    echo(\"passed\\n\");\n} else {\n    echo(\"failed!\\n\");\n}\necho \"Testing strtr: \";\n$str = \"test abcdefgh\";\n$tr = strtr($str, \"def\", \"456\");\nif ($tr == \"t5st abc456gh\") {\n    echo(\"passed\\n\");\n} else {\n    echo(\"failed!\\n\");\n}\necho \"Testing addslashes: \";\n$str = \"\\\"\\\\'\";\n$as = addslashes($str);\nif ($as == \"\\\\\\\"\\\\\\\\\\\\'\") {\n    echo(\"passed\\n\");\n} else {\n    echo(\"failed!\\n\");\n}\necho \"Testing stripslashes: \";\n$str = \"\\$\\\\'\";\n$ss = stripslashes($str);\nif ($ss == \"\\$'\") {\n    echo(\"passed\\n\");\n} else {\n    echo(\"failed!\\n\");\n}\necho \"Testing uniqid(true): \";\n$str = \"prefix\";\n$ui1 = uniqid($str, true);\n$ui2 = uniqid($str, true);\n$len = 29;\nif (strlen($ui1) == strlen($ui2) && strlen($ui1) == $len && $ui1 != $ui2) {\n    echo(\"passed\\n\");\n} else {\n    echo(\"failed!\\n\");\n}\necho \"Testing uniqid(false): \";\n$str = \"prefix\";\n$ui1 = uniqid($str);\nusleep( 1 );\n$ui2 = uniqid($str);\n$len = strncasecmp(PHP_OS, 'CYGWIN', 6) ? 19 : 29;\nif (strlen($ui1) == strlen($ui2) && strlen($ui1) == $len && $ui1 != $ui2) {\n    echo(\"passed\\n\");\n} else {\n    echo(\"failed!\\n\");\n}\n?>")).toMatchSnapshot();
  });
});
