// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/array/array_key_exists_variation1.phpt
  it("Test array_key_exists() function : usage variations - Pass different data types as $key arg", function () {
    expect(parser.parseCode("<?php\n/*\n * Pass different data types as $key argument to array_key_exists() to test behaviour\n */\necho \"*** Testing array_key_exists() : usage variations ***\\n\";\n// Initialise function arguments not being substituted\n$search = array ('zero', 'key' => 'val', 'two', 10 => 'value');\n//get an unset variable\n$unset_var = 10;\nunset ($unset_var);\n// get a class\nclass classA\n{\n  public function __toString() {\n    return \"key\";\n  }\n}\n// heredoc string\n$heredoc = <<<EOT\nkey\nEOT;\n// get a resource variable\n$fp = fopen(__FILE__, \"r\");\n// unexpected values to be passed to $key argument\n$inputs = array(\n       // int data\n/*1*/  0,\n       1,\n       12345,\n       -2345,\n       // null data\n/*10*/ NULL,\n       null,\n       // boolean data\n/*12*/ true,\n       false,\n       TRUE,\n       FALSE,\n       // empty data\n/*16*/ \"\",\n       '',\n       array(),\n       // string data\n/*19*/ \"key\",\n       'key',\n       $heredoc,\n       // object data\n/*22*/ new classA(),\n       // undefined data\n/*23*/ @$undefined_var,\n       // unset data\n/*24*/ @$unset_var,\n       // resource variable\n/*25*/ $fp\n);\n// loop through each element of $inputs to check the behavior of array_key_exists()\n$iterator = 1;\nforeach($inputs as $input) {\n  echo \"\\n-- Iteration $iterator --\\n\";\n  try {\n      var_dump( array_key_exists($input, $search) );\n  } catch (TypeError $exception) {\n      echo $exception->getMessage() . \"\\n\";\n  }\n  $iterator++;\n};\nfclose($fp);\necho \"Done\";\n?>")).toMatchSnapshot();
  });
});
