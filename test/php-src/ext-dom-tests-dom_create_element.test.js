// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/dom/tests/dom_create_element.phpt
  it("Test 1: Creating Elements with and without Namespaces", function () {
    expect(parser.parseCode("<?php\nprint \" 1 DOMDocument::createElement('valid')\\n\";\ntry {\n    $dom = new domDocument;\n    $dom->createElement('valid');\n    print \"valid\\n\";\n} catch (Exception $e) {\n    print $e->getMessage() . \"\\n\";\n}\nprint \" 2 DOMDocument::createElement('-invalid')\\n\";\ntry {\n    $dom = new domDocument;\n    $dom->createElement('-invalid');\n    print \"valid\\n\";\n} catch (Exception $e) {\n    print $e->getMessage() . \"\\n\";\n}\nprint \" 3 DOMDocument::createElement(' ')\\n\";\ntry {\n    $dom = new domDocument;\n    $dom->createElement(' ');\n    print \"valid\\n\";\n} catch (Exception $e) {\n    print $e->getMessage() . \"\\n\";\n}\nprint \" 4 DOMDocument::createElement('prefix:valid')\\n\";\ntry {\n    $dom = new domDocument;\n    $dom->createElement('prefix:valid');\n    print \"valid\\n\";\n} catch (Exception $e) {\n    print $e->getMessage() . \"\\n\";\n}\nprint \" 5 DOMDocument::createElementNS('http://valid.com', 'valid')\\n\";\ntry {\n    $dom = new domDocument;\n    $dom->createElementNS('http://valid.com', 'valid');\n    print \"valid\\n\";\n} catch (Exception $e) {\n    print $e->getMessage() . \"\\n\";\n}\nprint \" 6 DOMDocument::createElementNS('http://valid.com', 'prefix:valid')\\n\";\ntry {\n    $dom = new domDocument;\n    $dom->createElementNS('http://valid.com', 'prefix:valid');\n    print \"valid\\n\";\n} catch (Exception $e) {\n    print $e->getMessage() . \"\\n\";\n}\nprint \" 7 DOMDocument::createElementNS('http://valid.com', '-invalid')\\n\";\ntry {\n    $dom = new domDocument;\n    $dom->createElementNS('http://valid.com', '-invalid');\n    print \"valid\\n\";\n} catch (Exception $e) {\n    print $e->getMessage() . \"\\n\";\n}\nprint \" 8 DOMDocument::createElementNS('http://valid.com', 'prefix:-invalid')\\n\";\ntry {\n    $dom = new domDocument;\n    $dom->createElementNS('http://valid.com', 'prefix:-invalid');\n    print \"valid\\n\";\n} catch (Exception $e) {\n    print $e->getMessage() . \"\\n\";\n}\nprint \" 9 DOMDocument::createElementNS('', 'prefix:invalid')\\n\";\ntry {\n    $dom = new domDocument;\n    $dom->createElementNS('', 'prefix:invalid');\n    print \"valid\\n\";\n} catch (Exception $e) {\n    print $e->getMessage() . \"\\n\";\n}\nprint \"10 DOMDocument::createElementNS('http://valid.com', 'prefix:valid:invalid')\\n\";\ntry {\n    $dom = new domDocument;\n    $dom->createElementNS('http://valid.com', 'prefix:valid:invalid');\n    print \"valid\\n\";\n} catch (Exception $e) {\n    print $e->getMessage() . \"\\n\";\n}\nprint \"11 DOMDocument::createElementNS('http://valid.com', '-prefix:valid')\\n\";\ntry {\n    $dom = new domDocument;\n    $dom->createElementNS('http://valid.com', '-prefix:valid');\n    print \"valid\\n\";\n} catch (Exception $e) {\n    print $e->getMessage() . \"\\n\";\n}\nprint \"12 DOMDocument::createElementNS('-', 'prefix:valid')\\n\";\ntry {\n    $dom = new domDocument;\n    $dom->createElementNS('-', 'prefix:valid');\n    print \"valid\\n\";\n} catch (Exception $e) {\n    print $e->getMessage() . \"\\n\";\n}\nprint \"13 DOMElement::__construct('valid')\\n\";\ntry {\n    $element = new DomElement('valid');\n    print \"valid\\n\";\n} catch (Exception $e) {\n    print $e->getMessage() . \"\\n\";\n}\nprint \"14 DOMElement::__construct('-invalid')\\n\";\ntry {\n    $element = new DomElement('-invalid');\n    print \"valid\\n\";\n} catch (Exception $e) {\n    print $e->getMessage() . \"\\n\";\n}\nprint \"15 DOMElement::__construct(' ')\\n\";\ntry {\n    $element = new DomElement(' ');\n    print \"valid\\n\";\n} catch (Exception $e) {\n    print $e->getMessage() . \"\\n\";\n}\nprint \"16 DOMElement::__construct('prefix:valid')\\n\";\ntry {\n    $element = new DomElement('prefix:valid');\n    print \"valid\\n\";\n} catch (Exception $e) {\n    print $e->getMessage() . \"\\n\";\n}\nprint \"17 DOMElement::__construct('valid', '', 'http://valid.com')\\n\";\ntry {\n    $element = new DomElement('valid', '', 'http://valid.com');\n    print \"valid\\n\";\n} catch (Exception $e) {\n    print $e->getMessage() . \"\\n\";\n}\nprint \"18 DOMElement::__construct('prefix:valid', '', 'http://valid.com')\\n\";\ntry {\n    $element = new DomElement('prefix:valid', '', 'http://valid.com');\n    print \"valid\\n\";\n} catch (Exception $e) {\n    print $e->getMessage() . \"\\n\";\n}\nprint \"19 DOMElement::__construct('-invalid', '', 'http://valid.com')\\n\";\ntry {\n    $element = new DomElement('-invalid', '', 'http://valid.com');\n    print \"valid\\n\";\n} catch (Exception $e) {\n    print $e->getMessage() . \"\\n\";\n}\nprint \"20 DOMElement::__construct('prefix:-invalid', '', 'http://valid.com')\\n\";\ntry {\n    $element = new DomElement('prefix:-invalid', '', 'http://valid.com');\n    print \"valid\\n\";\n} catch (Exception $e) {\n    print $e->getMessage() . \"\\n\";\n}\nprint \"21 DOMElement::__construct('prefix:invalid', '', '')\\n\";\ntry {\n    $element = new DomElement('prefix:invalid', '', '');\n    print \"valid\\n\";\n} catch (Exception $e) {\n    print $e->getMessage() . \"\\n\";\n}\nprint \"22 DOMElement::__construct('prefix:valid:invalid', '', 'http://valid.com')\\n\";\ntry {\n    $element = new DomElement('prefix:valid:invalid', '', 'http://valid.com');\n    print \"valid\\n\";\n} catch (Exception $e) {\n    print $e->getMessage() . \"\\n\";\n}\nprint \"23 DOMElement::__construct('-prefix:valid', '', 'http://valid.com')\\n\";\ntry {\n    $element = new DomElement('-prefix:valid', '', 'http://valid.com');\n    print \"valid\\n\";\n} catch (Exception $e) {\n    print $e->getMessage() . \"\\n\";\n}\nprint \"24 DOMElement::__construct('prefix:valid', '', '-')\\n\";\ntry {\n    $element = new DomElement('prefix:valid', '', '-');\n    print \"valid\\n\";\n} catch (Exception $e) {\n    print $e->getMessage() . \"\\n\";\n}\n/* the qualifiedName has a prefix and the  namespaceURI is null */\nprint \"25 DOMDocument::createElementNS('', 'prefix:valid')\\n\";\ntry {\n    $dom = new domDocument;\n    $dom->createElementNS('', 'prefix:valid');\n    print \"valid\\n\";\n} catch (Exception $e) {\n    print $e->getMessage() . \"\\n\";\n}\n/* the qualifiedName has a prefix that is \"xml\" and the  namespaceURI\n   is different from \"http://www.w3.org/XML/1998/namespace\" [XML Namespaces] */\nprint \"26 DOMDocument::createElementNS('http://wrong.namespaceURI.com', 'xml:valid')\\n\";\ntry {\n    $dom = new domDocument;\n    $dom->createElementNS('http://wrong.namespaceURI.com', 'xml:valid');\n    print \"valid\\n\";\n} catch (Exception $e) {\n    print $e->getMessage() . \"\\n\";\n}\nprint \"27 DOMElement::__construct('xml:valid', '', 'http://wrong.namespaceURI.com')\\n\";\ntry {\n    $element = new DomElement('xml:valid', '', 'http://wrong.namespaceURI.com');\n    print \"valid\\n\";\n} catch (Exception $e) {\n    print $e->getMessage() . \"\\n\";\n}\n/* This is okay because we reuse the xml namespace from the document */\nprint \"28 DOMDocument::createElementNS('http://www.w3.org/XML/1998/namespace', 'xml:valid')\\n\";\ntry {\n    $dom = new domDocument;\n    $dom->createElementNS('http://www.w3.org/XML/1998/namespace', 'xml:valid');\n    print \"valid\\n\";\n} catch (Exception $e) {\n    print $e->getMessage() . \"\\n\";\n}\n/* This isn't because the xml namespace isn't there and we can't create it */\nprint \"29 DOMElement::__construct('xml:valid', '', 'http://www.w3.org/XML/1998/namespace')\\n\";\ntry {\n    $element = new DomElement('xml:valid', '', 'http://www.w3.org/XML/1998/namespace');\n    print \"valid\\n\";\n} catch (Exception $e) {\n    print $e->getMessage() . \"\\n\";\n}\n/* the qualifiedName or its prefix is \"xmlns\" and the  namespaceURI is\n   different from  \"http://www.w3.org/2000/xmlns/\" */\nprint \"30 DOMDocument::createElementNS('http://wrong.namespaceURI.com', 'xmlns:valid')\\n\";\ntry {\n    $dom = new domDocument;\n    $dom->createElementNS('http://wrong.namespaceURI.com', 'xmlns:valid');\n    print \"valid\\n\";\n} catch (Exception $e) {\n    print $e->getMessage() . \"\\n\";\n}\nprint \"31 DOMElement::__construct('xmlns:valid', '', 'http://wrong.namespaceURI.com')\\n\";\ntry {\n    $element = new DomElement('xmlns:valid', '', 'http://wrong.namespaceURI.com');\n    print \"valid\\n\";\n} catch (Exception $e) {\n    print $e->getMessage() . \"\\n\";\n}\nprint \"32 DOMDocument::createElementNS('http://www.w3.org/2000/xmlns/', 'xmlns:valid')\\n\";\ntry {\n    $dom = new domDocument;\n    $dom->createElementNS('http://www.w3.org/2000/xmlns/', 'xmlns:valid');\n    print \"valid\\n\";\n} catch (Exception $e) {\n    print $e->getMessage() . \"\\n\";\n}\nprint \"33 DOMElement::__construct('xmlns:valid', '', 'http://www.w3.org/2000/xmlns/')\\n\";\ntry {\n    $element = new DomElement('xmlns:valid', '', 'http://www.w3.org/2000/xmlns/');\n    print \"valid\\n\";\n} catch (Exception $e) {\n    print $e->getMessage() . \"\\n\";\n}\n/* the namespaceURI is \"http://www.w3.org/2000/xmlns/\" and neither the\n   qualifiedName nor its prefix is \"xmlns\". */\nprint \"34 DOMDocument::createElementNS('http://www.w3.org/2000/xmlns/', 'wrongprefix:valid')\\n\";\ntry {\n    $dom = new domDocument;\n    $dom->createElementNS('http://www.w3.org/2000/xmlns/', 'wrongprefix:valid');\n    print \"valid\\n\";\n} catch (Exception $e) {\n    print $e->getMessage() . \"\\n\";\n}\nprint \"35 DOMElement::__construct('wrongprefix:valid', '', 'http://www.w3.org/2000/xmlns/')\\n\";\ntry {\n    $element = new DomElement('wrongprefix:valid', '', 'http://www.w3.org/2000/xmlns/');\n    print \"valid\\n\";\n} catch (Exception $e) {\n    print $e->getMessage() . \"\\n\";\n}\n?>")).toMatchSnapshot();
  });
});
