// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/strings/htmlspecialchars_decode_variation3.phpt
  it("Test htmlspecialchars_decode() function : usage variations - heredoc strings for 'string' argument", function () {
    expect(parser.parseCode("<?php\n/*\n * testing htmlspecialchars_decode() with various heredoc strings as argument for $string\n*/\necho \"*** Testing htmlspecialchars_decode() : usage variations ***\\n\";\n// empty heredoc string\n$empty_string = <<<EOT\nEOT;\n// Heredoc string with blank line\n$blank_line = <<<EOT\nEOT;\n// heredoc with multiline string\n$multiline_string = <<<EOT\n<html>Roy&#039;s height &gt; Sam&#039;s height\n13 &lt; 25\n1111 &amp; 0000 = 0000\n&quot;This is a double quoted string&quot;\nEOT;\n// heredoc with different whitespaces\n$diff_whitespaces = <<<EOT\n<html>Roy&#039;s height\\r &gt; Sam\\t&#039;s height\n1111\\t\\t &amp; 0000\\v\\v = \\f0000\n&quot; heredoc\\ndouble quoted string. with\\vdifferent\\fwhite\\vspaces&quot;\nEOT;\n// heredoc with numeric values\n$numeric_string = <<<EOT\n<html>11 &lt; 12. 123 string 4567\n&quot;string&quot; 1111\\t &amp; 0000\\t = 0000\\n;\nEOT;\n// heredoc with quote chars & slash\n$quote_char_string = <<<EOT\n<html>&lt; This's a string with quotes:\n\"strings in double quote\" &amp;\n'strings in single quote' &quot;\nthis\\line is &#039;single quoted&#039; /with\\slashes </html>\nEOT;\n$res_heredoc_strings = array(\n  //heredoc strings\n  $empty_string,\n  $blank_line,\n  $multiline_string,\n  $diff_whitespaces,\n  $numeric_string,\n  $quote_char_string\n);\n// loop through $res_heredoc_strings array and check the working on htmlspecialchars_decode()\n$count = 1;\nfor($index =0; $index < count($res_heredoc_strings); $index ++) {\n  echo \"-- Iteration $count --\\n\";\n  var_dump( htmlspecialchars_decode($res_heredoc_strings[$index]) );\n  $count++;\n}\necho \"Done\\n\";\n?>")).toMatchSnapshot();
  });
});
