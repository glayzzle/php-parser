// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/ldap/tests/ldap_add_error.phpt
  it("ldap_add() - Add operation that should fail", function () {
    expect(parser.parseCode("<?php\nrequire \"connect.inc\";\n$link = ldap_connect_and_bind($host, $port, $user, $passwd, $protocol_version);\nvar_dump(ldap_add($link, \"$base\", array()));\n// Invalid DN\nvar_dump(\n    ldap_add($link, \"weirdAttribute=val\", array(\n        \"weirdAttribute\"\t\t\t=> \"val\",\n    )),\n    ldap_error($link),\n    ldap_errno($link)\n);\n// Duplicate entry\nfor ($i = 0; $i < 2; $i++)\n    var_dump(\n    ldap_add($link, \"dc=my-domain,$base\", array(\n      \"objectClass\"\t=> array(\n        \"top\",\n        \"dcObject\",\n        \"organization\"),\n      \"dc\"\t\t\t=> \"my-domain\",\n      \"o\"\t\t\t\t=> \"my-domain\",\n    ))\n    );\nvar_dump(ldap_error($link), ldap_errno($link));\n// Wrong array indexes\ntry {\n    ldap_add($link, \"dc=my-domain2,dc=com\", array(\n        \"objectClass\"\t=> array(\n            0\t=> \"top\",\n            2\t=> \"dcObject\",\n            5\t=> \"organization\"),\n        \"dc\"\t\t\t=> \"my-domain\",\n        \"o\"\t\t\t\t=> \"my-domain\",\n    ));\n    /* Is this correct behaviour to still have \"Already exists\" as error/errno?\n    ,\n    ldap_error($link),\n    ldap_errno($link)\n    */\n} catch (ValueError $exception) {\n    echo $exception->getMessage() . \"\\n\";\n}\n// Invalid attribute\nvar_dump(\n    ldap_add($link, \"$base\", array(\n        \"objectClass\"\t=> array(\n            \"top\",\n            \"dcObject\",\n            \"organization\"),\n        \"dc\"\t\t\t=> \"my-domain\",\n        \"o\"\t\t\t\t=> \"my-domain\",\n        \"weirdAttr\"\t\t=> \"weirdVal\",\n    )),\n    ldap_error($link),\n    ldap_errno($link)\n);\nvar_dump(\n    ldap_add($link, \"$base\", array(array( \"Oops\"\n    )))\n    /* Is this correct behaviour to still have \"Undefined attribute type\" as error/errno?\n    ,\n    ldap_error($link),\n    ldap_errno($link)\n    */\n);\n?>")).toMatchSnapshot();
  });
});
