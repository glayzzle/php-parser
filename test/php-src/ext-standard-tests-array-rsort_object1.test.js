// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/array/rsort_object1.phpt
  it("Test rsort() function : object functionality", function () {
    expect(parser.parseCode("<?php\n/*\n * Test basic functionality of rsort() with objects\n */\necho \"*** Testing rsort() : object functionality ***\\n\";\n// class declaration for integer objects\nclass for_integer_rsort\n{\n    public $class_value;\n    // initializing object member value\n    function __construct($value){\n        $this->class_value = $value;\n    }\n}\n// class declaration for string objects\nclass for_string_rsort\n{\n    public $class_value;\n    // initializing object member value\n    function __construct($value){\n        $this->class_value = $value;\n    }\n    // return string value\n    function __tostring() {\n        return (string)$this->value;\n    }\n}\n// array of integer objects\n$unsorted_int_obj = array(\n  new for_integer_rsort(11), new for_integer_rsort(66),\n  new for_integer_rsort(23), new for_integer_rsort(-5),\n  new for_integer_rsort(0.001), new for_integer_rsort(0)\n);\n// array of string objects\n$unsorted_str_obj = array (\n  new for_string_rsort(\"axx\"), new for_string_rsort(\"t\"),\n  new for_string_rsort(\"w\"), new for_string_rsort(\"py\"),\n  new for_string_rsort(\"apple\"), new for_string_rsort(\"Orange\"),\n  new for_string_rsort(\"Lemon\"), new for_string_rsort(\"aPPle\")\n);\necho \"\\n-- Sort flag = default --\\n\";\n// testing rsort() function by supplying integer object array, flag value is default\n$temp_array = $unsorted_int_obj;\nvar_dump(rsort($temp_array) );\nvar_dump($temp_array);\n// testing rsort() function by supplying string object array, flag value is default\n$temp_array = $unsorted_str_obj;\nvar_dump(rsort($temp_array) );\nvar_dump($temp_array);\necho \"\\n-- Sort flag = SORT_REGULAR --\\n\";\n// testing rsort() function by supplying integer object array, flag value = SORT_REGULAR\n$temp_array = $unsorted_int_obj;\nvar_dump(rsort($temp_array, SORT_REGULAR) );\nvar_dump($temp_array);\n// testing rsort() function by supplying string object array, flag value = SORT_REGULAR\n$temp_array = $unsorted_str_obj;\nvar_dump(rsort($temp_array, SORT_REGULAR) );\nvar_dump($temp_array);\necho \"Done\";\n?>")).toMatchSnapshot();
  });
});
