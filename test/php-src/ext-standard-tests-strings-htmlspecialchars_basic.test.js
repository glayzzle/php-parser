// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/strings/htmlspecialchars_basic.phpt
  it("Test htmlspecialchars() function : basic functionality", function () {
    expect(parser.parseCode("<?php\necho \"*** Testing htmlspecialchars() : basic functionality ***\\n\";\n$s1 = \"abc<>\\\"&\\n\";\n$s2 = \"&&abc<>\\\"&\\n\";\n$s3 = \"a>,\\<bc<>\\\"&\\n\";\n$s4 = \"a\\'\\'&bc<>\\\"&\\n\";\n$s5 = \"&amp;&lt;\\n\";\necho \"Basic tests\\n\";\necho \"Test 1: \" . htmlspecialchars ($s1);\necho \"Test 2: \" . htmlspecialchars ($s2);\necho \"Test 3: \" . htmlspecialchars ($s3);\necho \"Test 4: \" . htmlspecialchars ($s4);\necho \"Test 5: \" . htmlspecialchars ($s5);\necho \"Test 6: \" . htmlspecialchars ($s1,ENT_NOQUOTES);\necho \"Test 7: \" . htmlspecialchars ($s2,ENT_NOQUOTES);\necho \"Test 8: \" . htmlspecialchars ($s3,ENT_NOQUOTES);\necho \"Test 9: \" . htmlspecialchars ($s4,ENT_NOQUOTES);\necho \"Test 10: \" . htmlspecialchars ($s5,ENT_NOQUOTES);\necho \"Test 11: \" . htmlspecialchars ($s1,ENT_COMPAT);\necho \"Test 12: \" . htmlspecialchars ($s2,ENT_COMPAT);\necho \"Test 13: \" . htmlspecialchars ($s3,ENT_COMPAT);\necho \"Test 14: \" . htmlspecialchars ($s4,ENT_COMPAT);\necho \"Test 15: \" . htmlspecialchars ($s5,ENT_COMPAT);\necho \"Test 16: \" . htmlspecialchars ($s1,ENT_QUOTES);\necho \"Test 17: \" . htmlspecialchars ($s2,ENT_QUOTES);\necho \"Test 18: \" . htmlspecialchars ($s3,ENT_QUOTES);\necho \"Test 19: \" . htmlspecialchars ($s4,ENT_QUOTES);\necho \"Test 20: \" . htmlspecialchars ($s5,ENT_QUOTES);\necho \"\\nTry with char set option - specify default ISO-8859-1\\n\";\necho  \"Test 21: \" . htmlspecialchars ($s1,ENT_NOQUOTES, \"ISO-8859-1\");\necho  \"Test 22: \" . htmlspecialchars ($s2,ENT_COMPAT, \"ISO-8859-1\");\necho  \"Test 23: \" . htmlspecialchars ($s3,ENT_QUOTES, \"ISO-8859-1\");\necho  \"Test 24: \" . htmlspecialchars ($s5,ENT_QUOTES, \"ISO-8859-1\");\necho \"\\nTry with double decode FALSE\\n\";\n$s1 = \"&quot;&amp;xyz&gt;abc&quot;\\n\";\n$s2 = \"&quot;&amp;123&lt;456&quot;\\n\";\n$s3 = \"\\\"300 < 400\\\"\\n\";\necho  \"Test 25: \" . htmlspecialchars ($s1,ENT_NOQUOTES, \"ISO-8859-1\", false);\necho  \"Test 26: \" . htmlspecialchars ($s2,ENT_NOQUOTES, \"ISO-8859-1\", false);\necho  \"Test 27: \" . htmlspecialchars ($s3,ENT_NOQUOTES, \"ISO-8859-1\", false);\necho \"\\nTry with double decode TRUE\\n\";\necho  \"Test 28: \" . htmlspecialchars ($s1, ENT_NOQUOTES, \"ISO-8859-1\", true);\necho  \"Test 29: \" . htmlspecialchars ($s2, ENT_NOQUOTES, \"ISO-8859-1\", true);\n?>")).toMatchSnapshot();
  });
});
