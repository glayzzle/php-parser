// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/mysqli_kill.phpt
  it("mysqli_kill()", function () {
    expect(parser.parseCode("<?php\n    require_once(\"connect.inc\");\n    require('table.inc');\n    try {\n        mysqli_kill($link, 0);\n    } catch (\\ValueError $e) {\n        echo $e->getMessage() . \\PHP_EOL;\n    }\n    if (!$thread_id = mysqli_thread_id($link))\n        printf(\"[004] Cannot determine thread id, [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    $tmp = mysqli_kill($link, $thread_id);\n    if (!is_bool($tmp))\n        printf(\"[005] Expecting boolean/any, got %s/%s\\n\", gettype($tmp), $tmp);\n    if ($res = mysqli_query($link, \"SELECT id FROM test LIMIT 1\"))\n        pintf(\"[006] Expecting boolean/false, got %s/%s\\n\", gettype($res), $res);\n    var_dump($error = mysqli_error($link));\n    if (!is_string($error) || ('' === $error))\n        printf(\"[007] Expecting string/any non empty, got %s/%s\\n\", gettype($error), $error);\n    var_dump($res);\n    var_dump($link);\n    if ($IS_MYSQLND) {\n        if ($link->info != 'Records: 6  Duplicates: 0  Warnings: 0') {\n            printf(\"[008] mysqlnd used to be more verbose and used to support SELECT\\n\");\n        }\n    } else {\n        if ($link->info != NULL) {\n            printf(\"[008] Time for wonders - libmysql has started to support SELECT, change test\\n\");\n        }\n    }\n    mysqli_close($link);\n    if (!$link = my_mysqli_connect($host, $user, $passwd, $db, $port, $socket))\n        printf(\"[010] Cannot connect, [%d] %s\\n\", mysqli_connect_errno(), mysqli_connect_error());\n    try {\n        mysqli_kill($link, -1);\n    } catch (\\ValueError $e) {\n        echo $e->getMessage() . \\PHP_EOL;\n    }\n    if ((!$res = mysqli_query($link, \"SELECT id FROM test LIMIT 1\")) ||\n        (!$tmp = mysqli_fetch_assoc($res))) {\n        printf(\"[011] Connection should not be gone, [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    }\n    var_dump($tmp);\n    mysqli_free_result($res);\n    mysqli_close($link);\n    if (!$link = my_mysqli_connect($host, $user, $passwd, $db, $port, $socket))\n        printf(\"[012] Cannot connect, [%d] %s\\n\", mysqli_connect_errno(), mysqli_connect_error());\n    mysqli_change_user($link, \"This might work if you accept anonymous users in your setup\", \"password\", $db);\n    try {\n        mysqli_kill($link, -1);\n    } catch (\\ValueError $e) {\n        echo $e->getMessage() . \\PHP_EOL;\n    }\n    mysqli_close($link);\n    print \"done!\";\n?>")).toMatchSnapshot();
  });
});
