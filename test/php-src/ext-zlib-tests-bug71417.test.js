// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/zlib/tests/bug71417.phpt
  it("Bug #71417: fread() does not report zlib.inflate errors", function () {
    expect(parser.parseCode("<?php\nfunction test($case) {\n    $plain = \"The quick brown fox jumps over the lazy dog.\";\n    $fn = \"bug71417.gz\";\n    $compressed = (string) gzencode($plain);\n    if ($case == 1) {\n        // 1. Set a random byte in the middle of the compressed data.\n        // $ php test-zlib-inflate.php\n        // --> read: string(0) \"\"\n        // --> read: string(44) \"The quick brown fox jumps over the lazx8dog.\"\n        // $ gzip test-zlib-inflate.gz\n        // gzip: test-zlib-inflate.gz: invalid compressed data--crc error\n        $compressed[strlen($compressed) - 15] = 'X';\n    } else if ($case == 2) {\n        // 2. Truncate the compressed data.\n        // $ php test-zlib-inflate.php\n        // --> read: string(32) \"The quick brown fox jumps over t\"\n        // $ gzip test-zlib-inflate.gz\n        // gzip: test-zlib-inflate.gz: unexpected end of file\n        $compressed = substr($compressed, 0, strlen($compressed) - 20);\n    } else if ($case == 3) {\n        // 3. Corrupted final CRC.\n        // $ php test-zlib-inflate.php\n        // --> read: string(0) \"\"\n        // --> read: string(44) \"The quick brown fox jumps over the lazy dog.\"\n        // $ gzip test-zlib-inflate.gz\n        // gzip: test-zlib-inflate.gz: invalid compressed data--crc error\n        $compressed[strlen($compressed)-5] = 'X';\n    } else if ($case == 4) {\n        // 4. Corrupted final length.\n        // $ php test-zlib-inflate.phpread: string(0) \"\"\n        // read: string(44) \"The quick brown fox jumps over the lazy dog.\"\n        // $ gunzip test-zlib-inflate.gz\n        // gzip: test-zlib-inflate.gz: invalid compressed data--length error\n        $compressed[strlen($compressed)-2] = 'X';\n    }\n    // The gzdecode() function applied to the corrupted compressed data always\n    // detects the error:\n    // --> gzdecode(): PHP Fatal error:  Uncaught ErrorException: gzdecode(): data error in ...\n    echo \"gzdecode(): \", rawurldecode(gzdecode($compressed)), \"\\n\";\n    file_put_contents($fn, $compressed);\n    $r = fopen($fn, \"r\");\n    stream_filter_append($r, 'zlib.inflate', STREAM_FILTER_READ, array('window' => 15+16));\n    while (!feof($r)) {\n        $s = fread($r, 100);\n        echo \"read: \"; var_dump($s);\n    }\n    fclose($r);\n    unlink($fn);\n}\ntest(1);\ntest(2);\ntest(3);\ntest(4);\n?>")).toMatchSnapshot();
  });
});
