// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/phar/tests/phar_unlinkarchive.phpt
  it("Phar::unlinkArchive()", function () {
    expect(parser.parseCode("<?php\ntry {\nPhar::unlinkArchive(\"\");\n} catch (Exception $e) {\necho $e->getMessage(),\"\\n\";\n}\n$fname = __DIR__ . '/' . basename(__FILE__, '.php') . '.phar';\n$pdname = __DIR__ . '/' . basename(__FILE__, '.php') . '.phar.tar';\ntry {\nPhar::unlinkArchive($fname);\n} catch (Exception $e) {\necho $e->getMessage(),\"\\n\";\n}\nfile_put_contents($pdname, 'blahblah');\ntry {\nPhar::unlinkArchive($pdname);\n} catch (Exception $e) {\necho $e->getMessage(),\"\\n\";\n}\ntry {\n    Phar::unlinkArchive(array());\n} catch (TypeError $e) {\n    echo $e->getMessage(), \"\\n\";\n}\n$pname = 'phar://' . $fname;\n$fname2 = __DIR__ . '/' . basename(__FILE__, '.php') . '.phar.zip';\n$fname3 = __DIR__ . '/' . basename(__FILE__, '.php') . '.2.phar.zip';\n$stub = '<?php echo \"first stub\\n\"; __HALT_COMPILER(); ?>';\n$file = $stub;\n$files = array();\n$files['a'] = 'a';\n$files['b'] = 'b';\n$files['c'] = 'c';\ninclude 'files/phar_test.inc';\n$phar = new Phar($fname);\nvar_dump($phar->isFileFormat(Phar::ZIP));\nvar_dump($phar->getStub());\ntry {\nPhar::unlinkArchive($fname);\n} catch (Exception $e) {\necho $e->getMessage(),\"\\n\";\n}\n$phar = $phar->convertToExecutable(Phar::ZIP);\nvar_dump($phar->isFileFormat(Phar::ZIP));\nvar_dump($phar->getStub());\ncopy($fname2, $fname3);\n$phar = new Phar($fname3);\nvar_dump($phar->isFileFormat(Phar::ZIP));\nvar_dump($phar->getStub());\nPhar::unlinkArchive($fname);\nvar_dump(file_exists($fname));\n$phar = new Phar($fname);\nvar_dump(count($phar));\n$phar['evil.php'] = '<?php\ntry {\nPhar::unlinkArchive(Phar::running(false));\n} catch (Exception $e) {echo $e->getMessage(),\"\\n\";}\nvar_dump(Phar::running(false));\ninclude Phar::running(true) . \"/another.php\";\n?>';\n$phar['another.php'] = \"hi\\n\";\nunset($phar);\ninclude $pname . '/evil.php';\n?>")).toMatchSnapshot();
  });
});
