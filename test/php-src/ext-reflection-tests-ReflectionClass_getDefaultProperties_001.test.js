// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/reflection/tests/ReflectionClass_getDefaultProperties_001.phpt
  it("ReflectionClass::getDefaultProperties(), ReflectionClass::getStaticProperties()", function () {
    expect(parser.parseCode("<?php\nclass A {\n    static public $statPubC = \"stat pubC in A\";\n    static protected $statProtC = \"stat protC in A\";\n    static private $statPrivC = \"stat privC in A\";\n    static public $statPubA = \"stat pubA in A\";\n    static protected $statProtA = \"stat protA in A\";\n    static private $statPrivA = \"stat privA in A\";\n    public $pubC = \"pubC in A\";\n    protected $protC = \"protC in A\";\n    private $privC = \"privC in A\";\n    public $pubA = \"pubA in A\";\n    protected $protA = \"protA in A\";\n    private $privA = \"privA in A\";\n}\nclass B extends A {\n    static public $statPubC = \"stat pubC in B\";\n    static protected $statProtC = \"stat protC in B\";\n    static private $statPrivC = \"stat privC in B\";\n    static public $statPubB = \"stat pubB in B\";\n    static protected $statProtB = \"stat protB in B\";\n    static private $statPrivB = \"stat privB in B\";\n    public $pubC = \"pubC in B\";\n    protected $protC = \"protC in B\";\n    private $privC = \"privC in B\";\n    public $pubB = \"pubB in B\";\n    protected $protB = \"protB in B\";\n    private $privB = \"privB in B\";\n}\nclass C extends B {\n    static public $statPubC = \"stat pubC in C\";\n    static protected $statProtC = \"stat protC in C\";\n    static private $statPrivC = \"stat privC in C\";\n    public $pubC = \"pubC in C\";\n    protected $protC = \"protC in C\";\n    private $privC = \"privC in C\";\n}\nclass X {\n    static public $statPubC = \"stat pubC in X\";\n    static protected $statProtC = \"stat protC in X\";\n    static private $statPrivC = \"stat privC in X\";\n    public $pubC = \"pubC in X\";\n    protected $protC = \"protC in X\";\n    private $privC = \"privC in X\";\n}\n$classes = array('A', 'B', 'C', 'X');\nforeach ($classes as $class) {\n    $rc = new ReflectionClass($class);\n    echo \"\\n\\n---- Static properties in $class ----\\n\";\n    print_r($rc->getStaticProperties());\n    echo \"\\n\\n---- Default properties in $class ----\\n\";\n    print_r($rc->getDefaultProperties());\n}\n?>")).toMatchSnapshot();
  });
});
