// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/dom/tests/dom007.phpt
  it("Test 7: DTD tests", function () {
    expect(parser.parseCode("<?php\n$xml = <<< EOXML\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<!DOCTYPE courses [\n<!ELEMENT courses (course+)>\n<!ELEMENT course (title, description, temp*)>\n<!ATTLIST course cid ID #REQUIRED>\n<!ELEMENT title (#PCDATA)>\n<!ELEMENT description (#PCDATA)>\n<!ELEMENT temp (#PCDATA)>\n<!ATTLIST temp vid ID #REQUIRED>\n<!ENTITY test 'http://www.hpl.hp.com/semweb/2003/query_tester#'>\n<!ENTITY rdf  'http://www.w3.org/1999/02/22-rdf-syntax-ns#'>\n<!NOTATION GIF PUBLIC \"-\" \"image/gif\">\n<!ENTITY myimage PUBLIC \"-\" \"mypicture.gif\" NDATA GIF>\n]>\n<courses>\n   <course cid=\"c1\">\n      <title>Basic Languages</title>\n      <description>Introduction to Languages</description>\n   </course>\n   <course cid=\"c6\">\n      <title>French I</title>\n      <description>Introduction to French</description>\n      <temp vid=\"c7\">\n      </temp>\n   </course>\n</courses>\nEOXML;\n$dom = new DOMDocument();\n$dom->loadXML($xml);\n$dtd = $dom->doctype;\n/* Notation Tests */\n$nots = $dtd->notations;\n$length = $nots->length;\necho \"Length: \".$length.\"\\n\";\nforeach ($nots AS $key=>$node) {\n    echo \"Key $key: \".$node->nodeName.\" (\".$node->systemId.\") (\".$node->publicId.\")\\n\";\n}\nprint \"\\n\";\nfor($x=0; $x < $length; $x++) {\n    echo \"Index $x: \".$nots->item($x)->nodeName.\" (\".$nots->item($x)->systemId.\") (\".$nots->item($x)->publicId.\")\\n\";\n}\necho \"\\n\";\n$node = $nots->getNamedItem('xxx');\nvar_dump($node);\necho \"\\n\";\n/* Entity Decl Tests */\n$ents = $dtd->entities;\n$length = $ents->length;\necho \"Length: \".$length.\"\\n\";\n$xkeys = array();\nforeach ($ents AS $key=>$node) {\n    $xkeys[] = \"Key: $key Name: \".$node->nodeName.\"\\n\";\n}\nsort($xkeys);  // fix inconsistent output ordering (bug #61810)\nforeach ($xkeys as $key => $node) {\n    echo $node;\n}\necho \"\\n\";\n$xkeys = array();\nfor($x=0; $x < $length; $x++) {\n    $xkeys[] = \"Index: \".$ents->item($x)->nodeName.\"\\n\";\n}\nsort($xkeys);  // fix inconsistent output ordering (bug #61810)\nforeach ($xkeys as $key => $node) {\n    echo $node;\n}\necho \"\\n\";\n$node = $ents->item(3);\nvar_dump($node);\n$node = $ents->getNamedItem('xxx');\nvar_dump($node);\n?>")).toMatchSnapshot();
  });
});
