// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/ldap/tests/ldap_get_option_controls.phpt
  it("ldap_get_option() and ldap_set_option() tests related to ldap controls", function () {
    expect(parser.parseCode("<?php\ninclude \"connect.inc\";\n$link = ldap_connect_and_bind($host, $port, $user, $passwd, $protocol_version);\ninsert_dummy_data($link, $base);\nfunction build_ctrl_paged_value($int, $cookie)\n{\n    // This is basic and will only work for small values\n    $hex = '';\n    if (!empty($int)) {\n        $str = sprintf(\"%'.02x\", $int);\n        $hex .= '02'.sprintf(\"%'.02x%s\", strlen($str)/2, $str);\n    }\n    $hex .= '04'.sprintf(\"%'.02x\", strlen($cookie)).bin2hex($cookie);\n    return hex2bin('30'.sprintf(\"%'.02x\", strlen($hex)/2).$hex);\n}\n$controls_set = array(\n    array(\n        'oid' => LDAP_CONTROL_PAGEDRESULTS,\n        'iscritical' => TRUE,\n        'value' => build_ctrl_paged_value(1, 'opaque')\n    )\n);\n$controls_set2 = array(\n    array(\n        'oid' => LDAP_CONTROL_PAGEDRESULTS,\n        'iscritical' => TRUE,\n        'value' => array(\n            'size' => 1,\n            'cookie' => '',\n        )\n    )\n);\nvar_dump(\n    bin2hex($controls_set[0]['value']),\n    ldap_get_option($link, LDAP_OPT_SERVER_CONTROLS, $controls_get),\n    ldap_set_option($link, LDAP_OPT_SERVER_CONTROLS, $controls_set),\n    ldap_get_option($link, LDAP_OPT_SERVER_CONTROLS, $controls_get),\n    $controls_get,\n    ldap_set_option($link, LDAP_OPT_SERVER_CONTROLS, $controls_set2),\n    ldap_get_option($link, LDAP_OPT_SERVER_CONTROLS, $controls_get),\n    $controls_get,\n    $result = ldap_search($link, $base, \"(objectClass=person)\", array('cn')),\n    ldap_get_entries($link, $result)['count'],\n    ldap_set_option($link, LDAP_OPT_SERVER_CONTROLS, array()),\n    ldap_get_option($link, LDAP_OPT_SERVER_CONTROLS, $controls_get)\n);\n?>")).toMatchSnapshot();
  });
});
