// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/mysqli_stmt_field_count.phpt
  it("mysqli_stmt_field_counts()", function () {
    expect(parser.parseCode("<?php\n    require_once(\"connect.inc\");\n    require('table.inc');\n    $stmt = mysqli_stmt_init($link);\n    try {\n        mysqli_stmt_field_count($stmt);\n    } catch (Error $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    if (mysqli_stmt_prepare($stmt, ''))\n        printf(\"[004] Prepare should fail for an empty statement\\n\");\n    try {\n        mysqli_stmt_field_count($stmt);\n    } catch (Error $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    if (!mysqli_stmt_prepare($stmt, 'SELECT 1'))\n        printf(\"[006] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (1 !== ($tmp = mysqli_stmt_field_count($stmt)))\n        printf(\"[007] Expecting int/1, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (!mysqli_stmt_prepare($stmt, 'SELECT 1, 2'))\n        printf(\"[008] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (2 !== ($tmp = mysqli_stmt_field_count($stmt)))\n        printf(\"[009] Expecting int/2, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (!mysqli_stmt_prepare($stmt, 'SELECT id, label FROM test'))\n        printf(\"[010] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (2 !== ($tmp = mysqli_stmt_field_count($stmt)))\n        printf(\"[011] Expecting int/2, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (!mysqli_stmt_prepare($stmt, 'SELECT label FROM test') ||\n        !mysqli_stmt_execute($stmt))\n        printf(\"[012] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (1 !== ($tmp = mysqli_stmt_field_count($stmt)))\n        printf(\"[013] Expecting int/1, got %s/%s\\n\", gettype($tmp), $tmp);\n    $label = null;\n    try {\n        if (mysqli_stmt_bind_param($stmt, \"s\", $label))\n            printf(\"[014] expected error - got ok\\n\");\n    } catch (\\ArgumentCountError $e) {\n        echo $e->getMessage() . \\PHP_EOL;\n    }\n    while (mysqli_stmt_fetch($stmt))\n        if (1 !== ($tmp = mysqli_stmt_field_count($stmt)))\n            printf(\"[015] Expecting int/1, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (!mysqli_stmt_prepare($stmt, 'INSERT INTO test(id) VALUES (100)'))\n        printf(\"[016] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (0 !== ($tmp = mysqli_stmt_field_count($stmt)))\n        printf(\"[017] Expecting int/0, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (!mysqli_stmt_prepare($stmt, \"UPDATE test SET label = 'z' WHERE id = 1\") ||\n        !mysqli_stmt_execute($stmt))\n        printf(\"[018] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (0 !== ($tmp = mysqli_stmt_field_count($stmt)))\n        printf(\"[019] Expecting int/0, got %s/%s\\n\", gettype($tmp), $tmp);\n    mysqli_stmt_close($stmt);\n    try {\n        mysqli_stmt_prepare($stmt, 'SELECT id FROM test');\n    } catch (Error $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    try {\n        mysqli_stmt_field_count($stmt);\n    } catch (Error $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    mysqli_close($link);\n    print \"done!\";\n?>")).toMatchSnapshot();
  });
});
