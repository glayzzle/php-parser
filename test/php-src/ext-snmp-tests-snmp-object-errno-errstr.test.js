// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/snmp/tests/snmp-object-errno-errstr.phpt
  it("OO API: getErrno & getError methods", function () {
    expect(parser.parseCode("<?php\nrequire_once(__DIR__.'/snmp_include.inc');\n//EXPECTF format is quickprint OFF\nsnmp_set_enum_print(false);\nsnmp_set_quick_print(false);\nsnmp_set_valueretrieval(SNMP_VALUE_PLAIN);\nsnmp_set_oid_output_format(SNMP_OID_OUTPUT_FULL);\necho \"SNMP::ERRNO_NOERROR\\n\";\n$session = new SNMP(SNMP::VERSION_2c, $hostname, $community, $timeout, $retries);\nvar_dump(@$session->get('.1.3.6.1.2.1.1.1.0'));\nvar_dump($session->getErrno() == SNMP::ERRNO_NOERROR);\nvar_dump($session->getError());\n$session->close();\necho \"SNMP::ERRNO_TIMEOUT\\n\";\n$session = new SNMP(SNMP::VERSION_2c, $hostname, 'timeout_community_432', $timeout, $retries);\n$session->valueretrieval = SNMP_VALUE_LIBRARY;\nvar_dump(@$session->get('.1.3.6.1.2.1.1.1.0'));\nvar_dump($session->getErrno() == SNMP::ERRNO_TIMEOUT);\nvar_dump($session->getError());\n$session->close();\necho \"SNMP::ERRNO_ERROR_IN_REPLY\\n\";\n$session = new SNMP(SNMP::VERSION_2c, $hostname, $community, $timeout, $retries);\nvar_dump(@$session->get('.1.3.6.1.2.1.1.1.110'));\nvar_dump($session->getErrno() == SNMP::ERRNO_ERROR_IN_REPLY);\nvar_dump($session->getError());\n$session->close();\necho \"SNMP::ERRNO_GENERIC\\n\";\n$session = new SNMP(SNMP::VERSION_3, $hostname, 'somebogususer', $timeout, $retries);\n$session->setSecurity('authPriv', 'MD5', $auth_pass, 'AES', $priv_pass);\nvar_dump(@$session->get('.1.3.6.1.2.1.1.1.0'));\nvar_dump($session->getErrno() == SNMP::ERRNO_GENERIC);\nvar_dump($session->getError());\nvar_dump(@$session->get(array('.1.3.6.1.2.1.1.1.0')));\n$session->close();\necho \"SNMP::ERRNO_OID_PARSING_ERROR\\n\";\necho \"GET: Single wrong OID\\n\";\n$session = new SNMP(SNMP::VERSION_2c, $hostname, $community, $timeout, $retries);\nvar_dump(@$session->get('.1.3.6.1.2..1.1.1.0'));\nvar_dump($session->getErrno() == SNMP::ERRNO_OID_PARSING_ERROR);\nvar_dump($session->getError());\n$session->close();\necho \"GET: Miltiple OID, one wrong\\n\";\n$session = new SNMP(SNMP::VERSION_2c, $hostname, $community, $timeout, $retries);\nvar_dump(@$session->get(array('.1.3.6.1.2.1.1.1.0', '.1.3.6.1.2..1.1.1.0')));\nvar_dump($session->getErrno() == SNMP::ERRNO_OID_PARSING_ERROR);\nvar_dump($session->getError());\n$session->close();\necho \"WALK: Single wrong OID\\n\";\n$session = new SNMP(SNMP::VERSION_2c, $hostname, $community, $timeout, $retries);\nvar_dump(@$session->walk('.1.3.6.1.2..1.1'));\nvar_dump($session->getErrno() == SNMP::ERRNO_OID_PARSING_ERROR);\nvar_dump($session->getError());\n$session->close();\necho \"SET: Wrong type\\n\";\n$session = new SNMP(SNMP::VERSION_3, $hostname, $rwuser, $timeout, $retries);\n$session->setSecurity('authPriv', 'MD5', $auth_pass, 'AES', $priv_pass);\n$oid1 = 'SNMPv2-MIB::sysContact.0';\nvar_dump(@$session->set($oid1, 'q', 'blah'));\nvar_dump($session->getErrno() == SNMP::ERRNO_OID_PARSING_ERROR);\nvar_dump($session->getError());\necho \"SNMP::ERRNO_MULTIPLE_SET_QUERIES\\n\";\n$oid1 = 'SNMPv2-MIB::sysContact.0';\n$oid2 = 'SNMPv2-MIB::sysLocation.0';\n$session = new SNMP(SNMP::VERSION_3, $hostname, $rwuser, $timeout, $retries);\n$session->setSecurity('authPriv', 'MD5', $auth_pass, 'AES', $priv_pass);\n$session->max_oids = 1;\n$oldvalue1 = $session->get($oid1);\n$newvalue1 = $oldvalue1 . '0';\n$oldvalue2 = $session->get($oid2);\n$newvalue2 = $oldvalue2 . '0';\n$z = @$session->set(array($oid1, $oid2), array('s','s'), array($newvalue1, $newvalue2));\nvar_dump($z);\nvar_dump($session->getErrno() == SNMP::ERRNO_MULTIPLE_SET_QUERIES);\nvar_dump($session->getError());\nvar_dump(($session->get($oid1) === $newvalue1));\nvar_dump(($session->get($oid2) === $newvalue2));\n$z = @$session->set(array($oid1, $oid2), array('s','s'), array($oldvalue1, $oldvalue2));\nvar_dump($z);\nvar_dump($session->getErrno() == SNMP::ERRNO_MULTIPLE_SET_QUERIES);\nvar_dump($session->getError());\nvar_dump(($session->get($oid1) === $oldvalue1));\nvar_dump(($session->get($oid2) === $oldvalue2));\nvar_dump($session->close());\n?>")).toMatchSnapshot();
  });
});
