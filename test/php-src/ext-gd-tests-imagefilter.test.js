// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/gd/tests/imagefilter.phpt
  it("imagefilter() function test", function () {
    expect(parser.parseCode("<?php\n$no_arg_filters = array(\n    \"IMG_FILTER_NEGATE\",\n    \"IMG_FILTER_GRAYSCALE\",\n    \"IMG_FILTER_EDGEDETECT\",\n    \"IMG_FILTER_GAUSSIAN_BLUR\",\n    \"IMG_FILTER_SELECTIVE_BLUR\",\n    \"IMG_FILTER_EMBOSS\",\n    \"IMG_FILTER_MEAN_REMOVAL\"\n);\n$SAVE_DIR = __DIR__;\n$SOURCE_IMG = $SAVE_DIR . \"/test.png\";\n    foreach ($no_arg_filters as $filt) {\n        $im = imagecreatefrompng($SOURCE_IMG);\n        if (imagefilter($im, constant($filt))) {\n            imagepng($im, $SAVE_DIR.\"/\".$filt. \".png\");\n            echo \"$filt success\\n\";\n            @unlink($SAVE_DIR.\"/\".$filt. \".png\");\n        } else {\n            echo \"$filt failed\\n\";\n        }\n    }\n    $im = imagecreatefrompng($SOURCE_IMG);\n    if (imagefilter($im, IMG_FILTER_SMOOTH, -1924.124)) {\n        imagepng($im, $SAVE_DIR . \"/IMG_FILTER_SMOOTH.png\");\n        echo \"IMG_FILTER_SMOOTH success\\n\";\n        @unlink($SAVE_DIR . \"/IMG_FILTER_SMOOTH.png\");\n    } else {\n        echo \"IMG_FILTER_SMOOTH failed\\n\";\n    }\n    $im = imagecreatefrompng($SOURCE_IMG);\n    if (imagefilter($im, IMG_FILTER_COLORIZE, -127, -127, 127)) {\n        imagepng($im, $SAVE_DIR . \"/IMG_FILTER_COLORIZE.png\");\n        echo \"IMG_FILTER_COLORIZE success\\n\";\n        unlink($SAVE_DIR . \"/IMG_FILTER_COLORIZE.png\");\n    } else {\n        echo \"IMG_FILTER_COLORIZE failed\\n\";\n    }\n    $im = imagecreatefrompng($SOURCE_IMG);\n    if (imagefilter($im, IMG_FILTER_CONTRAST, -90)) {\n        imagepng($im, $SAVE_DIR . \"/IMG_FILTER_CONTRAST.png\");\n        echo \"IMG_FILTER_CONTRAST success\\n\";\n        unlink($SAVE_DIR . \"/IMG_FILTER_CONTRAST.png\");\n    } else {\n        echo \"IMG_FILTER_CONTRAST failed\\n\";\n    }\n    $im = imagecreatefrompng($SOURCE_IMG);\n    if (imagefilter($im, IMG_FILTER_BRIGHTNESS, 98)) {\n        imagepng($im, $SAVE_DIR . \"/IMG_FILTER_BRIGHTNESS.png\");\n        echo \"IMG_FILTER_BRIGHTNESS success\\n\";\n        unlink($SAVE_DIR . \"/IMG_FILTER_BRIGHTNESS.png\");\n    } else {\n        echo \"IMG_FILTER_BRIGHTNESS failed\\n\";\n    }\n    $im = imagecreatefrompng($SOURCE_IMG);\n    if (imagefilter($im, IMG_FILTER_PIXELATE, 5, true)) {\n        imagepng($im, $SAVE_DIR . \"/IMG_FILTER_PIXELATE.png\");\n        echo \"IMG_FILTER_PIXELATE success\\n\";\n        unlink($SAVE_DIR . \"/IMG_FILTER_PIXELATE.png\");\n    } else {\n        echo \"IMG_FILTER_PIXELATE failed\\n\";\n    }\n    $im = imagecreatefrompng($SOURCE_IMG);\n    if (imagefilter($im, IMG_FILTER_SCATTER, 3, 5)) {\n        imagepng($im, $SAVE_DIR . \"/IMG_FILTER_SCATTER.png\");\n        echo \"IMG_FILTER_SCATTER success\\n\";\n        unlink($SAVE_DIR . \"/IMG_FILTER_SCATTER.png\");\n    } else {\n        echo \"IMG_FILTER_SCATTER failed\\n\";\n    }\n?>")).toMatchSnapshot();
  });
});
