// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/pdo_mysql/tests/pdo_mysql_stmt_bindcolumn.phpt
  it("MySQL PDOStatement->bindColumn()", function () {
    expect(parser.parseCode("<?php\n    require_once(__DIR__ . DIRECTORY_SEPARATOR . 'mysql_pdo_test.inc');\n    $db = MySQLPDOTest::factory();\n    MySQLPDOTest::createTestTable($db);\n    try {\n        $db->setAttribute(PDO::MYSQL_ATTR_DIRECT_QUERY, 1);\n        if (1 != $db->getAttribute(PDO::MYSQL_ATTR_DIRECT_QUERY))\n            printf(\"[002] Unable to turn on emulated prepared statements\\n\");\n        $stmt = $db->prepare('SELECT id, label FROM test ORDER BY id ASC LIMIT 2');\n        $stmt->execute();\n        $id = $label = null;\n        if (!$stmt->bindColumn(1, $id, PDO::PARAM_INT))\n            printf(\"[003] Cannot bind integer column, %s %s\\n\",\n                $stmt->errorCode(), var_export($stmt->errorInfo(), true));\n        if (!$stmt->bindColumn(2, $label, PDO::PARAM_STR))\n            printf(\"[004] Cannot bind string column, %s %s\\n\",\n                $stmt->errorCode(), var_export($stmt->errorInfo(), true));\n        $data = array();\n        while ($stmt->fetch(PDO::FETCH_BOUND)) {\n            printf(\"id = %s (%s) / label = %s (%s)\\n\",\n                var_export($id, true), gettype($id),\n                var_export($label, true), gettype($label));\n            $data[] = array('id' => $id, 'label' => $label);\n        }\n        $stmt = $db->query('SELECT id, label FROM test ORDER BY id ASC LIMIT 2');\n        $index = 0;\n        while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {\n            if ($row['id'] != $data[$index]['id']) {\n                printf(\"[005] Fetch bound and fetch assoc differ - column 'id', bound: %s/%s, assoc: %s/%s\\n\",\n                    var_export($data[$index]['id'], true), gettype($data[$index]['id']),\n                    var_export($row['id'], true), gettype($row['id']));\n            }\n            if ($row['label'] != $data[$index]['label']) {\n                printf(\"[006] Fetch bound and fetch assoc differ - column 'label', bound: %s/%s, assoc: %s/%s\\n\",\n                    var_export($data[$index]['label'], true), gettype($data[$index]['label']),\n                    var_export($row['label'], true), gettype($row['label']));\n            }\n            $index++;\n        }\n        $db->setAttribute(PDO::MYSQL_ATTR_DIRECT_QUERY, 0);\n        if (0 != $db->getAttribute(PDO::MYSQL_ATTR_DIRECT_QUERY))\n            printf(\"[007] Unable to turn off emulated prepared statements\\n\");\n        $stmt = $db->prepare('SELECT id, label FROM test ORDER BY id ASC LIMIT 2, 2');\n        $stmt->execute();\n        $id = $label = null;\n        if (!$stmt->bindColumn(1, $id, PDO::PARAM_INT))\n            printf(\"[008] Cannot bind integer column, %s %s\\n\",\n                $stmt->errorCode(), var_export($stmt->errorInfo(), true));\n        if (!$stmt->bindColumn(2, $label, PDO::PARAM_STR))\n            printf(\"[009] Cannot bind string column, %s %s\\n\",\n                $stmt->errorCode(), var_export($stmt->errorInfo(), true));\n        $data = array();\n        while ($stmt->fetch(PDO::FETCH_BOUND)) {\n            printf(\"id = %s (%s) / label = %s (%s)\\n\",\n                var_export($id, true), gettype($id),\n                var_export($label, true), gettype($label));\n            $data[] = array('id' => $id, 'label' => $label);\n        }\n        $stmt = $db->query('SELECT id, label FROM test ORDER BY id ASC LIMIT 2, 2');\n        $index = 0;\n        while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {\n            if ($row['id'] != $data[$index]['id']) {\n                printf(\"[010] Fetch bound and fetch assoc differ - column 'id', bound: %s/%s, assoc: %s/%s\\n\",\n                    var_export($data[$index]['id'], true), gettype($data[$index]['id']),\n                    var_export($row['id'], true), gettype($row['id']));\n            }\n            if ($row['label'] != $data[$index]['label']) {\n                printf(\"[011] Fetch bound and fetch assoc differ - column 'label', bound: %s/%s, assoc: %s/%s\\n\",\n                    var_export($data[$index]['label'], true), gettype($data[$index]['label']),\n                    var_export($row['label'], true), gettype($row['label']));\n            }\n            $index++;\n        }\n    } catch (PDOException $e) {\n        printf(\"[001] %s [%s] %s\\n\",\n            $e->getMessage(), $db->errorCode(), implode(' ', $db->errorInfo()));\n    }\n    print \"done!\";\n?>")).toMatchSnapshot();
  });
});
