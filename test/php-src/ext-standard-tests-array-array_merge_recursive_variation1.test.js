// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/array/array_merge_recursive_variation1.phpt
  it("Test array_merge_recursive() function : usage variations - unexpected values for $arr1 argument", function () {
    expect(parser.parseCode("<?php\n/*\n * Passing non array values to 'arr1' argument of array_merge_recursive() and see\n * that the function outputs proper warning messages wherever expected.\n*/\necho \"*** Testing array_merge_recursive() : Passing non array values to \\$arr1 argument ***\\n\";\n//get an unset variable\n$unset_var = 10;\nunset($unset_var);\nclass A\n{\n//  public $var = 10;\n  public function __toString() {\n    return \"object\";\n  }\n}\n// heredoc string\n$heredoc = <<<EOT\nhello world\nEOT;\n// get a resource variable\n$fp = fopen(__FILE__, \"r\");\n// unexpected values to be passed to $arr1 argument\n$arrays = array (\n       // int data\n/*1*/  0,\n       1,\n       12345,\n       -2345,\n       // float data\n/*5*/  10.5,\n       -10.5,\n       12.3456789000e10,\n       12.3456789000E-10,\n       .5,\n       // null data\n/*10*/ NULL,\n       null,\n       // boolean data\n/*12*/ true,\n       false,\n       TRUE,\n       FALSE,\n       // empty data\n/*16*/ \"\",\n       '',\n       // string data\n/*18*/ \"string\",\n       'string',\n       $heredoc,\n       // undefined data\n/*21*/ @$undefined_var,\n       // unset data\n/*22*/ @$unset_var,\n       // resource variable\n/*23*/ $fp,\n       // object data\n/*24*/ new A()\n);\n// initialise the second argument\n$arr2 = array(1, array(\"hello\", 'world'));\n// loop through each element of $arrays and check the behavior of array_merge_recursive()\n$iterator = 1;\nforeach($arrays as $arr1) {\n    echo \"\\n-- Iteration $iterator --\";\n    // with default argument\n    echo \"\\n-- With default argument --\";\n    try {\n        var_dump( array_merge_recursive($arr1) );\n    } catch (TypeError $e) {\n        echo $e->getMessage(), \"\\n\";\n    }\n    // with more arguments\n    echo \"-- With more arguments --\";\n    try {\n        var_dump( array_merge_recursive($arr1, $arr2) );\n    } catch (TypeError $e) {\n        echo $e->getMessage(), \"\\n\";\n    }\n    $iterator++;\n}\n// close the file resource used\nfclose($fp);\necho \"Done\";\n?>")).toMatchSnapshot();
  });
});
