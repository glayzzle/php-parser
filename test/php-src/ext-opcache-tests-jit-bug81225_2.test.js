// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/opcache/tests/jit/bug81225_2.phpt
  it("Bug #81225: Wrong result with pow operator with JIT enabled", function () {
    expect(parser.parseCode("<?php\nfunction add_with_positive(int $a) {\n    $a = $a % 10;\n    $b = $a + 1;\n    $c = $a + 100;\n    $d = $a + 2147483647;          // 0x7fff,ffff\n    $e = $a + 2147483648;          // 0x8000,0000     cannot encoded as imm field of lea r1, [r2 + imm]\n    $f = $a + 78187493394;         // 0x12,1234,5678  cannot encoded as imm field of lea r1, [r2 + imm]\n    var_dump($b, $c, $d, $e, $f);\n}\nfunction add_with_negative(int $a) {\n    $a = $a % 10;\n    $b = $a + (-1);\n    $c = $a + (-100);\n    $d = $a + (-2147483648);       // 0xFFFF,FFFF,8000,0000\n    $e = $a + (-2147483649);       // 0xFFFF,FFFF,7FFF,FFFF  cannot encoded as imm field of lea r1, [r2 + imm]\n    $f = $a + (-261458978401740);  // 0xFFFF,1234,5678,1234  cannot encoded as imm field of lea r1, [r2 + imm]\n    var_dump($b, $c, $d, $e, $f);\n}\nfunction sub_with_positive(int $a) {\n    $a = $a % 10;\n    $b = $a - 1;\n    $c = $a - 100;\n    $d = $a - 2147483647;          // 0x7fff,ffff\n    $e = $a - 2147483648;          // 0x8000,0000\n    $f = $a - 2147483649;          // 0x8000,0001     cannot encoded as imm field of lea r1, [r2 + imm]\n    $g = $a - 78187493394;         // 0x12,1234,5678  cannot encoded as imm field of lea r1, [r2 + imm]\n    var_dump($b, $c, $d, $e, $f, $g);\n}\nfunction sub_with_negative(int $a) {\n    $a = $a % 10;\n    $b = $a - (-1);\n    $c = $a - (-100);\n    $d = $a - (-2147483647);       // 0xFFFF,FFFF,8000,0001\n    $e = $a - (-2147483648);       // 0xFFFF,FFFF,8000,0000  cannot encoded as imm field of lea r1, [r2 + imm]\n    $f = $a - (-2147483649);       // 0xFFFF,FFFF,7FFF,FFFF  cannot encoded as imm field of lea r1, [r2 + imm]\n    $g = $a - (-261458978401740);  // 0xFFFF,1234,5678,1234  cannot encoded as imm field of lea r1, [r2 + imm]\n    var_dump($b, $c, $d, $e, $f, $g);\n}\nadd_with_positive(2);\nadd_with_negative(2);\nsub_with_positive(2);\nsub_with_negative(2);\n?>")).toMatchSnapshot();
  });
});
