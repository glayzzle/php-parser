// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/strings/htmlspecialchars_decode_variation7.phpt
  it("Test htmlspecialchars_decode() function : usage variations - numerical entities for basic characters", function () {
    expect(parser.parseCode("<?php\n$tests = array(\n    \"&quot;\", \"&#x22;\", \"&#34;\",\n    \"&apos;\", \"&#39;\", \"&#x27;\",\n    \"&amp;\", \"&#x26;\", \"&lt;\",\n    \"&gt;\", \"&#x3C;\", \"&#60;\",\n    \"&lt;\", \"&#x3E;\", \"&#62;\",\n    \"&#63;\"\n);\necho \"*** HTML 4.01/ENT_QUOTES  ***\\n\";\nforeach ($tests as $t) {\n    $dec = htmlspecialchars_decode($t, ENT_QUOTES | ENT_HTML401);\n    if ($t == $dec) {\n        echo \"$t\\tNOT DECODED\\n\";\n    } else {\n        echo \"$t\\tDECODED\\n\";\n    }\n}\necho \"\\n*** XHTML 1.0/ENT_QUOTES  ***\\n\";\nforeach ($tests as $t) {\n    $dec = htmlspecialchars_decode($t, ENT_QUOTES | ENT_XHTML);\n    if ($t == $dec) {\n        echo \"$t\\tNOT DECODED\\n\";\n    } else {\n        echo \"$t\\tDECODED\\n\";\n    }\n}\necho \"\\n*** HTML5/ENT_QUOTES  ***\\n\";\nforeach ($tests as $t) {\n    $dec = htmlspecialchars_decode($t, ENT_QUOTES | ENT_HTML5);\n    if ($t == $dec) {\n        echo \"$t\\tNOT DECODED\\n\";\n    } else {\n        echo \"$t\\tDECODED\\n\";\n    }\n}\necho \"\\n*** XML 1.0/ENT_QUOTES  ***\\n\";\nforeach ($tests as $t) {\n    $dec = htmlspecialchars_decode($t, ENT_QUOTES | ENT_XML1);\n    if ($t == $dec) {\n        echo \"$t\\tNOT DECODED\\n\";\n    } else {\n        echo \"$t\\tDECODED\\n\";\n    }\n}\necho \"\\n*** HTML5/ENT_NOQUOTES  ***\\n\";\nforeach ($tests as $t) {\n    $dec = htmlspecialchars_decode($t, ENT_NOQUOTES | ENT_HTML5);\n    if ($t == $dec) {\n        echo \"$t\\tNOT DECODED\\n\";\n    } else {\n        echo \"$t\\tDECODED\\n\";\n    }\n}\necho \"\\n*** HTML5/ENT_COMPAT  ***\\n\";\nforeach ($tests as $t) {\n    $dec = htmlspecialchars_decode($t, ENT_COMPAT | ENT_HTML5);\n    if ($t == $dec) {\n        echo \"$t\\tNOT DECODED\\n\";\n    } else {\n        echo \"$t\\tDECODED\\n\";\n    }\n}\necho \"\\nDone.\\n\";\n?>")).toMatchSnapshot();
  });
});
