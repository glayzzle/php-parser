// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/mysqli_pam_sha256_public_key_option_invalid.phpt
  it("PAM: SHA-256, option: MYSQLI_SERVER_PUBLIC_KEY (invalid)", function () {
    expect(parser.parseCode("<?php\n    require_once(\"connect.inc\");\n    function sha_connect($offset, $host, $db, $port, $socket, $file) {\n        $link = mysqli_init();\n        if (!($link->options(MYSQLI_SERVER_PUBLIC_KEY, $file))) {\n            printf(\"[%03d + 001] mysqli_options failed, [%d] %s\\n\", $offset, $link->errno, $link->error);\n            return false;\n        }\n        if (!$link->real_connect($host, 'shatest', 'shatest', $db, $port, $socket)) {\n            printf(\"[%03d + 002] [%d] %s\\n\", $offset, $link->connect_errno, $link->connect_error);\n            return false;\n        }\n        if (!$res = $link->query(\"SELECT id FROM test WHERE id = 1\"))\n            printf(\"[%03d + 003] [%d] %s\\n\", $offset, $link->errno, $link->error);\n            return false;\n        if (!$row = mysqli_fetch_assoc($res)) {\n            printf(\"[%03d + 004] [%d] %s\\n\", $offset, $link->errno, $link->error);\n            return false;\n        }\n        if ($row['id'] != 1) {\n            printf(\"[%03d + 005] Expecting 1 got %s/'%s'\", $offset, gettype($row['id']), $row['id']);\n            return false;\n        }\n        $res->close();\n        $link->close();\n        return true;\n    }\n    $file = sprintf(\"%s%s%s_%s\", sys_get_temp_dir(), DIRECTORY_SEPARATOR, \"test_sha256_\" , @date(\"Ymd\"));\n    if (file_exists($file) && is_readable($file)) {\n        /* valid key */\n        sha_connect(100, $host, $db, $port, $socket, $file);\n        /* invalid key */\n        $file_wrong = sprintf(\"%s%s%s_%s\", sys_get_temp_dir(), DIRECTORY_SEPARATOR, \"test_sha256_wrong\" , @date(\"Ymd\"));\n        $key = file_get_contents($file);\n        $key = str_replace(\"A\", \"a\", $key);\n        $key = str_replace(\"M\", \"m\", $key);\n        @unlink($file_wrong);\n        if (!($fp = fopen($file_wrong, \"w\"))) {\n            printf(\"[002] Can't write public key file.\");\n        } else {\n            fwrite($fp, $key);\n            fclose($fp);\n            sha_connect(200, $host, $db, $port, $socket, $file_wrong);\n        }\n        /* empty file */\n        @unlink($file_wrong);\n        if (!($fp = fopen($file_wrong, \"w\"))) {\n            printf(\"[003] Can't write public key file.\");\n        } else {\n            fwrite($fp, \"\");\n            fclose($fp);\n            sha_connect(300, $host, $db, $port, $socket, $file_wrong);\n        }\n        /* file does not exist */\n        @unlink($file_wrong);\n        sha_connect(400, $host, $db, $port, $socket, $file_wrong);\n    } else {\n        printf(\"[001] Cannot read public key file.\");\n    }\n    print \"done!\";\n?>")).toMatchSnapshot();
  });
});
