// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/dir/opendir_variation7.phpt
  it("Test opendir() function : usage variations - different directory permissions", function () {
    expect(parser.parseCode("<?php\n/*\n * Open a directory using opendir() with different directory permissions\n */\necho \"*** Testing opendir() : usage variations ***\\n\";\n// create the temporary directory\n$file_path = __DIR__;\n$dir_path = $file_path . \"/opendir_variation7\";\nmkdir($dir_path);\n/* different values for directory permissions */\n$permission_values = array(\n/*1*/  0477,  // owner has read only, other and group has rwx\n       0677,  // owner has rw only, other and group has rwx\n/*3*/  0444,  // all have read only\n       0666,  // all have rw only\n/*5*/  0400,  // owner has read only, group and others have no permission\n       0600,   // owner has rw only, group and others have no permission\n/*7*/  0470,  // owner has read only, group has rwx & others have no permission\n       0407,  // owner has read only, other has rwx & group has no permission\n/*9*/  0670,  // owner has rw only, group has rwx & others have no permission\n/*10*/ 0607   // owner has rw only, group has no permission and others have rwx\n);\n// Open directory with different permission values, read and close, expected: none of them to succeed.\n$iterator = 1;\nforeach ($permission_values as $perm) {\n    echo \"\\n-- Iteration $iterator --\\n\";\n    // try to remove the dir if exists  & create\n    if (is_dir($dir_path)){\n        chmod ($dir_path, 0777); // change dir permission to allow all operation\n        rmdir ($dir_path);\n    }\n    mkdir($dir_path);\n    // change the dir permission to test dir on it\n    var_dump( chmod($dir_path, $perm) );\n    var_dump($dh = opendir($dir_path));\n    if (is_resource($dh)) {\n        closedir($dh);\n    }\n    $iterator++;\n}\n?>")).toMatchSnapshot();
  });
});
