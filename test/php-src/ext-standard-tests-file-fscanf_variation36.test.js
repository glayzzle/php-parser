// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/file/fscanf_variation36.phpt
  it("Test fscanf() function: usage variations - hexa formats with arrays", function () {
    expect(parser.parseCode("<?php\n/* Test fscanf() to scan arrays using different hexa format types */\n$file_path = __DIR__;\necho \"*** Test fscanf(): different hexa format types with arrays ***\\n\";\n// create a file\n$filename = \"$file_path/fscanf_variation36.tmp\";\n$file_handle = fopen($filename, \"w\");\nif($file_handle == false)\n  exit(\"Error:failed to open file $filename\");\n// array types\n$array_types = array (\n  array(),\n  array(0),\n  array(1),\n  array(NULL),\n  array(null),\n  array(\"string\"),\n  array(true),\n  array(TRUE),\n  array(false),\n  array(FALSE),\n  array(1,2,3,4),\n  array(1 => \"One\", \"two\" => 2)\n);\n$hexa_formats = array( \"%x\", \"%hx\", \"%lx\", \"%Lx\", \" %x\", \"%x \", \"% x\", \"\\t%x\", \"\\n%x\", \"%4x\", \"%30x\", \"%[0-9]\", \"%*x\");\n$counter = 1;\n// writing to the file\nforeach($array_types as $value) {\n  @fprintf($file_handle, \"%s\", $value);\n  @fprintf($file_handle, \"\\n\");\n}\n// closing the file\nfclose($file_handle);\n// opening the file for reading\n$file_handle = fopen($filename, \"r\");\nif($file_handle == false) {\n  exit(\"Error:failed to open file $filename\");\n}\n$counter = 1;\n// reading the values from file using different hexa formats\nforeach($hexa_formats as $hexa_format) {\n  // rewind the file so that for every foreach iteration the file pointer starts from bof\n  rewind($file_handle);\n  echo \"\\n-- iteration $counter --\\n\";\n  while( !feof($file_handle) ) {\n    try {\n      var_dump(fscanf($file_handle,$hexa_format));\n    } catch (ValueError $exception) {\n      echo $exception->getMessage() . \"\\n\";\n    }\n  }\n  $counter++;\n}\necho \"\\n*** Done ***\";\n?>")).toMatchSnapshot();
  });
});
