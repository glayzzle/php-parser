// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/file/fgetc_basic.phpt
  it("Test fgetc() function : basic functionality", function () {
    expect(parser.parseCode("<?php\n// include the header for common test function\ninclude (\"file.inc\");\necho \"*** Testing fgetc() : basic operations ***\\n\";\n/* read character from different files which are opened in different modes */\n$file_modes = array( \"r\", \"rb\", \"rt\", \"r+\", \"r+b\", \"r+t\");\n/* create file with following type of contents */\n$file_content_types = array(\"numeric\", \"text\", \"text_with_new_line\");\nfor($outerloop_counter = 0; $outerloop_counter < count($file_content_types); $outerloop_counter++) {\n  echo \"--- Outerloop iteration \";\n  echo $outerloop_counter + 1;\n  echo \" ---\\n\";\n  // create file file\n  create_files(__DIR__, 1, $file_content_types[$outerloop_counter], 0755, 1, \"w\", \"fgetc_basic\", 1);\n  //open the file in different modes and check the working of fgetc\n  for($innerloop_counter = 0; $innerloop_counter < count($file_modes); $innerloop_counter++) {\n    echo \"-- Innerloop iteration \";\n    echo $innerloop_counter + 1;\n    echo \" of Outerloop Iteration \";\n    echo $outerloop_counter + 1;\n    echo \" --\\n\";\n    // open the file using the $file_modes\n    $filename = __DIR__.\"/fgetc_basic1.tmp\"; // file name that is created by create_files\n    echo \"-- Testing fgetc() : file opened using $file_modes[$innerloop_counter] mode --\\n\";\n    $file_handle = fopen($filename, $file_modes[$innerloop_counter]);\n    if ( !$file_handle ) {\n      echo \"Error: failed to open file $filename!\";\n      exit();\n    }\n    // perform the read file at least 6 char and check\n    for( $counter = 1; $counter <= 6; $counter++ ) {\n      // read data from the file and check, file pointer position, feof etc\n      var_dump( fgetc($file_handle) ); // read a char\n      var_dump( ftell($file_handle) ); // file pointer position\n      var_dump( feof($file_handle) );  // is it eof()\n      var_dump($file_handle); // dump the $file_handle to see if any thing got modified\n    } // end of for\n    // close the file\n    fclose ( $file_handle);\n  } // end of innerloop for\n  // delete the file\n  delete_files(__DIR__, 1, \"fgetc_basic\", 1, \".tmp\");\n} // end of outerloop for\necho \"Done\\n\";\n?>")).toMatchSnapshot();
  });
});
