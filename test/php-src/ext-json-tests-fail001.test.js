// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/json/tests/fail001.phpt
  it("JSON (http://www.crockford.com/JSON/JSON_checker/test/fail*.json)", function () {
    expect(parser.parseCode("<?php\n$tests = array(\n    '\"A JSON payload should be an object or array, not a string.\"',\n    '[\"Unclosed array\"',\n    '{unquoted_key: \"keys must be quoted}',\n    '[\"extra comma\",]',\n    '[\"double extra comma\",,]',\n    '[   , \"<-- missing value\"]',\n    '[\"Comma after the close\"],',\n    '[\"Extra close\"]]',\n    '{\"Extra comma\": true,}',\n    '{\"Extra value after close\": true} \"misplaced quoted value\"',\n    '{\"Illegal expression\": 1 + 2}',\n    '{\"Illegal invocation\": alert()}',\n    '{\"Numbers cannot have leading zeroes\": 013}',\n    '{\"Numbers cannot be hex\": 0x14}',\n    '[\"Illegal backslash escape: \\\\x15\"]',\n    '[\"Illegal backslash escape: \\\\\\'\"]',\n    '[\"Illegal backslash escape: \\\\017\"]',\noo deepn    '{\"Missing colon\" null}',\n    '{\"Double colon\":: null}',\n    '{\"Comma instead of colon\", null}',\n    '[\"Colon instead of comma\": false]',\n    '[\"Bad value\", truth]',\n    \"['single quote']\"\n);\nforeach ($tests as $test) {\n    echo 'Testing: ' . $test . \"\\n\";\n    echo \"AS OBJECT\\n\";\n    var_dump(json_decode($test));\n    echo \"AS ARRAY\\n\";\n    var_dump(json_decode($test, true));\n}\n?>")).toMatchSnapshot();
  });
});
