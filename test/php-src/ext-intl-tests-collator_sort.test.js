// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/intl/tests/collator_sort.phpt
  it("sort()", function () {
    expect(parser.parseCode("<?php\n/*\n * Sort arrays using various locales.\n */\n$test_num = 1;\n/*\n * Sort arrays in the given list using specified locale.\n */\nfunction sort_arrays( $locale, $arrays, $sort_flag = Collator::SORT_REGULAR )\n{\n    $res_str = '';\n    $coll = ut_coll_create( $locale );\n    foreach( $arrays as $array )\n    {\n        // Sort array values\n        $res_val = ut_coll_sort( $coll, $array, $sort_flag );\n        // Concatenate the sorted array and function result\n        // with output string.\n        $res_dump = \"\\n\" . dump( $array ) .\n                    \"\\n Result: \" . dump( $res_val );\n        // Preppend test signature to output string\n        $md5 = md5( $res_dump );\n        global $test_num;\n        $res_str .= \"\\n\\n\".\n                    \"Test $test_num.$md5:\" .\n                    $res_dump;\n        ++$test_num;\n    }\n    return $res_str;\n}\nfunction ut_main()\n{\n    global $test_num;\n    $test_num = 1;\n    $res_str = '';\n    // Sort an array in SORT_REGULAR mode using en_US locale.\n    $test_params = array(\n        array( 'abc', 'abd', 'aaa' ),\n        array( 'm'  , '1'  , '_'   ),\n        array( 'a'  , 'aaa', 'aa'  ),\n        array( 'ba' , 'b'  , 'ab'  ),\n        array( 'e'  , 'c'  , 'a'   ),\n        array( '100', '25' , '36'  ),\n        array( 5    , '30' , 2     ),\n        array( 'd'  , ''   , ' a'  ),\n        array( 'd ' , 'f ' , ' a'  ),\n        array( 'a'  , null , '3'   ),\n        array( 'y'  , 'k'  , 'i' )\n    );\n    $res_str .= sort_arrays( 'en_US', $test_params );\n    $test_params = array(\n        array( '100', '25' , '36'  ),\n        array( 5    , '30' , 2     ),\n        array( 'd'  , ''   , ' a'  ),\n        array( 'y'  , 'k'  , 'i' )\n    );\n    // Sort in en_US locale with SORT_STRING flag\n    $res_str .= sort_arrays( 'en_US', $test_params, Collator::SORT_STRING );\n    // Sort a non-ASCII array using ru_RU locale.\n    $test_params = array(\n        array( 'абг', 'абв', 'ааа', 'abc' ),\n        array( 'аа', 'ааа' , 'а' )\n    );\n    $res_str .= sort_arrays( 'ru_RU', $test_params );\n    // Sort an array using Lithuanian locale.\n    $test_params = array(\n        array( 'y'  , 'k'  , 'i' )\n    );\n    $res_str .= sort_arrays( 'lt_LT', $test_params );\n    return $res_str;\n}\ninclude_once( 'ut_common.inc' );\nut_run();\n?>")).toMatchSnapshot();
  });
});
