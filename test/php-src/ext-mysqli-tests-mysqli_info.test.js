// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/mysqli_info.phpt
  it("mysqli_info()", function () {
    expect(parser.parseCode("<?php\n    require_once(\"connect.inc\");\n    require \"table.inc\";\n    if (!$res = mysqli_query($link, \"INSERT INTO test(id, label) VALUES (100, 'a')\"))\n        printf(\"[003] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    // NOTE: empty string, no multiple insert syntax\n    if (!is_null($tmp = mysqli_info($link)) || ('' != $tmp))\n        printf(\"[004] Expecting null, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (!$res = mysqli_query($link, \"INSERT INTO test(id, label) VALUES (101, 'a'), (102, 'b')\"))\n        printf(\"[005] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    if (!is_string($tmp = mysqli_info($link)) || ('' == $tmp))\n        printf(\"[006] Expecting string/any_non_empty, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (!$res = mysqli_query($link, 'INSERT INTO test(id, label) SELECT id + 200, label FROM test'))\n        printf(\"[007] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    if (!is_string($tmp = mysqli_info($link)) || ('' == $tmp))\n        printf(\"[008] Expecting string/any_non_empty, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (!$res = mysqli_query($link, 'ALTER TABLE test MODIFY label CHAR(2)'))\n        printf(\"[009] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    if (!is_string($tmp = mysqli_info($link)) || ('' == $tmp))\n        printf(\"[010] Expecting string/any_non_empty, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (!$res = mysqli_query($link, \"UPDATE test SET label = 'b' WHERE id >= 100\"))\n        printf(\"[011] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    if (!is_string($tmp = mysqli_info($link)) || ('' == $tmp))\n        printf(\"[012] Expecting string/any_non_empty, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (!$res = mysqli_query($link, \"SELECT 1\"))\n        printf(\"[013] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    if (!is_null($tmp = mysqli_info($link)) || ('' != $tmp))\n        printf(\"[014] Expecting null, got %s/%s\\n\", gettype($tmp), $tmp);\n    mysqli_free_result($res);\n    // NOTE: no LOAD DATA INFILE test\n    if ($dir = sys_get_temp_dir()) {\n        do {\n            $file = $dir . '/' . 'mysqli_info_phpt.cvs';\n            if (!$fp = fopen($file, 'w'))\n                /* ignore this error */\n                break;\n            if (!fwrite($fp, \"100;'a';\\n\") ||\n                !fwrite($fp, \"101;'b';\\n\") ||\n                !fwrite($fp, \"102;'c';\\n\")) {\n                @unlink($file);\n                break;\n            }\n            fclose($fp);\n            if (!mysqli_query($link, \"DELETE FROM test\")) {\n                printf(\"[015] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n                break;\n            }\n            if (!@mysqli_query($link, sprintf(\"LOAD DATA LOCAL INFILE '%s' INTO TABLE test FIELDS TERMINATED BY ';' OPTIONALLY ENCLOSED BY '\\'' LINES TERMINATED BY '\\n'\", $file))) {\n                /* ok, because we might not be allowed to do this */\n                @unlink($file);\n                break;\n            }\n            if (!is_string($tmp = mysqli_info($link)) || ('' == $tmp))\n                printf(\"[016] Expecting string/any_non_empty, got %s/%s\\n\", gettype($tmp), $tmp);\n            unlink($file);\n        } while (false);\n    }\n    print \"done!\";\n?>")).toMatchSnapshot();
  });
});
