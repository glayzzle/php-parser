// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/mysqli_insert_id_variation.phpt
  it("Checking last_insert_id after different operations", function () {
    expect(parser.parseCode("<?php\nrequire_once(\"connect.inc\");\nif (!$link = my_mysqli_connect($host, $user, $passwd, $db, $port, $socket))\n    printf(\"[001] Cannot connect to the server using host=%s, user=%s, passwd=***, dbname=%s, port=%s, socket=%s\\n\",\n                        $host, $user, $db, $port, $socket);\n$link->query(\"DROP TABLE IF EXISTS test_insert_id_var\");\n$link->query(\"CREATE TABLE test_insert_id_var (id INT auto_increment, PRIMARY KEY (id))\");\n$link->query(\"INSERT INTO test_insert_id_var VALUES (null)\");\n$i = $link->insert_id;\nif (!$i) {\n    printf(\"[001] Got no valid insert id: %s\", var_export($i, true));\n    die();\n}\n$link->options(MYSQLI_OPT_LOCAL_INFILE, false);\nif ($i != $link->insert_id || $i != mysqli_insert_id($link)) {\n    printf(\"[002] mysqli_option changes insert_id: %s\", var_export($link->insert_id, true));\n    die();\n}\n/*\n$link->dump_debug_info();\nif ($i != $link->insert_id || $i != mysqli_insert_id($link)) {\n    printf(\"[003] mysqli_debug_info changes insert_id: %s\", var_export($link->insert_id, true));\n    die();\n}\n*/\n$link->stat();\nif ($i != $link->insert_id || $i != mysqli_insert_id($link)) {\n    printf(\"[004] mysqli_stat changes insert_id: %s\", var_export($link->insert_id, true));\n    die();\n}\n/*$link->kill($link->thread_id);\nif ($i != $link->insert_id || $i != mysqli_insert_id($link)) {\n    printf(\"[005] mysqli_kill changes insert_id: %s\", var_export($link->insert_id, true));\n    die();\n}*/\n$link->ping();\nif ($i != $link->insert_id || $i != mysqli_insert_id($link)) {\n    printf(\"[006] mysqli_ping changes insert_id: %s\", var_export($link->insert_id, true));\n    die();\n}\n/*\nmysqlnd resets the IDE to 0\nlibmysql doesn't\n$link->change_user ($user, $passwd, $db);\nif (0 != $link->insert_id || 0 != mysqli_insert_id($link)) {\n    printf(\"[007] mysqli_change_user changes insert_id: %s\", var_export($link->insert_id, true));\n    die();\n}\n*/\n$stmt = $link->prepare(\"SELECT 1\");\nif ($i != $link->insert_id || $i != mysqli_insert_id($link)) {\n    printf(\"[008a] mysqli_prepare changes insert_id: %s\", var_export($link->insert_id, true));\n    die();\n}\necho mysqli_error($link);\nif (0 != $stmt->insert_id || 0 != mysqli_stmt_insert_id($stmt)) {\n    printf(\"[008b] mysqli_stmt doesn't initialise insert_id: %s\", var_export($stmt->insert_id, true));\n    die();\n}\nunset($stmt);\nif ($i != $link->insert_id || $i != mysqli_insert_id($link)) {\n    printf(\"[009] stmt free changes insert_id: %s\", var_export($link->insert_id, true));\n    die();\n}\n$link->query(\"DROP TABLE IF EXISTS test_insert_id_var\");\necho \"DONE\";\n?>")).toMatchSnapshot();
  });
});
