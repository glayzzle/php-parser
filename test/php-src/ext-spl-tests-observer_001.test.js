// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/spl/tests/observer_001.phpt
  it("SPL: SplObserver and SplSubject (empty notify)", function () {
    expect(parser.parseCode("<?php\nclass ObserverImpl implements SplObserver\n{\n    protected $name = '';\n    function __construct($name = 'obj')\n    {\n        $this->name = '$' . $name;\n    }\n    function update(SplSubject $subject): void\n    {\n        echo $this->name . '->' . __METHOD__ . '(' . $subject->getName() . \");\\n\";\n    }\n    function getName()\n    {\n        return $this->name;\n    }\n}\nclass SubjectImpl implements SplSubject\n{\n    protected $name = '';\n    protected $observers = array();\n    function __construct($name = 'sub')\n    {\n        $this->name = '$' . $name;\n    }\n    function attach(SplObserver $observer): void\n    {\n        echo '$sub->' . __METHOD__ . '(' . $observer->getName() . \");\\n\";\n        if (!in_array($observer, $this->observers))\n        {\n            $this->observers[] = $observer;\n        }\n    }\n    function detach(SplObserver $observer): void\n    {\n        echo '$sub->' . __METHOD__ . '(' . $observer->getName() . \");\\n\";\n        $idx = array_search($observer, $this->observers);\n        if ($idx !== false)\n        {\n            unset($this->observers[$idx]);\n        }\n    }\n    function notify(): void\n    {\n        echo '$sub->' . __METHOD__ . \"();\\n\";\n        foreach($this->observers as $observer)\n        {\n            $observer->update($this);\n        }\n    }\n    function getName()\n    {\n        return $this->name;\n    }\n}\n$sub = new SubjectImpl;\n$ob1 = new ObserverImpl(\"ob1\");\n$ob2 = new ObserverImpl(\"ob2\");\n$ob3 = new ObserverImpl(\"ob3\");\n$sub->attach($ob1);\n$sub->attach($ob1);\n$sub->attach($ob2);\n$sub->attach($ob3);\n$sub->notify();\n$sub->detach($ob3);\n$sub->notify();\n$sub->detach($ob2);\n$sub->detach($ob1);\n$sub->notify();\n$sub->attach($ob3);\n$sub->notify();\n?>")).toMatchSnapshot();
  });
});
