// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/file/fputcsv_variation11.phpt
  it("Test fputcsv() : usage variations - with default enclosure value", function () {
    expect(parser.parseCode("<?php\n/* Testing fputcsv() to write to a file when default enclosure value is provided */\necho \"*** Testing fputcsv() : with default enclosure value ***\\n\";\n/* the array is with three elements in it. Each element should be read as\n   1st element is delimiter, 2nd element is enclosure\n   and 3rd element is csv fields\n*/\n$csv_lists = array (\n  array(',', '\"', array('water,fruit') ),\n  array(',', '\"', array('\"water\",\"fruit') ),\n  array(',', '\"', array('\"water\",\"fruit\"') ),\n  array(' ', '^', array('^water^ ^fruit^')),\n  array(':', '&', array('&water&:&fruit&')),\n  array('=', '=', array('=water===fruit=')),\n  array('-', '-', array('-water--fruit-air')),\n  array('-', '-', array('-water---fruit---air-')),\n  array(':', '&', array('&\"\"\"\"&:&\"&:,:\":&,&:,,,,'))\n);\n$file_path = __DIR__;\n$filename = \"$file_path/fputcsv_variation11.tmp\";\n$file_modes = array (\"r+\", \"r+b\", \"r+t\",\n                     \"a+\", \"a+b\", \"a+t\",\n                     \"w+\", \"w+b\", \"w+t\",\n                     \"x+\", \"x+b\", \"x+t\");\n$loop_counter = 1;\nforeach ($csv_lists as $csv_list) {\n  for($mode_counter = 0; $mode_counter < count($file_modes); $mode_counter++) {\n    echo \"\\n-- file opened in $file_modes[$mode_counter] --\\n\";\n    // create the file and add the content with has csv fields\n    if ( strstr($file_modes[$mode_counter], \"r\") ) {\n      $file_handle = fopen($filename, \"w\");\n    } else {\n      $file_handle = fopen($filename, $file_modes[$mode_counter] );\n    }\n    if ( !$file_handle ) {\n      echo \"Error: failed to create file $filename!\\n\";\n      exit();\n    }\n    $delimiter = $csv_list[0];\n    $enclosure = $csv_list[1];\n    $csv_field = $csv_list[2];\n    // write to a file in csv format\n    var_dump( fputcsv($file_handle, $csv_field, $delimiter) );\n    // check the file pointer position and eof\n    var_dump( ftell($file_handle) );\n    var_dump( feof($file_handle) );\n    //close the file\n    fclose($file_handle);\n    // print the file contents\n    var_dump( file_get_contents($filename) );\n    //delete file\n    unlink($filename);\n  } //end of mode loop\n} // end of foreach\necho \"Done\\n\";\n?>")).toMatchSnapshot();
  });
});
