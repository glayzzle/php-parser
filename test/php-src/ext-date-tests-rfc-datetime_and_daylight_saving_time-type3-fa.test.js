// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/date/tests/rfc-datetime_and_daylight_saving_time-type3-fa.phpt
  it("RFC: DateTime and Daylight Saving Time Transitions (zone type 3, fa)", function () {
    expect(parser.parseCode("<?php\ndate_default_timezone_set('America/New_York');\n$date_format = 'Y-m-d H:i:s T e';\n$interval_format = 'P%dDT%hH';\n/*\n * Forward Transitions, add().\n */\n$start = new DateTime('2010-03-14 01:59:59');\n$interval_spec = 'PT1S';\n$interval = new DateInterval($interval_spec);\necho 'fa1 ' . $start->format($date_format) . \" + $interval_spec = \"\n    . $start->add($interval)->format($date_format) . \"\\n\";\n$start = new DateTime('2010-03-13 04:30:00');\n$interval_spec = 'P1D';\n$interval = new DateInterval($interval_spec);\necho 'fa2 ' . $start->format($date_format) . \" + $interval_spec = \"\n    . $start->add($interval)->format($date_format) . \"\\n\";\n$start = new DateTime('2010-03-13 04:30:00');\n$interval_spec = 'PT22H';\n$interval = new DateInterval($interval_spec);\necho 'fa3 ' . $start->format($date_format) . \" + $interval_spec = \"\n    . $start->add($interval)->format($date_format) . \"\\n\";\n$start = new DateTime('2010-03-13 04:30:00');\n$interval_spec = 'PT21H';\n$interval = new DateInterval($interval_spec);\necho 'fa4 ' . $start->format($date_format) . \" + $interval_spec = \"\n    . $start->add($interval)->format($date_format) . \"\\n\";\n$start = new DateTime('2010-03-13 01:30:00');\n$interval_spec = 'P1D';\n$interval = new DateInterval($interval_spec);\necho 'fa5 ' . $start->format($date_format) . \" + $interval_spec = \"\n    . $start->add($interval)->format($date_format) . \"\\n\";\n$start = new DateTime('2010-03-13 02:30:00');\n$interval_spec = 'P1D';\n$interval = new DateInterval($interval_spec);\necho 'fa6 ' . $start->format($date_format) . \" + $interval_spec = \"\n    . $start->add($interval)->format($date_format) . \"\\n\";\n?>")).toMatchSnapshot();
  });
});
