// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/intl/tests/msgfmt_format_subpatterns_named.phpt
  it("msgfmt_format() with named subpatterns", function () {
    expect(parser.parseCode("<?php\n/*\n * Format a number using misc locales/patterns.\n */\nfunction ut_main()\n{\n$pattern=<<<_MSG_\n{gender_of_host, select,\n  female {{num_guests, plural, offset:1\n      =0 {{host} does not give a party.}\n      =1 {{host} invites {guest} to her party.}\n      =2 {{host} invites {guest} and one other person to her party.}\n     other {{host} invites {guest} as one of the # people invited to her party.}}}\n  male   {{num_guests, plural, offset:1\n      =0 {{host} does not give a party.}\n      =1 {{host} invites {guest} to his party.}\n      =2 {{host} invites {guest} and one other person to his party.}\n     other {{host} invites {guest} as one of the # people invited to his party.}}}\n  other {{num_guests, plural, offset:1\n      =0 {{host} does not give a party.}\n      =1 {{host} invites {guest} to their party.}\n      =2 {{host} invites {guest} and one other person to their party.}\n     other {{host} invites {guest} as one of the # people invited to their party.}}}}\n_MSG_;\n$args = array(\n      array('gender_of_host' => 'female', 'num_guests' => 0, 'host' => 'Alice', 'guest' => 'Bob'),\n      array('gender_of_host' => 'male', 'num_guests' => 1, 'host' => 'Alice', 'guest' => 'Bob'),\n      array('gender_of_host' => 'none', 'num_guests' => 2, 'host' => 'Alice', 'guest' => 'Bob'),\n      array('gender_of_host' => 'female', 'num_guests' => 27, 'host' => 'Alice', 'guest' => 'Bob'),\n);\n$str_res = '';\n        $fmt = ut_msgfmt_create( 'en_US', $pattern );\n        if(!$fmt) {\n            $str_res .= dump(intl_get_error_message()).\"\\n\";\n            return $str_res;\n        }\n        foreach ($args as $arg) {\n            $str_res .= dump( ut_msgfmt_format($fmt, $arg) ). \"\\n\";\n            $str_res .= dump( ut_msgfmt_format_message('en_US', $pattern, $arg) ) . \"\\n\";\n    }\n    return $str_res;\n}\ninclude_once( 'ut_common.inc' );\n// Run the test\nut_run();\n?>")).toMatchSnapshot();
  });
});
