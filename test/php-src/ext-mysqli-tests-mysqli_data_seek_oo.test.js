// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/mysqli_data_seek_oo.phpt
  it("mysqli_result->data_seek()", function () {
    expect(parser.parseCode("<?php\n    require_once(\"connect.inc\");\n    require('table.inc');\n    if (!$mysqli = new mysqli($host, $user, $passwd, $db, $port, $socket))\n    printf(\"[001] Cannot connect to the server using host=%s, user=%s, passwd=***, dbname=%s, port=%s, socket=%s\\n\",\n        $host, $user, $db, $port, $socket);\n    $res = new mysqli_result($mysqli);\n    try {\n        $res->data_seek(0);\n    } catch (Error $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    if (!$res = $mysqli->query('SELECT * FROM test ORDER BY id LIMIT 4', MYSQLI_STORE_RESULT))\n        printf(\"[003] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    if (true !== ($tmp = $res->data_seek(3)))\n        printf(\"[007] Expecting boolean/true, got %s/%s\\n\", gettype($tmp), $tmp);\n    $row = $res->fetch_assoc();\n    if (4 != $row['id'])\n        printf(\"[008] Expecting record 4/d, got record %s/%s\\n\", $row['id'], $row['label']);\n    if (true !== ($tmp = $res->data_seek(0)))\n        printf(\"[009] Expecting boolean/true, got %s/%s\\n\", gettype($tmp), $tmp);\n    $row = $res->fetch_assoc();\n    if (1 != $row['id'])\n        printf(\"[010] Expecting record 1/a, got record %s/%s\\n\", $row['id'], $row['label']);\n    if (false !== ($tmp = $res->data_seek(4)))\n        printf(\"[011] Expecting boolean/false, got %s/%s\\n\", gettype($tmp), $tmp);\n    try {\n        $res->data_seek(-1);\n    } catch (\\ValueError $e) {\n        echo $e->getMessage() . \\PHP_EOL;\n    }\n    $res->free_result();\n    if (!$res = $mysqli->query('SELECT * FROM test ORDER BY id', MYSQLI_USE_RESULT))\n        printf(\"[013] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    try {\n        var_dump($res->data_seek(3));\n    } catch (\\Error $e) {\n        echo $e->getMessage() . \\PHP_EOL;\n    }\n    $res->free_result();\n    try {\n        $res->data_seek(1);\n    } catch (Error $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    $mysqli->close();\n    print \"done!\";")).toMatchSnapshot();
  });
});
