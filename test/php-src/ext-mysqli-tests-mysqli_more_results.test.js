// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/mysqli_more_results.phpt
  it("mysqli_more_results()", function () {
    expect(parser.parseCode("<?php\n    require_once(\"connect.inc\");\n    require('table.inc');\n    print \"[004]\\n\";\n    var_dump(mysqli_more_results($link));\n    if (!mysqli_multi_query($link, \"SELECT 1 AS a; SELECT 1 AS a, 2 AS b; SELECT id FROM test ORDER BY id LIMIT 3\"))\n        printf(\"[005] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    print \"[006]\\n\";\n    $i = 1;\n    if (mysqli_get_server_version($link) > 41000 && !($ret = mysqli_more_results($link)))\n        printf(\"[007] Expecting boolean/true, got %s/%s\\n\", gettype($ret), $ret);\n    do {\n        $res = mysqli_store_result($link);\n        mysqli_free_result($res);\n        if (mysqli_more_results($link))\n            printf(\"%d\\n\", $i++);\n    } while (mysqli_next_result($link));\n    if (!mysqli_multi_query($link, \"SELECT 1 AS a; SELECT 1 AS a, 2 AS b; SELECT id FROM test ORDER BY id LIMIT 3\"))\n        printf(\"[009] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    print \"[010]\\n\";\n    $i = 1;\n    if (mysqli_get_server_version($link) > 41000 && !($ret = mysqli_more_results($link)))\n        printf(\"[011] Expecting boolean/true, got %s/%s\\n\", gettype($ret), $ret);\n    do {\n        $res = mysqli_use_result($link);\n        // NOTE: if you use mysqli_use_result() with mysqli_more_results() or any other info function,\n        // you must fetch all rows before you can loop to the next result set!\n        // See also the MySQL Reference Manual: mysql_use_result()\n        while ($row = mysqli_fetch_array($res))\n            ;\n        mysqli_free_result($res);\n        if (mysqli_more_results($link))\n            printf(\"%d\\n\", $i++);\n    } while (mysqli_next_result($link));\n    mysqli_close($link);\n    try {\n        mysqli_more_results($link);\n    } catch (Error $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    print \"done!\";\n?>")).toMatchSnapshot();
  });
});
