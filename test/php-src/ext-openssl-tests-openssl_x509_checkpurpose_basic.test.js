// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/openssl/tests/openssl_x509_checkpurpose_basic.phpt
  it("int openssl_x509_checkpurpose ( mixed $x509cert , int $purpose [, array $cainfo = array() [, string $untrustedfile ]] ) function", function () {
    expect(parser.parseCode("<?php\ninclude 'CertificateGenerator.inc';\n$certificateGenerator = new CertificateGenerator();\n$certificateGenerator->saveCaCert(__DIR__ . \"/san-cert.pem\");\n$cert = \"file://\" . __DIR__ . \"/cert.crt\";\n$bert = \"file://\" . __DIR__ . \"/bug41033.pem\";\n$sert = \"file://\" . __DIR__ . \"/san-cert.pem\";\n$cpca = __DIR__ . \"/san-cert.pem\";\n$utfl = __DIR__ . \"/sni_server_uk.pem\";\n$rcrt = openssl_x509_read($cert);\n/*  int openssl_x509_checkpurpose ( mixed $x509cert , int $purpose);   */\nvar_dump(openssl_x509_checkpurpose($cert, X509_PURPOSE_SSL_CLIENT));\nvar_dump(openssl_x509_checkpurpose($cert, X509_PURPOSE_SSL_SERVER));\nvar_dump(openssl_x509_checkpurpose($cert, X509_PURPOSE_NS_SSL_SERVER));\nvar_dump(openssl_x509_checkpurpose($cert, X509_PURPOSE_SMIME_SIGN));\nvar_dump(openssl_x509_checkpurpose($cert, X509_PURPOSE_SMIME_ENCRYPT));\nvar_dump(openssl_x509_checkpurpose($cert, X509_PURPOSE_CRL_SIGN));\nvar_dump(openssl_x509_checkpurpose($cert, X509_PURPOSE_ANY));\nvar_dump(openssl_x509_checkpurpose($bert, X509_PURPOSE_SSL_CLIENT));\nvar_dump(openssl_x509_checkpurpose($bert, X509_PURPOSE_SSL_SERVER));\nvar_dump(openssl_x509_checkpurpose($bert, X509_PURPOSE_NS_SSL_SERVER));\nvar_dump(openssl_x509_checkpurpose($bert, X509_PURPOSE_SMIME_SIGN));\nvar_dump(openssl_x509_checkpurpose($bert, X509_PURPOSE_SMIME_ENCRYPT));\nvar_dump(openssl_x509_checkpurpose($bert, X509_PURPOSE_CRL_SIGN));\nvar_dump(openssl_x509_checkpurpose($bert, X509_PURPOSE_ANY));\nvar_dump(openssl_x509_checkpurpose($sert, X509_PURPOSE_SSL_CLIENT));\nvar_dump(openssl_x509_checkpurpose($sert, X509_PURPOSE_SSL_SERVER));\nvar_dump(openssl_x509_checkpurpose($sert, X509_PURPOSE_NS_SSL_SERVER));\nvar_dump(openssl_x509_checkpurpose($sert, X509_PURPOSE_SMIME_SIGN));\nvar_dump(openssl_x509_checkpurpose($sert, X509_PURPOSE_SMIME_ENCRYPT));\nvar_dump(openssl_x509_checkpurpose($sert, X509_PURPOSE_CRL_SIGN));\nvar_dump(openssl_x509_checkpurpose($sert, X509_PURPOSE_ANY));\n/* int openssl_x509_checkpurpose ( mixed $x509cert , int $purpose [, array $cainfo = array() ] ); */\nvar_dump(openssl_x509_checkpurpose($cert, X509_PURPOSE_SSL_CLIENT, array($cpca)));\nvar_dump(openssl_x509_checkpurpose($cert, X509_PURPOSE_SSL_SERVER, array($cpca)));\nvar_dump(openssl_x509_checkpurpose($cert, X509_PURPOSE_NS_SSL_SERVER, array($cpca)));\nvar_dump(openssl_x509_checkpurpose($cert, X509_PURPOSE_SMIME_SIGN, array($cpca)));\nvar_dump(openssl_x509_checkpurpose($cert, X509_PURPOSE_SMIME_ENCRYPT, array($cpca)));\nvar_dump(openssl_x509_checkpurpose($cert, X509_PURPOSE_CRL_SIGN, array($cpca)));\nvar_dump(openssl_x509_checkpurpose($rcrt, X509_PURPOSE_ANY, array($cpca)));\nvar_dump(openssl_x509_checkpurpose($bert, X509_PURPOSE_SSL_CLIENT, array($cpca)));\nvar_dump(openssl_x509_checkpurpose($bert, X509_PURPOSE_SSL_SERVER, array($cpca)));\nvar_dump(openssl_x509_checkpurpose($bert, X509_PURPOSE_NS_SSL_SERVER, array($cpca)));\nvar_dump(openssl_x509_checkpurpose($bert, X509_PURPOSE_SMIME_SIGN, array($cpca)));\nvar_dump(openssl_x509_checkpurpose($bert, X509_PURPOSE_SMIME_ENCRYPT, array($cpca)));\nvar_dump(openssl_x509_checkpurpose($bert, X509_PURPOSE_CRL_SIGN, array($cpca)));\nvar_dump(openssl_x509_checkpurpose($bert, X509_PURPOSE_ANY, array($cpca)));\nvar_dump(openssl_x509_checkpurpose($sert, X509_PURPOSE_SSL_CLIENT, array($cpca)));\nvar_dump(openssl_x509_checkpurpose($sert, X509_PURPOSE_SSL_SERVER, array($cpca)));\nvar_dump(openssl_x509_checkpurpose($sert, X509_PURPOSE_NS_SSL_SERVER, array($cpca)));\nvar_dump(openssl_x509_checkpurpose($sert, X509_PURPOSE_SMIME_SIGN, array($cpca)));\nvar_dump(openssl_x509_checkpurpose($sert, X509_PURPOSE_SMIME_ENCRYPT, array($cpca)));\nvar_dump(openssl_x509_checkpurpose($sert, X509_PURPOSE_CRL_SIGN, array($cpca)));\nvar_dump(openssl_x509_checkpurpose($sert, X509_PURPOSE_ANY, array($cpca)));\n/* int openssl_x509_checkpurpose ( mixed $x509cert , int $purpose [, array $cainfo = array() [, string $untrustedfile ]] ); function */\nvar_dump(openssl_x509_checkpurpose($cert, X509_PURPOSE_SSL_CLIENT, array($cpca), $utfl));\nvar_dump(openssl_x509_checkpurpose($cert, X509_PURPOSE_SSL_SERVER, array($cpca), $utfl));\nvar_dump(openssl_x509_checkpurpose($cert, X509_PURPOSE_NS_SSL_SERVER, array($cpca), $utfl));\nvar_dump(openssl_x509_checkpurpose($cert, X509_PURPOSE_SMIME_SIGN, array($cpca), $utfl));\nvar_dump(openssl_x509_checkpurpose($cert, X509_PURPOSE_SMIME_ENCRYPT, array($cpca), $utfl));\nvar_dump(openssl_x509_checkpurpose($cert, X509_PURPOSE_CRL_SIGN, array($cpca), $utfl));\nvar_dump(openssl_x509_checkpurpose($cert, X509_PURPOSE_ANY, array($cpca), $utfl));\nvar_dump(openssl_x509_checkpurpose($bert, X509_PURPOSE_SSL_CLIENT, array($cpca), $utfl));\nvar_dump(openssl_x509_checkpurpose($bert, X509_PURPOSE_SSL_SERVER, array($cpca), $utfl));\nvar_dump(openssl_x509_checkpurpose($bert, X509_PURPOSE_NS_SSL_SERVER, array($cpca), $utfl));\nvar_dump(openssl_x509_checkpurpose($bert, X509_PURPOSE_SMIME_SIGN, array($cpca), $utfl));\nvar_dump(openssl_x509_checkpurpose($bert, X509_PURPOSE_SMIME_ENCRYPT, array($cpca), $utfl));\nvar_dump(openssl_x509_checkpurpose($bert, X509_PURPOSE_CRL_SIGN, array($cpca), $utfl));\nvar_dump(openssl_x509_checkpurpose($bert, X509_PURPOSE_ANY, array($cpca), $utfl));\nvar_dump(openssl_x509_checkpurpose($sert, X509_PURPOSE_SSL_CLIENT, array($cpca), $utfl));\nvar_dump(openssl_x509_checkpurpose($sert, X509_PURPOSE_SSL_SERVER, array($cpca), $utfl));\nvar_dump(openssl_x509_checkpurpose($sert, X509_PURPOSE_NS_SSL_SERVER, array($cpca), $utfl));\nvar_dump(openssl_x509_checkpurpose($sert, X509_PURPOSE_SMIME_SIGN, array($cpca), $utfl));\nvar_dump(openssl_x509_checkpurpose($sert, X509_PURPOSE_SMIME_ENCRYPT, array($cpca), $utfl));\nvar_dump(openssl_x509_checkpurpose($sert, X509_PURPOSE_CRL_SIGN, array($cpca), $utfl));\nvar_dump(openssl_x509_checkpurpose($sert, X509_PURPOSE_ANY, array($cpca), $utfl));\n?>")).toMatchSnapshot();
  });
});
