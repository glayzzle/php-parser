// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/openssl/tests/sni_server.phpt
  it("sni_server", function () {
    expect(parser.parseCode("<?php\n$serverCode = <<<'CODE'\n    $flags = STREAM_SERVER_BIND|STREAM_SERVER_LISTEN;\n    $ctx = stream_context_create(['ssl' => [\n        'local_cert' => __DIR__ . '/domain1.pem',\n        'SNI_server_certs' => [\n            \"cs.php.net\" => __DIR__ . \"/sni_server_cs.pem\",\n            \"uk.php.net\" => __DIR__ . \"/sni_server_uk.pem\",\n            \"us.php.net\" => __DIR__ . \"/sni_server_us.pem\"\n        ]\n    ]]);\n    $server = stream_socket_server('tls://127.0.0.1:64321', $errno, $errstr, $flags, $ctx);\n    phpt_notify();\n    for ($i=0; $i < 3; $i++) {\n        @stream_socket_accept($server, 3);\n    }\nCODE;\n$clientCode = <<<'CODE'\n    $flags = STREAM_CLIENT_CONNECT;\n    $ctxArr = [\n        'cafile' => __DIR__ . '/sni_server_ca.pem',\n        'capture_peer_cert' => true\n    ];\n    phpt_wait();\n    $ctxArr['peer_name'] = 'cs.php.net';\n    $ctx = stream_context_create(['ssl' => $ctxArr]);\n    $client = stream_socket_client(\"tls://127.0.0.1:64321\", $errno, $errstr, 1, $flags, $ctx);\n    $cert = stream_context_get_options($ctx)['ssl']['peer_certificate'];\n    var_dump(openssl_x509_parse($cert)['subject']['CN']);\n    $ctxArr['peer_name'] = 'uk.php.net';\n    $ctx = stream_context_create(['ssl' => $ctxArr]);\n    $client = @stream_socket_client(\"tls://127.0.0.1:64321\", $errno, $errstr, 1, $flags, $ctx);\n    $cert = stream_context_get_options($ctx)['ssl']['peer_certificate'];\n    var_dump(openssl_x509_parse($cert)['subject']['CN']);\n    $ctxArr['peer_name'] = 'us.php.net';\n    $ctx = stream_context_create(['ssl' => $ctxArr]);\n    $client = @stream_socket_client(\"tls://127.0.0.1:64321\", $errno, $errstr, 1, $flags, $ctx);\n    $cert = stream_context_get_options($ctx)['ssl']['peer_certificate'];\n    var_dump(openssl_x509_parse($cert)['subject']['CN']);\nCODE;\ninclude 'ServerClientTestCase.inc';\nServerClientTestCase::getInstance()->run($clientCode, $serverCode);\n?>")).toMatchSnapshot();
  });
});
