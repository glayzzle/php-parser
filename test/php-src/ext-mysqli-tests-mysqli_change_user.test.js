// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/mysqli_change_user.phpt
  it("mysqli_change_user()", function () {
    expect(parser.parseCode("<?php\n    require_once(\"connect.inc\");\n    if (!$link = my_mysqli_connect($host, $user, $passwd, $db, $port, $socket))\n        printf(\"[006] Cannot connect to the server using host=%s, user=%s, passwd=***, dbname=%s, port=%s, socket=%s\\n\",\n            $host, $user, $db, $port, $socket);\n    if (false !== ($tmp = @mysqli_change_user($link, $user . '_unknown_really', $passwd . 'non_empty', $db)))\n        printf(\"[007] Expecting false, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (!$link = my_mysqli_connect($host, $user, $passwd, $db, $port, $socket))\n        printf(\"[008] Cannot connect to the server using host=%s, user=%s, passwd=***, dbname=%s, port=%s, socket=%s\\n\",\n            $host, $user, $db, $port, $socket);\n    if (false !== ($tmp = @mysqli_change_user($link, $user, $passwd . '_unknown_really', $db)))\n        printf(\"[009] Expecting false, got %s/%s\\n\", gettype($tmp), $tmp);\n    // Reconnect because after 3 failed change_user attempts, the server blocks you off.\n    if (!$link = my_mysqli_connect($host, $user, $passwd, $db, $port, $socket))\n        printf(\"[009a] Cannot connect to the server using host=%s, user=%s, passwd=***, dbname=%s, port=%s, socket=%s\\n\",\n            $host, $user, $db, $port, $socket);\n    if (!mysqli_query($link, 'SET @mysqli_change_user_test_var=1'))\n        printf(\"[010] Failed to set test variable: [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    if (!$res = mysqli_query($link, 'SELECT @mysqli_change_user_test_var AS test_var'))\n        printf(\"[011] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    $tmp = mysqli_fetch_assoc($res);\n    mysqli_free_result($res);\n    if (1 != $tmp['test_var'])\n        printf(\"[012] Cannot set test variable\\n\");\n    if (true !== ($tmp = mysqli_change_user($link, $user, $passwd, $db)))\n        printf(\"[013] Expecting true, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (!$res = mysqli_query($link, 'SELECT database() AS dbname, user() AS user'))\n        printf(\"[014] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    $tmp = mysqli_fetch_assoc($res);\n    mysqli_free_result($res);\n    if (substr($tmp['user'], 0, strlen($user)) !== $user)\n        printf(\"[015] Expecting user %s, got user() %s\\n\", $user, $tmp['user']);\n    if ($tmp['dbname'] != $db)\n        printf(\"[016] Expecting database %s, got database() %s\\n\", $db, $tmp['dbname']);\n    if (false !== ($tmp = @mysqli_change_user($link, $user, $passwd, $db . '_unknown_really')))\n        printf(\"[011] Expecting false, got %s/%s\\n\", gettype($tmp), $tmp);\n    mysqli_close($link);\n    if (!$link = my_mysqli_connect($host, $user, $passwd, $db, $port, $socket)) {\n        printf(\"[012] Cannot connect to the server using host=%s, user=%s, passwd=***, dbname=%s, port=%s, socket=%s\\n\",\n            $host, $user, $db, $port, $socket);\n    }\n    if (false !== ($tmp = @mysqli_change_user($link, str_repeat('user', 16384), str_repeat('pass', 16384), str_repeat('dbase', 16384))))\n        printf(\"[013] Expecting false, got %s/%s\\n\", gettype($tmp), $tmp);\n    mysqli_close($link);\n    if (!$link = my_mysqli_connect($host, $user, $passwd, $db, $port, $socket)) {\n        printf(\"[014] Cannot connect to the server using host=%s, user=%s, passwd=***, dbname=%s, port=%s, socket=%s\\n\",\n            $host, $user, $db, $port, $socket);\n    }\n    /* silent protocol change if no db which requires workaround in mysqlnd/libmysql\n    (empty db = no db send with COM_CHANGE_USER) */\n    if (true !== ($tmp = mysqli_change_user($link, $user, $passwd, \"\")))\n        printf(\"[015] Expecting true, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (!$res = mysqli_query($link, 'SELECT database() AS dbname, user() AS user'))\n        printf(\"[016] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    $tmp = mysqli_fetch_assoc($res);\n    mysqli_free_result($res);\n    if ($tmp['dbname'] != \"\")\n        printf(\"[017] Expecting database '', got database() '%s'\\n\", $tmp['dbname']);\n    mysqli_close($link);\n    try {\n        mysqli_change_user($link, $user, $passwd, $db);\n    } catch (Error $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    if (!$link = my_mysqli_connect($host, $user, $passwd, $db, $port, $socket))\n        printf(\"[019] Cannot connect to the server using host=%s, user=%s, passwd=***, dbname=%s, port=%s, socket=%s\\n\",\n            $host, $user, $db, $port, $socket);\n    if (!mysqli_query($link, 'SET @mysqli_change_user_test_var=1'))\n        printf(\"[020] Failed to set test variable: [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    if (!$res = mysqli_query($link, 'SELECT @mysqli_change_user_test_var AS test_var'))\n        printf(\"[021] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    $tmp = mysqli_fetch_assoc($res);\n    mysqli_free_result($res);\n    if (1 != $tmp['test_var'])\n        printf(\"[022] Cannot set test variable\\n\");\n    if (true !== ($tmp = mysqli_change_user($link, $user, $passwd, $db)))\n        printf(\"[023] Expecting true, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (!$res = mysqli_query($link, 'SELECT database() AS dbname, user() AS user'))\n        printf(\"[024] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    $tmp = mysqli_fetch_assoc($res);\n    mysqli_free_result($res);\n    if (substr($tmp['user'], 0, strlen($user)) !== $user)\n        printf(\"[025] Expecting user %s, got user() %s\\n\", $user, $tmp['user']);\n    if ($tmp['dbname'] != $db)\n        printf(\"[026] Expecting database %s, got database() %s\\n\", $db, $tmp['dbname']);\n    if (!$res = mysqli_query($link, 'SELECT @mysqli_change_user_test_var AS test_var'))\n        printf(\"[027] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    $tmp = mysqli_fetch_assoc($res);\n    mysqli_free_result($res);\n    if (NULL !== $tmp['test_var'])\n        printf(\"[028] Test variable is still set!\\n\");\n    print \"done!\";\n?>")).toMatchSnapshot();
  });
});
