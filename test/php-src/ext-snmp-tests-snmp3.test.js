// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/snmp/tests/snmp3.phpt
  it("SNMPv3 Support", function () {
    expect(parser.parseCode("<?php\nrequire_once(__DIR__.'/snmp_include.inc');\n//int snmp3_get(string host, string sec_name, string sec_level, string auth_protocol,\n//              string auth_passphrase, string priv_protocol, string priv_passphrase,\n//              string object_id [, int timeout [, int retries]]);\necho \"Working version\\n\";\nsnmp_set_valueretrieval(SNMP_VALUE_PLAIN);\necho \"GET single: noAuthNoPriv\\n\";\nvar_dump(snmp3_get($hostname, $user_noauth, 'noAuthNoPriv', '', '', '', '', '.1.3.6.1.2.1.1.1.0', $timeout, $retries));\nforeach(array('MD5', 'SHA') as $signalg) {\n    echo \"GET single: $signalg\\n\";\n    var_dump(snmp3_get($hostname, $user_auth_prefix . $signalg, 'authNoPriv', $signalg, $auth_pass, '', '', '.1.3.6.1.2.1.1.1.0', $timeout, $retries));\n}\nforeach(array('AES', 'DES', 'AES128') as $chipher) {\n    echo \"GET single: MD5/$chipher\\n\";\n    var_dump(snmp3_get($hostname, $user_auth_prefix . 'MD5' . $chipher, 'authPriv', 'MD5', $auth_pass, $chipher, $priv_pass, '.1.3.6.1.2.1.1.1.0', $timeout, $retries));\n}\n$username = $user_auth_prefix . 'MD5';\necho \"GET multiple\\n\";\nvar_dump(snmp3_get($hostname, $username, 'authNoPriv', 'MD5', $auth_pass, '', '', array('.1.3.6.1.2.1.1.1.0', '.1.3.6.1.2.1.1.3.0'), $timeout, $retries));\necho \"GETNEXT single\\n\";\nvar_dump(snmp3_getnext($hostname, $username, 'authNoPriv', 'MD5', $auth_pass, '', '', '.1.3.6.1.2.1.1.1.0', $timeout, $retries));\necho \"WALK single on single OID\\n\";\n$z = snmp3_walk($hostname, $username, 'authNoPriv', 'MD5', $auth_pass, '', '', '.1.3.6.1.2.1.1.1.0', $timeout, $retries);\nvar_dump(gettype($z));\nvar_dump(count($z));\nvar_dump($z);\necho \"REALWALK single on single OID\\n\";\n$z = snmp3_real_walk($hostname, $username, 'authNoPriv', 'MD5', $auth_pass, '', '', '.1.3.6.1.2.1.1.1.0', $timeout, $retries);\nvar_dump(gettype($z));\nvar_dump(count($z));\nvar_dump($z);\necho \"WALK multiple on single OID\\n\";\n$z = snmp3_walk($hostname, $username, 'authNoPriv', 'MD5', $auth_pass, '', '', '.1.3.6.1.2.1.1', $timeout, $retries);\nvar_dump(gettype($z));\nvar_dump(count($z));\nvar_dump(key($z));\nvar_dump(array_shift($z));\necho \"REALWALK multiple on single OID\\n\";\n$z = snmp3_real_walk($hostname, $username, 'authNoPriv', 'MD5', $auth_pass, 'AES', '', '.1.3.6.1.2.1.1', $timeout, $retries);\nvar_dump(gettype($z));\nvar_dump(count($z));\nvar_dump(key($z));\nvar_dump(array_shift($z));\necho \"SET single OID\\n\";\n$oid1 = 'SNMPv2-MIB::sysContact.0';\n$oldvalue1 = snmp3_get($hostname, $rwuser, 'authPriv', 'MD5', $auth_pass, 'AES', $priv_pass, $oid1, $timeout, $retries);\n$newvalue1 = $oldvalue1 . '0';\n$z = snmp3_set($hostname, $rwuser, 'authPriv', 'MD5', $auth_pass, 'AES', $priv_pass, $oid1, 's', $newvalue1, $timeout, $retries);\nvar_dump($z);\nvar_dump((snmp3_get($hostname, $rwuser, 'authPriv', 'MD5', $auth_pass, 'AES', $priv_pass, $oid1, $timeout, $retries) === $newvalue1));\n$z = snmp3_set($hostname, $rwuser, 'authPriv', 'MD5', $auth_pass, 'AES', $priv_pass, $oid1, 's', $oldvalue1, $timeout, $retries);\nvar_dump($z);\nvar_dump((snmp3_get($hostname, $rwuser, 'authPriv', 'MD5', $auth_pass, 'AES', $priv_pass, $oid1, $timeout, $retries) === $oldvalue1));\n?>")).toMatchSnapshot();
  });
});
