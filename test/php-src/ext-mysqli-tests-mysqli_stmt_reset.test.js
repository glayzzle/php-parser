// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/mysqli_stmt_reset.phpt
  it("mysqli_stmt_reset()", function () {
    expect(parser.parseCode("<?php\n    require_once(\"connect.inc\");\n    // Note: No SQL tests here! We can expand one of the *fetch()\n    // tests to a generic SQL test, if we ever need that.\n    // We would duplicate the SQL test cases if we have it here and in one of the\n    // fetch tests, because the fetch tests would have to call prepare/execute etc.\n    // anyway.\n    require('table.inc');\n    if (!$stmt = mysqli_stmt_init($link))\n        printf(\"[003] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    try {\n        mysqli_stmt_reset($stmt);\n    } catch (Error $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    if (true !== ($tmp = mysqli_stmt_prepare($stmt, 'SELECT id FROM test')))\n        printf(\"[005] Expecting boolean/true, got %s/%s, [%d] %s\\n\",\n            gettype($tmp), $tmp, mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (true !== ($tmp = mysqli_stmt_reset($stmt)))\n        printf(\"[006] Expecting boolean/true, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (true !== ($tmp = mysqli_stmt_execute($stmt)))\n        printf(\"[007] Expecting boolean/true, got %s/%s\\n\", gettype($tmp), $tmp);\n    $id = null;\n    if (!mysqli_stmt_bind_result($stmt, $id))\n        printf(\"[008] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (!mysqli_stmt_fetch($stmt))\n        printf(\"[009] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    var_dump($id);\n    mysqli_stmt_close($stmt);\n    if (!$stmt = mysqli_stmt_init($link))\n        printf(\"[010] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    if (!mysqli_query($link, \"DROP TABLE IF EXISTS test\"))\n        printf(\"[011] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    if (!mysqli_query($link, \"CREATE TABLE test(id INT NOT NULL AUTO_INCREMENT, label BLOB, PRIMARY KEY(id))\"))\n        printf(\"[012] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    if (!mysqli_stmt_prepare($stmt, \"INSERT INTO test(label) VALUES (?)\"))\n        printf(\"[013] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    $label = null;\n    if (!mysqli_stmt_bind_param($stmt, \"b\", $label))\n        printf(\"[014] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    $label = 'abc';\n    for ($i = 0; $i < 10; $i++) {\n        if (!mysqli_stmt_send_long_data($stmt, 0, $label))\n            printf(\"[015 - %d] [%d] %s\\n\", $i, mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    }\n    if (!mysqli_stmt_reset($stmt))\n        printf(\"[016] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (!mysqli_stmt_execute($stmt))\n        printf(\"[017] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (!$res = mysqli_query($link, \"SELECT label FROM test\"))\n        printf(\"[018] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    if (!$row = mysqli_fetch_assoc($res))\n        printf(\"[019] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    mysqli_free_result($res);\n    if ($row['label'] != '')\n        printf(\"[020] Expecting empty string, got string/%s\\n\", $row['label']);\n    mysqli_stmt_close($stmt);\n    try {\n        mysqli_stmt_reset($stmt);\n    } catch (Error $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    mysqli_close($link);\n    print \"done!\";\n?>")).toMatchSnapshot();
  });
});
