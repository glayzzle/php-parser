// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/mysqli_fetch_array_many_rows.phpt
  it("mysqli_fetch_array()", function () {
    expect(parser.parseCode("<?php\n    require(\"table.inc\");\n    // do as much as we can do in 5 seconds\n    $start = microtime(true);\n    for ($id = 100, $start = microtime(true); (microtime(true) - $start) < 5; $id++) {\n        if (!mysqli_query($link, $sql = sprintf(\"INSERT INTO test(id, label) VALUES (%d, '%s')\",\n            $id, mysqli_real_escape_string($link, chr(65 + ($id % 26)))))) {\n                printf(\"[001] %s failed: [%d] %s\\n\", $sql, mysqli_errno($link), mysqli_error($link));\n                break;\n        }\n    }\n    if (!$res = mysqli_query($link, 'SELECT id, label FROM test')) {\n        printf(\"[002] SELECT failed: [%d] %s\\n\", mysqli_errno($link), mysqli_errno($link));\n    }\n    while ($row = mysqli_fetch_array($res)) {\n        // overwrite results and check if the cache magic works\n        $row['label'] = NULL;\n    }\n    mysqli_free_result($res);\n    if (!$res = mysqli_query($link, 'SELECT id, label FROM test')) {\n        printf(\"[003] SELECT failed: [%d] %s\\n\", mysqli_errno($link), mysqli_errno($link));\n    }\n    $i = 0;\n    $results = array();\n    while ($row = mysqli_fetch_array($res, MYSQLI_BOTH)) {\n        // create copies and destroy later\n        $results[$i++] = &$row;\n        if ($i % 999) {\n            $results = array();\n        }\n        if ($row[0] < 0 || $row[0] > $id) {\n            printf(\"[004] Unexpected result row[0] = '%s' (range 0...%d), [%d] %s\\n\",\n                $row[0], $id, mysqli_errno($link), mysqli_error($link));\n            break;\n        }\n        if ($row[0] !== $row['id']) {\n            printf(\"[005] Unexpected result row[0] = '%s', row[id] = '%s', [%d] %s\\n\",\n                $row[0], $row[id], mysqli_errno($link), mysqli_error($link));\n            break;\n        }\n        $len = strlen($row[1]);\n        if (!is_string($row[1]) || $len == 0 || $len > 1) {\n            printf(\"[006] Unexpected result row[1] = '%s', [%d] %s\\n\",\n                $row[1], mysqli_errno($link), mysqli_error($link));\n            break;\n        }\n        if ($row[1] !== $row['label']) {\n            printf(\"[007] Unexpected result row[1] = '%s', row[label] = '%s', [%d] %s\\n\",\n                $row[1], $row['label'], mysqli_errno($link), mysqli_error($link));\n            break;\n        }\n    }\n    mysqli_free_result($res);\n    if (!$res = mysqli_query($link, 'SELECT id, label FROM test')) {\n        printf(\"[008] SELECT failed: [%d] %s\\n\", mysqli_errno($link), mysqli_errno($link));\n    }\n    while ($row = mysqli_fetch_array($res, MYSQLI_ASSOC)) {\n        // overwrite results and check if the cache magic works\n        $row['label'] = NULL;\n    }\n    mysqli_free_result($res);\n    if (!$res = mysqli_query($link, 'SELECT count(*) AS num FROM test')) {\n        printf(\"[009] SELECT failed: [%d] %s\\n\", mysqli_errno($link), mysqli_errno($link));\n    }\n    $row = mysqli_fetch_assoc($res);\n    $num = $row['num'];\n    mysqli_free_result($res);\n    if (!$res = mysqli_query($link, 'SELECT id, label FROM test')) {\n        printf(\"[010] SELECT failed: [%d] %s\\n\", mysqli_errno($link), mysqli_errno($link));\n    }\n    $i = 0;\n    while ($row = mysqli_fetch_array($res, MYSQLI_NUM)) {\n        // overwrite results and check if the cache magic works\n        $row[0] = NULL;\n        $i++;\n    }\n    mysqli_free_result($res);\n    if ($i != $num)\n        printf(\"[011] Expecting %d results, got %d results, [%d] %s\\n\",\n            $num, $i, mysqli_errno($link), mysqli_error($link));\n    mysqli_close($link);\n    print \"done!\";\n?>")).toMatchSnapshot();
  });
});
