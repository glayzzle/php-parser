// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/spl/tests/unserialize_errors.phpt
  it("Errors from __unserialize() with invalid data", function () {
    expect(parser.parseCode("<?php\necho \"ArrayObject:\\n\";\ntry {\n    // empty array\n    unserialize('O:11:\"ArrayObject\":0:{}');\n} catch (Exception $e) {\n    echo $e->getMessage(), \"\\n\";\n}\ntry {\n    unserialize('O:11:\"ArrayObject\":3:{i:0;b:1;i:1;a:0:{}i:2;a:0:{}}');\n} catch (Exception $e) {\n    echo $e->getMessage(), \"\\n\";\n}\ntry {\n    unserialize('O:11:\"ArrayObject\":3:{i:0;i:0;i:1;a:0:{}i:2;i:0;}');\n} catch (Exception $e) {\n    echo $e->getMessage(), \"\\n\";\n}\ntry {\n    unserialize('O:11:\"ArrayObject\":3:{i:0;i:0;i:1;i:0;i:2;a:0:{}}');\n} catch (Exception $e) {\n    echo $e->getMessage(), \"\\n\";\n}\ntry {\n    // iterator class name is not a string\n    unserialize('O:11:\"ArrayObject\":4:{i:0;i:0;i:1;i:0;i:2;a:0:{}i:3;i:0;}');\n} catch (Exception $e) {\n    echo $e->getMessage(), \"\\n\";\n}\ntry {\n    unserialize('O:11:\"ArrayObject\":4:{i:0;i:0;i:1;a:2:{i:0;i:1;i:1;i:2;}i:2;a:0:{}i:3;s:11:\"NonExistent\";}');\n} catch (Exception $e) {\n    echo $e->getMessage(), \"\\n\";\n}\nclass Existent {}\ntry {\n    unserialize('O:11:\"ArrayObject\":4:{i:0;i:0;i:1;a:2:{i:0;i:1;i:1;i:2;}i:2;a:0:{}i:3;s:8:\"Existent\";}');\n} catch (Exception $e) {\n    echo $e->getMessage(), \"\\n\";\n}\necho \"ArrayIterator:\\n\";\ntry {\n    unserialize('O:13:\"ArrayIterator\":0:{}');\n} catch (Exception $e) {\n    echo $e->getMessage(), \"\\n\";\n}\ntry {\n    unserialize('O:13:\"ArrayIterator\":3:{i:0;b:1;i:1;a:0:{}i:2;a:0:{}}');\n} catch (Exception $e) {\n    echo $e->getMessage(), \"\\n\";\n}\ntry {\n    unserialize('O:13:\"ArrayIterator\":3:{i:0;i:0;i:1;a:0:{}i:2;i:0;}');\n} catch (Exception $e) {\n    echo $e->getMessage(), \"\\n\";\n}\ntry {\n    unserialize('O:13:\"ArrayIterator\":3:{i:0;i:0;i:1;i:0;i:2;a:0:{}}');\n} catch (Exception $e) {\n    echo $e->getMessage(), \"\\n\";\n}\necho \"SplDoublyLinkedList:\\n\";\ntry {\n    unserialize('O:19:\"SplDoublyLinkedList\":0:{}');\n} catch (Exception $e) {\n    echo $e->getMessage(), \"\\n\";\n}\ntry {\n    unserialize('O:19:\"SplDoublyLinkedList\":3:{i:0;b:1;i:1;a:0:{}i:2;a:0:{}}');\n} catch (Exception $e) {\n    echo $e->getMessage(), \"\\n\";\n}\ntry {\n    unserialize('O:19:\"SplDoublyLinkedList\":3:{i:0;i:0;i:1;a:0:{}i:2;i:0;}');\n} catch (Exception $e) {\n    echo $e->getMessage(), \"\\n\";\n}\ntry {\n    unserialize('O:19:\"SplDoublyLinkedList\":3:{i:0;i:0;i:1;i:0;i:2;a:0:{}}');\n} catch (Exception $e) {\n    echo $e->getMessage(), \"\\n\";\n}\necho \"SplObjectStorage:\\n\";\ntry {\n    unserialize('O:16:\"SplObjectStorage\":0:{}');\n} catch (Exception $e) {\n    echo $e->getMessage(), \"\\n\";\n}\ntry {\n    unserialize('O:16:\"SplObjectStorage\":2:{i:0;i:0;i:1;a:0:{}}');\n} catch (Exception $e) {\n    echo $e->getMessage(), \"\\n\";\n}\ntry {\n    unserialize('O:16:\"SplObjectStorage\":2:{i:0;a:0:{}i:1;i:1;}');\n} catch (Exception $e) {\n    echo $e->getMessage(), \"\\n\";\n}\ntry {\n    unserialize('O:16:\"SplObjectStorage\":2:{i:0;a:1:{i:0;i:0;}i:1;a:0:{}}');\n} catch (Exception $e) {\n    echo $e->getMessage(), \"\\n\";\n}\ntry {\n    unserialize('O:16:\"SplObjectStorage\":2:{i:0;a:2:{i:0;i:0;i:1;i:0;}i:1;a:0:{}}');\n} catch (Exception $e) {\n    echo $e->getMessage(), \"\\n\";\n}\n?>")).toMatchSnapshot();
  });
});
