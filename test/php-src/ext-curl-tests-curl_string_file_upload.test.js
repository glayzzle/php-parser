// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/curl/tests/curl_string_file_upload.phpt
  it("CURL file uploading from string", function () {
    expect(parser.parseCode("<?php\nfunction testcurl($ch, $postname, $data, $mime = null)\n{\n\tif (is_null($mime)) {\n\t\t// for default mime value\n\t\t$file = new CURLStringFile($data, $postname);\n\t} else {\n\t\t$file = new CURLStringFile($data, $postname, $mime);\n\t}\n\tcurl_setopt($ch, CURLOPT_POSTFIELDS, array(\"file\" => $file));\n\tvar_dump(curl_exec($ch));\n}\ninclude 'server.inc';\n$host = curl_cli_server_start();\n$ch = curl_init();\ncurl_setopt($ch, CURLOPT_URL, \"{$host}/get.php?test=string_file\");\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n$data = \"test\\0test\";\nvar_dump(md5($data));\ntestcurl($ch, 'foo.txt', $data);\ntestcurl($ch, 'foo.txt', $data, 'text/plain');\ntestcurl($ch, '', $data);\ntestcurl($ch, 'foo.txt', '');\ntestcurl($ch, \"foo.txt\\0broken_string\", $data, \"text/plain\\0broken_string\");\n// properties\n$file = new CURLStringFile($data, 'foo.txt');\n$file->mime = 'text/plain';\nvar_dump($file->mime);\nvar_dump($file->postname);\nvar_dump(md5($file->data));\ncurl_setopt($ch, CURLOPT_POSTFIELDS, array(\"file\" => $file));\nvar_dump(curl_exec($ch));\n// serialization / deserialization\n$old = new CURLStringFile($data, 'foo.txt', 'text/plain');\n$serialized = serialize($old);\n$new = unserialize($serialized);\ncurl_setopt($ch, CURLOPT_POSTFIELDS, array(\"file\" => $new));\nvar_dump(curl_exec($ch));\n// destroy object before send request\n$file = new CURLStringFile($data, 'foo.txt', 'text/plain');\ncurl_setopt($ch, CURLOPT_POSTFIELDS, array(\"file\" => $file));\nunset($file);\nvar_dump(curl_exec($ch));\n// clone curl handler\n$file = new CURLStringFile($data, 'foo.txt', 'text/plain');\ncurl_setopt($ch, CURLOPT_POSTFIELDS, array(\"file\" => $file));\n$ch2 = clone $ch;\nvar_dump(curl_exec($ch2));\n// properties are references\n$file = new CURLStringFile($data, 'foo.txt', 'text/plain');\n$data =& $file->data;\n$postname =& $file->postname;\n$mime =& $file->mime;\ncurl_setopt($ch, CURLOPT_POSTFIELDS, array(\"file\" => $file));\nvar_dump(curl_exec($ch));\n?>")).toMatchSnapshot();
  });
});
