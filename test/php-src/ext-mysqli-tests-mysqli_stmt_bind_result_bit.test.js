// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/mysqli_stmt_bind_result_bit.phpt
  it("mysqli_stmt_bind_result()", function () {
    expect(parser.parseCode("<?php\n    require_once(\"connect.inc\");\n    function dec32bin($dec, $bits) {\n        $maxval = pow(2, $bits);\n        $bin = '';\n        for ($bitval = $maxval; $bitval >= 1; $bitval = $bitval / 2) {\n            if (($dec / $bitval) >= 1) {\n                $bin .= '1';\n                $dec -= $bitval;\n            } else {\n                $bin .= '0';\n            }\n        }\n        return $bin;\n    }\n    if (!$link_ins = my_mysqli_connect($host, $user, $passwd, $db, $port, $socket))\n        printf(\"[001] Cannot connect to the server using host=%s, user=%s, passwd=***, dbname=%s, port=%s, socket=%s\\n\",\n            $host, $user, $db, $port, $socket);\n    if (!$link_sel = my_mysqli_connect($host, $user, $passwd, $db, $port, $socket))\n        printf(\"[002] Cannot connect to the server using host=%s, user=%s, passwd=***, dbname=%s, port=%s, socket=%s\\n\",\n            $host, $user, $db, $port, $socket);\n    for ($bits = 1; $bits <= 46; $bits++) {\n        if (1 == $bits)\n            $max_value = 1;\n        else\n            $max_value = pow(2, $bits) - 1;\n        if (!mysqli_query($link_ins, \"DROP TABLE IF EXISTS test\")) {\n            printf(\"[003 - %d] [%d] %s\\n\", $bits, mysqli_errno($link_ins), mysqli_error($link_ins));\n        }\n        if (!mysqli_query($link_ins, sprintf(\"CREATE TABLE test(id BIGINT, bit_value BIT(%d) NOT NULL, bit_null BIT(%d) DEFAULT NULL) ENGINE = %s\", $bits, $bits, $engine))) {\n            // don't bail - column type might not be supported by the server, ignore this\n            continue;\n        }\n        if (!$stmt_ins = mysqli_stmt_init($link_ins)) {\n            printf(\"[004 - %d] [%d] %s\\n\", $bits, mysqli_errno($link_ins), mysqli_error($link_ins));\n            continue;\n        }\n        if (!mysqli_stmt_prepare($stmt_ins, \"INSERT INTO test(id, bit_value) VALUES (?, ?)\")) {\n            printf(\"[005 - %d] [%d] %s\\n\", $bits, mysqli_stmt_errno($stmt_ins), mysqli_stmt_error($stmt_ins));\n            mysqli_stmt_close($stmt_ins);\n            continue;\n        }\n        if (!($stmt_sel = mysqli_stmt_init($link_sel))) {\n            printf(\"[006 - %d] [%d] %s\\n\", $bits, mysqli_errno($link_sel), mysqli_error($link_sel));\n            mysqli_stmt_close($stmt_ins);\n                continue;\n        }\n        $tests = 0;\n        $rand_max = mt_getrandmax();\n        while ($tests < 10) {\n            $tests++;\n            if (1 == $tests)\n                $value = 0;\n            else if (2 == $tests)\n                $value = $max_value;\n            else {\n                if ($max_value > $rand_max) {\n                    $max_loops = floor($max_value/$rand_max);\n                    $num_loops = mt_rand(1, $max_loops);\n                    $value = 0;\n                    for ($i = 0; $i < $num_loops; $i++)\n                        $value += mt_rand(0, $rand_max);\n                } else {\n                    $value = mt_rand(0, $max_value);\n                }\n            }\n            $bin = ($bits < 32) ? decbin($value) : dec32bin($value, $bits);\n            for ($i = 0; ($i < strlen($bin)) && ($bin[$i] == '0'); $i++)\n                ;\n            $bin2 = substr($bin, $i, strlen($bin));\n            if (!mysqli_stmt_bind_param($stmt_ins, \"dd\", $value, $value)) {\n                printf(\"[007 - %d] [%d] %s\\n\", $bits, mysqli_stmt_errno($stmt_ins), mysqli_stmt_error($stmt_ins));\n                mysqli_stmt_close($stmt_ins);\n                continue;\n            }\n            if (!mysqli_stmt_execute($stmt_ins)) {\n                printf(\"[008 - %d] [%d] %s\\n\", $bits, mysqli_stmt_errno($stmt_ins), mysqli_stmt_error($stmt_ins));\n                break;\n            }\n            $sql = sprintf(\"SELECT id, BIN(bit_value) AS _bin, bit_value, bit_value + 0 AS _bit_value0, bit_null FROM test WHERE id = %s\", $value);\n            if ((!mysqli_stmt_prepare($stmt_sel, $sql)) ||\n                (!mysqli_stmt_execute($stmt_sel))) {\n                printf(\"[009 - %d] [%d] %s\\n\", $bits, mysqli_stmt_errno($stmt_sel), mysqli_stmt_error($stmt_sel));\n                break;\n            }\n            $row = array('id' => -1, '_bin' => - 1, 'bit_value' => -1, '_bit_value0' => -1, 'bit_null' => -1);\n            if (!mysqli_stmt_bind_result($stmt_sel, $row['id'], $row['_bin'], $row['bit_value'], $row['_bit_value0'], $row['bit_null'])) {\n                printf(\"[010 - %d] [%d] %s\\n\", $bits, mysqli_stmt_errno($stmt_sel), mysqli_stmt_error($stmt_sel));\n                break;\n            }\n            if (!($ret = mysqli_stmt_fetch($stmt_sel))) {\n                printf(\"[011 - %d] mysqli_stmt_fetch() has failed for %d bits - ret = %s/%s, [%d] %s, [%d] %s\\n\",\n                    $bits, $bits,\n                    gettype($ret), $ret,\n                    mysqli_stmt_errno($stmt_sel), mysqli_stmt_error($stmt_sel),\n                    mysqli_errno($link_sel), mysqli_errno($link_sel)\n                );\n                break;\n            }\n            if (($value != $row['id']) || (($bin != $row['_bin']) && ($bin2 != $row['_bin']))) {\n                debug_zval_dump($row);\n                printf(\"[012 - %d] Insert of %s in BIT(%d) column might have failed. id = %s, bin = %s (%s/%s)\\n\",\n                    $bits, $value, $bits, $row['id'], $row['_bin'], $bin, $bin2);\n                break;\n            }\n            if ($value != $row['bit_value']) {\n                debug_zval_dump($row);\n                printf(\"[013 - %d] Expecting %s got %s\\n\", $bits, $value, $row['bit_value']);\n                break;\n            }\n            if (null !== $row['bit_null']) {\n                debug_zval_dump($row);\n                printf(\"[014 - %d] Expecting null got %s/%s\\n\", $bits, gettype($row['bit_value']), $row['bit_value']);\n                break;\n            }\n        }\n        mysqli_stmt_close($stmt_ins);\n        mysqli_stmt_close($stmt_sel);\n    }\n    mysqli_close($link_ins);\n    mysqli_close($link_sel);\n    print \"done!\";\n?>")).toMatchSnapshot();
  });
});
