// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/date/tests/rfc-datetime_and_daylight_saving_time-type3-ba.phpt
  it("RFC: DateTime and Daylight Saving Time Transitions (zone type 3, ba)", function () {
    expect(parser.parseCode("<?php\ndate_default_timezone_set('America/New_York');\n$date_format = 'Y-m-d H:i:s T e';\n$interval_format = 'P%dDT%hH';\n/*\n * Backward Transitions, add().\n */\n$start = new DateTime('2010-11-07 01:59:59');\n$interval_spec = 'PT1S';\n$interval = new DateInterval($interval_spec);\necho 'ba1 ' . $start->format($date_format) . \" + $interval_spec = \"\n    . $start->add($interval)->format($date_format) . \"\\n\";\n$start = new DateTime('2010-11-06 04:30:00');\n$interval_spec = 'P1D';\n$interval = new DateInterval($interval_spec);\necho 'ba2 ' . $start->format($date_format) . \" + $interval_spec = \"\n    . $start->add($interval)->format($date_format) . \"\\n\";\n$start = new DateTime('2010-11-06 04:30:00');\n$interval_spec = 'PT24H';\n$interval = new DateInterval($interval_spec);\necho 'ba3 ' . $start->format($date_format) . \" + $interval_spec = \"\n    . $start->add($interval)->format($date_format) . \"\\n\";\n$start = new DateTime('2010-11-06 04:30:00');\n$interval_spec = 'PT23H';\n$interval = new DateInterval($interval_spec);\necho 'ba4 ' . $start->format($date_format) . \" + $interval_spec = \"\n    . $start->add($interval)->format($date_format) . \"\\n\";\n$start = new DateTime('2010-11-06 04:30:00');\n$interval_spec = 'PT22H';\n$interval = new DateInterval($interval_spec);\necho 'ba5 ' . $start->format($date_format) . \" + $interval_spec = \"\n    . $start->add($interval)->format($date_format) . \"\\n\";\n$start = new DateTime('2010-11-06 04:30:00');\n$interval_spec = 'PT21H';\n$interval = new DateInterval($interval_spec);\necho 'ba6 ' . $start->format($date_format) . \" + $interval_spec = \"\n    . $start->add($interval)->format($date_format) . \"\\n\";\n$start = new DateTime('2010-11-06 01:30:00');\n$interval_spec = 'P1D';\n$interval = new DateInterval($interval_spec);\necho 'ba7 ' . $start->format($date_format) . \" + $interval_spec = \"\n    . $start->add($interval)->format($date_format) . \"\\n\";\n$start = new DateTime('2010-11-06 01:30:00');\n$interval_spec = 'P1DT1H';\n$interval = new DateInterval($interval_spec);\necho 'ba8 ' . $start->format($date_format) . \" + $interval_spec = \"\n    . $start->add($interval)->format($date_format) . \"\\n\";\n$start = new DateTime('2010-11-06 04:30:00');\n$interval_spec = 'PT25H';\n$interval = new DateInterval($interval_spec);\necho 'ba9 ' . $start->format($date_format) . \" + $interval_spec = \"\n    . $start->add($interval)->format($date_format) . \"\\n\";\n$start = new DateTime('2010-11-06 03:30:00');\n$interval_spec = 'P1D';\n$interval = new DateInterval($interval_spec);\necho 'ba10 ' . $start->format($date_format) . \" + $interval_spec = \"\n    . $start->add($interval)->format($date_format) . \"\\n\";\n$start = new DateTime('2010-11-06 02:30:00');\n$interval_spec = 'P1D';\n$interval = new DateInterval($interval_spec);\necho 'ba11 ' . $start->format($date_format) . \" + $interval_spec = \"\n    . $start->add($interval)->format($date_format) . \"\\n\";\necho \"\\n\";\n?>")).toMatchSnapshot();
  });
});
