// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/mysqli_stmt_get_result_seek.phpt
  it("mysqli_stmt_get_result() - seeking", function () {
    expect(parser.parseCode("<?php\n    require('table.inc');\n    if (!$stmt = mysqli_stmt_init($link))\n        printf(\"[001] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    if (!mysqli_stmt_prepare($stmt, \"SELECT id, label FROM test ORDER BY id ASC LIMIT 3\"))\n        printf(\"[002] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (!mysqli_stmt_execute($stmt))\n        printf(\"[003] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (!is_object($res = mysqli_stmt_get_result($stmt)) || 'mysqli_result' != get_class($res)) {\n        printf(\"[004] Expecting object/mysqli_result got %s/%s, [%d] %s\\n\",\n            gettype($res), $res, mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    }\n    if (3 !== $res->num_rows)\n        printf(\"[005] Expecting 3 rows, got %s/%s rows\\n\", gettype($res->num_rows), $res->num_rows);\n    if (2 !== $res->field_count)\n        printf(\"[006] Expecting 2 fields, got %s/%s rows\\n\", gettype($res->field_count), $res->field_count);\n    if (0 !== $res->current_field)\n        printf(\"[006] Expecting offset 0, got %s/%s rows\\n\", gettype($res->current_field), $res->current_field);\n    for ($i = 2; $i > 0; $i--) {\n        if (!$res->data_seek($i))\n            printf(\"[007] Cannot seek to position %d, [%d] %s\\n\",\n                $i, mysqli_stmt_errno($stmt), $stmt->error);\n        $row = $res->fetch_array(MYSQLI_BOTH);\n        if (($row[0] !== $row['id']) || ($row[0] !== $i + 1)) {\n            printf(\"[008] Record looks wrong, dumping data\\n\");\n            var_dump($row);\n        } else {\n            unset($row[0]);\n            unset($row['id']);\n        }\n        if ($row[1] !== $row['label']) {\n            printf(\"[009] Record looks wrong, dumping data\\n\");\n            var_dump($row);\n        } else {\n            unset($row[1]);\n            unset($row['label']);\n        }\n        if (!empty($row)) {\n            printf(\"[010] Not empty, dumping unexpected data\\n\");\n            var_dump($row);\n        }\n    }\n    try {\n        $res->data_seek(-1);\n    } catch (\\ValueError $e) {\n        echo $e->getMessage() . \\PHP_EOL;\n    }\n    if (false !== ($tmp = $res->data_seek($res->num_rows + 1)))\n        printf(\"[012] Expecting boolean/false got %s/%s\\n\", gettype($tmp), $tmp);\n    for ($i = 0; $i < 100; $i++) {\n        /* intentionally out of range! */\n        $pos = mt_rand(-1, 4);\n        try {\n            $tmp = @mysqli_data_seek($res, $pos);\n            if (($pos >= 0 && $pos < 3)) {\n                if (true !== $tmp)\n                    printf(\"[015] Expecting boolan/true got %s/%s\\n\", gettype($tmp), $tmp);\n                $row = $res->fetch_array(MYSQLI_NUM);\n                if ($row[0] !== $pos + 1)\n                    printf(\"[016] Expecting id = %d for pos %d got %s/%s\\n\",\n                        $pos + 1, $pos, gettype($row[0]), $row[0]);\n            } else {\n                if (false !== $tmp)\n                    printf(\"[014] Expecting boolan/false got %s/%s\\n\", gettype($tmp), $tmp);\n            }\n        } catch (\\ValueError $e) { /* Suppress because RANDOM */}\n    }\n    mysqli_stmt_close($stmt);\n    if (true !== ($tmp = mysqli_data_seek($res, 0)))\n        printf(\"[015] Expecting boolan/true got %s/%s\\n\", gettype($tmp), $tmp);\n    if (!is_array($row = $res->fetch_array(MYSQLI_NUM)))\n        printf(\"[016] Expecting array got %s/%s\\n\", gettype($tmp), $tmp);\n    mysqli_free_result($res);\n    try {\n        mysqli_data_seek($res, 0);\n    } catch (Error $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    try {\n        $res->fetch_array(MYSQLI_NUM);\n    } catch (Error $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    mysqli_close($link);\n    try {\n        mysqli_data_seek($res, 0);\n    } catch (Error $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    try {\n        $res->fetch_array(MYSQLI_NUM);\n    } catch (Error $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    print \"done!\";\n?>")).toMatchSnapshot();
  });
});
