// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/oci8/tests/lob_030.phpt
  it("Test piecewise fetch of CLOBs equal to, and larger than PHP_OCI_LOB_BUFFER_SIZE", function () {
    expect(parser.parseCode("<?php\nrequire __DIR__.'/connect.inc';\nrequire __DIR__.'/create_table.inc';\nfunction insert_verify($c, $tn, $id, $length)\n{\n    // Insert the data\n    $ora_sql = \"INSERT INTO\n                       \".$tn.\" (id, clob)\n                      VALUES (\".$id.\", empty_clob())\n                      RETURNING\n                               clob\n                      INTO :v_clob \";\n    $statement = oci_parse($c,$ora_sql);\n    $clob = oci_new_descriptor($c,OCI_D_LOB);\n    oci_bind_by_name($statement,\":v_clob\", $clob, -1, OCI_B_CLOB);\n    oci_execute($statement, OCI_DEFAULT);\n    $data = str_pad(\"x\", $length, \"x\");\n    $clob->write($data);\n    // Verify the data\n    $select_sql = \"SELECT clob FROM \".$tn.\" where id = \".$id;\n    $s = oci_parse($c, $select_sql);\n    oci_execute($s);\n    $row = oci_fetch_array($s, OCI_RETURN_LOBS);\n    var_dump(strlen($row[0]));\n}\necho \"Test 1: A CLOB with an even number of bytes\\n\";\ninsert_verify($c, $schema.$table_name, 1, 1050000);\necho \"Test 2: A CLOB with an odd number of bytes\\n\";\ninsert_verify($c, $schema.$table_name, 2, 1050001);\necho \"Test 3: A CLOB of 1048576 bytes (== size of PHP_OCI_LOB_BUFFER_SIZE at time of test creation)\\n\";\ninsert_verify($c, $schema.$table_name, 3, 1048576);\necho \"Test 4: A CLOB of 1049028 bytes (the value used for chunks in the code)\\n\";\ninsert_verify($c, $schema.$table_name, 4, 1049028);\necho \"Test 5: A CLOB of 1049028-1 bytes\\n\";\ninsert_verify($c, $schema.$table_name, 5, 1049028-1);\necho \"Test 6: A CLOB of 1049028+1 bytes\\n\";\ninsert_verify($c, $schema.$table_name, 6, 1049028+1);\nrequire __DIR__.'/drop_table.inc';\necho \"Done\\n\";\n?>")).toMatchSnapshot();
  });
});
