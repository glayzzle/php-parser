// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/image/getimagesize_variation2.phpt
  it("Test getimagesize() function : usage variations  - unexpected type for arg 2", function () {
    expect(parser.parseCode("<?php\nfunction test_error_handler($err_no, $err_msg, $filename, $linenum) {\n    echo \"Error: $err_no - $err_msg\\n\";\n}\nset_error_handler('test_error_handler');\necho \"*** Testing getimagesize() : usage variations ***\\n\";\n// Initialise function arguments not being substituted (if any)\n$imagefile = __DIR__.\"/test1pix.jpg\";\n//get an unset variable\n$unset_var = 10;\nunset ($unset_var);\n//array of values to iterate over\n$values = array(\n      // int data\n      \"0\" => 0,\n      \"1\" => 1,\n      \"12345\" => 12345,\n      \"-2345\" => -2345,\n      // float data\n      \"10.5\" => 10.5,\n      \"-10.5\" => -10.5,\n      \"10.1234567e5\" => 10.1234567e10,\n      \"10.7654321e-5\" => 10.7654321E-5,\n      .5,\n      // array data\n      \"array()\" => array(),\n      \"array(0)\" => array(0),\n      \"array(1)\" => array(1),\n      \"array(1, 2)\" => array(1, 2),\n      \"array('color' => 'red', 'item' => 'pen')\" => array('color' => 'red', 'item' => 'pen'),\n      // null data\n      \"NULL\" => NULL,\n      \"null\" => null,\n      // boolean data\n      \"true\" => true,\n      \"false\" => false,\n      \"TRUE\" => TRUE,\n      \"FALSE\" => FALSE,\n      // empty data\n      \"\\\"\\\"\" => \"\",\n      \"''\" => '',\n      // object data\n      \"new stdclass()\" => new stdclass(),\n      // undefined data\n      \"undefined_var\" => $undefined_var,\n      // unset data\n      \"unset_var\" => $unset_var,\n);\n// loop through each element of the array for info\nforeach($values as $key => $value) {\n      echo \"\\n-- Arg value $key --\\n\";\n      getimagesize($imagefile, $value);\n      var_dump(bin2hex($value[\"APP0\"]));\n};\n?>")).toMatchSnapshot();
  });
});
