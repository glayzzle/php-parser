// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/file/glob_variation.phpt
  it("Test glob() function: usage variations", function () {
    expect(parser.parseCode("<?php\necho \"*** Testing glob() : usage variations ***\\n\";\n$file_path = __DIR__;\n// temp dir created\nmkdir(\"$file_path/glob_variation\");\nmkdir(\"$file_path/glob_variation/wonder\");\n// temp files created\n$fp = fopen(\"$file_path/glob_variation/wonder12345\", \"w\");\nfclose($fp);\n$fp = fopen(\"$file_path/glob_variation/wonder;123456\", \"w\");\nfclose($fp);\n$patterns = array (\n  \"$file_path/glob_variation/*der*\",\n  \"$file_path/glob_variation/?onder*\",\n  \"$file_path/glob_variation/w*der?*\",\n  \"$file_path/glob_variation/*der5\",\n  \"$file_path/glob_variation/??onder*\",\n  \"$file_path/glob_variation/***der***\",\n  \"$file_path/glob_variation/++onder*\",\n  \"$file_path/glob_variation/WONDER5\\0\",\n  '$file_path/glob_variation/wonder5',\n  \"$file_path/glob_variation/?wonder?\",\n  \"$file_path/glob_variation/wonder?\",\n  TRUE  // boolean true\n);\n$counter = 1;\n/* loop through $patterns to match each $pattern with the files created\n   using glob() */\nforeach($patterns as $pattern) {\n  echo \"\\n-- Iteration $counter --\\n\";\n  try {\n    var_dump( glob($pattern) );  // default arguments\n    var_dump( glob($pattern, GLOB_MARK) );\n    var_dump( glob($pattern, GLOB_NOSORT) );\n    var_dump( glob($pattern, GLOB_NOCHECK) );\n    var_dump( glob($pattern, GLOB_NOESCAPE) );\n    var_dump( glob($pattern, GLOB_ERR) );\n  } catch (Error $e) {\n    echo $e->getMessage(), \"\\n\";\n  }\n  $counter++;\n}\necho \"\\n*** Testing glob() with pattern within braces ***\\n\";\nvar_dump( glob(\"$file_path/glob_variation/*{5}\", GLOB_BRACE) );\n// delete temp files and dir\nunlink(\"$file_path/glob_variation/wonder12345\");\nunlink(\"$file_path/glob_variation/wonder;123456\");\nrmdir(\"$file_path/glob_variation/wonder\");\nrmdir(\"$file_path/glob_variation\");\necho \"\\n*** Testing glob() on directories ***\\n\";\n// temp dir created to check for pattern matching the sub dir created in it\nmkdir(\"$file_path/glob_variation/wonder1/wonder2\", 0777, true);\n$counter = 1;\n/* loop through $patterns to match each $pattern with the directories created\n   using glob() */\nforeach($patterns as $pattern) {\n  echo \"-- Iteration $counter --\\n\";\n  try {\n    var_dump( glob($pattern, GLOB_ONLYDIR) );\n  } catch (Error $e) {\n    echo $e->getMessage(), \"\\n\";\n  }\n  $counter++;\n}\necho \"Done\\n\";\n?>")).toMatchSnapshot();
  });
});
