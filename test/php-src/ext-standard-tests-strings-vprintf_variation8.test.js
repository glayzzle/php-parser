// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/strings/vprintf_variation8.phpt
  it("Test vprintf() function : usage variations - string formats with non-string values", function () {
    expect(parser.parseCode("<?php\n/*\n * Test vprintf() when different string formats and non-string values are passed to\n * the '$format' and '$args' arguments of the function\n*/\necho \"*** Testing vprintf() : string formats and non-string values ***\\n\";\n// defining array of string formats\n$formats =\n    '%s %+s %-s\n    %ls %4s %-4s\n    %10.4s %-10.4s %04s %04.4s\n    %\\'#2s %\\'2s %\\'$2s %\\'_2s\n    %3$s %4$s %1$s %2$s';\n// Arrays of non string values for the format defined in $format.\n// Each sub array contains non string values which correspond to each format in $format\n$args_array = array(\n  // array of float values\n  array(2.2, .2, 10.2,\n        123456.234, -1234.6789, +1234.6789,\n        2.1234567e10, +2.7654321e10, -2.7654321e10,\n        12345.780, 12.000000011111, -12.00000111111, -123456.234,\n        3.33, +4.44, 1.11,-2.22 ),\n // array of int values\n array(2, -2, +2,\n       123456, -12346789, +12346789,\n       123200, +20000, -40000, 22212,\n       12345780, 1211111, -12111111, -12345634,\n       3, +4, 1,-2 ),\n  // different arrays\n  array( array(0), array(1, 2), array(-1, -1),\n         array(\"123\"), array('-123'), array(\"-123\"),\n         array(true), array(false), array(TRUE), array(FALSE),\n         array(\"123hello\"), array(\"1\", \"2\"), array('123hello'), array(12=>\"12twelve\"),\n         array(\"3\"), array(\"4\"), array(\"1\"), array(\"2\") ),\n  // array of boolean data\n  array( true, TRUE, false,\n         TRUE, FALSE, 1,\n         true, false, TRUE, FALSE,\n         0, 1, 1, 0,\n         1, TRUE, 0, FALSE),\n);\n// looping to test vprintf() with different string formats from the above $format array\n// and with non-string values from the above $args_array array\n$counter = 1;\nforeach($args_array as $args) {\n  echo \"\\n-- Iteration $counter --\\n\";\n  $result = vprintf($formats, $args);\n  echo \"\\n\";\n  var_dump($result);\n  $counter++;\n}\n?>")).toMatchSnapshot();
  });
});
