// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/dom/tests/domelement.phpt
  it("Elements: DOMElement functionality", function () {
    expect(parser.parseCode("<?php\nrequire_once(\"dom_test.inc\");\n$dom = new DOMDocument;\n$dom->loadXML($xmlstr);\nif(!$dom) {\n  echo \"Error while parsing the document\\n\";\n  exit;\n}\n$node = $dom->documentElement;\necho \"Tag Name: \".$node->tagName.\"\\n\";\n$node->setAttribute('num', '1');\necho \"Chapter: \".$node->getAttribute('num').\"\\n\";\necho 'Attribute num exists?: '.($node->hasAttribute('num')?'Yes':'No').\"\\n\";\n$node->removeAttribute('num');\necho \"Chapter: \".$node->getAttribute('num').\"\\n\";\necho 'Attribute num exists?: '.($node->hasAttribute('num')?'Yes':'No').\"\\n\";\necho \"Language: \".$node->getAttribute('language').\"\\n\";\n$lang = $node->getAttributeNode('language');\n$lang->nodeValue = 'en-US';\n$node->setAttributeNode($lang);\necho \"Language: \".$node->getAttribute('language').\"\\n\";\n$node->removeAttributeNode($lang);\necho \"Language: \".$node->getAttribute('language').\"\\n\";\necho \"\\n-- xml:lang --\\n\";\n$node->setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:lang', 'en');\necho \"Language: \".$node->getAttributeNS('http://www.w3.org/XML/1998/namespace', 'lang').\"\\n\";\necho 'Attribute xml:lang exists?: '.($node->hasAttributeNS('http://www.w3.org/XML/1998/namespace', 'lang')?'Yes':'No').\"\\n\";\n$node->removeAttributeNS('http://www.w3.org/XML/1998/namespace', 'lang');\necho \"Language: \".$node->getAttributeNS('http://www.w3.org/XML/1998/namespace', 'lang').\"\\n\";\necho 'Attribute xml:lang exists?: '.($node->hasAttributeNS('http://www.w3.org/XML/1998/namespace', 'lang')?'Yes':'No').\"\\n\";\n$lang = $dom->createAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:lang');\n$lang->nodeValue = 'en-GB';\n$node->setAttributeNodeNS($lang);\nunset($lang);\necho \"Language: \".$node->getAttributeNS('http://www.w3.org/XML/1998/namespace', 'lang').\"\\n\";\n$lang = $node->getAttributeNodeNS('http://www.w3.org/XML/1998/namespace', 'lang');\necho \"Language: \".$lang->value.\"\\n\";\necho \"\\n-- Elements --\\n\";\n$rows = $node->getElementsByTagName('row');\necho \"Row Count: \".$rows->length.\"\\n\";\n$element_ns = new DOMElement('newns:myelement', 'default content', 'urn::dummyns');\n$node->appendChild($element_ns);\n$element_ns = new DOMElement('newns2:myelement', 'second default content', 'urn::dummyns');\n$node->appendChild($element_ns);\n$myelements = $node->getElementsByTagNameNS('urn::dummyns', 'myelement');\n$mylen = $myelements->length;\necho \"myelements Count: \".$mylen.\"\\n\";\necho \"\\n-- IDs --\\n\";\n$node->setAttribute('idatt', 'n1');\n$node->setIdAttribute('idatt', TRUE);\nfor ($x = 0; $x < $mylen; $x++) {\n    $current = $myelements->item($x);\n    $current->setAttributeNS('urn::dummyns', 'newns:idatt', 'n'.($x+2)).\"\\n\";\n    $current->setIdAttributeNS('urn::dummyns', 'idatt', TRUE);\n}\necho 'Element Name: '.(($elem = $dom->getElementByID('n1'))?$elem->localName:'Not Found').\"\\n\";\n$idatt = $node->getAttributeNode('idatt');\n$node->setIdAttributeNode($idatt, FALSE);\necho 'Element Name: '.(($elem = $dom->getElementByID('n1'))?$elem->localName:'Not Found').\"\\n\";\necho 'Element Name: '.(($elem = $dom->getElementByID('n3'))?$elem->nodeName:'Not Found').\"\\n\";\nfor ($x = 0; $x < $mylen; $x++) {\n    $node = $myelements->item($x);\n    $node->setIdAttributeNS('urn::dummyns', 'idatt', FALSE);\n}\necho 'Element Name: '.(($elem = $dom->getElementByID('n3'))?$elem->nodeName:'Not Found').\"\\n\";\n?>")).toMatchSnapshot();
  });
});
