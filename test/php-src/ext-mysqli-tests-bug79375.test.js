// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/bug79375.phpt
  it("Bug #79375: mysqli_store_result does not report error from lock wait timeout", function () {
    expect(parser.parseCode("<?php\nrequire_once(\"connect.inc\");\nmysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);\n$mysqli = new my_mysqli($host, $user, $passwd, $db, $port, $socket);\n$mysqli2 = new my_mysqli($host, $user, $passwd, $db, $port, $socket);\n$mysqli->query('DROP TABLE IF EXISTS test');\n$mysqli->query('CREATE TABLE test (first int) ENGINE = InnoDB');\n$mysqli->query('INSERT INTO test VALUES (1),(2),(3),(4),(5),(6),(7),(8),(9)');\nfunction testStmtStoreResult(mysqli $mysqli, string $name) {\n    $mysqli->query(\"SET innodb_lock_wait_timeout = 1\");\n    $mysqli->query(\"START TRANSACTION\");\n    $query = \"SELECT first FROM test WHERE first = 1 FOR UPDATE\";\n    echo \"Running query on $name\\n\";\n    $stmt = $mysqli->prepare($query);\n    $stmt->execute();\n    try {\n        $stmt->store_result();\n        echo \"Got {$stmt->num_rows} for $name\\n\";\n    } catch(mysqli_sql_exception $e) {\n        echo $e->getMessage().\"\\n\";\n    }\n}\nfunction testStmtGetResult(mysqli $mysqli, string $name) {\n    $mysqli->query(\"SET innodb_lock_wait_timeout = 1\");\n    $mysqli->query(\"START TRANSACTION\");\n    $query = \"SELECT first FROM test WHERE first = 1 FOR UPDATE\";\n    echo \"Running query on $name\\n\";\n    $stmt = $mysqli->prepare($query);\n    $stmt->execute();\n    try {\n        $res = $stmt->get_result();\n        echo \"Got {$res->num_rows} for $name\\n\";\n    } catch(mysqli_sql_exception $e) {\n        echo $e->getMessage().\"\\n\";\n    }\n}\nfunction testNormalQuery(mysqli $mysqli, string $name) {\n    $mysqli->query(\"SET innodb_lock_wait_timeout = 1\");\n    $mysqli->query(\"START TRANSACTION\");\n    $query = \"SELECT first FROM test WHERE first = 1 FOR UPDATE\";\n    echo \"Running query on $name\\n\";\n    try {\n        $res = $mysqli->query($query);\n        echo \"Got {$res->num_rows} for $name\\n\";\n    } catch(mysqli_sql_exception $e) {\n        echo $e->getMessage().\"\\n\";\n    }\n}\nfunction testStmtUseResult(mysqli $mysqli, string $name) {\n    $mysqli->query(\"SET innodb_lock_wait_timeout = 1\");\n    $mysqli->query(\"START TRANSACTION\");\n    $query = \"SELECT first FROM test WHERE first = 1 FOR UPDATE\";\n    echo \"Running query on $name\\n\";\n    $stmt = $mysqli->prepare($query);\n    $stmt->execute();\n    try {\n        $stmt->fetch(); // should throw an error\n        $stmt->fetch();\n        echo \"Got {$stmt->num_rows} for $name\\n\";\n    } catch (mysqli_sql_exception $e) {\n        echo $e->getMessage().\"\\n\";\n    }\n}\nfunction testResultFetchRow(mysqli $mysqli, string $name) {\n    $mysqli->query(\"SET innodb_lock_wait_timeout = 1\");\n    $mysqli->query(\"START TRANSACTION\");\n    $query = \"SELECT first FROM test WHERE first = 1 FOR UPDATE\";\n    echo \"Running query on $name\\n\";\n    $res = $mysqli->query($query, MYSQLI_USE_RESULT);\n    try {\n        $res->fetch_row();\n        $res->fetch_row();\n        echo \"Got {$res->num_rows} for $name\\n\";\n    } catch(mysqli_sql_exception $e) {\n        echo $e->getMessage().\"\\n\";\n    }\n}\ntestStmtStoreResult($mysqli, 'first connection');\ntestStmtStoreResult($mysqli2, 'second connection');\n$mysqli->close();\n$mysqli2->close();\necho \"\\n\";\n//  try it again for get_result\n$mysqli = new my_mysqli($host, $user, $passwd, $db, $port, $socket);\n$mysqli2 = new my_mysqli($host, $user, $passwd, $db, $port, $socket);\ntestStmtGetResult($mysqli, 'first connection');\ntestStmtGetResult($mysqli2, 'second connection');\n$mysqli->close();\n$mysqli2->close();\necho \"\\n\";\n//  try it again with unprepared query\n$mysqli = new my_mysqli($host, $user, $passwd, $db, $port, $socket);\n$mysqli2 = new my_mysqli($host, $user, $passwd, $db, $port, $socket);\ntestNormalQuery($mysqli, 'first connection');\ntestNormalQuery($mysqli2, 'second connection');\n$mysqli->close();\n$mysqli2->close();\necho \"\\n\";\n//  try it again with unprepared query\n$mysqli = new my_mysqli($host, $user, $passwd, $db, $port, $socket);\n$mysqli2 = new my_mysqli($host, $user, $passwd, $db, $port, $socket);\ntestStmtUseResult($mysqli, 'first connection');\ntestStmtUseResult($mysqli2, 'second connection');\n$mysqli->close();\n$mysqli2->close();\necho \"\\n\";\n//  try it again using fetch_row on a result object\n$mysqli = new my_mysqli($host, $user, $passwd, $db, $port, $socket);\n$mysqli2 = new my_mysqli($host, $user, $passwd, $db, $port, $socket);\ntestResultFetchRow($mysqli, 'first connection');\ntestResultFetchRow($mysqli2, 'second connection');\n$mysqli->close();\n$mysqli2->close();\n?>")).toMatchSnapshot();
  });
});
