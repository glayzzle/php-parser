// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/reflection/tests/ReflectionClassConstant_basic1.phpt
  it("Test usage of ReflectionClassConstant methods __toString(), getName(), getValue(), isPublic(), isPrivate(), isProtected(), getModifiers(), getDeclaringClass() and getDocComment().", function () {
    expect(parser.parseCode("<?php\nfunction reflectClassConstant($base, $constant) {\n    $constInfo = new ReflectionClassConstant($base, $constant);\n    echo \"**********************************\\n\";\n    $class = is_object($base) ? get_class($base) : $base;\n    echo \"Reflecting on class constant $class::$constant\\n\\n\";\n    echo \"__toString():\\n\";\n    var_dump($constInfo->__toString());\n    echo \"getName():\\n\";\n    var_dump($constInfo->getName());\n    echo \"getValue():\\n\";\n    var_dump($constInfo->getValue());\n    echo \"isPublic():\\n\";\n    var_dump($constInfo->isPublic());\n    echo \"isPrivate():\\n\";\n    var_dump($constInfo->isPrivate());\n    echo \"isProtected():\\n\";\n    var_dump($constInfo->isProtected());\n    echo \"isFinal():\\n\";\n    var_dump($constInfo->isFinal());\n    echo \"getModifiers():\\n\";\n    var_dump($constInfo->getModifiers());\n    echo \"getDeclaringClass():\\n\";\n    var_dump($constInfo->getDeclaringClass());\n    echo \"getDocComment():\\n\";\n    var_dump($constInfo->getDocComment());\n    echo \"\\n**********************************\\n\";\n}\nclass TestClass {\n    public const /** My Doc comment */ PUB = true;\n    /** Another doc comment */\n    protected const PROT = 4;\n    private const PRIV = \"keepOut\";\n    public final const FINAL = \"foo\";\n}\n$instance = new TestClass();\nreflectClassConstant(\"TestClass\", \"PUB\");\nreflectClassConstant(\"TestClass\", \"PROT\");\nreflectClassConstant(\"TestClass\", \"PRIV\");\nreflectClassConstant(\"TestClass\", \"FINAL\");\nreflectClassConstant($instance, \"PRIV\");\nreflectClassConstant($instance, \"BAD_CONST\");\n?>")).toMatchSnapshot();
  });
});
