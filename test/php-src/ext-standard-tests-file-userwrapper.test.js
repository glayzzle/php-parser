// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/file/userwrapper.phpt
  it("Userstream unlink, rename, mkdir, rmdir, and url_stat.", function () {
    expect(parser.parseCode("<?php\nclass test {\n    function unlink($file) {\n        print \"Unlinking file: $file\\n\";\n    }\n    function rename($from, $to) {\n        print \"Renaming $from to $to\\n\";\n    }\n    function mkdir($directory, $mode, $options) {\n        printf(\"Making directory: %s as %o%s\\n\", $directory, $mode, $options & STREAM_MKDIR_RECURSIVE ? \" recursively\" : \"\");\n    }\n    function rmdir($directory, $options) {\n        print \"Removing directory: $directory\\n\";\n    }\n    function url_stat($path, $options) {\n        /* By printing out a notice that we are actively stating the file\n           then subsequently performing multiple stat operations on it\n           we effectively test the stat cache mechanism */\n        print \"Stating file: $path\\n\";\n        return array('dev'=>1, 'ino'=>2, 'mode'=>0644, 'nlink'=>3,\n                     'uid'=>100, 'gid'=>1000, 'rdev'=>-1, 'size'=>31337,\n                     'atime'=>1234567890, 'mtime'=>1231231231, 'ctime'=>1234564564,\n                     'blksize'=>-1, 'blocks'=>-1);\n    }\n}\nstream_wrapper_register('test', 'test');\nunlink('test://example.com/path/to/file');\nrename('test://example.com/path/to/from', 'test://example.com/path/to/to');\n/* We *want* this to fail and thus not output the watch statement */\n@rename('test://example.com/path/to/from', 'http://example.com/path/to/to');\nmkdir('test://example.com/path/to/directory', 0755);\nrmdir('test://example.com/path/to/directory');\nprint_r(stat('test://example.com/path/to/file'));\necho \"Filesize = \" . filesize('test://example.com/path/to/file') . \"\\n\";\necho \"filemtime = \" . filemtime('test://example.com/path/to/file') . \"\\n\";\n?>")).toMatchSnapshot();
  });
});
