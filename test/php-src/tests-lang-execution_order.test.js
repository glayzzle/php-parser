// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // tests/lang/execution_order.phpt
  it("Execution order of variables", function () {
    expect(parser.parseCode("<?php\n/* strings and concat */\nclass strclass {\n   var $str = \"bad\";\n   static $statstr = \"bad\";\n}\n$a = \"bad\";\n$b = \"good\";\necho \"1)\";\n$c = $a.($a=$b);\necho $c;\necho \"\\r\\n\";\n$a = \"bad\";\n$b = \"good\";\n$c = ($a=$b).$a;\necho \"2)\";\necho $c;\necho \"\\r\\n\";\n$str = new strclass();\n$c = $str->str.($str->str=\"good\");\necho \"3)\";\necho $c;\necho \"\\r\\n\";\n$str->str = \"bad\";\n$c = ($str->str=\"good\").$str->str;\necho \"4)\";\necho $c;\necho \"\\r\\n\";\n$c = strclass::$statstr.(strclass::$statstr=\"good\");\necho \"5)\";\necho $c;\necho \"\\r\\n\";\nstrclass::$statstr = \"bad\";\n$c = (strclass::$statstr=\"good\").strclass::$statstr;\necho \"6)\";\necho $c;\necho \"\\r\\n\";\nfunction foo() {\n   global $a;\n   $a = \"good\";\n   return $a;\n}\n$a = \"bad\";\necho \"7)\";\necho foo() . $a;\necho \"\\r\\n\";\n$a = \"bad\";\necho \"8)\";\necho $a . foo();\necho \"\\r\\n\";\n/* other operators */\n$x = 1;\n$z = $x - ($x++);\necho \"9)\";\necho $z;\necho \"\\r\\n\";\n$x = 1;\n$z = ($x++) - $x;\necho \"10)\";\necho $z;\necho \"\\r\\n\";\n$x = 1;\n$z = $x - (++$x);\necho \"11)\";\necho $z;\necho \"\\r\\n\";\n$x = 1;\n$z = (++$x) - $x;\necho \"12)\";\necho $z;\necho \"\\r\\n\";\n$x = 1;\n$y = 3;\n$z = $x - ($x=$y);\necho \"13)\";\necho $z;\necho \"\\r\\n\";\n$x = 1;\n$y = 3;\n$z = ($x=$y) - $x;\necho \"14)\";\necho $z;\necho \"\\r\\n\";\n$a = 100;\n$b = 200;\necho \"15)\";\necho $a + ($a=$b);\necho \"\\r\\n\";\n$a = 100;\n$b = 200;\necho \"16)\";\necho ($a=$b) + $a;\necho \"\\r\\n\";\n$a = array(100,200);\n$i = 0;\necho \"17)\";\necho $a[$i++] + $a[$i++];\necho \"\\r\\n\";\n$i = -1;\necho \"18)\";\necho $a[++$i] + $a[++$i];\necho \"\\r\\n\";\n$i = 0;\necho \"19)\";\necho $a[$i] + ($a[$i]=400);\necho \"\\r\\n\";\n$a[0] = 100;\necho \"20)\";\necho ($a[$i]=400) + $a[$i];\necho \"\\r\\n\";\nclass c {\n   var $val = 10;\n   static $stat = 20;\n}\necho \"21)\";\necho c::$stat + (c::$stat=200);\necho \"\\r\\n\";\necho \"22)\";\necho (c::$stat=300) + c::$stat;\necho \"\\r\\n\";\n$c = new c();\necho \"23)\";\necho $c->val + ($c->val=200);\necho \"\\r\\n\";\necho \"24)\";\necho ($c->val=300) + $c->val;\necho \"\\r\\n\";\n?>")).toMatchSnapshot();
  });
});
