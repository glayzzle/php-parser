// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/ffi/tests/002.phpt
  it("FFI 002: Check C declaration parser", function () {
    expect(parser.parseCode("<?php\necho \"Empty declaration\\n\";\n$ffi = FFI::cdef(<<<EOF\nEOF\n);\necho \"  ok\\n\";\necho \"Various declarations\\n\";\n$ffi = FFI::cdef(<<<EOF\n    /* allowed storage classes */\n    typedef  int type1;\n//\textern   int var2;\n    static   int var3;\n    auto     int var4;\n    register int var5;\n    /* allowed types */\n    typedef void type6;\n    typedef char type7;                     /* sint8_t or uint8_t */\n    typedef signed char type8;              /* sint8_t  */\n    typedef unsigned char type9;            /* uint8_t  */\n    typedef short type10;                   /* sint16_t */\n    typedef signed short type11;            /* sint16_t */\n    typedef short int type12;               /* sint16_t */\n    typedef signed short int type13;        /* sint16_t */\n    typedef unsigned short type14;          /* uint16_t */\n    typedef unsigned short int type15;      /* uint16_t */\n    typedef int type16;                     /* sint32_t */\n    typedef signed type17;                  /* sint32_t */\n    typedef signed int type18;              /* sint32_t */\n    typedef unsigned type19;                /* uint32_t */\n    typedef unsigned int type20;            /* uint32_t */\n    typedef long type21;                    /* sint32_t or sint64_t */\n    typedef signed long type22;             /* sint32_t or sint64_t */\n    typedef long int type23;                /* sint32_t or sint64_t */\n    typedef signed long int type24;         /* sint32_t or sint64_t */\n    typedef unsigned long type25;           /* uint32_t or uint64_t */\n    typedef unsigned long int type25_2;     /* uint32_t or uint64_t */\n    typedef long long type26;               /* sint64_t */\n    typedef signed long long type27;        /* sint64_t */\n    typedef long long int type28;           /* sint64_t */\n    typedef signed long long int type29;    /* sint64_t */\n    typedef unsigned long long type30;      /* uint64_t */\n    typedef unsigned long long int type31;  /* uint64_t */\n    typedef float type32;\n    typedef double type33;\n    typedef long double type34;\n    typedef _Bool type35;\n//\ttypedef float _Complex type36;\n//\ttypedef double _Complex type36_2;\n//\ttypedef long double _Complex type36_3;\n    /* struct and union */\n    struct tag1;\n    union tag2;\n    typedef struct tag1 {int x; int y;} type37;\n    typedef union tag2 {int x; int y;} type38;\n    typedef struct {int x, y; int z;} type39;\n    typedef struct {unsigned int x:8, y:8;} type40;\n    typedef struct {unsigned int x:8, :8, y:8;} type41;\n    /* enum */\n    enum tag3;\n    typedef enum tag3 {A,B,C} type42;\n    typedef enum {D,E=10,F,} type43;\n    /* type qualifiers */\n    typedef void* type46;\n    typedef const void* type47;\n    typedef restrict void* type48;\n    typedef volatile void* type49;\n    typedef _Atomic void* type50;\n    typedef const volatile void* type51;\n    /* function specifiers */\n    static void f1();\n    static inline void f2();\n    static _Noreturn void f3();\n    /* align specifier */\n    typedef double _Alignas(char) type52;\n    typedef double _Alignas(1) type53;\n    /* pointers */\n    typedef void * type54;\n    typedef void ** type55;\n    typedef const void * const volatile * const type56;\n    /* arrays */\n    typedef char type57[];\n    typedef char type58[const];\n    typedef char type59[const volatile];\n    typedef char type60[10];\n    typedef char type61[const 10];\n    typedef char type62[static 10];\n    typedef char type63[static const volatile 10];\n    typedef char type64[const volatile static 10];\n    typedef char type65[];\n    typedef char type66[const volatile];\n    typedef char type67[10][10];\n    /* functions */\n    static void f4();\n    static void f5(void);\n    static void f6(int x);\n    static void f7(int x, int y);\n    static void f8(int x, int y, ...);\n    static void f9(int, int);\n    static void f9(int, int, ...);\n    static void f10(...);\n    static void f11(const char *name);\n    static void f12(const char *);\n    static void f13(const int a[5]);\n    static void f14(const int[5]);\n    /* nested */\n    typedef int *type69[4];\n    typedef int (*type70)[4];\n    typedef int (*type71[3])(int *x, int *y);\n    typedef int (*type72(int (*)(long), int))(int, ...);\nEOF\n);\necho \"  ok\\n\";\n?>")).toMatchSnapshot();
  });
});
