// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/mysqli_stmt_get_result_metadata.phpt
  it("mysqli_stmt_get_result() - meta data", function () {
    expect(parser.parseCode("<?php\n    require('table.inc');\n    if (!$stmt = mysqli_stmt_init($link))\n        printf(\"[001] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    if (!mysqli_stmt_prepare($stmt, \"SELECT id, label FROM test ORDER BY id ASC LIMIT 3\"))\n        printf(\"[002] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (!mysqli_stmt_execute($stmt))\n        printf(\"[003] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (!is_object($res = mysqli_stmt_get_result($stmt)) || 'mysqli_result' != get_class($res)) {\n        printf(\"[004] Expecting object/mysqli_result got %s/%s, [%d] %s\\n\",\n            gettype($res), $res, mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    }\n    if (!is_object($res_meta = mysqli_stmt_result_metadata($stmt)) ||\n        'mysqli_result' != get_class($res_meta)) {\n        printf(\"[005] Expecting object/mysqli_result got %s/%s, [%d] %s\\n\",\n            gettype($res), $res, mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    }\n    var_dump(mysqli_fetch_assoc($res));\n    var_dump(mysqli_fetch_assoc($res_meta));\n    mysqli_free_result($res);\n    mysqli_free_result($res_meta);\n    mysqli_stmt_close($stmt);\n    // !mysqli_stmt_prepare($stmt, \"SELECT id, label, id + 1 as _id,  concat(label, '_') _label FROM test as _test ORDER BY id ASC LIMIT 3\") ||\n    if (!($stmt = mysqli_stmt_init($link)) ||\n        !mysqli_stmt_prepare($stmt, \"SELECT id , label, id + 1 AS _id, label AS _label, null AS _null, CONCAT(label, '_') _label_concat  FROM test _test ORDER BY id ASC LIMIT 3\") ||\n        !mysqli_stmt_execute($stmt))\n        printf(\"[006] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (!is_object($res = mysqli_stmt_get_result($stmt)) || 'mysqli_result' != get_class($res)) {\n        printf(\"[007] Expecting object/mysqli_result got %s/%s, [%d] %s\\n\",\n            gettype($res), $res, mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    }\n    if (!is_object($res_meta = mysqli_stmt_result_metadata($stmt)) ||\n        'mysqli_result' != get_class($res_meta)) {\n        printf(\"[008] Expecting object/mysqli_result got %s/%s, [%d] %s\\n\",\n            gettype($res), $res, mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    }\n    if (($tmp1 = mysqli_num_fields($res)) !== ($tmp2 = mysqli_num_fields($res_meta))) {\n        printf(\"[009] %s/%s !== %s/%s\\n\", gettype($tmp1), $tmp1, gettype($tmp2), $tmp2);\n    }\n    /*\n    if (($tmp1 = mysqli_field_count($link)) !== ($tmp2 = $res->field_count()))\n        printf(\"[010] %s/%s !== %s/%s\\n\", gettype($tmp1), $tmp1, gettype($tmp2), $tmp2);\n    if (($tmp1 = $res_meta->field_count()) !== $tmp2)\n        printf(\"[011] %s/%s !== %s/%s\\n\", gettype($tmp1), $tmp1, gettype($tmp2), $tmp2);\n    */\n    if (($tmp1 = mysqli_field_tell($res)) !== ($tmp2 = $res_meta->current_field))\n        printf(\"[012] %s/%s !== %s/%s\\n\", gettype($tmp1), $tmp1, gettype($tmp2), $tmp2);\n    if (0 !== $tmp1)\n        printf(\"[013] Expecting int/0 got %s/%s\\n\", gettype($tmp1), $tmp1);\n    $fields = array();\n    while ($info = $res->fetch_field())\n        $fields['res'][] = $info;\n    var_dump($info);\n    while ($info = $res_meta->fetch_field())\n        $fields['meta'][] = $info;\n    var_dump($info);\n    $fields['all_res'] = $res->fetch_fields();\n    $fields['all_meta'] = $res_meta->fetch_fields();\n    if (count($fields['res']) != count($fields['meta'])) {\n        printf(\"[014] stmt_get_result indicates %d fields, stmt_result_metadata indicates %d fields\\n\",\n            count($fields['res']),\n            count($fields['meta']));\n    }\n    foreach ($fields['res'] as $k => $info) {\n        printf(\"%s\\n\", $info->name);\n        if ($info->name !== $fields['meta'][$k]->name)\n            printf(\"[015 - %d] Expecting name %s/%s got %s/%s\\n\",\n                $k, gettype($info->name), $info->name, gettype($fields['meta'][$k]->name), $fields['meta'][$k]->name);\n        if ($info->orgname !== $fields['meta'][$k]->orgname)\n            printf(\"[016 - %d] Expecting orgname %s/%s got %s/%s\\n\",\n                $k, gettype($info->orgname), $info->orgname, gettype($fields['meta'][$k]->orgname), $fields['meta'][$k]->orgname);\n        if ($info->table !== $fields['meta'][$k]->table)\n            printf(\"[017 - %d] Expecting table %s/%s got %s/%s\\n\",\n                $k, gettype($info->table), $info->table, gettype($fields['meta'][$k]->table), $fields['meta'][$k]->table);\n        if ($info->orgtable !== $fields['meta'][$k]->orgtable)\n            printf(\"[018 - %d] Expecting orgtable %s/%s got %s/%s\\n\",\n                $k, gettype($info->orgtable), $info->orgtable, gettype($fields['meta'][$k]->orgtable), $fields['meta'][$k]->orgtable);\n        if ($info->def !== $fields['meta'][$k]->def)\n            printf(\"[019 - %d] Expecting def %s/%s got %s/%s\\n\",\n                $k, gettype($info->def), $info->def, gettype($fields['meta'][$k]->def), $fields['meta'][$k]->def);\n/*\n        if ($info->max_length !== $fields['meta'][$k]->max_length)\n            printf(\"[020 - %d] Expecting max_length %s/%s got %s/%s\\n\",\n                $k, gettype($info->max_length), $info->max_length, gettype($fields['meta'][$k]->max_length), $fields['meta'][$k]->max_length);\n*/\n        if ($info->length !== $fields['meta'][$k]->length)\n            printf(\"[021 - %d] Expecting length %s/%s got %s/%s\\n\",\n                $k, gettype($info->length), $info->length, gettype($fields['meta'][$k]->length), $fields['meta'][$k]->length);\n        if ($info->charsetnr !== $fields['meta'][$k]->charsetnr)\n            printf(\"[022 - %d] Expecting charsetnr %s/%s got %s/%s\\n\",\n                $k, gettype($info->charsetnr), $info->charsetnr, gettype($fields['meta'][$k]->charsetnr), $fields['meta'][$k]->charsetnr);\n        if ($info->flags !== $fields['meta'][$k]->flags)\n            printf(\"[023 - %d] Expecting flags %s/%s got %s/%s\\n\",\n                $k, gettype($info->flags), $info->flags, gettype($fields['meta'][$k]->flags), $fields['meta'][$k]->flags);\n        if ($info->type !== $fields['meta'][$k]->type)\n            printf(\"[024 - %d] Expecting type %s/%s got %s/%s\\n\",\n                $k, gettype($info->type), $info->type, gettype($fields['meta'][$k]->type), $fields['meta'][$k]->type);\n        if ($info->decimals !== $fields['meta'][$k]->decimals)\n            printf(\"[025 - %d] Expecting decimals %s/%s got %s/%s\\n\",\n                $k, getdecimals($info->decimals), $info->decimals, getdecimals($fields['meta'][$k]->decimals), $fields['meta'][$k]->decimals);\n        /* Make them equal for the check */\n        $tmp = $fields['all_res'][$k]->max_length;\n        $fields['all_res'][$k]->max_length = $fields['all_meta'][$k]->max_length;\n        if ($fields['all_res'][$k] != $fields['all_meta'][$k]) {\n            printf(\"[026 - %d] fetch_fields() seems to have returned different data, dumping\\n\", $k);\n            var_dump($fields['all_res'][$k]);\n            var_dump($fields['all_meta'][$k]);\n        }\n        $fields['all_res'][$k]->max_length = $tmp;\n    }\n    $num = count($fields['res']);\n    for ($i = 0; $i < 100; $i++) {\n        $pos = mt_rand(-1, $num + 1);\n        if ($pos >= 0 && $pos < $num) {\n            if (true !== mysqli_field_seek($res, $pos))\n                printf(\"[027] field_seek(res) failed\\n\");\n            if (true !== $res_meta->field_seek($pos))\n                printf(\"[028] field_seek(res__meta) failed\\n\");\n            $tmp1 = $res->fetch_field();\n            $tmp2 = mysqli_fetch_field($res_meta);\n            $tmp2->max_length = $tmp1->max_length;\n            if ($tmp1 != $tmp2) {\n                printf(\"[029] Field info differs, dumping data\\n\");\n                var_dump($tmp1);\n                var_dump($tmp2);\n            }\n            if ($tmp1 != $fields['res'][$pos]) {\n                printf(\"[030] Field info differs, dumping data\\n\");\n                var_dump($tmp1);\n                var_dump($fields['res'][$pos]);\n            }\n            $pos++;\n            if ($pos !== ($tmp = mysqli_field_tell($res)))\n                printf(\"[031] Expecting %s/%s got %s/%s\\n\",\n                    gettype($pos), $pos, gettype($tmp), $tmp);\n            if ($pos !== ($tmp = mysqli_field_tell($res_meta)))\n                printf(\"[032] Expecting %s/%s got %s/%s\\n\",\n                    gettype($pos), $pos, gettype($tmp), $tmp);\n        } else {\n            try {\n                $tmp = @mysqli_field_seek($res, $pos);\n                if ($pos >= $num && $tmp !== false) {\n                    printf(\"[033] field_seek(%d) did not fail\\n\", $pos);\n                }\n            } catch (ValueError $e) { /* Suppress output because pos is RANDOM */}\n            try {\n                $tmp = @mysqli_field_seek($res_meta, $pos);\n                if ($pos >= $num && $tmp !== false) {\n                    printf(\"[034] field_seek(%d) did not fail\\n\", $pos);\n                }\n            } catch (ValueError $e) { /* Suppress output because pos is RANDOM */}\n        }\n    }\n    $res->free_result();\n    mysqli_free_result($res_meta);\n    try {\n        mysqli_fetch_field($res);\n    } catch (Error $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    mysqli_stmt_close($stmt);\n    try {\n        mysqli_fetch_field($res);\n    } catch (Error $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    mysqli_close($link);\n    try {\n        mysqli_fetch_field($res);\n    } catch (Error $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    print \"done!\";\n?>")).toMatchSnapshot();
  });
});
