// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/sockets/tests/mcast_ipv6_recv.phpt
  it("Multicast support: IPv6 receive options", function () {
    expect(parser.parseCode("<?php\ninclude __DIR__.\"/mcast_helpers.php.inc\";\n$domain = AF_INET6;\n$level = IPPROTO_IPV6;\n$interface = 0;\n$mcastaddr = 'ff01::114';\n$sblock = \"?\";\necho \"creating send socket\\n\";\n$sends1 = socket_create($domain, SOCK_DGRAM, SOL_UDP) or die(\"err\");\nvar_dump($sends1);\necho \"creating receive socket\\n\";\n$s = socket_create($domain, SOCK_DGRAM, SOL_UDP) or die(\"err\");\nvar_dump($s);\n$br = socket_bind($s, '::0', 0) or die(\"err\");\nvar_dump($br);\nsocket_getsockname($s, $unused, $port);\n$so = socket_set_option($s, $level, MCAST_JOIN_GROUP, array(\n    \"group\"\t=> $mcastaddr,\n    \"interface\" => $interface,\n)) or die(\"err\");\nvar_dump($so);\n$r = socket_sendto($sends1, $m = \"testing packet\", strlen($m), 0, $mcastaddr, $port);\nvar_dump($r);\nchecktimeout($s, 500);\n$r = socket_recvfrom($s, $str, 2000, 0, $from, $fromPort);\nvar_dump($r, $str, $from);\n$sblock = $from;\n$r = socket_sendto($sends1, $m = \"initial packet\", strlen($m), 0, $mcastaddr, $port);\nvar_dump($r);\n$i = 0;\nchecktimeout($s, 500);\nwhile (($str = socket_read($s, 3000)) !== FALSE) {\n    $i++;\n    echo \"$i> \", $str, \"\\n\";\nif ($i == 1) {\n    echo \"leaving group\\n\";\n    $so = socket_set_option($s, $level, MCAST_LEAVE_GROUP, array(\n        \"group\"\t=> $mcastaddr,\n        \"interface\" => $interface,\n    ));\n    var_dump($so);\n    $r = socket_sendto($sends1, $m = \"ignored mcast packet\", strlen($m), 0, $mcastaddr, $port);\n    var_dump($r);\n    $r = socket_sendto($sends1, $m = \"unicast packet\", strlen($m), 0, \"::1\", $port);\n    var_dump($r);\n}\nif ($i == 2) {\n    echo \"re-joining group\\n\";\n    $so = socket_set_option($s, $level, MCAST_JOIN_GROUP, array(\n        \"group\"\t=> $mcastaddr,\n        \"interface\" => $interface,\n    ));\n    var_dump($so);\n    $r = socket_sendto($sends1, $m = \"mcast packet\", strlen($m), 0, $mcastaddr, $port);\n    var_dump($r);\n}\nif ($i == 3) {\n    echo \"blocking source\\n\";\n    $so = socket_set_option($s, $level, MCAST_BLOCK_SOURCE, array(\n        \"group\"\t=> $mcastaddr,\n        \"interface\" => $interface,\n        \"source\" => $sblock,\n    ));\n    var_dump($so);\n    $r = socket_sendto($sends1, $m = \"ignored packet (blocked source)\", strlen($m), 0, $mcastaddr, $port);\n    var_dump($r);\n    $r = socket_sendto($sends1, $m = \"unicast packet\", strlen($m), 0, \"::1\", $port);\n    var_dump($r);\n}\nif ($i == 4) {\n    echo \"unblocking source\\n\";\n    $so = socket_set_option($s, $level, MCAST_UNBLOCK_SOURCE, array(\n        \"group\"\t=> $mcastaddr,\n        \"interface\" => $interface,\n        \"source\" => $sblock,\n    ));\n    var_dump($so);\n    $r = socket_sendto($sends1, $m = \"mcast packet\", strlen($m), 0, $mcastaddr, $port);\n    var_dump($r);\n}\nif ($i == 5) {\n    echo \"leaving group\\n\";\n    $so = socket_set_option($s, $level, MCAST_LEAVE_GROUP, array(\n        \"group\"\t=> $mcastaddr,\n        \"interface\" => $interface,\n    ));\n    var_dump($so);\n    $r = socket_sendto($sends1, $m = \"ignored mcast packet\", strlen($m), 0, $mcastaddr, $port);\n    var_dump($r);\n    $r = socket_sendto($sends1, $m = \"unicast packet\", strlen($m), 0, \"::1\", $port);\n    var_dump($r);\n}\nif ($i == 6) {\n    echo \"joining source group\\n\";\n    $so = socket_set_option($s, $level, MCAST_JOIN_SOURCE_GROUP, array(\n        \"group\"\t=> $mcastaddr,\n        \"interface\" => $interface,\n        \"source\" => $sblock,\n    ));\n    var_dump($so);\n    $r = socket_sendto($sends1, $m = \"mcast packet from desired source\", strlen($m), 0, $mcastaddr, $port);\n    var_dump($r);\n}\nif ($i == 7) {\n    echo \"leaving source group\\n\";\n    $so = socket_set_option($s, $level, MCAST_LEAVE_SOURCE_GROUP, array(\n        \"group\"\t=> $mcastaddr,\n        \"interface\" => $interface,\n        \"source\" => $sblock,\n    ));\n    var_dump($so);\n    $r = socket_sendto($sends1, $m = \"ignored mcast packet\", strlen($m), 0, $mcastaddr, $port);\n    var_dump($r);\n    $r = socket_sendto($sends1, $m = \"unicast packet\", strlen($m), 0, \"::1\", $port);\n    var_dump($r);\n}\nif ($i == 8) {\n    /*echo \"joining source group\\n\";\n    $so = socket_set_option($s, $level, MCAST_JOIN_SOURCE_GROUP, array(\n        \"group\"\t=> $mcastaddr,\n        \"interface\" => $interface,\n        \"source\" => $sblock,\n    ));\n    var_dump($so);*/\n    break;\n}\n}\n?>")).toMatchSnapshot();
  });
});
