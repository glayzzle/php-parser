// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/mysqli_stmt_get_result.phpt
  it("mysqli_stmt_get_result()", function () {
    expect(parser.parseCode("<?php\n    /*\n    NOTE: no datatype tests here! This is done by\n    mysqli_stmt_bind_result.phpt already. Restrict\n    this test case to the basics.\n    */\n    require_once(\"connect.inc\");\n    require('table.inc');\n    if (!$stmt = mysqli_stmt_init($link))\n        printf(\"[003] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    // stmt object status test\n    try {\n        mysqli_stmt_fetch($stmt);\n    } catch (Error $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    if (!mysqli_stmt_prepare($stmt, \"SELECT id, label FROM test ORDER BY id LIMIT 2\"))\n        printf(\"[005] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    // FIXME - different versions return different values ?!\n    if ((NULL !== ($tmp = mysqli_stmt_get_result($stmt))) && (false !== $tmp))\n        printf(\"[006] Expecting NULL or boolean/false, got %s/%s\\n\", gettype($tmp), var_export($tmp, 1));\n    if (!mysqli_stmt_execute($stmt))\n        printf(\"[007] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (!mysqli_stmt_store_result($stmt))\n        printf(\"[008] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (is_object($tmp = mysqli_stmt_store_result($stmt)))\n        printf(\"[009] non-object, got %s/%s\\n\", gettype($tmp), var_export($tmp, 1));\n    mysqli_stmt_close($stmt);\n    if (!$stmt = mysqli_stmt_init($link))\n        printf(\"[010] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    // stmt object status test\n    try {\n        mysqli_stmt_fetch($stmt);\n    } catch (Error $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    if (!mysqli_stmt_prepare($stmt, \"SELECT id, label FROM test ORDER BY id LIMIT 2\"))\n        printf(\"[012] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    // FIXME - different versions return different values ?!\n    if ((NULL !== ($tmp = mysqli_stmt_get_result($stmt))) && (false !== $tmp))\n        printf(\"[013] Expecting NULL or boolean/false, got %s/%s\\n\", gettype($tmp), var_export($tmp, 1));\n    if (!mysqli_stmt_execute($stmt))\n        printf(\"[014] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (!is_object($tmp = mysqli_stmt_get_result($stmt)))\n        printf(\"[016] NULL, got %s/%s\\n\", gettype($tmp), var_export($tmp, 1));\n    mysqli_free_result($tmp);\n    mysqli_stmt_close($stmt);\n    if (!$stmt = mysqli_stmt_init($link))\n        printf(\"[017] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    // stmt object status test\n    try {\n        mysqli_stmt_get_result($stmt);\n    } catch (Error $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    if (!mysqli_stmt_prepare($stmt, \"SELECT id, label FROM test ORDER BY id LIMIT 2\"))\n        printf(\"[019] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (false !== ($tmp = mysqli_stmt_get_result($stmt)))\n        printf(\"[020] Expecting false, got %s/%s\\n\", gettype($tmp), var_export($tmp, 1));\n    if (!mysqli_stmt_execute($stmt))\n        printf(\"[023] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (!is_object($tmp = mysqli_stmt_get_result($stmt)))\n        printf(\"[024] Expecting object, got %s/%s\\n\", gettype($tmp), var_export($tmp, 1));\n    if (false !== ($tmp = mysqli_stmt_fetch($stmt)))\n        printf(\"[025] false, got %s/%s\\n\", gettype($tmp), var_export($tmp, 1));\n    if (true !== ($tmp = mysqli_stmt_bind_result($stmt, $id, $label))) {\n        printf(\"[026] [%d] [%s]\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n        printf(\"[027] [%d] [%s]\\n\", mysqli_errno($link), mysqli_error($link));\n        printf(\"[028] Expecting boolean/true, got %s/%s\\n\", gettype($tmp), var_export($tmp, 1));\n    }\n    if (false !== ($tmp = mysqli_stmt_fetch($stmt)))\n        printf(\"[029] false, got %s/%s\\n\", gettype($tmp), var_export($tmp, 1));\n    mysqli_stmt_close($stmt);\n    // get_result can be used in PS cursor mode\n    if (!$stmt = mysqli_stmt_init($link))\n        printf(\"[030] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    if (!mysqli_stmt_prepare($stmt, \"SELECT id, label FROM test ORDER BY id LIMIT 2\"))\n        printf(\"[031] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (!mysqli_stmt_attr_set($stmt, MYSQLI_STMT_ATTR_CURSOR_TYPE, MYSQLI_CURSOR_TYPE_READ_ONLY))\n        printf(\"[032] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (!mysqli_stmt_execute($stmt))\n        printf(\"[033] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    $result = mysqli_stmt_get_result($stmt);\n    while ($row = mysqli_fetch_assoc($result)) {\n        var_dump($row);\n    }\n    if (!$stmt = mysqli_stmt_init($link))\n        printf(\"[034] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    if (!mysqli_stmt_prepare($stmt, \"SELECT id, label FROM test ORDER BY id LIMIT 2\"))\n        printf(\"[035] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (!mysqli_stmt_execute($stmt))\n        printf(\"[036] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    $id = NULL;\n    $label = NULL;\n    if (true !== ($tmp = mysqli_stmt_bind_result($stmt, $id, $label)))\n        printf(\"[037] Expecting boolean/true, got %s/%s\\n\", gettype($tmp), var_export($tmp, 1));\n    if (!is_object($tmp = $result = mysqli_stmt_get_result($stmt)))\n        printf(\"[038] Expecting array, got %s/%s, [%d] %s\\n\",\n            gettype($tmp), var_export($tmp, 1),\n            mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (false !== ($tmp = mysqli_stmt_fetch($stmt)))\n        printf(\"[039] Expecting boolean/false, got %s/%s, [%d] %s\\n\",\n            gettype($tmp), $tmp, mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    printf(\"[040] [%d] [%s]\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    printf(\"[041] [%d] [%s]\\n\", mysqli_errno($link), mysqli_error($link));\n    while ($row = mysqli_fetch_assoc($result)) {\n        var_dump($row);\n    }\n    mysqli_free_result($result);\n\tif (!mysqli_kill($link, mysqli_thread_id($link)))\n\t\tprintf(\"[042] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n\tif (false !== ($tmp = mysqli_stmt_get_result($stmt)))\n\t\tprintf(\"[043] Expecting false, got %s/%s\\n\", gettype($tmp), var_export($tmp, 1));\n\tmysqli_stmt_close($stmt);\n\ttry {\n        mysqli_stmt_fetch($stmt);\n    } catch (Error $exception) {\n        echo $exception->getMessage(), \"\\n\";\n    }\n\tmysqli_close($link);\n\tprint \"done!\";\n?>")).toMatchSnapshot();
  });
});
