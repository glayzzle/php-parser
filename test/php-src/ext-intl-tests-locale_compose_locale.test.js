// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/intl/tests/locale_compose_locale.phpt
  it("locale_compose_locale()", function () {
    expect(parser.parseCode("<?php\n/*\n * Try parsing different Locales\n * with Procedural and Object methods.\n */\nfunction ut_main()\n{\n    $loc_parts_arr1 = array(\n        Locale::LANG_TAG =>'sl' ,\n        Locale::SCRIPT_TAG =>'Latn' ,\n        Locale::REGION_TAG =>'IT'\n    );\n    $loc_parts_arr2 = array(\n        Locale::LANG_TAG =>'de' ,\n        Locale::REGION_TAG =>'DE'\n    );\n    $loc_parts_arr3 = array(\n        Locale::LANG_TAG =>'hi'\n    );\n    $loc_parts_arr4 = array(\n        Locale::LANG_TAG =>'zh' ,\n        Locale::SCRIPT_TAG =>'Hans' ,\n        Locale::REGION_TAG =>'CN'\n    );\n    $loc_parts_arr5 = array(\n        Locale::LANG_TAG =>'es' ,\n        Locale::SCRIPT_TAG =>'Hans' ,\n        Locale::REGION_TAG =>'CN'\n    );\n    $loc_parts_arr6 = array(\n        Locale::LANG_TAG =>'en' ,\n        Locale::SCRIPT_TAG =>'Hans' ,\n        Locale::REGION_TAG =>'CN',\n        Locale::VARIANT_TAG.'14' =>'rozaj' ,\n        'variant1'=>'nedis'\n    );\n    $loc_parts_arr7 = array(\n        Locale::LANG_TAG =>'en' ,\n        Locale::SCRIPT_TAG =>'Hans' ,\n        Locale::REGION_TAG =>'CN',\n        'variant14'=>'rozaj' ,\n        'variant1'=>'nedis' ,\n        'extlang0'=>'lng' ,\n        'extlang1'=>'ing'\n    );\n    $loc_parts_arr8 = array(\n        Locale::LANG_TAG =>'en' ,\n        Locale::SCRIPT_TAG =>'Hans' ,\n        Locale::REGION_TAG =>'CN',\n        'variant14'=>'rozaj' ,\n        'variant1'=>'nedis' ,\n        'extlang0'=>'lng' ,\n        'extlang1'=>'ing',\n        'private7'=>'prv1' ,\n        'private9'=>'prv2'\n    );\n    $loc_parts_arr9 = array(\n        Locale::REGION_TAG =>'DE'\n    );\n    $loc_parts_arr10 = array(\n        Locale::LANG_TAG => 45,\n        Locale::REGION_TAG => false,\n        Locale::SCRIPT_TAG => 15\n    );\n    $loc_parts_arr11 = array(\n        Locale::LANG_TAG =>'de'  ,\n        Locale::REGION_TAG =>'DE',\n        'private0' => 13,\n        'variant1' => array(),\n        'extlang2' => false\n    );\n        $loc_parts_arr12 = array(\n                Locale::LANG_TAG =>'en' ,\n                Locale::SCRIPT_TAG =>'Hans' ,\n                Locale::REGION_TAG =>'CN',\n                Locale::VARIANT_TAG => array('nedis', 'rozaj'),\n        Locale::PRIVATE_TAG => array('prv1', 'prv2'),\n        Locale::EXTLANG_TAG => array('lng', 'ing')\n        );\n    $loc_parts_arr = array(\n        'loc1' => $loc_parts_arr1\t,\n        'loc2' => $loc_parts_arr2\t,\n        'loc3' => $loc_parts_arr3\t,\n        'loc4' => $loc_parts_arr4\t,\n        'loc5' => $loc_parts_arr5\t,\n        'loc6' => $loc_parts_arr6\t,\n        'loc7' => $loc_parts_arr7\t,\n        'loc8' => $loc_parts_arr8\t,\n        'loc9' => $loc_parts_arr9\t,\n        'loc10' => $loc_parts_arr10\t,\n        'loc11' => $loc_parts_arr11\t,\n        'loc12' => $loc_parts_arr12\n    );\n    error_reporting( E_ERROR );\n    $cnt  = 0;\n    $res_str = '';\n    foreach($loc_parts_arr as $key => $value ){\n        $res_str .= \"\\n------------\";\n        $res_str .= \"\\nInput Array name is : loc\".(++$cnt) ;\n/*\n        foreach($value as $valKey => $valValue ){\n            $res_str .=  $valKey .\"->\".$valValue.\"  \" ;\n        }\n*/\n        try {\n            $locale = ut_loc_locale_compose( $value);\n            $res_str .= \"\\n\\nComposed Locale: \";\n            if( $locale){\n                $res_str .= \"$locale\";\n            }else{\n                $res_str .= \"No values found from Locale compose due to the following error:\\n\";\n                $res_str .= intl_get_error_message() ;\n            }\n        } catch (ValueError $exception) {\n            echo $exception->getMessage() . \"\\n\";\n        }\n    }\n    $res_str .= \"\\n------------\";\n    $res_str .= \"\\n\";\n    return $res_str;\n}\ninclude_once( 'ut_common.inc' );\nut_run();\n?>")).toMatchSnapshot();
  });
});
