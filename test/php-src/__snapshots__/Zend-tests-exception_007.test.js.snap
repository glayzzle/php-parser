// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Setting previous exception 1`] = `
Program {
  "children": Array [
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          Try {
            "always": null,
            "body": Block {
              "children": Array [
                Throw {
                  "kind": "throw",
                  "what": New {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"First\\"",
                        "unicode": false,
                        "value": "First",
                      },
                      Number {
                        "kind": "number",
                        "value": "1",
                      },
                      New {
                        "arguments": Array [
                          String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"Another\\"",
                            "unicode": false,
                            "value": "Another",
                          },
                          Number {
                            "kind": "number",
                            "value": "0",
                          },
                          NullKeyword {
                            "kind": "nullkeyword",
                            "raw": "NULL",
                          },
                        ],
                        "kind": "new",
                        "what": Name {
                          "kind": "name",
                          "name": "Exception",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "new",
                    "what": Name {
                      "kind": "name",
                      "name": "Exception",
                      "resolution": "uqn",
                    },
                  },
                },
              ],
              "kind": "block",
            },
            "catches": Array [
              Catch {
                "body": Block {
                  "children": Array [
                    Throw {
                      "kind": "throw",
                      "what": New {
                        "arguments": Array [
                          String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"Second\\"",
                            "unicode": false,
                            "value": "Second",
                          },
                          Number {
                            "kind": "number",
                            "value": "2",
                          },
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "e",
                          },
                        ],
                        "kind": "new",
                        "what": Name {
                          "kind": "name",
                          "name": "Exception",
                          "resolution": "uqn",
                        },
                      },
                    },
                  ],
                  "kind": "block",
                },
                "kind": "catch",
                "variable": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "e",
                },
                "what": Array [
                  Name {
                    "kind": "name",
                    "name": "Exception",
                    "resolution": "uqn",
                  },
                ],
              },
            ],
            "kind": "try",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Throw {
                "kind": "throw",
                "what": New {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"Third\\"",
                      "unicode": false,
                      "value": "Third",
                    },
                    Number {
                      "kind": "number",
                      "value": "3",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "e",
                    },
                  ],
                  "kind": "new",
                  "what": Name {
                    "kind": "name",
                    "name": "Exception",
                    "resolution": "uqn",
                  },
                },
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "Exception",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    Inline {
      "kind": "inline",
      "raw": "
===DONE===",
      "value": "===DONE===",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
