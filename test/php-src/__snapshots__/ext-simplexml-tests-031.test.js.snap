// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests SimpleXML: addChild and addAttribute 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "xml",
        },
        "operator": "=",
        "right": Encapsed {
          "kind": "encapsed",
          "label": "EOF",
          "raw": "<<<EOF
<root s:att1=\\"b\\" att1=\\"a\\"
      xmlns:s=\\"urn::test\\" xmlns:t=\\"urn::test-t\\">
   <child1>test</child1>
   <child1>test 2</child1>
   <s:child3 />
</root>
EOF",
          "type": "heredoc",
          "value": Array [
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "<root s:att1=\\"b\\" att1=\\"a\\"
      xmlns:s=\\"urn::test\\" xmlns:t=\\"urn::test-t\\">
   <child1>test</child1>
   <child1>test 2</child1>
   <s:child3 />
</root>
",
                "unicode": false,
                "value": "<root s:att1=\\"b\\" att1=\\"a\\"
      xmlns:s=\\"urn::test\\" xmlns:t=\\"urn::test-t\\">
   <child1>test</child1>
   <child1>test 2</child1>
   <s:child3 />
</root>",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
          ],
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "sxe",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "xml",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "simplexml_load_string",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'v:att11'",
            "unicode": false,
            "value": "v:att11",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'xxx'",
            "unicode": false,
            "value": "xxx",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'urn::test-v'",
            "unicode": false,
            "value": "urn::test-v",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "addAttribute",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "sxe",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'v:att11'",
            "unicode": false,
            "value": "v:att11",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'xxx'",
            "unicode": false,
            "value": "xxx",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'urn::test-v'",
            "unicode": false,
            "value": "urn::test-v",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "addAttribute",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "sxe",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'att2'",
            "unicode": false,
            "value": "att2",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'no-ns'",
            "unicode": false,
            "value": "no-ns",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "addAttribute",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "sxe",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "d",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "attributes",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "sxe",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'m:test'",
            "unicode": false,
            "value": "m:test",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'myval'",
            "unicode": false,
            "value": "myval",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'urn::test'",
            "unicode": false,
            "value": "urn::test",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "addChild",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "d",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'m:test1'",
            "unicode": false,
            "value": "m:test1",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'myval'",
            "unicode": false,
            "value": "myval",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'urn::test'",
            "unicode": false,
            "value": "urn::test",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "addChild",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "sxe",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "n",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'m:test2'",
              "unicode": false,
              "value": "m:test2",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'myval'",
              "unicode": false,
              "value": "myval",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'urn::testnew'",
              "unicode": false,
              "value": "urn::testnew",
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "addChild",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "sxe",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'test3'",
            "unicode": false,
            "value": "test3",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'myval'",
            "unicode": false,
            "value": "myval",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'urn::testnew'",
            "unicode": false,
            "value": "urn::testnew",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "addChild",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "sxe",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'test4'",
            "unicode": false,
            "value": "test4",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'myval'",
            "unicode": false,
            "value": "myval",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "addChild",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "sxe",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'s:test5'",
            "unicode": false,
            "value": "s:test5",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'myval'",
            "unicode": false,
            "value": "myval",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "addChild",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "sxe",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "asXML",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "sxe",
            },
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
