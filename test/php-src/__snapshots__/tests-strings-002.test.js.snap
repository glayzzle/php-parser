// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Formatted print functions 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Bin {
        "kind": "bin",
        "left": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "fp",
          },
          "operator": "=",
          "right": Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"php://stdout\\"",
                "unicode": false,
                "value": "php://stdout",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"w\\"",
                "unicode": false,
                "value": "w",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "fopen",
              "resolution": "uqn",
            },
          },
        },
        "right": Exit {
          "expression": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"Bug!!\\"",
            "unicode": false,
            "value": "Bug!!",
          },
          "kind": "exit",
          "useDie": true,
        },
        "type": "or",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "x",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "fp",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"fprintf test 1:%.5s\\"",
              "unicode": false,
              "value": "fprintf test 1:%.5s",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"abcdefghij\\"",
              "unicode": false,
              "value": "abcdefghij",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "fprintf",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "x",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"printf test 1:%s\\\\n\\"",
            "unicode": false,
            "value": "printf test 1:%s
",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"simple string\\"",
            "unicode": false,
            "value": "simple string",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"printf test 2:%d\\\\n\\"",
            "unicode": false,
            "value": "printf test 2:%d
",
          },
          Number {
            "kind": "number",
            "value": "42",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"printf test 3:%f\\\\n\\"",
            "unicode": false,
            "value": "printf test 3:%f
",
          },
          Bin {
            "kind": "bin",
            "left": Number {
              "kind": "number",
              "value": "10.0",
            },
            "right": Number {
              "kind": "number",
              "value": "3",
            },
            "type": "/",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"printf test 4:%.10f\\\\n\\"",
            "unicode": false,
            "value": "printf test 4:%.10f
",
          },
          Bin {
            "kind": "bin",
            "left": Number {
              "kind": "number",
              "value": "10.0",
            },
            "right": Number {
              "kind": "number",
              "value": "3",
            },
            "type": "/",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"printf test 5:%-10.2f\\\\n\\"",
            "unicode": false,
            "value": "printf test 5:%-10.2f
",
          },
          Number {
            "kind": "number",
            "value": "2.5",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"printf test 6:%-010.2f\\\\n\\"",
            "unicode": false,
            "value": "printf test 6:%-010.2f
",
          },
          Number {
            "kind": "number",
            "value": "2.5",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"printf test 7:%010.2f\\\\n\\"",
            "unicode": false,
            "value": "printf test 7:%010.2f
",
          },
          Number {
            "kind": "number",
            "value": "2.5",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"printf test 8:<%20s>\\\\n\\"",
            "unicode": false,
            "value": "printf test 8:<%20s>
",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"foo\\"",
            "unicode": false,
            "value": "foo",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"printf test 9:<%-20s>\\\\n\\"",
            "unicode": false,
            "value": "printf test 9:<%-20s>
",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"bar\\"",
            "unicode": false,
            "value": "bar",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"printf test 10: 123456789012345\\\\n\\"",
            "unicode": false,
            "value": "printf test 10: 123456789012345
",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"printf test 10:<%15s>\\\\n\\"",
            "unicode": false,
            "value": "printf test 10:<%15s>
",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"hoyesterettsjustitiarius\\"",
            "unicode": false,
            "value": "hoyesterettsjustitiarius",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"printf test 11: 123456789012345678901234567890\\\\n\\"",
            "unicode": false,
            "value": "printf test 11: 123456789012345678901234567890
",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"printf test 11:<%30s>\\\\n\\"",
            "unicode": false,
            "value": "printf test 11:<%30s>
",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"hoyesterettsjustitiarius\\"",
            "unicode": false,
            "value": "hoyesterettsjustitiarius",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"printf test 12:%5.2f\\\\n\\"",
            "unicode": false,
            "value": "printf test 12:%5.2f
",
          },
          Unary {
            "kind": "unary",
            "type": "-",
            "what": Number {
              "kind": "number",
              "value": "12.34",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"printf test 13:%5d\\\\n\\"",
            "unicode": false,
            "value": "printf test 13:%5d
",
          },
          Unary {
            "kind": "unary",
            "type": "-",
            "what": Number {
              "kind": "number",
              "value": "12",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"printf test 14:%c\\\\n\\"",
            "unicode": false,
            "value": "printf test 14:%c
",
          },
          Number {
            "kind": "number",
            "value": "64",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"printf test 15:%b\\\\n\\"",
            "unicode": false,
            "value": "printf test 15:%b
",
          },
          Number {
            "kind": "number",
            "value": "170",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"printf test 16:%x\\\\n\\"",
            "unicode": false,
            "value": "printf test 16:%x
",
          },
          Number {
            "kind": "number",
            "value": "170",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"printf test 17:%X\\\\n\\"",
            "unicode": false,
            "value": "printf test 17:%X
",
          },
          Number {
            "kind": "number",
            "value": "170",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"printf test 18:%16b\\\\n\\"",
            "unicode": false,
            "value": "printf test 18:%16b
",
          },
          Number {
            "kind": "number",
            "value": "170",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"printf test 19:%16x\\\\n\\"",
            "unicode": false,
            "value": "printf test 19:%16x
",
          },
          Number {
            "kind": "number",
            "value": "170",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"printf test 20:%16X\\\\n\\"",
            "unicode": false,
            "value": "printf test 20:%16X
",
          },
          Number {
            "kind": "number",
            "value": "170",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"printf test 21:%016b\\\\n\\"",
            "unicode": false,
            "value": "printf test 21:%016b
",
          },
          Number {
            "kind": "number",
            "value": "170",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"printf test 22:%016x\\\\n\\"",
            "unicode": false,
            "value": "printf test 22:%016x
",
          },
          Number {
            "kind": "number",
            "value": "170",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"printf test 23:%016X\\\\n\\"",
            "unicode": false,
            "value": "printf test 23:%016X
",
          },
          Number {
            "kind": "number",
            "value": "170",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"printf test 24:%.5s\\\\n\\"",
            "unicode": false,
            "value": "printf test 24:%.5s
",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"abcdefghij\\"",
            "unicode": false,
            "value": "abcdefghij",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"printf test 25:%-2s\\\\n\\"",
            "unicode": false,
            "value": "printf test 25:%-2s
",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"gazonk\\"",
            "unicode": false,
            "value": "gazonk",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"printf test 26:%2\\\\$d %1\\\\$d\\\\n\\"",
            "unicode": false,
            "value": "printf test 26:%2$d %1$d
",
          },
          Number {
            "kind": "number",
            "value": "1",
          },
          Number {
            "kind": "number",
            "value": "2",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"printf test 27:%3\\\\$d %d %d\\\\n\\"",
            "unicode": false,
            "value": "printf test 27:%3$d %d %d
",
          },
          Number {
            "kind": "number",
            "value": "1",
          },
          Number {
            "kind": "number",
            "value": "2",
          },
          Number {
            "kind": "number",
            "value": "3",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"printf test 28:%2\\\\$02d %1\\\\$2d\\\\n\\"",
            "unicode": false,
            "value": "printf test 28:%2$02d %1$2d
",
          },
          Number {
            "kind": "number",
            "value": "1",
          },
          Number {
            "kind": "number",
            "value": "2",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"printf test 29:%2\\\\$-2d %1\\\\$2d\\\\n\\"",
            "unicode": false,
            "value": "printf test 29:%2$-2d %1$2d
",
          },
          Number {
            "kind": "number",
            "value": "1",
          },
          Number {
            "kind": "number",
            "value": "2",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Print {
              "expression": String {
                "isDoubleQuote": true,
                "kind": "string",
                "parenthesizedExpression": true,
                "raw": "\\"printf test 30:\\"",
                "unicode": false,
                "value": "printf test 30:",
              },
              "kind": "print",
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"%0\\\\$s\\"",
                  "unicode": false,
                  "value": "%0$s",
                },
                Number {
                  "kind": "number",
                  "value": "1",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "printf",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Print {
              "expression": String {
                "isDoubleQuote": true,
                "kind": "string",
                "parenthesizedExpression": true,
                "raw": "\\"x\\\\n\\"",
                "unicode": false,
                "value": "x
",
              },
              "kind": "print",
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Print {
                  "expression": Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'Error found: '",
                        "unicode": false,
                        "value": "Error found: ",
                      },
                      "right": Call {
                        "arguments": Array [],
                        "kind": "call",
                        "what": PropertyLookup {
                          "kind": "propertylookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "getMessage",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "e",
                          },
                        },
                      },
                      "type": ".",
                    },
                    "parenthesizedExpression": true,
                    "right": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"\\\\n\\"",
                      "unicode": false,
                      "value": "
",
                    },
                    "type": ".",
                  },
                  "kind": "print",
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "\\\\ValueError",
              "resolution": "fqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"vprintf test 1:%2\\\\$-2d %1\\\\$2d\\\\n\\"",
            "unicode": false,
            "value": "vprintf test 1:%2$-2d %1$2d
",
          },
          Array {
            "items": Array [
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": Number {
                  "kind": "number",
                  "value": "2",
                },
              },
            ],
            "kind": "array",
            "shortForm": false,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "vprintf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
