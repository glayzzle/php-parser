// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #75570 ("Narrowing occurred during type inference" error) 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "parents",
          },
          "nullable": false,
          "readonly": false,
          "type": TypeReference {
            "kind": "typereference",
            "name": "array",
            "raw": "array",
          },
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "graph",
              },
              "operator": "=",
              "right": Array {
                "items": Array [],
                "kind": "array",
                "shortForm": false,
              },
            },
            "kind": "expressionstatement",
          },
          Foreach {
            "body": Block {
              "children": Array [
                Foreach {
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": OffsetLookup {
                            "kind": "offsetlookup",
                            "offset": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "'line'",
                              "unicode": false,
                              "value": "line",
                            },
                            "what": OffsetLookup {
                              "kind": "offsetlookup",
                              "offset": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "v",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "graph",
                              },
                            },
                          },
                          "operator": "=",
                          "right": Number {
                            "kind": "number",
                            "value": "1",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "key": null,
                  "kind": "foreach",
                  "shortForm": false,
                  "source": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "graph",
                  },
                  "value": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "v",
                  },
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": false,
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "graph",
                      },
                    },
                    "operator": "=",
                    "right": Array {
                      "items": Array [
                        Entry {
                          "byRef": false,
                          "key": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'line'",
                            "unicode": false,
                            "value": "line",
                          },
                          "kind": "entry",
                          "unpack": false,
                          "value": Number {
                            "kind": "number",
                            "value": "1",
                          },
                        },
                      ],
                      "kind": "array",
                      "shortForm": false,
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "key": null,
            "kind": "foreach",
            "shortForm": false,
            "source": Variable {
              "curly": false,
              "kind": "variable",
              "name": "parents",
            },
            "value": Variable {
              "curly": false,
              "kind": "variable",
              "name": "p",
            },
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "renderRawGraph",
      },
      "nullable": false,
      "type": null,
    },
    Inline {
      "kind": "inline",
      "raw": "
OK",
      "value": "OK",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
