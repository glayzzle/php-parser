// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Generator return type with multiple classes 1`] = `
Program {
  "children": Array [
    Interface {
      "attrGroups": Array [],
      "body": Array [
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": null,
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "test",
          },
          "nullable": false,
          "type": UnionType {
            "kind": "uniontype",
            "name": null,
            "types": Array [
              Name {
                "kind": "name",
                "name": "Generator",
                "resolution": "uqn",
              },
              Name {
                "kind": "name",
                "name": "ArrayAccess",
                "resolution": "uqn",
              },
              TypeReference {
                "kind": "typereference",
                "name": "array",
                "raw": "array",
              },
            ],
          },
          "visibility": "public",
        },
      ],
      "extends": null,
      "kind": "interface",
      "name": Identifier {
        "kind": "identifier",
        "name": "I",
      },
    },
    Class {
      "attrGroups": Array [],
      "body": Array [
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Yield {
                  "key": null,
                  "kind": "yield",
                  "value": null,
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "test",
          },
          "nullable": false,
          "type": UnionType {
            "kind": "uniontype",
            "name": null,
            "types": Array [
              Name {
                "kind": "name",
                "name": "Generator",
                "resolution": "uqn",
              },
              Name {
                "kind": "name",
                "name": "ArrayAccess",
                "resolution": "uqn",
              },
              TypeReference {
                "kind": "typereference",
                "name": "array",
                "raw": "array",
              },
            ],
          },
          "visibility": "",
        },
      ],
      "extends": null,
      "implements": Array [
        Name {
          "kind": "name",
          "name": "I",
          "resolution": "uqn",
        },
      ],
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "C",
      },
    },
    Inline {
      "kind": "inline",
      "raw": "
===DONE===",
      "value": "===DONE===",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
