// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests SOAP 1.2: T32 echoHeader 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "HTTP_RAW_POST_DATA",
        },
        "operator": "=",
        "right": Encapsed {
          "kind": "encapsed",
          "label": "EOF",
          "raw": "<<<EOF
<?xml version='1.0' ?>
<env:Envelope xmlns:env=\\"http://www.w3.org/2003/05/soap-envelope\\">
  <env:Header>
    <test:requiredHeader xmlns:test=\\"http://example.org/ts-tests\\"
          env:mustUnderstand=\\"true\\">foo</test:requiredHeader>
  </env:Header>
  <env:Body>
    <test:echoHeader xmlns:test=\\"http://example.org/ts-tests\\">
    </test:echoHeader>
  </env:Body>
</env:Envelope>
EOF",
          "type": "heredoc",
          "value": Array [
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "<?xml version='1.0' ?>
<env:Envelope xmlns:env=\\"http://www.w3.org/2003/05/soap-envelope\\">
  <env:Header>
    <test:requiredHeader xmlns:test=\\"http://example.org/ts-tests\\"
          env:mustUnderstand=\\"true\\">foo</test:requiredHeader>
  </env:Header>
  <env:Body>
    <test:echoHeader xmlns:test=\\"http://example.org/ts-tests\\">
    </test:echoHeader>
  </env:Body>
</env:Envelope>
",
                "unicode": false,
                "value": "<?xml version='1.0' ?>
<env:Envelope xmlns:env=\\"http://www.w3.org/2003/05/soap-envelope\\">
  <env:Header>
    <test:requiredHeader xmlns:test=\\"http://example.org/ts-tests\\"
          env:mustUnderstand=\\"true\\">foo</test:requiredHeader>
  </env:Header>
  <env:Body>
    <test:echoHeader xmlns:test=\\"http://example.org/ts-tests\\">
    </test:echoHeader>
  </env:Body>
</env:Envelope>",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
          ],
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": false,
        "target": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"soap12-test.inc\\"",
          "unicode": false,
          "value": "soap12-test.inc",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
