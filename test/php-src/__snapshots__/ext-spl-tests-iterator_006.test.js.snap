// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests SPL: IteratorIterator and SimpleXMlElement 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "root",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'<?xml version=\\"1.0\\"?>
<root>
 <child>Hello</child>
 <child>World</child>
</root>
'",
              "unicode": false,
              "value": "<?xml version=\\"1.0\\"?>
<root>
 <child>Hello</child>
 <child>World</child>
</root>
",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "simplexml_load_string",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "child",
                },
                "right": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"\\\\n\\"",
                  "unicode": false,
                  "value": "
",
                },
                "type": ".",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": New {
        "arguments": Array [
          PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "child",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "root",
            },
          },
        ],
        "kind": "new",
        "what": Name {
          "kind": "name",
          "name": "IteratorIterator",
          "resolution": "uqn",
        },
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "child",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
