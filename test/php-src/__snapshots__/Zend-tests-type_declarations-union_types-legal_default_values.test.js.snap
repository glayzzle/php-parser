// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests The default value must be legal for one of the type in the union 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [],
      "body": Array [
        PropertyStatement {
          "isStatic": false,
          "kind": "propertystatement",
          "properties": Array [
            Property {
              "attrGroups": Array [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "a",
              },
              "nullable": false,
              "readonly": false,
              "type": UnionType {
                "kind": "uniontype",
                "name": null,
                "types": Array [
                  TypeReference {
                    "kind": "typereference",
                    "name": "int",
                    "raw": "int",
                  },
                  TypeReference {
                    "kind": "typereference",
                    "name": "float",
                    "raw": "float",
                  },
                ],
              },
              "value": Number {
                "kind": "number",
                "value": "1",
              },
            },
          ],
          "visibility": "public",
        },
        PropertyStatement {
          "isStatic": false,
          "kind": "propertystatement",
          "properties": Array [
            Property {
              "attrGroups": Array [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "b",
              },
              "nullable": false,
              "readonly": false,
              "type": UnionType {
                "kind": "uniontype",
                "name": null,
                "types": Array [
                  TypeReference {
                    "kind": "typereference",
                    "name": "int",
                    "raw": "int",
                  },
                  TypeReference {
                    "kind": "typereference",
                    "name": "float",
                    "raw": "float",
                  },
                ],
              },
              "value": Number {
                "kind": "number",
                "value": "2.0",
              },
            },
          ],
          "visibility": "public",
        },
        PropertyStatement {
          "isStatic": false,
          "kind": "propertystatement",
          "properties": Array [
            Property {
              "attrGroups": Array [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "c",
              },
              "nullable": false,
              "readonly": false,
              "type": UnionType {
                "kind": "uniontype",
                "name": null,
                "types": Array [
                  TypeReference {
                    "kind": "typereference",
                    "name": "float",
                    "raw": "float",
                  },
                  TypeReference {
                    "kind": "typereference",
                    "name": "string",
                    "raw": "string",
                  },
                ],
              },
              "value": Number {
                "kind": "number",
                "value": "3",
              },
            },
          ],
          "visibility": "public",
        },
        PropertyStatement {
          "isStatic": false,
          "kind": "propertystatement",
          "properties": Array [
            Property {
              "attrGroups": Array [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "d",
              },
              "nullable": false,
              "readonly": false,
              "type": UnionType {
                "kind": "uniontype",
                "name": null,
                "types": Array [
                  TypeReference {
                    "kind": "typereference",
                    "name": "float",
                    "raw": "float",
                  },
                  TypeReference {
                    "kind": "typereference",
                    "name": "string",
                    "raw": "string",
                  },
                ],
              },
              "value": Number {
                "kind": "number",
                "value": "4.0",
              },
            },
          ],
          "visibility": "public",
        },
        PropertyStatement {
          "isStatic": false,
          "kind": "propertystatement",
          "properties": Array [
            Property {
              "attrGroups": Array [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "e",
              },
              "nullable": false,
              "readonly": false,
              "type": UnionType {
                "kind": "uniontype",
                "name": null,
                "types": Array [
                  TypeReference {
                    "kind": "typereference",
                    "name": "float",
                    "raw": "float",
                  },
                  TypeReference {
                    "kind": "typereference",
                    "name": "string",
                    "raw": "string",
                  },
                ],
              },
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"5\\"",
                "unicode": false,
                "value": "5",
              },
            },
          ],
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "Test",
      },
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "a",
          },
          "nullable": false,
          "readonly": false,
          "type": UnionType {
            "kind": "uniontype",
            "name": null,
            "types": Array [
              TypeReference {
                "kind": "typereference",
                "name": "int",
                "raw": "int",
              },
              TypeReference {
                "kind": "typereference",
                "name": "float",
                "raw": "float",
              },
            ],
          },
          "value": Number {
            "kind": "number",
            "value": "1",
          },
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "b",
          },
          "nullable": false,
          "readonly": false,
          "type": UnionType {
            "kind": "uniontype",
            "name": null,
            "types": Array [
              TypeReference {
                "kind": "typereference",
                "name": "int",
                "raw": "int",
              },
              TypeReference {
                "kind": "typereference",
                "name": "float",
                "raw": "float",
              },
            ],
          },
          "value": Number {
            "kind": "number",
            "value": "2.0",
          },
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "c",
          },
          "nullable": false,
          "readonly": false,
          "type": UnionType {
            "kind": "uniontype",
            "name": null,
            "types": Array [
              TypeReference {
                "kind": "typereference",
                "name": "float",
                "raw": "float",
              },
              TypeReference {
                "kind": "typereference",
                "name": "string",
                "raw": "string",
              },
            ],
          },
          "value": Number {
            "kind": "number",
            "value": "3",
          },
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "d",
          },
          "nullable": false,
          "readonly": false,
          "type": UnionType {
            "kind": "uniontype",
            "name": null,
            "types": Array [
              TypeReference {
                "kind": "typereference",
                "name": "float",
                "raw": "float",
              },
              TypeReference {
                "kind": "typereference",
                "name": "string",
                "raw": "string",
              },
            ],
          },
          "value": Number {
            "kind": "number",
            "value": "4.0",
          },
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "e",
          },
          "nullable": false,
          "readonly": false,
          "type": UnionType {
            "kind": "uniontype",
            "name": null,
            "types": Array [
              TypeReference {
                "kind": "typereference",
                "name": "float",
                "raw": "float",
              },
              TypeReference {
                "kind": "typereference",
                "name": "string",
                "raw": "string",
              },
            ],
          },
          "value": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"5\\"",
            "unicode": false,
            "value": "5",
          },
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "a",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "b",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "c",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "d",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "e",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "test",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          New {
            "arguments": Array [],
            "kind": "new",
            "what": Name {
              "kind": "name",
              "name": "Test",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
