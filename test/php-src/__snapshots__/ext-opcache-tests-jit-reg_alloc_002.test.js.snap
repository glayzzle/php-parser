// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Register Alloction 002: SEND_VAL_EX uses %r0 as a temporary register 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [],
      "body": Array [
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "call",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "i",
                  },
                  "operator": "=",
                  "right": Number {
                    "kind": "number",
                    "value": "0",
                  },
                },
                "kind": "expressionstatement",
              },
              Foreach {
                "body": Block {
                  "children": Array [
                    ExpressionStatement {
                      "expression": Call {
                        "arguments": Array [
                          Post {
                            "kind": "post",
                            "type": "+",
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "i",
                            },
                          },
                          String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"xxx\\"",
                            "unicode": false,
                            "value": "xxx",
                          },
                        ],
                        "kind": "call",
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "call",
                        },
                      },
                      "kind": "expressionstatement",
                    },
                  ],
                  "kind": "block",
                },
                "key": null,
                "kind": "foreach",
                "shortForm": false,
                "source": Array {
                  "items": Array [
                    Entry {
                      "byRef": false,
                      "key": null,
                      "kind": "entry",
                      "unpack": false,
                      "value": String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"a\\"",
                        "unicode": false,
                        "value": "a",
                      },
                    },
                    Entry {
                      "byRef": false,
                      "key": null,
                      "kind": "entry",
                      "unpack": false,
                      "value": String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"b\\"",
                        "unicode": false,
                        "value": "b",
                      },
                    },
                    Entry {
                      "byRef": false,
                      "key": null,
                      "kind": "entry",
                      "unpack": false,
                      "value": String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"c\\"",
                        "unicode": false,
                        "value": "c",
                      },
                    },
                  ],
                  "kind": "array",
                  "shortForm": false,
                },
                "value": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "attr",
                },
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "process",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "A",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "A",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Closure {
            "arguments": Array [
              Parameter {
                "attrGroups": Array [],
                "byref": false,
                "flags": 0,
                "kind": "parameter",
                "name": Identifier {
                  "kind": "identifier",
                  "name": "i",
                },
                "nullable": false,
                "readonly": false,
                "type": null,
                "value": null,
                "variadic": false,
              },
              Parameter {
                "attrGroups": Array [],
                "byref": false,
                "flags": 0,
                "kind": "parameter",
                "name": Identifier {
                  "kind": "identifier",
                  "name": "v",
                },
                "nullable": false,
                "readonly": false,
                "type": null,
                "value": null,
                "variadic": false,
              },
            ],
            "attrGroups": Array [],
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "i",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "byref": false,
            "isStatic": false,
            "kind": "closure",
            "nullable": false,
            "type": null,
            "uses": Array [],
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "process",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "a",
          },
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
