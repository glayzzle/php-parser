// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests normalize() 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "res_str",
              },
              "operator": "=",
              "right": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "''",
                "unicode": false,
                "value": "",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "forms",
              },
              "operator": "=",
              "right": Array {
                "items": Array [
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": StaticLookup {
                      "kind": "staticlookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "FORM_C",
                      },
                      "what": Name {
                        "kind": "name",
                        "name": "Normalizer",
                        "resolution": "uqn",
                      },
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": StaticLookup {
                      "kind": "staticlookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "FORM_D",
                      },
                      "what": Name {
                        "kind": "name",
                        "name": "Normalizer",
                        "resolution": "uqn",
                      },
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": StaticLookup {
                      "kind": "staticlookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "FORM_KC",
                      },
                      "what": Name {
                        "kind": "name",
                        "name": "Normalizer",
                        "resolution": "uqn",
                      },
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": StaticLookup {
                      "kind": "staticlookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "FORM_KD",
                      },
                      "what": Name {
                        "kind": "name",
                        "name": "Normalizer",
                        "resolution": "uqn",
                      },
                    },
                  },
                ],
                "kind": "array",
                "shortForm": false,
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "forms_str",
              },
              "operator": "=",
              "right": Array {
                "items": Array [
                  Entry {
                    "byRef": false,
                    "key": StaticLookup {
                      "kind": "staticlookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "FORM_C",
                      },
                      "what": Name {
                        "kind": "name",
                        "name": "Normalizer",
                        "resolution": "uqn",
                      },
                    },
                    "kind": "entry",
                    "unpack": false,
                    "value": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'UNORM_FORM_C'",
                      "unicode": false,
                      "value": "UNORM_FORM_C",
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": StaticLookup {
                      "kind": "staticlookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "FORM_D",
                      },
                      "what": Name {
                        "kind": "name",
                        "name": "Normalizer",
                        "resolution": "uqn",
                      },
                    },
                    "kind": "entry",
                    "unpack": false,
                    "value": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'UNORM_FORM_D'",
                      "unicode": false,
                      "value": "UNORM_FORM_D",
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": StaticLookup {
                      "kind": "staticlookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "FORM_KC",
                      },
                      "what": Name {
                        "kind": "name",
                        "name": "Normalizer",
                        "resolution": "uqn",
                      },
                    },
                    "kind": "entry",
                    "unpack": false,
                    "value": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'UNORM_FORM_KC'",
                      "unicode": false,
                      "value": "UNORM_FORM_KC",
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": StaticLookup {
                      "kind": "staticlookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "FORM_KD",
                      },
                      "what": Name {
                        "kind": "name",
                        "name": "Normalizer",
                        "resolution": "uqn",
                      },
                    },
                    "kind": "entry",
                    "unpack": false,
                    "value": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'UNORM_FORM_KD'",
                      "unicode": false,
                      "value": "UNORM_FORM_KD",
                    },
                  },
                ],
                "kind": "array",
                "shortForm": false,
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "res_str",
                    },
                    "operator": ".=",
                    "right": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"Invalid normalization form declarations!\\\\n\\"",
                      "unicode": false,
                      "value": "Invalid normalization form declarations!
",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": Bin {
                    "kind": "bin",
                    "left": StaticLookup {
                      "kind": "staticlookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "FORM_C",
                      },
                      "what": Name {
                        "kind": "name",
                        "name": "Normalizer",
                        "resolution": "uqn",
                      },
                    },
                    "right": StaticLookup {
                      "kind": "staticlookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "NFC",
                      },
                      "what": Name {
                        "kind": "name",
                        "name": "Normalizer",
                        "resolution": "uqn",
                      },
                    },
                    "type": "!=",
                  },
                  "right": Bin {
                    "kind": "bin",
                    "left": StaticLookup {
                      "kind": "staticlookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "FORM_D",
                      },
                      "what": Name {
                        "kind": "name",
                        "name": "Normalizer",
                        "resolution": "uqn",
                      },
                    },
                    "right": StaticLookup {
                      "kind": "staticlookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "NFD",
                      },
                      "what": Name {
                        "kind": "name",
                        "name": "Normalizer",
                        "resolution": "uqn",
                      },
                    },
                    "type": "!=",
                  },
                  "type": "||",
                },
                "right": Bin {
                  "kind": "bin",
                  "left": StaticLookup {
                    "kind": "staticlookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "FORM_KC",
                    },
                    "what": Name {
                      "kind": "name",
                      "name": "Normalizer",
                      "resolution": "uqn",
                    },
                  },
                  "right": StaticLookup {
                    "kind": "staticlookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "NFKC",
                    },
                    "what": Name {
                      "kind": "name",
                      "name": "Normalizer",
                      "resolution": "uqn",
                    },
                  },
                  "type": "!=",
                },
                "type": "||",
              },
              "right": Bin {
                "kind": "bin",
                "left": StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "FORM_KD",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "Normalizer",
                    "resolution": "uqn",
                  },
                },
                "right": StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "NFKD",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "Normalizer",
                    "resolution": "uqn",
                  },
                },
                "type": "!=",
              },
              "type": "||",
            },
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "char_a_diaeresis",
              },
              "operator": "=",
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\xC3\\\\xA4\\"",
                "unicode": false,
                "value": "Ã¤",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "char_a_ring",
              },
              "operator": "=",
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\xC3\\\\xA5\\"",
                "unicode": false,
                "value": "Ã¥",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "char_o_diaeresis",
              },
              "operator": "=",
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\xC3\\\\xB6\\"",
                "unicode": false,
                "value": "Ã¶",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "char_angstrom_sign",
              },
              "operator": "=",
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\xE2\\\\x84\\\\xAB\\"",
                "unicode": false,
                "value": "â«",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "char_A_ring",
              },
              "operator": "=",
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\xC3\\\\x85\\"",
                "unicode": false,
                "value": "Ã",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "char_ohm_sign",
              },
              "operator": "=",
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\xE2\\\\x84\\\\xA6\\"",
                "unicode": false,
                "value": "â¦",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "char_omega",
              },
              "operator": "=",
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\xCE\\\\xA9\\"",
                "unicode": false,
                "value": "Î©",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "char_combining_ring_above",
              },
              "operator": "=",
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\xCC\\\\x8A\\"",
                "unicode": false,
                "value": "Ì",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "char_fi_ligature",
              },
              "operator": "=",
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\xEF\\\\xAC\\\\x81\\"",
                "unicode": false,
                "value": "ï¬",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "char_long_s_dot",
              },
              "operator": "=",
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\xE1\\\\xBA\\\\x9B\\"",
                "unicode": false,
                "value": "áº",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "strs",
              },
              "operator": "=",
              "right": Array {
                "items": Array [
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'ABC'",
                      "unicode": false,
                      "value": "ABC",
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": Bin {
                      "kind": "bin",
                      "left": Bin {
                        "kind": "bin",
                        "left": Bin {
                          "kind": "bin",
                          "left": Bin {
                            "kind": "bin",
                            "left": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "char_a_diaeresis",
                            },
                            "right": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "'||'",
                              "unicode": false,
                              "value": "||",
                            },
                            "type": ".",
                          },
                          "right": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "char_a_ring",
                          },
                          "type": ".",
                        },
                        "right": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'||'",
                          "unicode": false,
                          "value": "||",
                        },
                        "type": ".",
                      },
                      "right": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "char_o_diaeresis",
                      },
                      "type": ".",
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": Bin {
                      "kind": "bin",
                      "left": Bin {
                        "kind": "bin",
                        "left": Bin {
                          "kind": "bin",
                          "left": Bin {
                            "kind": "bin",
                            "left": Bin {
                              "kind": "bin",
                              "left": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "char_angstrom_sign",
                              },
                              "right": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'||'",
                                "unicode": false,
                                "value": "||",
                              },
                              "type": ".",
                            },
                            "right": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "char_A_ring",
                            },
                            "type": ".",
                          },
                          "right": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'||'",
                            "unicode": false,
                            "value": "||",
                          },
                          "type": ".",
                        },
                        "right": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'A'",
                          "unicode": false,
                          "value": "A",
                        },
                        "type": ".",
                      },
                      "right": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "char_combining_ring_above",
                      },
                      "type": ".",
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": Bin {
                      "kind": "bin",
                      "left": Bin {
                        "kind": "bin",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "char_ohm_sign",
                        },
                        "right": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'||'",
                          "unicode": false,
                          "value": "||",
                        },
                        "type": ".",
                      },
                      "right": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "char_omega",
                      },
                      "type": ".",
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "char_fi_ligature",
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "char_long_s_dot",
                    },
                  },
                ],
                "kind": "array",
                "shortForm": false,
              },
            },
            "kind": "expressionstatement",
          },
          Foreach {
            "body": Block {
              "children": Array [
                Foreach {
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "str_norm",
                          },
                          "operator": "=",
                          "right": Call {
                            "arguments": Array [
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "str",
                              },
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "form",
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "ut_norm_normalize",
                              "resolution": "uqn",
                            },
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "error_code",
                          },
                          "operator": "=",
                          "right": Call {
                            "arguments": Array [],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "intl_get_error_code",
                              "resolution": "uqn",
                            },
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "error_message",
                          },
                          "operator": "=",
                          "right": Call {
                            "arguments": Array [],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "intl_get_error_message",
                              "resolution": "uqn",
                            },
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "str_hex",
                          },
                          "operator": "=",
                          "right": Call {
                            "arguments": Array [
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "str",
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "urlencode",
                              "resolution": "uqn",
                            },
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "str_norm_hex",
                          },
                          "operator": "=",
                          "right": Call {
                            "arguments": Array [
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "str_norm",
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "urlencode",
                              "resolution": "uqn",
                            },
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "res_str",
                          },
                          "operator": ".=",
                          "right": Bin {
                            "kind": "bin",
                            "left": Bin {
                              "kind": "bin",
                              "left": Encapsed {
                                "kind": "encapsed",
                                "raw": "\\"'$str_hex' normalized to form '{$forms_str[$form]}' is '$str_norm_hex'\\"
                     ",
                                "type": "string",
                                "value": Array [
                                  EncapsedPart {
                                    "curly": false,
                                    "expression": String {
                                      "isDoubleQuote": false,
                                      "kind": "string",
                                      "raw": "'",
                                      "unicode": false,
                                      "value": "'",
                                    },
                                    "kind": "encapsedpart",
                                    "syntax": null,
                                  },
                                  EncapsedPart {
                                    "curly": false,
                                    "expression": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "str_hex",
                                    },
                                    "kind": "encapsedpart",
                                    "syntax": "simple",
                                  },
                                  EncapsedPart {
                                    "curly": false,
                                    "expression": String {
                                      "isDoubleQuote": false,
                                      "kind": "string",
                                      "raw": "' normalized to form '",
                                      "unicode": false,
                                      "value": "' normalized to form '",
                                    },
                                    "kind": "encapsedpart",
                                    "syntax": null,
                                  },
                                  EncapsedPart {
                                    "curly": false,
                                    "expression": OffsetLookup {
                                      "kind": "offsetlookup",
                                      "offset": Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "form",
                                      },
                                      "what": Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "forms_str",
                                      },
                                    },
                                    "kind": "encapsedpart",
                                    "syntax": "complex",
                                  },
                                  EncapsedPart {
                                    "curly": false,
                                    "expression": String {
                                      "isDoubleQuote": false,
                                      "kind": "string",
                                      "raw": "' is '",
                                      "unicode": false,
                                      "value": "' is '",
                                    },
                                    "kind": "encapsedpart",
                                    "syntax": null,
                                  },
                                  EncapsedPart {
                                    "curly": false,
                                    "expression": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "str_norm_hex",
                                    },
                                    "kind": "encapsedpart",
                                    "syntax": "simple",
                                  },
                                  EncapsedPart {
                                    "curly": false,
                                    "expression": String {
                                      "isDoubleQuote": false,
                                      "kind": "string",
                                      "raw": "'",
                                      "unicode": false,
                                      "value": "'",
                                    },
                                    "kind": "encapsedpart",
                                    "syntax": null,
                                  },
                                ],
                              },
                              "right": Encapsed {
                                "kind": "encapsed",
                                "raw": "\\"\\\\terror info: '$error_message' ($error_code)\\\\n\\"
                     ",
                                "type": "string",
                                "value": Array [
                                  EncapsedPart {
                                    "curly": false,
                                    "expression": String {
                                      "isDoubleQuote": false,
                                      "kind": "string",
                                      "raw": "\\\\terror info: '",
                                      "unicode": false,
                                      "value": "	error info: '",
                                    },
                                    "kind": "encapsedpart",
                                    "syntax": null,
                                  },
                                  EncapsedPart {
                                    "curly": false,
                                    "expression": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "error_message",
                                    },
                                    "kind": "encapsedpart",
                                    "syntax": "simple",
                                  },
                                  EncapsedPart {
                                    "curly": false,
                                    "expression": String {
                                      "isDoubleQuote": false,
                                      "kind": "string",
                                      "raw": "' (",
                                      "unicode": false,
                                      "value": "' (",
                                    },
                                    "kind": "encapsedpart",
                                    "syntax": null,
                                  },
                                  EncapsedPart {
                                    "curly": false,
                                    "expression": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "error_code",
                                    },
                                    "kind": "encapsedpart",
                                    "syntax": "simple",
                                  },
                                  EncapsedPart {
                                    "curly": false,
                                    "expression": String {
                                      "isDoubleQuote": false,
                                      "kind": "string",
                                      "raw": ")\\\\n",
                                      "unicode": false,
                                      "value": ")",
                                    },
                                    "kind": "encapsedpart",
                                    "syntax": null,
                                  },
                                ],
                              },
                              "type": ".",
                            },
                            "right": String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"\\"",
                              "unicode": false,
                              "value": "",
                            },
                            "type": ".",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "is_norm",
                          },
                          "operator": "=",
                          "right": Call {
                            "arguments": Array [
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "str",
                              },
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "form",
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "ut_norm_is_normalized",
                              "resolution": "uqn",
                            },
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "error_code",
                          },
                          "operator": "=",
                          "right": Call {
                            "arguments": Array [],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "intl_get_error_code",
                              "resolution": "uqn",
                            },
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "error_message",
                          },
                          "operator": "=",
                          "right": Call {
                            "arguments": Array [],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "intl_get_error_message",
                              "resolution": "uqn",
                            },
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "res_str",
                          },
                          "operator": ".=",
                          "right": Bin {
                            "kind": "bin",
                            "left": Bin {
                              "kind": "bin",
                              "left": Bin {
                                "kind": "bin",
                                "left": Encapsed {
                                  "kind": "encapsed",
                                  "raw": "\\"		is in form '{$forms_str[$form]}'? = \\" ",
                                  "type": "string",
                                  "value": Array [
                                    EncapsedPart {
                                      "curly": false,
                                      "expression": String {
                                        "isDoubleQuote": false,
                                        "kind": "string",
                                        "raw": "		is in form '",
                                        "unicode": false,
                                        "value": "		is in form '",
                                      },
                                      "kind": "encapsedpart",
                                      "syntax": null,
                                    },
                                    EncapsedPart {
                                      "curly": false,
                                      "expression": OffsetLookup {
                                        "kind": "offsetlookup",
                                        "offset": Variable {
                                          "curly": false,
                                          "kind": "variable",
                                          "name": "form",
                                        },
                                        "what": Variable {
                                          "curly": false,
                                          "kind": "variable",
                                          "name": "forms_str",
                                        },
                                      },
                                      "kind": "encapsedpart",
                                      "syntax": "complex",
                                    },
                                    EncapsedPart {
                                      "curly": false,
                                      "expression": String {
                                        "isDoubleQuote": false,
                                        "kind": "string",
                                        "raw": "'? = ",
                                        "unicode": false,
                                        "value": "'? = ",
                                      },
                                      "kind": "encapsedpart",
                                      "syntax": null,
                                    },
                                  ],
                                },
                                "right": RetIf {
                                  "falseExpr": String {
                                    "isDoubleQuote": true,
                                    "kind": "string",
                                    "raw": "\\"no\\"",
                                    "unicode": false,
                                    "value": "no",
                                  },
                                  "kind": "retif",
                                  "parenthesizedExpression": true,
                                  "test": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "is_norm",
                                  },
                                  "trueExpr": String {
                                    "isDoubleQuote": true,
                                    "kind": "string",
                                    "raw": "\\"yes\\"",
                                    "unicode": false,
                                    "value": "yes",
                                  },
                                },
                                "type": ".",
                              },
                              "right": Encapsed {
                                "kind": "encapsed",
                                "raw": "\\"\\\\terror info: '$error_message' ($error_code)\\\\n\\"
                     ",
                                "type": "string",
                                "value": Array [
                                  EncapsedPart {
                                    "curly": false,
                                    "expression": String {
                                      "isDoubleQuote": false,
                                      "kind": "string",
                                      "raw": "\\\\terror info: '",
                                      "unicode": false,
                                      "value": "	error info: '",
                                    },
                                    "kind": "encapsedpart",
                                    "syntax": null,
                                  },
                                  EncapsedPart {
                                    "curly": false,
                                    "expression": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "error_message",
                                    },
                                    "kind": "encapsedpart",
                                    "syntax": "simple",
                                  },
                                  EncapsedPart {
                                    "curly": false,
                                    "expression": String {
                                      "isDoubleQuote": false,
                                      "kind": "string",
                                      "raw": "' (",
                                      "unicode": false,
                                      "value": "' (",
                                    },
                                    "kind": "encapsedpart",
                                    "syntax": null,
                                  },
                                  EncapsedPart {
                                    "curly": false,
                                    "expression": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "error_code",
                                    },
                                    "kind": "encapsedpart",
                                    "syntax": "simple",
                                  },
                                  EncapsedPart {
                                    "curly": false,
                                    "expression": String {
                                      "isDoubleQuote": false,
                                      "kind": "string",
                                      "raw": ")\\\\n",
                                      "unicode": false,
                                      "value": ")",
                                    },
                                    "kind": "encapsedpart",
                                    "syntax": null,
                                  },
                                ],
                              },
                              "type": ".",
                            },
                            "right": String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"\\"",
                              "unicode": false,
                              "value": "",
                            },
                            "type": ".",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "key": null,
                  "kind": "foreach",
                  "shortForm": false,
                  "source": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "strs",
                  },
                  "value": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "str",
                  },
                },
              ],
              "kind": "block",
            },
            "key": null,
            "kind": "foreach",
            "shortForm": false,
            "source": Variable {
              "curly": false,
              "kind": "variable",
              "name": "forms",
            },
            "value": Variable {
              "curly": false,
              "kind": "variable",
              "name": "form",
            },
          },
          Return {
            "expr": Variable {
              "curly": false,
              "kind": "variable",
              "name": "res_str",
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "ut_main",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": false,
        "target": String {
          "isDoubleQuote": false,
          "kind": "string",
          "parenthesizedExpression": true,
          "raw": "'ut_common.inc'",
          "unicode": false,
          "value": "ut_common.inc",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "ut_run",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
