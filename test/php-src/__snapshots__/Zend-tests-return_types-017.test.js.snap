// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Fully qualified classes in trait return types 1`] = `
Program {
  "children": Array [
    Namespace {
      "children": Array [
        Trait {
          "body": Array [
            Method {
              "arguments": Array [],
              "attrGroups": Array [],
              "body": Block {
                "children": Array [
                  Return {
                    "expr": New {
                      "arguments": Array [],
                      "kind": "new",
                      "what": Name {
                        "kind": "name",
                        "name": "\\\\EmptyIterator",
                        "resolution": "fqn",
                      },
                    },
                    "kind": "return",
                  },
                ],
                "kind": "block",
              },
              "byref": false,
              "isAbstract": false,
              "isFinal": false,
              "isStatic": false,
              "kind": "method",
              "name": Identifier {
                "kind": "identifier",
                "name": "foo",
              },
              "nullable": false,
              "type": Name {
                "kind": "name",
                "name": "\\\\Iterator",
                "resolution": "fqn",
              },
              "visibility": "",
            },
          ],
          "kind": "trait",
          "name": Identifier {
            "kind": "identifier",
            "name": "Fooable",
          },
        },
        Class {
          "attrGroups": Array [],
          "body": Array [
            TraitUse {
              "adaptations": null,
              "kind": "traituse",
              "traits": Array [
                Name {
                  "kind": "name",
                  "name": "Fooable",
                  "resolution": "uqn",
                },
              ],
            },
          ],
          "extends": null,
          "implements": null,
          "isAbstract": false,
          "isAnonymous": false,
          "isFinal": false,
          "kind": "class",
          "name": Identifier {
            "kind": "identifier",
            "name": "Foo",
          },
        },
        ExpressionStatement {
          "expression": Assign {
            "kind": "assign",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "foo",
            },
            "operator": "=",
            "right": New {
              "arguments": Array [],
              "kind": "new",
              "what": Name {
                "kind": "name",
                "name": "Foo",
                "resolution": "uqn",
              },
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [
              Call {
                "arguments": Array [
                  Array {
                    "items": Array [],
                    "kind": "array",
                    "shortForm": true,
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "foo",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "foo",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "var_dump",
              "resolution": "uqn",
            },
          },
          "kind": "expressionstatement",
        },
      ],
      "kind": "namespace",
      "name": "FooSpace",
      "withBrackets": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
