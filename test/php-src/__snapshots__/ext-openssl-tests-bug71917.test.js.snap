// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #71917: openssl_open() returns junk on envelope < 16 bytes 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "envkey",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "publicKey",
              },
              "operator": "=",
              "right": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"file://\\"",
                    "unicode": false,
                    "value": "file://",
                  },
                  "right": Magic {
                    "kind": "magic",
                    "raw": "__DIR__",
                    "value": "__DIR__",
                  },
                  "type": ".",
                },
                "right": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"/public.key\\"",
                  "unicode": false,
                  "value": "/public.key",
                },
                "type": ".",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "privateKey",
              },
              "operator": "=",
              "right": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"file://\\"",
                    "unicode": false,
                    "value": "file://",
                  },
                  "right": Magic {
                    "kind": "magic",
                    "raw": "__DIR__",
                    "value": "__DIR__",
                  },
                  "type": ".",
                },
                "right": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"/private_rsa_1024.key\\"",
                  "unicode": false,
                  "value": "/private_rsa_1024.key",
                },
                "type": ".",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "envkey",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "envelope",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "publicKey",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "openssl_public_encrypt",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "sealed",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'plaintext'",
                    "unicode": false,
                    "value": "plaintext",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'rc4'",
                    "unicode": false,
                    "value": "rc4",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "envkey",
                  },
                  Bin {
                    "kind": "bin",
                    "left": Name {
                      "kind": "name",
                      "name": "OPENSSL_RAW_DATA",
                      "resolution": "uqn",
                    },
                    "right": Name {
                      "kind": "name",
                      "name": "OPENSSL_DONT_ZERO_PAD_KEY",
                      "resolution": "uqn",
                    },
                    "type": "|",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "openssl_encrypt",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "sealed",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "output",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "envelope",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "privateKey",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'rc4'",
                  "unicode": false,
                  "value": "rc4",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "openssl_open",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Bin {
                  "kind": "bin",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "output",
                  },
                  "right": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'plaintext'",
                    "unicode": false,
                    "value": "plaintext",
                  },
                  "type": "===",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "test",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1234567890123456i'",
            "unicode": false,
            "value": "1234567890123456i",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'123456789012345'",
            "unicode": false,
            "value": "123456789012345",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
