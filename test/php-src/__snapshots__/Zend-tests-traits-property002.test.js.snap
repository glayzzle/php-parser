// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Non-conflicting properties should work just fine. 1`] = `
Program {
  "children": Array [
    Trait {
      "body": Array [
        PropertyStatement {
          "isStatic": false,
          "kind": "propertystatement",
          "properties": Array [
            Property {
              "attrGroups": Array [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "hello",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"hello\\"",
                "unicode": false,
                "value": "hello",
              },
            },
          ],
          "visibility": "public",
        },
      ],
      "kind": "trait",
      "name": Identifier {
        "kind": "identifier",
        "name": "THello1",
      },
    },
    Trait {
      "body": Array [
        PropertyStatement {
          "isStatic": false,
          "kind": "propertystatement",
          "properties": Array [
            Property {
              "attrGroups": Array [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "world",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"World!\\"",
                "unicode": false,
                "value": "World!",
              },
            },
          ],
          "visibility": "private",
        },
      ],
      "kind": "trait",
      "name": Identifier {
        "kind": "identifier",
        "name": "THello2",
      },
    },
    Class {
      "attrGroups": Array [],
      "body": Array [
        TraitUse {
          "adaptations": null,
          "kind": "traituse",
          "traits": Array [
            Name {
              "kind": "name",
              "name": "THello1",
              "resolution": "uqn",
            },
          ],
        },
        TraitUse {
          "adaptations": null,
          "kind": "traituse",
          "traits": Array [
            Name {
              "kind": "name",
              "name": "THello2",
              "resolution": "uqn",
            },
          ],
        },
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "hello",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "this",
                        },
                      },
                      "right": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "' '",
                        "unicode": false,
                        "value": " ",
                      },
                      "type": ".",
                    },
                    "right": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "world",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "this",
                      },
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "test",
          },
          "nullable": false,
          "type": null,
          "visibility": "",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "TraitsTest",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'TraitsTest'",
                "unicode": false,
                "value": "TraitsTest",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'hello'",
                "unicode": false,
                "value": "hello",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "property_exists",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'TraitsTest'",
                "unicode": false,
                "value": "TraitsTest",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'world'",
                "unicode": false,
                "value": "world",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "property_exists",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "t",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "TraitsTest",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "test",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "t",
          },
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
