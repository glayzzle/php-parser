// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #74435 (Buffer over-read into uninitialized memory) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "im",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Bin {
              "kind": "bin",
              "left": Bin {
                "kind": "bin",
                "left": Magic {
                  "kind": "magic",
                  "raw": "__DIR__",
                  "value": "__DIR__",
                },
                "right": Name {
                  "kind": "name",
                  "name": "DIRECTORY_SEPARATOR",
                  "resolution": "uqn",
                },
                "type": ".",
              },
              "right": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'bug74435.gif'",
                "unicode": false,
                "value": "bug74435.gif",
              },
              "type": ".",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "imagecreatefromgif",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "im",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "width",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "im",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "imagesx",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "height",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "im",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "imagesy",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    For {
      "body": Block {
        "children": Array [
          For {
            "body": Block {
              "children": Array [
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": List {
                            "items": Array [
                              Entry {
                                "byRef": false,
                                "key": null,
                                "kind": "entry",
                                "unpack": false,
                                "value": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "red",
                                },
                              },
                              Entry {
                                "byRef": false,
                                "key": null,
                                "kind": "entry",
                                "unpack": false,
                                "value": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "green",
                                },
                              },
                              Entry {
                                "byRef": false,
                                "key": null,
                                "kind": "entry",
                                "unpack": false,
                                "value": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "blue",
                                },
                              },
                              Entry {
                                "byRef": false,
                                "key": null,
                                "kind": "entry",
                                "unpack": false,
                                "value": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "alpha",
                                },
                              },
                            ],
                            "kind": "list",
                            "shortForm": false,
                          },
                          "operator": "=",
                          "right": Call {
                            "arguments": Array [
                              Call {
                                "arguments": Array [
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "im",
                                  },
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "index",
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "imagecolorsforindex",
                                  "resolution": "uqn",
                                },
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "array_values",
                              "resolution": "uqn",
                            },
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      If {
                        "alternate": null,
                        "body": Block {
                          "children": Array [
                            Echo {
                              "expressions": Array [
                                Encapsed {
                                  "kind": "encapsed",
                                  "raw": "\\"unexpected color at ($i, $j)\\\\n\\"",
                                  "type": "string",
                                  "value": Array [
                                    EncapsedPart {
                                      "curly": false,
                                      "expression": String {
                                        "isDoubleQuote": false,
                                        "kind": "string",
                                        "raw": "unexpected color at (",
                                        "unicode": false,
                                        "value": "unexpected color at (",
                                      },
                                      "kind": "encapsedpart",
                                      "syntax": null,
                                    },
                                    EncapsedPart {
                                      "curly": false,
                                      "expression": Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "i",
                                      },
                                      "kind": "encapsedpart",
                                      "syntax": "simple",
                                    },
                                    EncapsedPart {
                                      "curly": false,
                                      "expression": String {
                                        "isDoubleQuote": false,
                                        "kind": "string",
                                        "raw": ", ",
                                        "unicode": false,
                                        "value": ", ",
                                      },
                                      "kind": "encapsedpart",
                                      "syntax": null,
                                    },
                                    EncapsedPart {
                                      "curly": false,
                                      "expression": Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "j",
                                      },
                                      "kind": "encapsedpart",
                                      "syntax": "simple",
                                    },
                                    EncapsedPart {
                                      "curly": false,
                                      "expression": String {
                                        "isDoubleQuote": false,
                                        "kind": "string",
                                        "raw": ")\\\\n",
                                        "unicode": false,
                                        "value": ")",
                                      },
                                      "kind": "encapsedpart",
                                      "syntax": null,
                                    },
                                  ],
                                },
                              ],
                              "kind": "echo",
                              "shortForm": false,
                            },
                          ],
                          "kind": "block",
                        },
                        "kind": "if",
                        "shortForm": false,
                        "test": Bin {
                          "kind": "bin",
                          "left": Bin {
                            "kind": "bin",
                            "left": Bin {
                              "kind": "bin",
                              "left": Bin {
                                "kind": "bin",
                                "left": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "red",
                                },
                                "right": Number {
                                  "kind": "number",
                                  "value": "0",
                                },
                                "type": "!==",
                              },
                              "right": Bin {
                                "kind": "bin",
                                "left": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "green",
                                },
                                "right": Number {
                                  "kind": "number",
                                  "value": "0",
                                },
                                "type": "!==",
                              },
                              "type": "||",
                            },
                            "right": Bin {
                              "kind": "bin",
                              "left": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "blue",
                              },
                              "right": Number {
                                "kind": "number",
                                "value": "0",
                              },
                              "type": "!==",
                            },
                            "type": "||",
                          },
                          "right": Bin {
                            "kind": "bin",
                            "left": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "alpha",
                            },
                            "right": Number {
                              "kind": "number",
                              "value": "0",
                            },
                            "type": "!==",
                          },
                          "type": "||",
                        },
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Assign {
                      "kind": "assign",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "index",
                      },
                      "operator": "=",
                      "parenthesizedExpression": true,
                      "right": Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "im",
                          },
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "i",
                          },
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "j",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "imagecolorat",
                          "resolution": "uqn",
                        },
                      },
                    },
                    "right": Number {
                      "kind": "number",
                      "value": "2",
                    },
                    "type": ">=",
                  },
                },
              ],
              "kind": "block",
            },
            "increment": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "j",
                },
                "operator": "+=",
                "right": Number {
                  "kind": "number",
                  "value": "16",
                },
              },
            ],
            "init": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "j",
                },
                "operator": "=",
                "right": Number {
                  "kind": "number",
                  "value": "0",
                },
              },
            ],
            "kind": "for",
            "shortForm": false,
            "test": Array [
              Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "j",
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "height",
                },
                "type": "<",
              },
            ],
          },
        ],
        "kind": "block",
      },
      "increment": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "operator": "+=",
          "right": Number {
            "kind": "number",
            "value": "16",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "0",
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "right": Variable {
            "curly": false,
            "kind": "variable",
            "name": "width",
          },
          "type": "<",
        },
      ],
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
