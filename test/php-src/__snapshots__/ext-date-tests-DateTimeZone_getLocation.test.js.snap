// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test DateTimeZone::getLocation() 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "countryCode",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"??\\"",
                "unicode": false,
                "value": "??",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "countryCodeTest",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"AU\\"",
                "unicode": false,
                "value": "AU",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"CA\\"",
                "unicode": false,
                "value": "CA",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"ET\\"",
                "unicode": false,
                "value": "ET",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"AF\\"",
                "unicode": false,
                "value": "AF",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"US\\"",
                "unicode": false,
                "value": "US",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"KZ\\"",
                "unicode": false,
                "value": "KZ",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"AM\\"",
                "unicode": false,
                "value": "AM",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "timeZone",
                    },
                    "operator": "=",
                    "right": New {
                      "arguments": Array [
                        OffsetLookup {
                          "kind": "offsetlookup",
                          "offset": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'timezone_id'",
                            "unicode": false,
                            "value": "timezone_id",
                          },
                          "what": OffsetLookup {
                            "kind": "offsetlookup",
                            "offset": Number {
                              "kind": "number",
                              "value": "0",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "value",
                            },
                          },
                        },
                      ],
                      "kind": "new",
                      "what": Name {
                        "kind": "name",
                        "name": "DateTimeZone",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "timeZoneArray",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getLocation",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "timeZone",
                        },
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      Continue {
                        "kind": "continue",
                        "level": null,
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Boolean {
                      "kind": "boolean",
                      "raw": "false",
                      "value": false,
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "timeZoneArray",
                    },
                    "type": "===",
                  },
                },
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "countryCode",
                            },
                            OffsetLookup {
                              "kind": "offsetlookup",
                              "offset": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'country_code'",
                                "unicode": false,
                                "value": "country_code",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "timeZoneArray",
                              },
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "array_push",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      If {
                        "alternate": null,
                        "body": Block {
                          "children": Array [
                            ExpressionStatement {
                              "expression": Call {
                                "arguments": Array [
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "timeZoneArray",
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "print_r",
                                  "resolution": "uqn",
                                },
                              },
                              "kind": "expressionstatement",
                            },
                          ],
                          "kind": "block",
                        },
                        "kind": "if",
                        "shortForm": false,
                        "test": Call {
                          "arguments": Array [
                            OffsetLookup {
                              "kind": "offsetlookup",
                              "offset": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'country_code'",
                                "unicode": false,
                                "value": "country_code",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "timeZoneArray",
                              },
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "countryCodeTest",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "in_array",
                            "resolution": "uqn",
                          },
                        },
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Unary {
                      "kind": "unary",
                      "type": "!",
                      "what": Call {
                        "arguments": Array [
                          OffsetLookup {
                            "kind": "offsetlookup",
                            "offset": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "'country_code'",
                              "unicode": false,
                              "value": "country_code",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "timeZoneArray",
                            },
                          },
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "countryCode",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "in_array",
                          "resolution": "uqn",
                        },
                      },
                    },
                    "right": Bin {
                      "kind": "bin",
                      "left": NullKeyword {
                        "kind": "nullkeyword",
                        "raw": "NULL",
                      },
                      "right": OffsetLookup {
                        "kind": "offsetlookup",
                        "offset": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'country_code'",
                          "unicode": false,
                          "value": "country_code",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "timeZoneArray",
                        },
                      },
                      "type": "!=",
                    },
                    "type": "&&",
                  },
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": NullKeyword {
                "kind": "nullkeyword",
                "raw": "NULL",
              },
              "right": OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'timezone_id'",
                  "unicode": false,
                  "value": "timezone_id",
                },
                "what": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": Number {
                    "kind": "number",
                    "value": "0",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "value",
                  },
                },
              },
              "type": "!=",
            },
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Call {
        "arguments": Array [],
        "kind": "call",
        "what": StaticLookup {
          "kind": "staticlookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "listAbbreviations",
          },
          "what": Name {
            "kind": "name",
            "name": "DateTimeZone",
            "resolution": "uqn",
          },
        },
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "value",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
