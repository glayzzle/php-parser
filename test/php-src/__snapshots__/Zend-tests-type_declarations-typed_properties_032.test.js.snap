// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test typed properties return by ref is allowed 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "foo",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Class {
            "attrGroups": Array [],
            "body": Array [
              PropertyStatement {
                "isStatic": false,
                "kind": "propertystatement",
                "properties": Array [
                  Property {
                    "attrGroups": Array [],
                    "kind": "property",
                    "name": Identifier {
                      "kind": "identifier",
                      "name": "bar",
                    },
                    "nullable": false,
                    "readonly": false,
                    "type": TypeReference {
                      "kind": "typereference",
                      "name": "int",
                      "raw": "int",
                    },
                    "value": Number {
                      "kind": "number",
                      "value": "15",
                    },
                  },
                ],
                "visibility": "public",
              },
              Method {
                "arguments": Array [],
                "attrGroups": Array [],
                "body": Block {
                  "children": Array [
                    Return {
                      "expr": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "bar",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "this",
                        },
                      },
                      "kind": "return",
                    },
                  ],
                  "kind": "block",
                },
                "byref": true,
                "isAbstract": false,
                "isFinal": false,
                "isStatic": false,
                "kind": "method",
                "name": Identifier {
                  "kind": "identifier",
                  "name": "method",
                },
                "nullable": false,
                "type": null,
                "visibility": "public",
              },
            ],
            "extends": null,
            "implements": null,
            "isAbstract": false,
            "isAnonymous": true,
            "isFinal": false,
            "kind": "class",
            "name": null,
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "method",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "foo",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
