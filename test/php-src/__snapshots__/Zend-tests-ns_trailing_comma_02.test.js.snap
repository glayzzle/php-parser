// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Unmixed group use declaration can contain trailing comma 1`] = `
Program {
  "children": Array [
    Namespace {
      "children": Array [
        ConstantStatement {
          "constants": Array [
            Constant {
              "kind": "constant",
              "name": Identifier {
                "kind": "identifier",
                "name": "FOO_CONST_1",
              },
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Foo const 1\\\\n\\"",
                "unicode": false,
                "value": "Foo const 1
",
              },
            },
          ],
          "kind": "constantstatement",
        },
        ConstantStatement {
          "constants": Array [
            Constant {
              "kind": "constant",
              "name": Identifier {
                "kind": "identifier",
                "name": "FOO_CONST_2",
              },
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Foo const 2\\\\n\\"",
                "unicode": false,
                "value": "Foo const 2
",
              },
            },
          ],
          "kind": "constantstatement",
        },
      ],
      "kind": "namespace",
      "name": "Foo",
      "withBrackets": true,
    },
    Namespace {
      "children": Array [
        _Function {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"Bar func 1\\\\n\\"",
                    "unicode": false,
                    "value": "Bar func 1
",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "kind": "function",
          "name": Identifier {
            "kind": "identifier",
            "name": "foo_func_1",
          },
          "nullable": false,
          "type": null,
        },
        _Function {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"Bar func 2\\\\n\\"",
                    "unicode": false,
                    "value": "Bar func 2
",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "kind": "function",
          "name": Identifier {
            "kind": "identifier",
            "name": "foo_func_2",
          },
          "nullable": false,
          "type": null,
        },
      ],
      "kind": "namespace",
      "name": "Bar",
      "withBrackets": true,
    },
    Namespace {
      "children": Array [
        Class {
          "attrGroups": Array [],
          "body": Array [
            Method {
              "arguments": Array [],
              "attrGroups": Array [],
              "body": Block {
                "children": Array [
                  Echo {
                    "expressions": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"BazFoo class\\\\n\\"",
                        "unicode": false,
                        "value": "BazFoo class
",
                      },
                    ],
                    "kind": "echo",
                    "shortForm": false,
                  },
                ],
                "kind": "block",
              },
              "byref": false,
              "isAbstract": false,
              "isFinal": false,
              "isStatic": false,
              "kind": "method",
              "name": Identifier {
                "kind": "identifier",
                "name": "__construct",
              },
              "nullable": false,
              "type": null,
              "visibility": "",
            },
          ],
          "extends": null,
          "implements": null,
          "isAbstract": false,
          "isAnonymous": false,
          "isFinal": false,
          "kind": "class",
          "name": Identifier {
            "kind": "identifier",
            "name": "BazFooClass",
          },
        },
        Class {
          "attrGroups": Array [],
          "body": Array [
            Method {
              "arguments": Array [],
              "attrGroups": Array [],
              "body": Block {
                "children": Array [
                  Echo {
                    "expressions": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"BazBar class\\\\n\\"",
                        "unicode": false,
                        "value": "BazBar class
",
                      },
                    ],
                    "kind": "echo",
                    "shortForm": false,
                  },
                ],
                "kind": "block",
              },
              "byref": false,
              "isAbstract": false,
              "isFinal": false,
              "isStatic": false,
              "kind": "method",
              "name": Identifier {
                "kind": "identifier",
                "name": "__construct",
              },
              "nullable": false,
              "type": null,
              "visibility": "",
            },
          ],
          "extends": null,
          "implements": null,
          "isAbstract": false,
          "isAnonymous": false,
          "isFinal": false,
          "kind": "class",
          "name": Identifier {
            "kind": "identifier",
            "name": "BazBarClass",
          },
        },
      ],
      "kind": "namespace",
      "name": "Baz",
      "withBrackets": true,
    },
    Namespace {
      "children": Array [
        UseGroup {
          "items": Array [
            UseItem {
              "alias": null,
              "kind": "useitem",
              "name": "FOO_CONST_1",
              "type": null,
            },
            UseItem {
              "alias": null,
              "kind": "useitem",
              "name": "FOO_CONST_2",
              "type": null,
            },
          ],
          "kind": "usegroup",
          "name": "Foo",
          "type": "const",
        },
        UseGroup {
          "items": Array [
            UseItem {
              "alias": null,
              "kind": "useitem",
              "name": "foo_func_1",
              "type": null,
            },
            UseItem {
              "alias": null,
              "kind": "useitem",
              "name": "foo_func_2",
              "type": null,
            },
          ],
          "kind": "usegroup",
          "name": "Bar",
          "type": "function",
        },
        UseGroup {
          "items": Array [
            UseItem {
              "alias": null,
              "kind": "useitem",
              "name": "BazFooClass",
              "type": null,
            },
            UseItem {
              "alias": null,
              "kind": "useitem",
              "name": "BazBarClass",
              "type": null,
            },
          ],
          "kind": "usegroup",
          "name": "Baz",
          "type": null,
        },
        Echo {
          "expressions": Array [
            Name {
              "kind": "name",
              "name": "FOO_CONST_1",
              "resolution": "uqn",
            },
          ],
          "kind": "echo",
          "shortForm": false,
        },
        Echo {
          "expressions": Array [
            Name {
              "kind": "name",
              "name": "FOO_CONST_2",
              "resolution": "uqn",
            },
          ],
          "kind": "echo",
          "shortForm": false,
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "foo_func_1",
              "resolution": "uqn",
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "foo_func_2",
              "resolution": "uqn",
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": New {
            "arguments": Array [],
            "kind": "new",
            "what": Name {
              "kind": "name",
              "name": "BazFooClass",
              "resolution": "uqn",
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": New {
            "arguments": Array [],
            "kind": "new",
            "what": Name {
              "kind": "name",
              "name": "BazBarClass",
              "resolution": "uqn",
            },
          },
          "kind": "expressionstatement",
        },
      ],
      "kind": "namespace",
      "name": Array [
        "",
      ],
      "withBrackets": true,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
