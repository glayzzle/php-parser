// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #70528 (assert() with instanceof adds apostrophes around class name) 1`] = `
Program {
  "children": Array [
    Namespace {
      "children": Array [
        Class {
          "attrGroups": Array [],
          "body": Array [],
          "extends": null,
          "implements": null,
          "isAbstract": false,
          "isAnonymous": false,
          "isFinal": false,
          "kind": "class",
          "name": Identifier {
            "kind": "identifier",
            "name": "Bar",
          },
        },
        ExpressionStatement {
          "expression": Assign {
            "kind": "assign",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "bar",
            },
            "operator": "=",
            "right": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"Bar\\"",
              "unicode": false,
              "value": "Bar",
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [
              Bin {
                "kind": "bin",
                "left": New {
                  "arguments": Array [],
                  "kind": "new",
                  "what": Name {
                    "kind": "name",
                    "name": "\\\\stdClass",
                    "resolution": "fqn",
                  },
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "bar",
                },
                "type": "instanceof",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "assert",
              "resolution": "uqn",
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [
              Bin {
                "kind": "bin",
                "left": New {
                  "arguments": Array [],
                  "kind": "new",
                  "what": Name {
                    "kind": "name",
                    "name": "\\\\stdClass",
                    "resolution": "fqn",
                  },
                },
                "right": Name {
                  "kind": "name",
                  "name": "Bar",
                  "resolution": "uqn",
                },
                "type": "instanceof",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "assert",
              "resolution": "uqn",
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [
              Bin {
                "kind": "bin",
                "left": New {
                  "arguments": Array [],
                  "kind": "new",
                  "what": Name {
                    "kind": "name",
                    "name": "\\\\stdClass",
                    "resolution": "fqn",
                  },
                },
                "right": Name {
                  "kind": "name",
                  "name": "\\\\Foo\\\\Bar",
                  "resolution": "fqn",
                },
                "type": "instanceof",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "assert",
              "resolution": "uqn",
            },
          },
          "kind": "expressionstatement",
        },
      ],
      "kind": "namespace",
      "name": "Foo",
      "withBrackets": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
