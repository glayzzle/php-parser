// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test variations of getting constant values 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [],
      "body": Array [
        ClassConstant {
          "attrGroups": Array [],
          "constants": Array [
            Constant {
              "kind": "constant",
              "name": Identifier {
                "kind": "identifier",
                "name": "X",
              },
              "value": Bin {
                "kind": "bin",
                "left": StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "Y",
                  },
                  "what": SelfReference {
                    "kind": "selfreference",
                    "raw": "self",
                  },
                },
                "right": Number {
                  "kind": "number",
                  "value": "2",
                },
                "type": "*",
              },
            },
          ],
          "kind": "classconstant",
          "visibility": "",
        },
        ClassConstant {
          "attrGroups": Array [],
          "constants": Array [
            Constant {
              "kind": "constant",
              "name": Identifier {
                "kind": "identifier",
                "name": "Y",
              },
              "value": Number {
                "kind": "number",
                "value": "1",
              },
            },
          ],
          "kind": "classconstant",
          "visibility": "",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "A",
      },
    },
    Class {
      "attrGroups": Array [],
      "body": Array [
        ClassConstant {
          "attrGroups": Array [],
          "constants": Array [
            Constant {
              "kind": "constant",
              "name": Identifier {
                "kind": "identifier",
                "name": "X",
              },
              "value": Bin {
                "kind": "bin",
                "left": StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "Y",
                  },
                  "what": SelfReference {
                    "kind": "selfreference",
                    "raw": "self",
                  },
                },
                "right": Number {
                  "kind": "number",
                  "value": "2",
                },
                "type": "*",
              },
            },
          ],
          "kind": "classconstant",
          "visibility": "",
        },
        ClassConstant {
          "attrGroups": Array [],
          "constants": Array [
            Constant {
              "kind": "constant",
              "name": Identifier {
                "kind": "identifier",
                "name": "Y",
              },
              "value": Number {
                "kind": "number",
                "value": "1",
              },
            },
          ],
          "kind": "classconstant",
          "visibility": "",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "B",
      },
    },
    Class {
      "attrGroups": Array [],
      "body": Array [
        ClassConstant {
          "attrGroups": Array [],
          "constants": Array [
            Constant {
              "kind": "constant",
              "name": Identifier {
                "kind": "identifier",
                "name": "X",
              },
              "value": Bin {
                "kind": "bin",
                "left": StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "Y",
                  },
                  "what": SelfReference {
                    "kind": "selfreference",
                    "raw": "self",
                  },
                },
                "right": Number {
                  "kind": "number",
                  "value": "2",
                },
                "type": "*",
              },
            },
          ],
          "kind": "classconstant",
          "visibility": "",
        },
        ClassConstant {
          "attrGroups": Array [],
          "constants": Array [
            Constant {
              "kind": "constant",
              "name": Identifier {
                "kind": "identifier",
                "name": "Y",
              },
              "value": Number {
                "kind": "number",
                "value": "1",
              },
            },
          ],
          "kind": "classconstant",
          "visibility": "",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "C",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "getValue",
              },
              "what": New {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'A'",
                    "unicode": false,
                    "value": "A",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'X'",
                    "unicode": false,
                    "value": "X",
                  },
                ],
                "kind": "new",
                "parenthesizedExpression": true,
                "what": Name {
                  "kind": "name",
                  "name": "ReflectionClassConstant",
                  "resolution": "uqn",
                },
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        New {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'B'",
              "unicode": false,
              "value": "B",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'X'",
              "unicode": false,
              "value": "X",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "ReflectionClassConstant",
            "resolution": "uqn",
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        New {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'C'",
              "unicode": false,
              "value": "C",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "ReflectionClass",
            "resolution": "uqn",
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
