// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Alternative syntaxes test 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "1",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"If: \\"",
          "unicode": false,
          "value": "If: ",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    If {
      "alternate": Echo {
        "expressions": Array [
          Number {
            "kind": "number",
            "value": "0",
          },
        ],
        "kind": "echo",
        "shortForm": false,
      },
      "body": Echo {
        "expressions": Array [
          Number {
            "kind": "number",
            "value": "1",
          },
        ],
        "kind": "echo",
        "shortForm": false,
      },
      "kind": "if",
      "shortForm": false,
      "test": Variable {
        "curly": false,
        "kind": "variable",
        "name": "a",
      },
    },
    If {
      "alternate": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              Number {
                "kind": "number",
                "value": "0",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              Number {
                "kind": "number",
                "value": "1",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": true,
      "test": Variable {
        "curly": false,
        "kind": "variable",
        "name": "a",
      },
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\nWhile: \\"",
          "unicode": false,
          "value": "
While: ",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    While {
      "body": Echo {
        "expressions": Array [
          Post {
            "kind": "post",
            "type": "+",
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "a",
            },
          },
        ],
        "kind": "echo",
        "shortForm": false,
      },
      "kind": "while",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
        "right": Number {
          "kind": "number",
          "value": "5",
        },
        "type": "<",
      },
    },
    While {
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              Pre {
                "kind": "pre",
                "type": "+",
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "a",
                },
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "kind": "while",
      "shortForm": true,
      "test": Bin {
        "kind": "bin",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
        "right": Number {
          "kind": "number",
          "value": "9",
        },
        "type": "<",
      },
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\nFor: \\"",
          "unicode": false,
          "value": "
For: ",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    For {
      "body": Echo {
        "expressions": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "a",
          },
        ],
        "kind": "echo",
        "shortForm": false,
      },
      "increment": Array [
        Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "a",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "a",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "0",
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "a",
          },
          "right": Number {
            "kind": "number",
            "value": "5",
          },
          "type": "<",
        },
      ],
    },
    For {
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "a",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "increment": Array [
        Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "a",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "a",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "0",
          },
        },
      ],
      "kind": "for",
      "shortForm": true,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "a",
          },
          "right": Number {
            "kind": "number",
            "value": "5",
          },
          "type": "<",
        },
      ],
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\nSwitch: \\"",
          "unicode": false,
          "value": "
Switch: ",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Switch {
      "body": Block {
        "children": Array [
          Case {
            "body": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    Number {
                      "kind": "number",
                      "value": "0",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
                Break {
                  "kind": "break",
                  "level": null,
                },
              ],
              "kind": "block",
            },
            "kind": "case",
            "test": Number {
              "kind": "number",
              "value": "0",
            },
          },
          Case {
            "body": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    Number {
                      "kind": "number",
                      "value": "1",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
                Break {
                  "kind": "break",
                  "level": null,
                },
              ],
              "kind": "block",
            },
            "kind": "case",
            "test": Number {
              "kind": "number",
              "value": "5",
            },
          },
          Case {
            "body": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    Number {
                      "kind": "number",
                      "value": "0",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
                Break {
                  "kind": "break",
                  "level": null,
                },
              ],
              "kind": "block",
            },
            "kind": "case",
            "test": null,
          },
        ],
        "kind": "block",
      },
      "kind": "switch",
      "shortForm": true,
      "test": Variable {
        "curly": false,
        "kind": "variable",
        "name": "a",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
