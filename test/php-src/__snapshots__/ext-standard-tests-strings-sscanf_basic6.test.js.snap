// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test sscanf() function : basic functionality - unsigned format 1`] = `
Program {
  "children": Array [
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"*** Testing sscanf() : basic functionality - using unsigned format ***\\\\n\\"",
          "unicode": false,
          "value": "*** Testing sscanf() : basic functionality - using unsigned format ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "str",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"-11 +11 11 -11.234 +11.234 11.234\\"",
          "unicode": false,
          "value": "-11 +11 11 -11.234 +11.234 11.234",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "format",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"%u %u %u %u %u %u\\"",
          "unicode": false,
          "value": "%u %u %u %u %u %u",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n-- Try sccanf() WITHOUT optional args --\\\\n\\"",
          "unicode": false,
          "value": "
-- Try sccanf() WITHOUT optional args --
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": List {
          "items": Array [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "name": "arg1",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "name": "arg2",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "name": "arg3",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "name": "arg4",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "name": "arg5",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "name": "arg6",
              },
            },
          ],
          "kind": "list",
          "shortForm": false,
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "str",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "format",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sscanf",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "arg1",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "arg2",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "arg3",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "arg4",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "arg5",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "arg6",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n-- Try sccanf() WITH optional args --\\\\n\\"",
          "unicode": false,
          "value": "
-- Try sccanf() WITH optional args --
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "str",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "format",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "arg1",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "arg2",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "arg3",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "arg4",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "arg5",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "arg6",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sscanf",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "res",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "arg1",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "arg2",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "arg3",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "arg4",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "arg5",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "arg6",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
