// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests MySQL PDOStatement->bindParam() - SQL column types 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": true,
        "target": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Magic {
              "kind": "magic",
              "raw": "__DIR__",
              "value": "__DIR__",
            },
            "right": Name {
              "kind": "name",
              "name": "DIRECTORY_SEPARATOR",
              "resolution": "uqn",
            },
            "type": ".",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'mysql_pdo_test.inc'",
            "unicode": false,
            "value": "mysql_pdo_test.inc",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "db",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "factory",
            },
            "what": Name {
              "kind": "name",
              "name": "MySQLPDOTest",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
        ],
        "kind": "call",
        "what": StaticLookup {
          "kind": "staticlookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "createTestTable",
          },
          "what": Name {
            "kind": "name",
            "name": "MySQLPDOTest",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "db",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "offset",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "native",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "sql_type",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "value",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          If {
            "alternate": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  StaticLookup {
                    "kind": "staticlookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "MYSQL_ATTR_DIRECT_QUERY",
                    },
                    "what": Name {
                      "kind": "name",
                      "name": "PDO",
                      "resolution": "uqn",
                    },
                  },
                  Number {
                    "kind": "number",
                    "value": "1",
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "setAttribute",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "db",
                  },
                },
              },
              "kind": "expressionstatement",
            },
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  StaticLookup {
                    "kind": "staticlookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "MYSQL_ATTR_DIRECT_QUERY",
                    },
                    "what": Name {
                      "kind": "name",
                      "name": "PDO",
                      "resolution": "uqn",
                    },
                  },
                  Number {
                    "kind": "number",
                    "value": "0",
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "setAttribute",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "db",
                  },
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Variable {
              "curly": false,
              "kind": "variable",
              "name": "native",
            },
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'DROP TABLE IF EXISTS test'",
                  "unicode": false,
                  "value": "DROP TABLE IF EXISTS test",
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "exec",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "sql",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'CREATE TABLE test(id INT, label %s) ENGINE=%s'",
                    "unicode": false,
                    "value": "CREATE TABLE test(id INT, label %s) ENGINE=%s",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "sql_type",
                  },
                  Call {
                    "arguments": Array [],
                    "kind": "call",
                    "what": StaticLookup {
                      "kind": "staticlookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "getTableEngine",
                      },
                      "what": Name {
                        "kind": "name",
                        "name": "MySQLPDOTest",
                        "resolution": "uqn",
                      },
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "sprintf",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": Return {
              "expr": Boolean {
                "kind": "boolean",
                "raw": "true",
                "value": true,
              },
              "kind": "return",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Unary {
                "kind": "unary",
                "parenthesizedExpression": true,
                "type": "!",
                "what": Assign {
                  "kind": "assign",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                  "operator": "=",
                  "right": Silent {
                    "expr": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "sql",
                        },
                      ],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "prepare",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "db",
                        },
                      },
                    },
                    "kind": "silent",
                  },
                },
              },
              "right": Unary {
                "kind": "unary",
                "parenthesizedExpression": true,
                "type": "!",
                "what": Silent {
                  "expr": Call {
                    "arguments": Array [],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "execute",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "stmt",
                      },
                    },
                  },
                  "kind": "silent",
                },
              },
              "type": "||",
            },
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "stmt",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'INSERT INTO test(id, label) VALUES (1, ?)'",
                    "unicode": false,
                    "value": "INSERT INTO test(id, label) VALUES (1, ?)",
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "prepare",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "db",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%03d/%s + 1] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[%03d/%s + 1] %s
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "offset",
                      },
                      RetIf {
                        "falseExpr": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'emulated'",
                          "unicode": false,
                          "value": "emulated",
                        },
                        "kind": "retif",
                        "test": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "native",
                          "parenthesizedExpression": true,
                        },
                        "trueExpr": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'native'",
                          "unicode": false,
                          "value": "native",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Call {
                            "arguments": Array [],
                            "kind": "call",
                            "what": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "errorInfo",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "stmt",
                              },
                            },
                          },
                          Boolean {
                            "kind": "boolean",
                            "raw": "true",
                            "value": true,
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "var_export",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Number {
                    "kind": "number",
                    "value": "1",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "value",
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "bindParam",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                },
              },
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%03d/%s + 2] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[%03d/%s + 2] %s
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "offset",
                      },
                      RetIf {
                        "falseExpr": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'emulated'",
                          "unicode": false,
                          "value": "emulated",
                        },
                        "kind": "retif",
                        "test": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "native",
                          "parenthesizedExpression": true,
                        },
                        "trueExpr": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'native'",
                          "unicode": false,
                          "value": "native",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Call {
                            "arguments": Array [],
                            "kind": "call",
                            "what": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "errorInfo",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "stmt",
                              },
                            },
                          },
                          Boolean {
                            "kind": "boolean",
                            "raw": "true",
                            "value": true,
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "var_export",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "execute",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                },
              },
            },
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "stmt",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'SELECT id, label FROM test'",
                    "unicode": false,
                    "value": "SELECT id, label FROM test",
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "query",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "db",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "id",
              },
              "operator": "=",
              "right": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "label",
                },
                "operator": "=",
                "right": NullKeyword {
                  "kind": "nullkeyword",
                  "raw": "null",
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%03d/%s + 3] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[%03d/%s + 3] %s
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "offset",
                      },
                      RetIf {
                        "falseExpr": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'emulated'",
                          "unicode": false,
                          "value": "emulated",
                        },
                        "kind": "retif",
                        "test": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "native",
                          "parenthesizedExpression": true,
                        },
                        "trueExpr": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'native'",
                          "unicode": false,
                          "value": "native",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Call {
                            "arguments": Array [],
                            "kind": "call",
                            "what": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "errorInfo",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "stmt",
                              },
                            },
                          },
                          Boolean {
                            "kind": "boolean",
                            "raw": "true",
                            "value": true,
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "var_export",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Number {
                    "kind": "number",
                    "value": "1",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "id",
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "bindColumn",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                },
              },
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%03d/%s + 4] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[%03d/%s + 4] %s
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "offset",
                      },
                      RetIf {
                        "falseExpr": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'emulated'",
                          "unicode": false,
                          "value": "emulated",
                        },
                        "kind": "retif",
                        "test": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "native",
                          "parenthesizedExpression": true,
                        },
                        "trueExpr": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'native'",
                          "unicode": false,
                          "value": "native",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Call {
                            "arguments": Array [],
                            "kind": "call",
                            "what": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "errorInfo",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "stmt",
                              },
                            },
                          },
                          Boolean {
                            "kind": "boolean",
                            "raw": "true",
                            "value": true,
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "var_export",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Number {
                    "kind": "number",
                    "value": "2",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "label",
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "bindColumn",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                },
              },
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%03d/%s + 5] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[%03d/%s + 5] %s
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "offset",
                      },
                      RetIf {
                        "falseExpr": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'emulated'",
                          "unicode": false,
                          "value": "emulated",
                        },
                        "kind": "retif",
                        "test": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "native",
                          "parenthesizedExpression": true,
                        },
                        "trueExpr": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'native'",
                          "unicode": false,
                          "value": "native",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Call {
                            "arguments": Array [],
                            "kind": "call",
                            "what": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "errorInfo",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "stmt",
                              },
                            },
                          },
                          Boolean {
                            "kind": "boolean",
                            "raw": "true",
                            "value": true,
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "var_export",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  StaticLookup {
                    "kind": "staticlookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "FETCH_BOUND",
                    },
                    "what": Name {
                      "kind": "name",
                      "name": "PDO",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "fetch",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                },
              },
            },
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "closeCursor",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%03d/%s + 6] Got %s expecting %s - please check manually\\\\n\\"",
                        "unicode": false,
                        "value": "[%03d/%s + 6] Got %s expecting %s - please check manually
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "offset",
                      },
                      RetIf {
                        "falseExpr": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'emulated'",
                          "unicode": false,
                          "value": "emulated",
                        },
                        "kind": "retif",
                        "test": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "native",
                          "parenthesizedExpression": true,
                        },
                        "trueExpr": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'native'",
                          "unicode": false,
                          "value": "native",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "label",
                          },
                          Boolean {
                            "kind": "boolean",
                            "raw": "true",
                            "value": true,
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "var_export",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "value",
                          },
                          Boolean {
                            "kind": "boolean",
                            "raw": "true",
                            "value": true,
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "var_export",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "label",
              },
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "value",
              },
              "type": "!=",
            },
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "execute",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "row",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  StaticLookup {
                    "kind": "staticlookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "FETCH_ASSOC",
                    },
                    "what": Name {
                      "kind": "name",
                      "name": "PDO",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "fetch",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%03d/%s + 7] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[%03d/%s + 7] %s
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "offset",
                      },
                      RetIf {
                        "falseExpr": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'emulated'",
                          "unicode": false,
                          "value": "emulated",
                        },
                        "kind": "retif",
                        "test": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "native",
                          "parenthesizedExpression": true,
                        },
                        "trueExpr": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'native'",
                          "unicode": false,
                          "value": "native",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Call {
                            "arguments": Array [],
                            "kind": "call",
                            "what": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "errorInfo",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "stmt",
                              },
                            },
                          },
                          Boolean {
                            "kind": "boolean",
                            "raw": "true",
                            "value": true,
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "var_export",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Empty {
              "expression": Variable {
                "curly": false,
                "kind": "variable",
                "name": "row",
              },
              "kind": "empty",
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%03d/%s + 8] Got %s expecting %s - please check manually\\\\n\\"",
                        "unicode": false,
                        "value": "[%03d/%s + 8] Got %s expecting %s - please check manually
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "offset",
                      },
                      RetIf {
                        "falseExpr": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'emulated'",
                          "unicode": false,
                          "value": "emulated",
                        },
                        "kind": "retif",
                        "test": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "native",
                          "parenthesizedExpression": true,
                        },
                        "trueExpr": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'native'",
                          "unicode": false,
                          "value": "native",
                        },
                      },
                      Call {
                        "arguments": Array [
                          OffsetLookup {
                            "kind": "offsetlookup",
                            "offset": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "'label'",
                              "unicode": false,
                              "value": "label",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "row",
                            },
                          },
                          Boolean {
                            "kind": "boolean",
                            "raw": "true",
                            "value": true,
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "var_export",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "value",
                          },
                          Boolean {
                            "kind": "boolean",
                            "raw": "true",
                            "value": true,
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "var_export",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'label'",
                  "unicode": false,
                  "value": "label",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "row",
                },
              },
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "value",
              },
              "type": "!=",
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%03d/%s + 9] Got %s from FETCH_ASSOC and %s from FETCH_BOUND- please check manually\\\\n\\"",
                        "unicode": false,
                        "value": "[%03d/%s + 9] Got %s from FETCH_ASSOC and %s from FETCH_BOUND- please check manually
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "offset",
                      },
                      RetIf {
                        "falseExpr": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'emulated'",
                          "unicode": false,
                          "value": "emulated",
                        },
                        "kind": "retif",
                        "test": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "native",
                          "parenthesizedExpression": true,
                        },
                        "trueExpr": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'native'",
                          "unicode": false,
                          "value": "native",
                        },
                      },
                      Call {
                        "arguments": Array [
                          OffsetLookup {
                            "kind": "offsetlookup",
                            "offset": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "'label'",
                              "unicode": false,
                              "value": "label",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "row",
                            },
                          },
                          Boolean {
                            "kind": "boolean",
                            "raw": "true",
                            "value": true,
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "var_export",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "value",
                          },
                          Boolean {
                            "kind": "boolean",
                            "raw": "true",
                            "value": true,
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "var_export",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'label'",
                  "unicode": false,
                  "value": "label",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "row",
                },
              },
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "label",
              },
              "type": "!=",
            },
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'DROP TABLE IF EXISTS test'",
                  "unicode": false,
                  "value": "DROP TABLE IF EXISTS test",
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "exec",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              },
            },
            "kind": "expressionstatement",
          },
          Return {
            "expr": Boolean {
              "kind": "boolean",
              "raw": "true",
              "value": true,
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "pdo_mysql_stmt_bindparam_types_do",
      },
      "nullable": false,
      "type": null,
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "db",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "offset",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "sql_type",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "value",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "offset",
                },
                Boolean {
                  "kind": "boolean",
                  "raw": "true",
                  "value": true,
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "sql_type",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "value",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types_do",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "offset",
                },
                Boolean {
                  "kind": "boolean",
                  "raw": "false",
                  "value": false,
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "sql_type",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "value",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types_do",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "pdo_mysql_stmt_bindparam_types",
      },
      "nullable": false,
      "type": null,
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "3",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'TINYINT'",
                  "unicode": false,
                  "value": "TINYINT",
                },
                Unary {
                  "kind": "unary",
                  "type": "-",
                  "what": Number {
                    "kind": "number",
                    "value": "127",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "4",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'TINYINT UNSIGNED'",
                  "unicode": false,
                  "value": "TINYINT UNSIGNED",
                },
                Number {
                  "kind": "number",
                  "value": "255",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "5",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'BOOLEAN'",
                  "unicode": false,
                  "value": "BOOLEAN",
                },
                Number {
                  "kind": "number",
                  "value": "1",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "6",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'SMALLINT'",
                  "unicode": false,
                  "value": "SMALLINT",
                },
                Unary {
                  "kind": "unary",
                  "type": "-",
                  "what": Number {
                    "kind": "number",
                    "value": "32768",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "7",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'SMALLINT UNSIGNED'",
                  "unicode": false,
                  "value": "SMALLINT UNSIGNED",
                },
                Number {
                  "kind": "number",
                  "value": "65535",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "8",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'MEDIUMINT'",
                  "unicode": false,
                  "value": "MEDIUMINT",
                },
                Unary {
                  "kind": "unary",
                  "type": "-",
                  "what": Number {
                    "kind": "number",
                    "value": "8388608",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "9",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'MEDIUMINT UNSIGNED'",
                  "unicode": false,
                  "value": "MEDIUMINT UNSIGNED",
                },
                Number {
                  "kind": "number",
                  "value": "16777215",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "10",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'INT'",
                  "unicode": false,
                  "value": "INT",
                },
                Unary {
                  "kind": "unary",
                  "type": "-",
                  "what": Number {
                    "kind": "number",
                    "value": "2147483648",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "11",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'INT UNSIGNED'",
                  "unicode": false,
                  "value": "INT UNSIGNED",
                },
                Number {
                  "kind": "number",
                  "value": "4294967295",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "12",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'BIGINT'",
                  "unicode": false,
                  "value": "BIGINT",
                },
                Unary {
                  "kind": "unary",
                  "type": "-",
                  "what": Number {
                    "kind": "number",
                    "value": "1000",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "13",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'BIGINT UNSIGNED'",
                  "unicode": false,
                  "value": "BIGINT UNSIGNED",
                },
                Number {
                  "kind": "number",
                  "value": "1000",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "14",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'REAL'",
                  "unicode": false,
                  "value": "REAL",
                },
                Unary {
                  "kind": "unary",
                  "type": "-",
                  "what": Number {
                    "kind": "number",
                    "value": "1000",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "15",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'REAL UNSIGNED'",
                  "unicode": false,
                  "value": "REAL UNSIGNED",
                },
                Number {
                  "kind": "number",
                  "value": "1000",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "16",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'REAL ZEROFILL'",
                  "unicode": false,
                  "value": "REAL ZEROFILL",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'0000000000000000000000'",
                  "unicode": false,
                  "value": "0000000000000000000000",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "17",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'REAL UNSIGNED ZEROFILL'",
                  "unicode": false,
                  "value": "REAL UNSIGNED ZEROFILL",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'0000000000000000000010'",
                  "unicode": false,
                  "value": "0000000000000000000010",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "18",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'DOUBLE'",
                  "unicode": false,
                  "value": "DOUBLE",
                },
                Unary {
                  "kind": "unary",
                  "type": "-",
                  "what": Number {
                    "kind": "number",
                    "value": "1000",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "19",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'DOUBLE UNSIGNED'",
                  "unicode": false,
                  "value": "DOUBLE UNSIGNED",
                },
                Number {
                  "kind": "number",
                  "value": "1000",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "20",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'DOUBLE ZEROFILL'",
                  "unicode": false,
                  "value": "DOUBLE ZEROFILL",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'000000000000'",
                  "unicode": false,
                  "value": "000000000000",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "21",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'DOUBLE ZEROFILL UNSIGNED'",
                  "unicode": false,
                  "value": "DOUBLE ZEROFILL UNSIGNED",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'000000001000'",
                  "unicode": false,
                  "value": "000000001000",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "22",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'FLOAT'",
                  "unicode": false,
                  "value": "FLOAT",
                },
                Unary {
                  "kind": "unary",
                  "type": "-",
                  "what": Number {
                    "kind": "number",
                    "value": "1000",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "23",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'FLOAT UNSIGNED'",
                  "unicode": false,
                  "value": "FLOAT UNSIGNED",
                },
                Number {
                  "kind": "number",
                  "value": "1000",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "24",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'FLOAT ZEROFILL'",
                  "unicode": false,
                  "value": "FLOAT ZEROFILL",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'000000000000'",
                  "unicode": false,
                  "value": "000000000000",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "25",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'FLOAT ZEROFILL UNSIGNED'",
                  "unicode": false,
                  "value": "FLOAT ZEROFILL UNSIGNED",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'000000001000'",
                  "unicode": false,
                  "value": "000000001000",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "26",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'DECIMAL'",
                  "unicode": false,
                  "value": "DECIMAL",
                },
                Unary {
                  "kind": "unary",
                  "type": "-",
                  "what": Number {
                    "kind": "number",
                    "value": "1000",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "27",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'DECIMAL UNSIGNED'",
                  "unicode": false,
                  "value": "DECIMAL UNSIGNED",
                },
                Number {
                  "kind": "number",
                  "value": "1000",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "28",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'DECIMAL ZEROFILL'",
                  "unicode": false,
                  "value": "DECIMAL ZEROFILL",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'000000000000'",
                  "unicode": false,
                  "value": "000000000000",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "29",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'DECIMAL ZEROFILL UNSIGNED'",
                  "unicode": false,
                  "value": "DECIMAL ZEROFILL UNSIGNED",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'000000001000'",
                  "unicode": false,
                  "value": "000000001000",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "30",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'NUMERIC'",
                  "unicode": false,
                  "value": "NUMERIC",
                },
                Unary {
                  "kind": "unary",
                  "type": "-",
                  "what": Number {
                    "kind": "number",
                    "value": "1000",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "31",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'NUMERIC UNSIGNED'",
                  "unicode": false,
                  "value": "NUMERIC UNSIGNED",
                },
                Number {
                  "kind": "number",
                  "value": "1000",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "32",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'NUMERIC ZEROFILL'",
                  "unicode": false,
                  "value": "NUMERIC ZEROFILL",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'000000000000'",
                  "unicode": false,
                  "value": "000000000000",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "33",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'NUMERIC ZEROFILL UNSIGNED'",
                  "unicode": false,
                  "value": "NUMERIC ZEROFILL UNSIGNED",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'000000001000'",
                  "unicode": false,
                  "value": "000000001000",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "34",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'DATE'",
                  "unicode": false,
                  "value": "DATE",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'2008-04-23'",
                  "unicode": false,
                  "value": "2008-04-23",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "35",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'TIME'",
                  "unicode": false,
                  "value": "TIME",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'16:43:12'",
                  "unicode": false,
                  "value": "16:43:12",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "36",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'TIMESTAMP'",
                  "unicode": false,
                  "value": "TIMESTAMP",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'2008-04-23 16:44:53'",
                  "unicode": false,
                  "value": "2008-04-23 16:44:53",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "37",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'DATETIME'",
                  "unicode": false,
                  "value": "DATETIME",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'2008-04-23 16:44:53'",
                  "unicode": false,
                  "value": "2008-04-23 16:44:53",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "38",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'YEAR'",
                  "unicode": false,
                  "value": "YEAR",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'2008'",
                  "unicode": false,
                  "value": "2008",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "39",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'CHAR(1)'",
                  "unicode": false,
                  "value": "CHAR(1)",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'a'",
                  "unicode": false,
                  "value": "a",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "40",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'CHAR(255)'",
                  "unicode": false,
                  "value": "CHAR(255)",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'abc'",
                  "unicode": false,
                  "value": "abc",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "41",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'VARCHAR(255)'",
                  "unicode": false,
                  "value": "VARCHAR(255)",
                },
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'a'",
                      "unicode": false,
                      "value": "a",
                    },
                    Number {
                      "kind": "number",
                      "value": "255",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "str_repeat",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "42",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'BINARY(255)'",
                  "unicode": false,
                  "value": "BINARY(255)",
                },
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'a'",
                      "unicode": false,
                      "value": "a",
                    },
                    Number {
                      "kind": "number",
                      "value": "255",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "str_repeat",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "43",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'VARBINARY(255)'",
                  "unicode": false,
                  "value": "VARBINARY(255)",
                },
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'a'",
                      "unicode": false,
                      "value": "a",
                    },
                    Number {
                      "kind": "number",
                      "value": "255",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "str_repeat",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "44",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'TINYBLOB'",
                  "unicode": false,
                  "value": "TINYBLOB",
                },
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'a'",
                      "unicode": false,
                      "value": "a",
                    },
                    Number {
                      "kind": "number",
                      "value": "255",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "str_repeat",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "45",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'BLOB'",
                  "unicode": false,
                  "value": "BLOB",
                },
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'b'",
                      "unicode": false,
                      "value": "b",
                    },
                    Number {
                      "kind": "number",
                      "value": "300",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "str_repeat",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "46",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'MEDIUMBLOB'",
                  "unicode": false,
                  "value": "MEDIUMBLOB",
                },
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'b'",
                      "unicode": false,
                      "value": "b",
                    },
                    Number {
                      "kind": "number",
                      "value": "300",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "str_repeat",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "47",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'LONGBLOB'",
                  "unicode": false,
                  "value": "LONGBLOB",
                },
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'b'",
                      "unicode": false,
                      "value": "b",
                    },
                    Number {
                      "kind": "number",
                      "value": "300",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "str_repeat",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "48",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'TINYTEXT'",
                  "unicode": false,
                  "value": "TINYTEXT",
                },
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'c'",
                      "unicode": false,
                      "value": "c",
                    },
                    Number {
                      "kind": "number",
                      "value": "255",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "str_repeat",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "49",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'TINYTEXT BINARY'",
                  "unicode": false,
                  "value": "TINYTEXT BINARY",
                },
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'c'",
                      "unicode": false,
                      "value": "c",
                    },
                    Number {
                      "kind": "number",
                      "value": "255",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "str_repeat",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "50",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'TEXT'",
                  "unicode": false,
                  "value": "TEXT",
                },
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'d'",
                      "unicode": false,
                      "value": "d",
                    },
                    Number {
                      "kind": "number",
                      "value": "300",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "str_repeat",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "51",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'TEXT BINARY'",
                  "unicode": false,
                  "value": "TEXT BINARY",
                },
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'d'",
                      "unicode": false,
                      "value": "d",
                    },
                    Number {
                      "kind": "number",
                      "value": "300",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "str_repeat",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "52",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'MEDIUMTEXT'",
                  "unicode": false,
                  "value": "MEDIUMTEXT",
                },
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'d'",
                      "unicode": false,
                      "value": "d",
                    },
                    Number {
                      "kind": "number",
                      "value": "300",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "str_repeat",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "53",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'MEDIUMTEXT BINARY'",
                  "unicode": false,
                  "value": "MEDIUMTEXT BINARY",
                },
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'d'",
                      "unicode": false,
                      "value": "d",
                    },
                    Number {
                      "kind": "number",
                      "value": "300",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "str_repeat",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "54",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'LONGTEXT'",
                  "unicode": false,
                  "value": "LONGTEXT",
                },
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'d'",
                      "unicode": false,
                      "value": "d",
                    },
                    Number {
                      "kind": "number",
                      "value": "300",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "str_repeat",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "55",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'LONGTEXT BINARY'",
                  "unicode": false,
                  "value": "LONGTEXT BINARY",
                },
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'d'",
                      "unicode": false,
                      "value": "d",
                    },
                    Number {
                      "kind": "number",
                      "value": "300",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "str_repeat",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "56",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"ENUM('yes', 'no') DEFAULT 'yes'\\"",
                  "unicode": false,
                  "value": "ENUM('yes', 'no') DEFAULT 'yes'",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"no\\"",
                  "unicode": false,
                  "value": "no",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "57",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"SET('yes', 'no') DEFAULT 'yes'\\"",
                  "unicode": false,
                  "value": "SET('yes', 'no') DEFAULT 'yes'",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"no\\"",
                  "unicode": false,
                  "value": "no",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pdo_mysql_stmt_bindparam_types",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"[001] %s [%s] %s\\\\n\\"",
                      "unicode": false,
                      "value": "[001] %s [%s] %s
",
                    },
                    Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getMessage",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "e",
                        },
                      },
                    },
                    Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "errorCode",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "db",
                        },
                      },
                    },
                    Call {
                      "arguments": Array [
                        String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "' '",
                          "unicode": false,
                          "value": " ",
                        },
                        Call {
                          "arguments": Array [],
                          "kind": "call",
                          "what": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "errorInfo",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "db",
                            },
                          },
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "implode",
                        "resolution": "uqn",
                      },
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "printf",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "PDOException",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"done!\\"",
          "unicode": false,
          "value": "done!",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
