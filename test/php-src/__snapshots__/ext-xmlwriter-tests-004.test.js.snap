// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests XMLWriter: libxml2 XML Writer, file buffer, flush 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "doc_dest",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'004.xml'",
          "unicode": false,
          "value": "004.xml",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "xw",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "doc_dest",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "xmlwriter_open_uri",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "xw",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1.0'",
            "unicode": false,
            "value": "1.0",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'UTF-8'",
            "unicode": false,
            "value": "UTF-8",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "xmlwriter_start_document",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "xw",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"tag1\\"",
            "unicode": false,
            "value": "tag1",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "xmlwriter_start_element",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "xw",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"PHP\\"",
            "unicode": false,
            "value": "PHP",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "xmlwriter_start_pi",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "xw",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'echo $a;'",
            "unicode": false,
            "value": "echo $a;",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "xmlwriter_text",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "xw",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "xmlwriter_end_pi",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "xw",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "xmlwriter_end_document",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "output_bytes",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "xw",
            },
            Boolean {
              "kind": "boolean",
              "raw": "true",
              "value": true,
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "xmlwriter_flush",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "md5_out",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "doc_dest",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "md5_file",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "md5_res",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<tag1><?PHP echo $a;?></tag1>
'",
              "unicode": false,
              "value": "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<tag1><?PHP echo $a;?></tag1>
",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "md5",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Unset {
      "kind": "unset",
      "variables": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "xw",
        },
      ],
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "doc_dest",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "unlink",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"ok.\\\\n\\"",
                "unicode": false,
                "value": "ok.
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              Encapsed {
                "kind": "encapsed",
                "raw": "\\"failed: $md5_res != $md5_out\\\\n\\"",
                "type": "string",
                "value": Array [
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "failed: ",
                      "unicode": false,
                      "value": "failed: ",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "md5_res",
                    },
                    "kind": "encapsedpart",
                    "syntax": "simple",
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": " != ",
                      "unicode": false,
                      "value": " != ",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "md5_out",
                    },
                    "kind": "encapsedpart",
                    "syntax": "simple",
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "\\\\n",
                      "unicode": false,
                      "value": "",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                ],
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "md5_out",
        },
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "md5_res",
        },
        "type": "!=",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
