// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Exceptions are properly appended when thrown from yield from values destruction 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": YieldFrom {
              "kind": "yieldfrom",
              "value": Array {
                "items": Array [
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": Number {
                      "kind": "number",
                      "value": "1",
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": Number {
                      "kind": "number",
                      "value": "2",
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": New {
                      "arguments": Array [],
                      "kind": "new",
                      "what": Class {
                        "attrGroups": Array [],
                        "body": Array [
                          Method {
                            "arguments": Array [],
                            "attrGroups": Array [],
                            "body": Block {
                              "children": Array [
                                Throw {
                                  "kind": "throw",
                                  "what": New {
                                    "arguments": Array [
                                      String {
                                        "isDoubleQuote": true,
                                        "kind": "string",
                                        "raw": "\\"dtor\\"",
                                        "unicode": false,
                                        "value": "dtor",
                                      },
                                    ],
                                    "kind": "new",
                                    "what": Name {
                                      "kind": "name",
                                      "name": "Exception",
                                      "resolution": "uqn",
                                    },
                                  },
                                },
                              ],
                              "kind": "block",
                            },
                            "byref": false,
                            "isAbstract": false,
                            "isFinal": false,
                            "isStatic": false,
                            "kind": "method",
                            "name": Identifier {
                              "kind": "identifier",
                              "name": "__destruct",
                            },
                            "nullable": false,
                            "type": null,
                            "visibility": "",
                          },
                        ],
                        "extends": null,
                        "implements": null,
                        "isAbstract": false,
                        "isAnonymous": true,
                        "isFinal": false,
                        "kind": "class",
                        "name": null,
                      },
                    },
                  },
                ],
                "kind": "array",
                "shortForm": true,
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "gen",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          New {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"outer\\"",
                "unicode": false,
                "value": "outer",
              },
            ],
            "kind": "new",
            "what": Name {
              "kind": "name",
              "name": "Exception",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "throw",
          },
          "what": Call {
            "arguments": Array [],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "gen",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
