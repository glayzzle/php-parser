// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests 037: Name ambiguity (namespace name or namespace's class name) 1`] = `
Program {
  "children": Array [
    Namespace {
      "children": Array [
        UseGroup {
          "items": Array [
            UseItem {
              "alias": Identifier {
                "kind": "identifier",
                "name": "Y",
              },
              "kind": "useitem",
              "name": "X",
              "type": null,
            },
          ],
          "kind": "usegroup",
          "name": null,
          "type": null,
        },
        Class {
          "attrGroups": Array [],
          "body": Array [
            ClassConstant {
              "attrGroups": Array [],
              "constants": Array [
                Constant {
                  "kind": "constant",
                  "name": Identifier {
                    "kind": "identifier",
                    "name": "C",
                  },
                  "value": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"const ok\\\\n\\"",
                    "unicode": false,
                    "value": "const ok
",
                  },
                },
              ],
              "kind": "classconstant",
              "visibility": "",
            },
            PropertyStatement {
              "isStatic": true,
              "kind": "propertystatement",
              "properties": Array [
                Property {
                  "attrGroups": Array [],
                  "kind": "property",
                  "name": Identifier {
                    "kind": "identifier",
                    "name": "var",
                  },
                  "nullable": false,
                  "readonly": false,
                  "type": null,
                  "value": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"var ok\\\\n\\"",
                    "unicode": false,
                    "value": "var ok
",
                  },
                },
              ],
              "visibility": "",
            },
            Method {
              "arguments": Array [],
              "attrGroups": Array [],
              "body": Block {
                "children": Array [
                  Echo {
                    "expressions": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"class ok\\\\n\\"",
                        "unicode": false,
                        "value": "class ok
",
                      },
                    ],
                    "kind": "echo",
                    "shortForm": false,
                  },
                ],
                "kind": "block",
              },
              "byref": false,
              "isAbstract": false,
              "isFinal": false,
              "isStatic": false,
              "kind": "method",
              "name": Identifier {
                "kind": "identifier",
                "name": "__construct",
              },
              "nullable": false,
              "type": null,
              "visibility": "",
            },
            Method {
              "arguments": Array [],
              "attrGroups": Array [],
              "body": Block {
                "children": Array [
                  Echo {
                    "expressions": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"method ok\\\\n\\"",
                        "unicode": false,
                        "value": "method ok
",
                      },
                    ],
                    "kind": "echo",
                    "shortForm": false,
                  },
                ],
                "kind": "block",
              },
              "byref": false,
              "isAbstract": false,
              "isFinal": false,
              "isStatic": true,
              "kind": "method",
              "name": Identifier {
                "kind": "identifier",
                "name": "bar",
              },
              "nullable": false,
              "type": null,
              "visibility": "",
            },
          ],
          "extends": null,
          "implements": null,
          "isAbstract": false,
          "isAnonymous": false,
          "isFinal": false,
          "kind": "class",
          "name": Identifier {
            "kind": "identifier",
            "name": "X",
          },
        },
        ExpressionStatement {
          "expression": New {
            "arguments": Array [],
            "kind": "new",
            "what": Name {
              "kind": "name",
              "name": "X",
              "resolution": "uqn",
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": New {
            "arguments": Array [],
            "kind": "new",
            "what": Name {
              "kind": "name",
              "name": "Y\\\\X",
              "resolution": "qn",
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": New {
            "arguments": Array [],
            "kind": "new",
            "what": Name {
              "kind": "name",
              "name": "\\\\X\\\\X",
              "resolution": "fqn",
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [],
            "kind": "call",
            "what": StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "bar",
              },
              "what": Name {
                "kind": "name",
                "name": "X",
                "resolution": "uqn",
              },
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [],
            "kind": "call",
            "what": StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "bar",
              },
              "what": Name {
                "kind": "name",
                "name": "Y\\\\X",
                "resolution": "qn",
              },
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [],
            "kind": "call",
            "what": StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "bar",
              },
              "what": Name {
                "kind": "name",
                "name": "\\\\X\\\\X",
                "resolution": "fqn",
              },
            },
          },
          "kind": "expressionstatement",
        },
        Echo {
          "expressions": Array [
            StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "C",
              },
              "what": Name {
                "kind": "name",
                "name": "X",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "echo",
          "shortForm": false,
        },
        Echo {
          "expressions": Array [
            StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "C",
              },
              "what": Name {
                "kind": "name",
                "name": "Y\\\\X",
                "resolution": "qn",
              },
            },
          ],
          "kind": "echo",
          "shortForm": false,
        },
        Echo {
          "expressions": Array [
            StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "C",
              },
              "what": Name {
                "kind": "name",
                "name": "\\\\X\\\\X",
                "resolution": "fqn",
              },
            },
          ],
          "kind": "echo",
          "shortForm": false,
        },
        Echo {
          "expressions": Array [
            StaticLookup {
              "kind": "staticlookup",
              "offset": Variable {
                "curly": false,
                "kind": "variable",
                "name": "var",
              },
              "what": Name {
                "kind": "name",
                "name": "X",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "echo",
          "shortForm": false,
        },
        Echo {
          "expressions": Array [
            StaticLookup {
              "kind": "staticlookup",
              "offset": Variable {
                "curly": false,
                "kind": "variable",
                "name": "var",
              },
              "what": Name {
                "kind": "name",
                "name": "Y\\\\X",
                "resolution": "qn",
              },
            },
          ],
          "kind": "echo",
          "shortForm": false,
        },
        Echo {
          "expressions": Array [
            StaticLookup {
              "kind": "staticlookup",
              "offset": Variable {
                "curly": false,
                "kind": "variable",
                "name": "var",
              },
              "what": Name {
                "kind": "name",
                "name": "\\\\X\\\\X",
                "resolution": "fqn",
              },
            },
          ],
          "kind": "echo",
          "shortForm": false,
        },
      ],
      "kind": "namespace",
      "name": "X",
      "withBrackets": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
