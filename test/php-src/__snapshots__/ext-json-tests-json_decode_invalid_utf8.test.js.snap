// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests json_decode() invalid UTF8 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "str",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "str",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "json_decode",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "str",
                    },
                    Boolean {
                      "kind": "boolean",
                      "raw": "true",
                      "value": true,
                    },
                    Number {
                      "kind": "number",
                      "value": "512",
                    },
                    Name {
                      "kind": "name",
                      "name": "JSON_INVALID_UTF8_IGNORE",
                      "resolution": "uqn",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "json_decode",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "json",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "str",
                  },
                  Boolean {
                    "kind": "boolean",
                    "raw": "true",
                    "value": true,
                  },
                  Number {
                    "kind": "number",
                    "value": "512",
                  },
                  Name {
                    "kind": "name",
                    "name": "JSON_INVALID_UTF8_SUBSTITUTE",
                    "resolution": "uqn",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "json_decode",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "json",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "bin2hex",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Call {
                        "arguments": Array [
                          Closure {
                            "arguments": Array [
                              Parameter {
                                "attrGroups": Array [],
                                "byref": false,
                                "flags": 0,
                                "kind": "parameter",
                                "name": Identifier {
                                  "kind": "identifier",
                                  "name": "item",
                                },
                                "nullable": false,
                                "readonly": false,
                                "type": null,
                                "value": null,
                                "variadic": false,
                              },
                            ],
                            "attrGroups": Array [],
                            "body": Block {
                              "children": Array [
                                Return {
                                  "expr": Call {
                                    "arguments": Array [
                                      Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "item",
                                      },
                                    ],
                                    "kind": "call",
                                    "what": Name {
                                      "kind": "name",
                                      "name": "bin2hex",
                                      "resolution": "uqn",
                                    },
                                  },
                                  "kind": "return",
                                },
                              ],
                              "kind": "block",
                            },
                            "byref": false,
                            "isStatic": false,
                            "kind": "closure",
                            "nullable": false,
                            "type": null,
                            "uses": Array [],
                          },
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "json",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "array_map",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "json",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "is_array",
                "resolution": "uqn",
              },
            },
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "json_decode_invalid_utf8",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\\\"a\\\\xb0b\\\\\\"\\"",
            "unicode": false,
            "value": "\\"aÂ°b\\\\\\"",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "json_decode_invalid_utf8",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\\\"a\\\\xd0\\\\xf2b\\\\\\"\\"",
            "unicode": false,
            "value": "\\"aÃÃ²b\\\\\\"",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "json_decode_invalid_utf8",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\\\"\\\\x61\\\\xf0\\\\x80\\\\x80\\\\x41\\\\\\"\\"",
            "unicode": false,
            "value": "\\"aÃ°ÂÂA\\\\\\"",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "json_decode_invalid_utf8",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"[\\\\\\"\\\\xc1\\\\xc1\\\\\\",\\\\\\"a\\\\\\"]\\"",
            "unicode": false,
            "value": "[\\"ÃÃ\\\\\\",\\\\\\"a\\\\\\"]",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "json_decode_invalid_utf8",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Done\\\\n\\"",
          "unicode": false,
          "value": "Done
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
