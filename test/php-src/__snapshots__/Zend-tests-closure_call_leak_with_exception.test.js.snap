// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Closure must not leak during a dynamic call interrupted by an exception 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "valid",
          },
          "what": Call {
            "arguments": Array [],
            "kind": "call",
            "what": Closure {
              "arguments": Array [],
              "attrGroups": Array [],
              "body": Block {
                "children": Array [
                  ExpressionStatement {
                    "expression": Assign {
                      "kind": "assign",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "closure",
                      },
                      "operator": "=",
                      "right": Closure {
                        "arguments": Array [
                          Parameter {
                            "attrGroups": Array [],
                            "byref": false,
                            "flags": 0,
                            "kind": "parameter",
                            "name": Identifier {
                              "kind": "identifier",
                              "name": "foo",
                            },
                            "nullable": false,
                            "readonly": false,
                            "type": null,
                            "value": null,
                            "variadic": false,
                          },
                        ],
                        "attrGroups": Array [],
                        "body": Block {
                          "children": Array [
                            ExpressionStatement {
                              "expression": Call {
                                "arguments": Array [
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "foo",
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "var_dump",
                                  "resolution": "uqn",
                                },
                              },
                              "kind": "expressionstatement",
                            },
                          ],
                          "kind": "block",
                        },
                        "byref": false,
                        "isStatic": false,
                        "kind": "closure",
                        "nullable": false,
                        "type": null,
                        "uses": Array [],
                      },
                    },
                    "kind": "expressionstatement",
                  },
                  ExpressionStatement {
                    "expression": Call {
                      "arguments": Array [
                        Yield {
                          "key": null,
                          "kind": "yield",
                          "value": null,
                        },
                      ],
                      "kind": "call",
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "closure",
                      },
                    },
                    "kind": "expressionstatement",
                  },
                ],
                "kind": "block",
              },
              "byref": false,
              "isStatic": false,
              "kind": "closure",
              "nullable": false,
              "parenthesizedExpression": true,
              "type": null,
              "uses": Array [],
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    Inline {
      "kind": "inline",
      "raw": "
==DONE==",
      "value": "==DONE==",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
