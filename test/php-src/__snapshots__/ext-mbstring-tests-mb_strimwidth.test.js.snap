// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests mb_strimwidth() 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "euc_jp",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'0123����ʸ��������ܸ�Ǥ���EUC-JP��ȤäƤ��ޤ������ܸ�����ݽ�����'",
          "unicode": false,
          "value": "0123����ʸ��������ܸ�Ǥ���EUC-JP��ȤäƤ��ޤ������ܸ�����ݽ�����",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"String width: \\"",
              "unicode": false,
              "value": "String width: ",
            },
            "right": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "euc_jp",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'EUC-JP'",
                  "unicode": false,
                  "value": "EUC-JP",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mb_strwidth",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"1: \\"",
              "unicode": false,
              "value": "1: ",
            },
            "right": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "euc_jp",
                },
                Number {
                  "kind": "number",
                  "value": "0",
                },
                Number {
                  "kind": "number",
                  "value": "15",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'...'",
                  "unicode": false,
                  "value": "...",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'EUC-JP'",
                  "unicode": false,
                  "value": "EUC-JP",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mb_strimwidth",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"2: \\"",
              "unicode": false,
              "value": "2: ",
            },
            "right": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "euc_jp",
                },
                Number {
                  "kind": "number",
                  "value": "0",
                },
                Number {
                  "kind": "number",
                  "value": "100",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'...'",
                  "unicode": false,
                  "value": "...",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'EUC-JP'",
                  "unicode": false,
                  "value": "EUC-JP",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mb_strimwidth",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"3: \\"",
              "unicode": false,
              "value": "3: ",
            },
            "right": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "euc_jp",
                },
                Number {
                  "kind": "number",
                  "value": "15",
                },
                Number {
                  "kind": "number",
                  "value": "100",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'...'",
                  "unicode": false,
                  "value": "...",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'EUC-JP'",
                  "unicode": false,
                  "value": "EUC-JP",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mb_strimwidth",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"4: \\"",
              "unicode": false,
              "value": "4: ",
            },
            "right": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "euc_jp",
                },
                Unary {
                  "kind": "unary",
                  "type": "-",
                  "what": Number {
                    "kind": "number",
                    "value": "30",
                  },
                },
                Number {
                  "kind": "number",
                  "value": "5",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'...'",
                  "unicode": false,
                  "value": "...",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'EUC-JP'",
                  "unicode": false,
                  "value": "EUC-JP",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mb_strimwidth",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"5: \\"",
              "unicode": false,
              "value": "5: ",
            },
            "right": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "euc_jp",
                },
                Number {
                  "kind": "number",
                  "value": "38",
                },
                Number {
                  "kind": "number",
                  "value": "5",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'...'",
                  "unicode": false,
                  "value": "...",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'EUC-JP'",
                  "unicode": false,
                  "value": "EUC-JP",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mb_strimwidth",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"6: \\"",
              "unicode": false,
              "value": "6: ",
            },
            "right": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "euc_jp",
                },
                Number {
                  "kind": "number",
                  "value": "38",
                },
                Unary {
                  "kind": "unary",
                  "type": "-",
                  "what": Number {
                    "kind": "number",
                    "value": "25",
                  },
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'...'",
                  "unicode": false,
                  "value": "...",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'EUC-JP'",
                  "unicode": false,
                  "value": "EUC-JP",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mb_strimwidth",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"7: \\"",
              "unicode": false,
              "value": "7: ",
            },
            "right": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "euc_jp",
                },
                Unary {
                  "kind": "unary",
                  "type": "-",
                  "what": Number {
                    "kind": "number",
                    "value": "30",
                  },
                },
                Unary {
                  "kind": "unary",
                  "type": "-",
                  "what": Number {
                    "kind": "number",
                    "value": "25",
                  },
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'...'",
                  "unicode": false,
                  "value": "...",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'EUC-JP'",
                  "unicode": false,
                  "value": "EUC-JP",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mb_strimwidth",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "euc_jp",
                    },
                    Number {
                      "kind": "number",
                      "value": "0",
                    },
                    Unary {
                      "kind": "unary",
                      "type": "-",
                      "what": Number {
                        "kind": "number",
                        "value": "100",
                      },
                    },
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'...'",
                      "unicode": false,
                      "value": "...",
                    },
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'EUC-JP'",
                      "unicode": false,
                      "value": "EUC-JP",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mb_strimwidth",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getMessage",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "e",
                        },
                      },
                    },
                    "right": Name {
                      "kind": "name",
                      "name": "\\\\PHP_EOL",
                      "resolution": "fqn",
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "\\\\ValueError",
              "resolution": "fqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "euc_jp",
                    },
                    Number {
                      "kind": "number",
                      "value": "100",
                    },
                    Number {
                      "kind": "number",
                      "value": "10",
                    },
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'...'",
                      "unicode": false,
                      "value": "...",
                    },
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'EUC-JP'",
                      "unicode": false,
                      "value": "EUC-JP",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mb_strimwidth",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getMessage",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "e",
                        },
                      },
                    },
                    "right": Name {
                      "kind": "name",
                      "name": "\\\\PHP_EOL",
                      "resolution": "fqn",
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "\\\\ValueError",
              "resolution": "fqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "euc_jp",
                    },
                    Unary {
                      "kind": "unary",
                      "type": "-",
                      "what": Number {
                        "kind": "number",
                        "value": "100",
                      },
                    },
                    Number {
                      "kind": "number",
                      "value": "10",
                    },
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'...'",
                      "unicode": false,
                      "value": "...",
                    },
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'EUC-JP'",
                      "unicode": false,
                      "value": "EUC-JP",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mb_strimwidth",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getMessage",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "e",
                        },
                      },
                    },
                    "right": Name {
                      "kind": "name",
                      "name": "\\\\PHP_EOL",
                      "resolution": "fqn",
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "\\\\ValueError",
              "resolution": "fqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "euc_jp",
                    },
                    Unary {
                      "kind": "unary",
                      "type": "-",
                      "what": Number {
                        "kind": "number",
                        "value": "10",
                      },
                    },
                    Unary {
                      "kind": "unary",
                      "type": "-",
                      "what": Number {
                        "kind": "number",
                        "value": "12",
                      },
                    },
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'...'",
                      "unicode": false,
                      "value": "...",
                    },
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'EUC-JP'",
                      "unicode": false,
                      "value": "EUC-JP",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mb_strimwidth",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getMessage",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "e",
                        },
                      },
                    },
                    "right": Name {
                      "kind": "name",
                      "name": "\\\\PHP_EOL",
                      "resolution": "fqn",
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "\\\\ValueError",
              "resolution": "fqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
