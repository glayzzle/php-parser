// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test extract() with $this 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [],
      "body": Array [
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "options",
                  },
                  "operator": "=",
                  "right": Array {
                    "items": Array [
                      Entry {
                        "byRef": false,
                        "key": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'EXTR_OVERWRITE'",
                          "unicode": false,
                          "value": "EXTR_OVERWRITE",
                        },
                        "kind": "entry",
                        "unpack": false,
                        "value": Name {
                          "kind": "name",
                          "name": "EXTR_OVERWRITE",
                          "resolution": "uqn",
                        },
                      },
                      Entry {
                        "byRef": false,
                        "key": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'EXTR_SKIP'",
                          "unicode": false,
                          "value": "EXTR_SKIP",
                        },
                        "kind": "entry",
                        "unpack": false,
                        "value": Name {
                          "kind": "name",
                          "name": "EXTR_SKIP",
                          "resolution": "uqn",
                        },
                      },
                      Entry {
                        "byRef": false,
                        "key": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'EXTR_PREFIX_SAME'",
                          "unicode": false,
                          "value": "EXTR_PREFIX_SAME",
                        },
                        "kind": "entry",
                        "unpack": false,
                        "value": Name {
                          "kind": "name",
                          "name": "EXTR_PREFIX_SAME",
                          "resolution": "uqn",
                        },
                      },
                      Entry {
                        "byRef": false,
                        "key": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'EXTR_PREFIX_ALL'",
                          "unicode": false,
                          "value": "EXTR_PREFIX_ALL",
                        },
                        "kind": "entry",
                        "unpack": false,
                        "value": Name {
                          "kind": "name",
                          "name": "EXTR_PREFIX_ALL",
                          "resolution": "uqn",
                        },
                      },
                      Entry {
                        "byRef": false,
                        "key": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'EXTR_PREFIX_INVALID'",
                          "unicode": false,
                          "value": "EXTR_PREFIX_INVALID",
                        },
                        "kind": "entry",
                        "unpack": false,
                        "value": Name {
                          "kind": "name",
                          "name": "EXTR_PREFIX_INVALID",
                          "resolution": "uqn",
                        },
                      },
                      Entry {
                        "byRef": false,
                        "key": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'EXTR_IF_EXISTS'",
                          "unicode": false,
                          "value": "EXTR_IF_EXISTS",
                        },
                        "kind": "entry",
                        "unpack": false,
                        "value": Name {
                          "kind": "name",
                          "name": "EXTR_IF_EXISTS",
                          "resolution": "uqn",
                        },
                      },
                      Entry {
                        "byRef": false,
                        "key": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'EXTR_PREFIX_IF_EXISTS'",
                          "unicode": false,
                          "value": "EXTR_PREFIX_IF_EXISTS",
                        },
                        "kind": "entry",
                        "unpack": false,
                        "value": Name {
                          "kind": "name",
                          "name": "EXTR_PREFIX_IF_EXISTS",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "array",
                    "shortForm": true,
                  },
                },
                "kind": "expressionstatement",
              },
              Foreach {
                "body": Block {
                  "children": Array [
                    Echo {
                      "expressions": Array [
                        Encapsed {
                          "kind": "encapsed",
                          "raw": "\\"{$name}\\\\n\\"",
                          "type": "string",
                          "value": Array [
                            EncapsedPart {
                              "curly": false,
                              "expression": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "name",
                              },
                              "kind": "encapsedpart",
                              "syntax": "complex",
                            },
                            EncapsedPart {
                              "curly": false,
                              "expression": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "\\\\n",
                                "unicode": false,
                                "value": "",
                              },
                              "kind": "encapsedpart",
                              "syntax": null,
                            },
                          ],
                        },
                      ],
                      "kind": "echo",
                      "shortForm": false,
                    },
                    ExpressionStatement {
                      "expression": Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "name",
                          },
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "flags",
                          },
                        ],
                        "kind": "call",
                        "what": PropertyLookup {
                          "kind": "propertylookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "handle",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "this",
                          },
                        },
                      },
                      "kind": "expressionstatement",
                    },
                    ExpressionStatement {
                      "expression": Call {
                        "arguments": Array [
                          Encapsed {
                            "kind": "encapsed",
                            "raw": "\\"{$name}_REFS\\"",
                            "type": "string",
                            "value": Array [
                              EncapsedPart {
                                "curly": false,
                                "expression": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "name",
                                },
                                "kind": "encapsedpart",
                                "syntax": "complex",
                              },
                              EncapsedPart {
                                "curly": false,
                                "expression": String {
                                  "isDoubleQuote": false,
                                  "kind": "string",
                                  "raw": "_REFS",
                                  "unicode": false,
                                  "value": "_REFS",
                                },
                                "kind": "encapsedpart",
                                "syntax": null,
                              },
                            ],
                          },
                          Bin {
                            "kind": "bin",
                            "left": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "flags",
                            },
                            "right": Name {
                              "kind": "name",
                              "name": "EXTR_REFS",
                              "resolution": "uqn",
                            },
                            "type": "|",
                          },
                        ],
                        "kind": "call",
                        "what": PropertyLookup {
                          "kind": "propertylookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "handle",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "this",
                          },
                        },
                      },
                      "kind": "expressionstatement",
                    },
                    Echo {
                      "expressions": Array [
                        String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"\\\\n\\"",
                          "unicode": false,
                          "value": "
",
                        },
                      ],
                      "kind": "echo",
                      "shortForm": false,
                    },
                  ],
                  "kind": "block",
                },
                "key": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "name",
                },
                "kind": "foreach",
                "shortForm": false,
                "source": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "options",
                },
                "value": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "flags",
                },
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "run",
          },
          "nullable": false,
          "type": TypeReference {
            "kind": "typereference",
            "name": "void",
            "raw": "void",
          },
          "visibility": "public",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "name",
              },
              "nullable": false,
              "readonly": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "string",
                "raw": "string",
              },
              "value": null,
              "variadic": false,
            },
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "flags",
              },
              "nullable": false,
              "readonly": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "int",
                "raw": "int",
              },
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "array",
                  },
                  "operator": "=",
                  "right": Array {
                    "items": Array [
                      Entry {
                        "byRef": false,
                        "key": String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"this\\"",
                          "unicode": false,
                          "value": "this",
                        },
                        "kind": "entry",
                        "unpack": false,
                        "value": String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"value\\"",
                          "unicode": false,
                          "value": "value",
                        },
                      },
                    ],
                    "kind": "array",
                    "shortForm": true,
                  },
                },
                "kind": "expressionstatement",
              },
              Try {
                "always": null,
                "body": Block {
                  "children": Array [
                    ExpressionStatement {
                      "expression": Assign {
                        "kind": "assign",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "result",
                        },
                        "operator": "=",
                        "right": Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "array",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "flags",
                            },
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"x\\"",
                              "unicode": false,
                              "value": "x",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "extract",
                            "resolution": "uqn",
                          },
                        },
                      },
                      "kind": "expressionstatement",
                    },
                    Echo {
                      "expressions": Array [
                        Encapsed {
                          "kind": "encapsed",
                          "raw": "\\"  extract() = {$result}\\\\n\\"",
                          "type": "string",
                          "value": Array [
                            EncapsedPart {
                              "curly": false,
                              "expression": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "  extract() = ",
                                "unicode": false,
                                "value": "  extract() = ",
                              },
                              "kind": "encapsedpart",
                              "syntax": null,
                            },
                            EncapsedPart {
                              "curly": false,
                              "expression": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "result",
                              },
                              "kind": "encapsedpart",
                              "syntax": "complex",
                            },
                            EncapsedPart {
                              "curly": false,
                              "expression": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "\\\\n",
                                "unicode": false,
                                "value": "",
                              },
                              "kind": "encapsedpart",
                              "syntax": null,
                            },
                          ],
                        },
                      ],
                      "kind": "echo",
                      "shortForm": false,
                    },
                    Echo {
                      "expressions": Array [
                        Bin {
                          "kind": "bin",
                          "left": Bin {
                            "kind": "bin",
                            "left": String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"  \\\\$this = \\"",
                              "unicode": false,
                              "value": "  $this = ",
                            },
                            "right": Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "this",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "get_class",
                                "resolution": "uqn",
                              },
                            },
                            "type": ".",
                          },
                          "right": String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"\\\\n\\"",
                            "unicode": false,
                            "value": "
",
                          },
                          "type": ".",
                        },
                      ],
                      "kind": "echo",
                      "shortForm": false,
                    },
                    Echo {
                      "expressions": Array [
                        Bin {
                          "kind": "bin",
                          "left": Bin {
                            "kind": "bin",
                            "left": String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"  \\\\$v_this = \\"",
                              "unicode": false,
                              "value": "  $v_this = ",
                            },
                            "right": RetIf {
                              "falseExpr": String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"NULL\\"",
                                "unicode": false,
                                "value": "NULL",
                              },
                              "kind": "retif",
                              "parenthesizedExpression": true,
                              "test": Isset {
                                "kind": "isset",
                                "variables": Array [
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "x_this",
                                  },
                                ],
                              },
                              "trueExpr": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "x_this",
                              },
                            },
                            "type": ".",
                          },
                          "right": String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"\\\\n\\"",
                            "unicode": false,
                            "value": "
",
                          },
                          "type": ".",
                        },
                      ],
                      "kind": "echo",
                      "shortForm": false,
                    },
                  ],
                  "kind": "block",
                },
                "catches": Array [
                  Catch {
                    "body": Block {
                      "children": Array [
                        Echo {
                          "expressions": Array [
                            Bin {
                              "kind": "bin",
                              "left": Bin {
                                "kind": "bin",
                                "left": String {
                                  "isDoubleQuote": true,
                                  "kind": "string",
                                  "raw": "\\"  Exception: \\"",
                                  "unicode": false,
                                  "value": "  Exception: ",
                                },
                                "right": Call {
                                  "arguments": Array [],
                                  "kind": "call",
                                  "what": PropertyLookup {
                                    "kind": "propertylookup",
                                    "offset": Identifier {
                                      "kind": "identifier",
                                      "name": "getMessage",
                                    },
                                    "what": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "e",
                                    },
                                  },
                                },
                                "type": ".",
                              },
                              "right": String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"\\\\n\\"",
                                "unicode": false,
                                "value": "
",
                              },
                              "type": ".",
                            },
                          ],
                          "kind": "echo",
                          "shortForm": false,
                        },
                      ],
                      "kind": "block",
                    },
                    "kind": "catch",
                    "variable": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "e",
                    },
                    "what": Array [
                      Name {
                        "kind": "name",
                        "name": "\\\\Throwable",
                        "resolution": "fqn",
                      },
                    ],
                  },
                ],
                "kind": "try",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "handle",
          },
          "nullable": false,
          "type": TypeReference {
            "kind": "typereference",
            "name": "void",
            "raw": "void",
          },
          "visibility": "private",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "Extract",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "run",
          },
          "what": New {
            "arguments": Array [],
            "kind": "new",
            "parenthesizedExpression": true,
            "what": Name {
              "kind": "name",
              "name": "Extract",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
