// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bind miscellaneous column types using default types 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": true,
        "target": Bin {
          "kind": "bin",
          "left": Magic {
            "kind": "magic",
            "raw": "__DIR__",
            "value": "__DIR__",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'/connect.inc'",
            "unicode": false,
            "value": "/connect.inc",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "stmtarray",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"alter session set nls_date_format = 'DD-MON-YY'\\"",
                "unicode": false,
                "value": "alter session set nls_date_format = 'DD-MON-YY'",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"drop table bind_misccoltypes_tab\\"",
                "unicode": false,
                "value": "drop table bind_misccoltypes_tab",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"create table bind_misccoltypes_tab (
        id                number,
        char_t            char(1),
        char_t10          char(10),
        varchar2_t10      varchar2(10),
        number_t          number,
        number_t92        number(9,2),
        number_t6         number(6),
        date_t            date,
        timestamp_t       timestamp,
        float_t           float,
        binary_float_t    binary_float,
        binary_double_t   binary_double,
        decimal_t         decimal,
        integer_t         integer,
        nchar_t           nchar(10),
        nvarchar2_t10     nvarchar2(10),
        varchar_t10       varchar(10) )\\"",
                "unicode": false,
                "value": "create table bind_misccoltypes_tab (
        id                number,
        char_t            char(1),
        char_t10          char(10),
        varchar2_t10      varchar2(10),
        number_t          number,
        number_t92        number(9,2),
        number_t6         number(6),
        date_t            date,
        timestamp_t       timestamp,
        float_t           float,
        binary_float_t    binary_float,
        binary_double_t   binary_double,
        decimal_t         decimal,
        integer_t         integer,
        nchar_t           nchar(10),
        nvarchar2_t10     nvarchar2(10),
        varchar_t10       varchar(10) )",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "c",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "stmtarray",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci8_test_sql_execute",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "c",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "colname",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "id",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "s",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "c",
                  },
                  Encapsed {
                    "kind": "encapsed",
                    "raw": "\\"select $colname from bind_misccoltypes_tab where id = :id\\"",
                    "type": "string",
                    "value": Array [
                      EncapsedPart {
                        "curly": false,
                        "expression": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "select ",
                          "unicode": false,
                          "value": "select ",
                        },
                        "kind": "encapsedpart",
                        "syntax": null,
                      },
                      EncapsedPart {
                        "curly": false,
                        "expression": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "colname",
                        },
                        "kind": "encapsedpart",
                        "syntax": "simple",
                      },
                      EncapsedPart {
                        "curly": false,
                        "expression": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": " from bind_misccoltypes_tab where id = :id",
                          "unicode": false,
                          "value": " from bind_misccoltypes_tab where id = :id",
                        },
                        "kind": "encapsedpart",
                        "syntax": null,
                      },
                    ],
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "oci_parse",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "s",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\":id\\"",
                  "unicode": false,
                  "value": ":id",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "id",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "oci_bind_by_name",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "s",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "oci_execute",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "s",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "r",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "oci_fetch_all",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "r",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "check_col",
      },
      "nullable": false,
      "type": null,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\nTEST86 insert all ORATYPE values\\\\n\\"",
          "unicode": false,
          "value": "
TEST86 insert all ORATYPE values
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "insert_sql",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": Bin {
                        "kind": "bin",
                        "left": Bin {
                          "kind": "bin",
                          "left": Bin {
                            "kind": "bin",
                            "left": Bin {
                              "kind": "bin",
                              "left": Bin {
                                "kind": "bin",
                                "left": Bin {
                                  "kind": "bin",
                                  "left": Bin {
                                    "kind": "bin",
                                    "left": Bin {
                                      "kind": "bin",
                                      "left": Bin {
                                        "kind": "bin",
                                        "left": Bin {
                                          "kind": "bin",
                                          "left": Bin {
                                            "kind": "bin",
                                            "left": Bin {
                                              "kind": "bin",
                                              "left": Bin {
                                                "kind": "bin",
                                                "left": Bin {
                                                  "kind": "bin",
                                                  "left": Bin {
                                                    "kind": "bin",
                                                    "left": Bin {
                                                      "kind": "bin",
                                                      "left": Bin {
                                                        "kind": "bin",
                                                        "left": Bin {
                                                          "kind": "bin",
                                                          "left": Bin {
                                                            "kind": "bin",
                                                            "left": Bin {
                                                              "kind": "bin",
                                                              "left": Bin {
                                                                "kind": "bin",
                                                                "left": Bin {
                                                                  "kind": "bin",
                                                                  "left": Bin {
                                                                    "kind": "bin",
                                                                    "left": Bin {
                                                                      "kind": "bin",
                                                                      "left": Bin {
                                                                        "kind": "bin",
                                                                        "left": Bin {
                                                                          "kind": "bin",
                                                                          "left": String {
                                                                            "isDoubleQuote": true,
                                                                            "kind": "string",
                                                                            "raw": "\\"INSERT INTO bind_misccoltypes_tab ( id, \\"",
                                                                            "unicode": false,
                                                                            "value": "INSERT INTO bind_misccoltypes_tab ( id, ",
                                                                          },
                                                                          "right": String {
                                                                            "isDoubleQuote": true,
                                                                            "kind": "string",
                                                                            "raw": "\\"   char_t, \\"",
                                                                            "unicode": false,
                                                                            "value": "   char_t, ",
                                                                          },
                                                                          "type": ".",
                                                                        },
                                                                        "right": String {
                                                                          "isDoubleQuote": true,
                                                                          "kind": "string",
                                                                          "raw": "\\"   char_t10, \\"",
                                                                          "unicode": false,
                                                                          "value": "   char_t10, ",
                                                                        },
                                                                        "type": ".",
                                                                      },
                                                                      "right": String {
                                                                        "isDoubleQuote": true,
                                                                        "kind": "string",
                                                                        "raw": "\\"   varchar2_t10, \\"",
                                                                        "unicode": false,
                                                                        "value": "   varchar2_t10, ",
                                                                      },
                                                                      "type": ".",
                                                                    },
                                                                    "right": String {
                                                                      "isDoubleQuote": true,
                                                                      "kind": "string",
                                                                      "raw": "\\"   number_t, \\"",
                                                                      "unicode": false,
                                                                      "value": "   number_t, ",
                                                                    },
                                                                    "type": ".",
                                                                  },
                                                                  "right": String {
                                                                    "isDoubleQuote": true,
                                                                    "kind": "string",
                                                                    "raw": "\\"   number_t92, \\"",
                                                                    "unicode": false,
                                                                    "value": "   number_t92, ",
                                                                  },
                                                                  "type": ".",
                                                                },
                                                                "right": String {
                                                                  "isDoubleQuote": true,
                                                                  "kind": "string",
                                                                  "raw": "\\"   number_t6, \\"",
                                                                  "unicode": false,
                                                                  "value": "   number_t6, ",
                                                                },
                                                                "type": ".",
                                                              },
                                                              "right": String {
                                                                "isDoubleQuote": true,
                                                                "kind": "string",
                                                                "raw": "\\"   date_t, \\"",
                                                                "unicode": false,
                                                                "value": "   date_t, ",
                                                              },
                                                              "type": ".",
                                                            },
                                                            "right": String {
                                                              "isDoubleQuote": true,
                                                              "kind": "string",
                                                              "raw": "\\"   timestamp_t, \\"",
                                                              "unicode": false,
                                                              "value": "   timestamp_t, ",
                                                            },
                                                            "type": ".",
                                                          },
                                                          "right": String {
                                                            "isDoubleQuote": true,
                                                            "kind": "string",
                                                            "raw": "\\"   float_t, \\"",
                                                            "unicode": false,
                                                            "value": "   float_t, ",
                                                          },
                                                          "type": ".",
                                                        },
                                                        "right": String {
                                                          "isDoubleQuote": true,
                                                          "kind": "string",
                                                          "raw": "\\"   binary_float_t, \\"",
                                                          "unicode": false,
                                                          "value": "   binary_float_t, ",
                                                        },
                                                        "type": ".",
                                                      },
                                                      "right": String {
                                                        "isDoubleQuote": true,
                                                        "kind": "string",
                                                        "raw": "\\"   binary_double_t, \\"",
                                                        "unicode": false,
                                                        "value": "   binary_double_t, ",
                                                      },
                                                      "type": ".",
                                                    },
                                                    "right": String {
                                                      "isDoubleQuote": true,
                                                      "kind": "string",
                                                      "raw": "\\"   decimal_t, \\"",
                                                      "unicode": false,
                                                      "value": "   decimal_t, ",
                                                    },
                                                    "type": ".",
                                                  },
                                                  "right": String {
                                                    "isDoubleQuote": true,
                                                    "kind": "string",
                                                    "raw": "\\"   integer_t, \\"",
                                                    "unicode": false,
                                                    "value": "   integer_t, ",
                                                  },
                                                  "type": ".",
                                                },
                                                "right": String {
                                                  "isDoubleQuote": true,
                                                  "kind": "string",
                                                  "raw": "\\"   nchar_t, \\"",
                                                  "unicode": false,
                                                  "value": "   nchar_t, ",
                                                },
                                                "type": ".",
                                              },
                                              "right": String {
                                                "isDoubleQuote": true,
                                                "kind": "string",
                                                "raw": "\\"   nvarchar2_t10, \\"",
                                                "unicode": false,
                                                "value": "   nvarchar2_t10, ",
                                              },
                                              "type": ".",
                                            },
                                            "right": String {
                                              "isDoubleQuote": true,
                                              "kind": "string",
                                              "raw": "\\"   varchar_t10) \\"",
                                              "unicode": false,
                                              "value": "   varchar_t10) ",
                                            },
                                            "type": ".",
                                          },
                                          "right": String {
                                            "isDoubleQuote": true,
                                            "kind": "string",
                                            "raw": "\\" VALUES (:n1, \\"",
                                            "unicode": false,
                                            "value": " VALUES (:n1, ",
                                          },
                                          "type": ".",
                                        },
                                        "right": String {
                                          "isDoubleQuote": true,
                                          "kind": "string",
                                          "raw": "\\" :c1, \\"",
                                          "unicode": false,
                                          "value": " :c1, ",
                                        },
                                        "type": ".",
                                      },
                                      "right": String {
                                        "isDoubleQuote": true,
                                        "kind": "string",
                                        "raw": "\\" :c2, \\"",
                                        "unicode": false,
                                        "value": " :c2, ",
                                      },
                                      "type": ".",
                                    },
                                    "right": String {
                                      "isDoubleQuote": true,
                                      "kind": "string",
                                      "raw": "\\" :c3, \\"",
                                      "unicode": false,
                                      "value": " :c3, ",
                                    },
                                    "type": ".",
                                  },
                                  "right": String {
                                    "isDoubleQuote": true,
                                    "kind": "string",
                                    "raw": "\\" :n2, \\"",
                                    "unicode": false,
                                    "value": " :n2, ",
                                  },
                                  "type": ".",
                                },
                                "right": String {
                                  "isDoubleQuote": true,
                                  "kind": "string",
                                  "raw": "\\" :n3, \\"",
                                  "unicode": false,
                                  "value": " :n3, ",
                                },
                                "type": ".",
                              },
                              "right": String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\" :n4, \\"",
                                "unicode": false,
                                "value": " :n4, ",
                              },
                              "type": ".",
                            },
                            "right": String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\" to_date(:d1, 'YYYY-MM-DD HH24:MI:SS'), \\"",
                              "unicode": false,
                              "value": " to_date(:d1, 'YYYY-MM-DD HH24:MI:SS'), ",
                            },
                            "type": ".",
                          },
                          "right": String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\" to_timestamp(:d1, 'YYYY-MM-DD HH24:MI:SS'), \\"",
                            "unicode": false,
                            "value": " to_timestamp(:d1, 'YYYY-MM-DD HH24:MI:SS'), ",
                          },
                          "type": ".",
                        },
                        "right": String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\" :n5, \\"",
                          "unicode": false,
                          "value": " :n5, ",
                        },
                        "type": ".",
                      },
                      "right": String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\" :n5, \\"",
                        "unicode": false,
                        "value": " :n5, ",
                      },
                      "type": ".",
                    },
                    "right": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\" :n5, \\"",
                      "unicode": false,
                      "value": " :n5, ",
                    },
                    "type": ".",
                  },
                  "right": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\" :n1, \\"",
                    "unicode": false,
                    "value": " :n1, ",
                  },
                  "type": ".",
                },
                "right": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\" :n1, \\"",
                  "unicode": false,
                  "value": " :n1, ",
                },
                "type": ".",
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\" :c4, \\"",
                "unicode": false,
                "value": " :c4, ",
              },
              "type": ".",
            },
            "right": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\" :c5, \\"",
              "unicode": false,
              "value": " :c5, ",
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\" :c6) \\"",
            "unicode": false,
            "value": " :c6) ",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "n1",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"86\\"",
          "unicode": false,
          "value": "86",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "c1",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"C\\"",
          "unicode": false,
          "value": "C",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "c2",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"char10\\"",
          "unicode": false,
          "value": "char10",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "c3",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"varchar210\\"",
          "unicode": false,
          "value": "varchar210",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "n2",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"-123.456\\"",
          "unicode": false,
          "value": "-123.456",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "n3",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"789.346\\"",
          "unicode": false,
          "value": "789.346",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "n4",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"123456.023\\"",
          "unicode": false,
          "value": "123456.023",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "n5",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"12345678901234567890123456789012345678.723\\"",
          "unicode": false,
          "value": "12345678901234567890123456789012345678.723",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "d1",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"2010-03-29 13:09:15\\"",
          "unicode": false,
          "value": "2010-03-29 13:09:15",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "c4",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"nchar10\\"",
          "unicode": false,
          "value": "nchar10",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "c5",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"nvarchar2x\\"",
          "unicode": false,
          "value": "nvarchar2x",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "c6",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"varchar\\"",
          "unicode": false,
          "value": "varchar",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "s",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "c",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "insert_sql",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "oci_parse",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\":n1\\"",
            "unicode": false,
            "value": ":n1",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "n1",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_bind_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\":c1\\"",
            "unicode": false,
            "value": ":c1",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "c1",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_bind_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\":c2\\"",
            "unicode": false,
            "value": ":c2",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "c2",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_bind_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\":c3\\"",
            "unicode": false,
            "value": ":c3",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "c3",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_bind_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\":n2\\"",
            "unicode": false,
            "value": ":n2",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "n2",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_bind_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\":n3\\"",
            "unicode": false,
            "value": ":n3",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "n3",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_bind_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\":n4\\"",
            "unicode": false,
            "value": ":n4",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "n4",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_bind_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\":d1\\"",
            "unicode": false,
            "value": ":d1",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "d1",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_bind_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\":n5\\"",
            "unicode": false,
            "value": ":n5",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "n5",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_bind_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\":c4\\"",
            "unicode": false,
            "value": ":c4",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "c4",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_bind_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\":c5\\"",
            "unicode": false,
            "value": ":c5",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "c5",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_bind_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\":c6\\"",
            "unicode": false,
            "value": ":c6",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "c6",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_bind_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_execute",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\nTEST87 SELECT all values using DEFINEs\\\\n\\"",
          "unicode": false,
          "value": "
TEST87 SELECT all values using DEFINEs
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "select_sql",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": Bin {
                        "kind": "bin",
                        "left": Bin {
                          "kind": "bin",
                          "left": Bin {
                            "kind": "bin",
                            "left": Bin {
                              "kind": "bin",
                              "left": Bin {
                                "kind": "bin",
                                "left": Bin {
                                  "kind": "bin",
                                  "left": Bin {
                                    "kind": "bin",
                                    "left": Bin {
                                      "kind": "bin",
                                      "left": Bin {
                                        "kind": "bin",
                                        "left": Bin {
                                          "kind": "bin",
                                          "left": Bin {
                                            "kind": "bin",
                                            "left": String {
                                              "isDoubleQuote": true,
                                              "kind": "string",
                                              "raw": "\\"select \\"",
                                              "unicode": false,
                                              "value": "select ",
                                            },
                                            "right": String {
                                              "isDoubleQuote": true,
                                              "kind": "string",
                                              "raw": "\\"id, \\"",
                                              "unicode": false,
                                              "value": "id, ",
                                            },
                                            "type": ".",
                                          },
                                          "right": String {
                                            "isDoubleQuote": true,
                                            "kind": "string",
                                            "raw": "\\"char_t, \\"",
                                            "unicode": false,
                                            "value": "char_t, ",
                                          },
                                          "type": ".",
                                        },
                                        "right": String {
                                          "isDoubleQuote": true,
                                          "kind": "string",
                                          "raw": "\\"char_t10, \\"",
                                          "unicode": false,
                                          "value": "char_t10, ",
                                        },
                                        "type": ".",
                                      },
                                      "right": String {
                                        "isDoubleQuote": true,
                                        "kind": "string",
                                        "raw": "\\"varchar2_t10, \\"",
                                        "unicode": false,
                                        "value": "varchar2_t10, ",
                                      },
                                      "type": ".",
                                    },
                                    "right": String {
                                      "isDoubleQuote": true,
                                      "kind": "string",
                                      "raw": "\\"number_t, \\"",
                                      "unicode": false,
                                      "value": "number_t, ",
                                    },
                                    "type": ".",
                                  },
                                  "right": String {
                                    "isDoubleQuote": true,
                                    "kind": "string",
                                    "raw": "\\"number_t92, \\"",
                                    "unicode": false,
                                    "value": "number_t92, ",
                                  },
                                  "type": ".",
                                },
                                "right": String {
                                  "isDoubleQuote": true,
                                  "kind": "string",
                                  "raw": "\\"number_t6, \\"",
                                  "unicode": false,
                                  "value": "number_t6, ",
                                },
                                "type": ".",
                              },
                              "right": String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"date_t, \\"",
                                "unicode": false,
                                "value": "date_t, ",
                              },
                              "type": ".",
                            },
                            "right": String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"timestamp_t, \\"",
                              "unicode": false,
                              "value": "timestamp_t, ",
                            },
                            "type": ".",
                          },
                          "right": String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"float_t, \\"",
                            "unicode": false,
                            "value": "float_t, ",
                          },
                          "type": ".",
                        },
                        "right": String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"binary_float_t, \\"",
                          "unicode": false,
                          "value": "binary_float_t, ",
                        },
                        "type": ".",
                      },
                      "right": String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"binary_double_t, \\"",
                        "unicode": false,
                        "value": "binary_double_t, ",
                      },
                      "type": ".",
                    },
                    "right": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"decimal_t, \\"",
                      "unicode": false,
                      "value": "decimal_t, ",
                    },
                    "type": ".",
                  },
                  "right": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"integer_t, \\"",
                    "unicode": false,
                    "value": "integer_t, ",
                  },
                  "type": ".",
                },
                "right": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"nchar_t, \\"",
                  "unicode": false,
                  "value": "nchar_t, ",
                },
                "type": ".",
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"nvarchar2_t10, \\"",
                "unicode": false,
                "value": "nvarchar2_t10, ",
              },
              "type": ".",
            },
            "right": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"varchar_t10 \\"",
              "unicode": false,
              "value": "varchar_t10 ",
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"from bind_misccoltypes_tab where id = 86\\"",
            "unicode": false,
            "value": "from bind_misccoltypes_tab where id = 86",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "s",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "c",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "select_sql",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "oci_parse",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"ID\\"",
            "unicode": false,
            "value": "ID",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "ID",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_define_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"CHAR_T\\"",
            "unicode": false,
            "value": "CHAR_T",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "CHAR_T",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_define_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"CHAR_T10\\"",
            "unicode": false,
            "value": "CHAR_T10",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "CHAR_T10",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_define_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"VARCHAR2_T10\\"",
            "unicode": false,
            "value": "VARCHAR2_T10",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "VARCHAR2_T10",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_define_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"NUMBER_T\\"",
            "unicode": false,
            "value": "NUMBER_T",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "NUMBER_T",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_define_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"NUMBER_T92\\"",
            "unicode": false,
            "value": "NUMBER_T92",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "NUMBER_T92",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_define_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"NUMBER_T6\\"",
            "unicode": false,
            "value": "NUMBER_T6",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "NUMBER_T6",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_define_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"DATE_T\\"",
            "unicode": false,
            "value": "DATE_T",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "DATE_T",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_define_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"TIMESTAMP_T\\"",
            "unicode": false,
            "value": "TIMESTAMP_T",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "TIMESTAMP_T",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_define_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"FLOAT_T\\"",
            "unicode": false,
            "value": "FLOAT_T",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "FLOAT_T",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_define_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"BINARY_FLOAT_T\\"",
            "unicode": false,
            "value": "BINARY_FLOAT_T",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "BINARY_FLOAT_T",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_define_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"BINARY_DOUBLE_T\\"",
            "unicode": false,
            "value": "BINARY_DOUBLE_T",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "BINARY_DOUBLE_T",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_define_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"DECIMAL_T\\"",
            "unicode": false,
            "value": "DECIMAL_T",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "DECIMAL_T",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_define_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"INTEGER_T\\"",
            "unicode": false,
            "value": "INTEGER_T",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "INTEGER_T",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_define_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"NCHAR_T\\"",
            "unicode": false,
            "value": "NCHAR_T",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "NCHAR_T",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_define_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"NVARCHAR2_T10\\"",
            "unicode": false,
            "value": "NVARCHAR2_T10",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "NVARCHAR2_T10",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_define_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"VARCHAR_T10\\"",
            "unicode": false,
            "value": "VARCHAR_T10",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "VARCHAR_T10",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_define_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_execute",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    While {
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"ID is \\"",
                  "unicode": false,
                  "value": "ID is ",
                },
                "right": Encapsed {
                  "kind": "encapsed",
                  "raw": "\\"$ID\\\\n\\"",
                  "type": "string",
                  "value": Array [
                    EncapsedPart {
                      "curly": false,
                      "expression": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "ID",
                      },
                      "kind": "encapsedpart",
                      "syntax": "simple",
                    },
                    EncapsedPart {
                      "curly": false,
                      "expression": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "\\\\n",
                        "unicode": false,
                        "value": "",
                      },
                      "kind": "encapsedpart",
                      "syntax": null,
                    },
                  ],
                },
                "type": ".",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          Echo {
            "expressions": Array [
              Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"CHAR_T is \\"",
                  "unicode": false,
                  "value": "CHAR_T is ",
                },
                "right": Encapsed {
                  "kind": "encapsed",
                  "raw": "\\"$CHAR_T\\\\n\\"",
                  "type": "string",
                  "value": Array [
                    EncapsedPart {
                      "curly": false,
                      "expression": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "CHAR_T",
                      },
                      "kind": "encapsedpart",
                      "syntax": "simple",
                    },
                    EncapsedPart {
                      "curly": false,
                      "expression": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "\\\\n",
                        "unicode": false,
                        "value": "",
                      },
                      "kind": "encapsedpart",
                      "syntax": null,
                    },
                  ],
                },
                "type": ".",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          Echo {
            "expressions": Array [
              Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"CHAR_T10 is \\"",
                  "unicode": false,
                  "value": "CHAR_T10 is ",
                },
                "right": Encapsed {
                  "kind": "encapsed",
                  "raw": "\\"$CHAR_T10\\\\n\\"",
                  "type": "string",
                  "value": Array [
                    EncapsedPart {
                      "curly": false,
                      "expression": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "CHAR_T10",
                      },
                      "kind": "encapsedpart",
                      "syntax": "simple",
                    },
                    EncapsedPart {
                      "curly": false,
                      "expression": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "\\\\n",
                        "unicode": false,
                        "value": "",
                      },
                      "kind": "encapsedpart",
                      "syntax": null,
                    },
                  ],
                },
                "type": ".",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          Echo {
            "expressions": Array [
              Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"VARCHAR2_T10 is \\"",
                  "unicode": false,
                  "value": "VARCHAR2_T10 is ",
                },
                "right": Encapsed {
                  "kind": "encapsed",
                  "raw": "\\"$VARCHAR2_T10\\\\n\\"",
                  "type": "string",
                  "value": Array [
                    EncapsedPart {
                      "curly": false,
                      "expression": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "VARCHAR2_T10",
                      },
                      "kind": "encapsedpart",
                      "syntax": "simple",
                    },
                    EncapsedPart {
                      "curly": false,
                      "expression": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "\\\\n",
                        "unicode": false,
                        "value": "",
                      },
                      "kind": "encapsedpart",
                      "syntax": null,
                    },
                  ],
                },
                "type": ".",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          Echo {
            "expressions": Array [
              Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"NUMBER_T is \\"",
                  "unicode": false,
                  "value": "NUMBER_T is ",
                },
                "right": Encapsed {
                  "kind": "encapsed",
                  "raw": "\\"$NUMBER_T\\\\n\\"",
                  "type": "string",
                  "value": Array [
                    EncapsedPart {
                      "curly": false,
                      "expression": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "NUMBER_T",
                      },
                      "kind": "encapsedpart",
                      "syntax": "simple",
                    },
                    EncapsedPart {
                      "curly": false,
                      "expression": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "\\\\n",
                        "unicode": false,
                        "value": "",
                      },
                      "kind": "encapsedpart",
                      "syntax": null,
                    },
                  ],
                },
                "type": ".",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          Echo {
            "expressions": Array [
              Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"NUMBER_T92 is \\"",
                  "unicode": false,
                  "value": "NUMBER_T92 is ",
                },
                "right": Encapsed {
                  "kind": "encapsed",
                  "raw": "\\"$NUMBER_T92\\\\n\\"",
                  "type": "string",
                  "value": Array [
                    EncapsedPart {
                      "curly": false,
                      "expression": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "NUMBER_T92",
                      },
                      "kind": "encapsedpart",
                      "syntax": "simple",
                    },
                    EncapsedPart {
                      "curly": false,
                      "expression": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "\\\\n",
                        "unicode": false,
                        "value": "",
                      },
                      "kind": "encapsedpart",
                      "syntax": null,
                    },
                  ],
                },
                "type": ".",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          Echo {
            "expressions": Array [
              Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"NUMBER_T6 is \\"",
                  "unicode": false,
                  "value": "NUMBER_T6 is ",
                },
                "right": Encapsed {
                  "kind": "encapsed",
                  "raw": "\\"$NUMBER_T6\\\\n\\"",
                  "type": "string",
                  "value": Array [
                    EncapsedPart {
                      "curly": false,
                      "expression": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "NUMBER_T6",
                      },
                      "kind": "encapsedpart",
                      "syntax": "simple",
                    },
                    EncapsedPart {
                      "curly": false,
                      "expression": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "\\\\n",
                        "unicode": false,
                        "value": "",
                      },
                      "kind": "encapsedpart",
                      "syntax": null,
                    },
                  ],
                },
                "type": ".",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          Echo {
            "expressions": Array [
              Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"DATE_T is \\"",
                  "unicode": false,
                  "value": "DATE_T is ",
                },
                "right": Encapsed {
                  "kind": "encapsed",
                  "raw": "\\"$DATE_T\\\\n\\"",
                  "type": "string",
                  "value": Array [
                    EncapsedPart {
                      "curly": false,
                      "expression": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "DATE_T",
                      },
                      "kind": "encapsedpart",
                      "syntax": "simple",
                    },
                    EncapsedPart {
                      "curly": false,
                      "expression": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "\\\\n",
                        "unicode": false,
                        "value": "",
                      },
                      "kind": "encapsedpart",
                      "syntax": null,
                    },
                  ],
                },
                "type": ".",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          Echo {
            "expressions": Array [
              Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"TIMESTAMP_T is \\"",
                  "unicode": false,
                  "value": "TIMESTAMP_T is ",
                },
                "right": Encapsed {
                  "kind": "encapsed",
                  "raw": "\\"$TIMESTAMP_T\\\\n\\"",
                  "type": "string",
                  "value": Array [
                    EncapsedPart {
                      "curly": false,
                      "expression": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "TIMESTAMP_T",
                      },
                      "kind": "encapsedpart",
                      "syntax": "simple",
                    },
                    EncapsedPart {
                      "curly": false,
                      "expression": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "\\\\n",
                        "unicode": false,
                        "value": "",
                      },
                      "kind": "encapsedpart",
                      "syntax": null,
                    },
                  ],
                },
                "type": ".",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          Echo {
            "expressions": Array [
              Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"FLOAT_T is \\"",
                  "unicode": false,
                  "value": "FLOAT_T is ",
                },
                "right": Encapsed {
                  "kind": "encapsed",
                  "raw": "\\"$FLOAT_T\\\\n\\"",
                  "type": "string",
                  "value": Array [
                    EncapsedPart {
                      "curly": false,
                      "expression": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "FLOAT_T",
                      },
                      "kind": "encapsedpart",
                      "syntax": "simple",
                    },
                    EncapsedPart {
                      "curly": false,
                      "expression": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "\\\\n",
                        "unicode": false,
                        "value": "",
                      },
                      "kind": "encapsedpart",
                      "syntax": null,
                    },
                  ],
                },
                "type": ".",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          Echo {
            "expressions": Array [
              Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"BINARY_FLOAT_T is \\"",
                  "unicode": false,
                  "value": "BINARY_FLOAT_T is ",
                },
                "right": Encapsed {
                  "kind": "encapsed",
                  "raw": "\\"$BINARY_FLOAT_T\\\\n\\"",
                  "type": "string",
                  "value": Array [
                    EncapsedPart {
                      "curly": false,
                      "expression": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "BINARY_FLOAT_T",
                      },
                      "kind": "encapsedpart",
                      "syntax": "simple",
                    },
                    EncapsedPart {
                      "curly": false,
                      "expression": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "\\\\n",
                        "unicode": false,
                        "value": "",
                      },
                      "kind": "encapsedpart",
                      "syntax": null,
                    },
                  ],
                },
                "type": ".",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          Echo {
            "expressions": Array [
              Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"BINARY_DOUBLE_T is \\"",
                  "unicode": false,
                  "value": "BINARY_DOUBLE_T is ",
                },
                "right": Encapsed {
                  "kind": "encapsed",
                  "raw": "\\"$BINARY_DOUBLE_T\\\\n\\"",
                  "type": "string",
                  "value": Array [
                    EncapsedPart {
                      "curly": false,
                      "expression": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "BINARY_DOUBLE_T",
                      },
                      "kind": "encapsedpart",
                      "syntax": "simple",
                    },
                    EncapsedPart {
                      "curly": false,
                      "expression": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "\\\\n",
                        "unicode": false,
                        "value": "",
                      },
                      "kind": "encapsedpart",
                      "syntax": null,
                    },
                  ],
                },
                "type": ".",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          Echo {
            "expressions": Array [
              Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"DECIMAL_T is \\"",
                  "unicode": false,
                  "value": "DECIMAL_T is ",
                },
                "right": Encapsed {
                  "kind": "encapsed",
                  "raw": "\\"$DECIMAL_T\\\\n\\"",
                  "type": "string",
                  "value": Array [
                    EncapsedPart {
                      "curly": false,
                      "expression": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "DECIMAL_T",
                      },
                      "kind": "encapsedpart",
                      "syntax": "simple",
                    },
                    EncapsedPart {
                      "curly": false,
                      "expression": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "\\\\n",
                        "unicode": false,
                        "value": "",
                      },
                      "kind": "encapsedpart",
                      "syntax": null,
                    },
                  ],
                },
                "type": ".",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          Echo {
            "expressions": Array [
              Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"INTEGER_T is \\"",
                  "unicode": false,
                  "value": "INTEGER_T is ",
                },
                "right": Encapsed {
                  "kind": "encapsed",
                  "raw": "\\"$INTEGER_T\\\\n\\"",
                  "type": "string",
                  "value": Array [
                    EncapsedPart {
                      "curly": false,
                      "expression": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "INTEGER_T",
                      },
                      "kind": "encapsedpart",
                      "syntax": "simple",
                    },
                    EncapsedPart {
                      "curly": false,
                      "expression": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "\\\\n",
                        "unicode": false,
                        "value": "",
                      },
                      "kind": "encapsedpart",
                      "syntax": null,
                    },
                  ],
                },
                "type": ".",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          Echo {
            "expressions": Array [
              Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"NCHAR_T is \\"",
                  "unicode": false,
                  "value": "NCHAR_T is ",
                },
                "right": Encapsed {
                  "kind": "encapsed",
                  "raw": "\\"$NCHAR_T\\\\n\\"",
                  "type": "string",
                  "value": Array [
                    EncapsedPart {
                      "curly": false,
                      "expression": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "NCHAR_T",
                      },
                      "kind": "encapsedpart",
                      "syntax": "simple",
                    },
                    EncapsedPart {
                      "curly": false,
                      "expression": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "\\\\n",
                        "unicode": false,
                        "value": "",
                      },
                      "kind": "encapsedpart",
                      "syntax": null,
                    },
                  ],
                },
                "type": ".",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          Echo {
            "expressions": Array [
              Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"NVARCHAR2_T10 is \\"",
                  "unicode": false,
                  "value": "NVARCHAR2_T10 is ",
                },
                "right": Encapsed {
                  "kind": "encapsed",
                  "raw": "\\"$NVARCHAR2_T10\\\\n\\"",
                  "type": "string",
                  "value": Array [
                    EncapsedPart {
                      "curly": false,
                      "expression": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "NVARCHAR2_T10",
                      },
                      "kind": "encapsedpart",
                      "syntax": "simple",
                    },
                    EncapsedPart {
                      "curly": false,
                      "expression": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "\\\\n",
                        "unicode": false,
                        "value": "",
                      },
                      "kind": "encapsedpart",
                      "syntax": null,
                    },
                  ],
                },
                "type": ".",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          Echo {
            "expressions": Array [
              Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"VARCHAR_T10 is \\"",
                  "unicode": false,
                  "value": "VARCHAR_T10 is ",
                },
                "right": Encapsed {
                  "kind": "encapsed",
                  "raw": "\\"$VARCHAR_T10\\\\n\\"",
                  "type": "string",
                  "value": Array [
                    EncapsedPart {
                      "curly": false,
                      "expression": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "VARCHAR_T10",
                      },
                      "kind": "encapsedpart",
                      "syntax": "simple",
                    },
                    EncapsedPart {
                      "curly": false,
                      "expression": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "\\\\n",
                        "unicode": false,
                        "value": "",
                      },
                      "kind": "encapsedpart",
                      "syntax": null,
                    },
                  ],
                },
                "type": ".",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "kind": "while",
      "shortForm": false,
      "test": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_fetch",
          "resolution": "uqn",
        },
      },
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\nTEST52 insert numbers\\\\n\\"",
          "unicode": false,
          "value": "
TEST52 insert numbers
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "s",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "c",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"INSERT INTO bind_misccoltypes_tab (id, number_t92) VALUES (52, :n1)\\"",
              "unicode": false,
              "value": "INSERT INTO bind_misccoltypes_tab (id, number_t92) VALUES (52, :n1)",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "oci_parse",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "n1",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "3",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\":n1\\"",
            "unicode": false,
            "value": ":n1",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "n1",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_bind_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_execute",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "c",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'number_t92'",
            "unicode": false,
            "value": "number_t92",
          },
          Number {
            "kind": "number",
            "value": "52",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "check_col",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\nTEST53 insert numbers \\\\n\\"",
          "unicode": false,
          "value": "
TEST53 insert numbers 
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "s",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "c",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"INSERT INTO bind_misccoltypes_tab (id, number_t92) VALUES (53, :n1)\\"",
              "unicode": false,
              "value": "INSERT INTO bind_misccoltypes_tab (id, number_t92) VALUES (53, :n1)",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "oci_parse",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "n1",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "8.67",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\":n1\\"",
            "unicode": false,
            "value": ":n1",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "n1",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_bind_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_execute",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "c",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'number_t92'",
            "unicode": false,
            "value": "number_t92",
          },
          Number {
            "kind": "number",
            "value": "53",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "check_col",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\nTEST54 insert numbers \\\\n\\"",
          "unicode": false,
          "value": "
TEST54 insert numbers 
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "s",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "c",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"INSERT INTO bind_misccoltypes_tab (id, number_t) VALUES (54, :n1)\\"",
              "unicode": false,
              "value": "INSERT INTO bind_misccoltypes_tab (id, number_t) VALUES (54, :n1)",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "oci_parse",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "n1",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "4.67",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\":n1\\"",
            "unicode": false,
            "value": ":n1",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "n1",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_bind_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_execute",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "c",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'number_t'",
            "unicode": false,
            "value": "number_t",
          },
          Number {
            "kind": "number",
            "value": "54",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "check_col",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\nTEST55 insert numbers \\\\n\\"",
          "unicode": false,
          "value": "
TEST55 insert numbers 
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "s",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "c",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"INSERT INTO bind_misccoltypes_tab (id, number_t) VALUES (55, :n1)\\"",
              "unicode": false,
              "value": "INSERT INTO bind_misccoltypes_tab (id, number_t) VALUES (55, :n1)",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "oci_parse",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "n1",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"7.67\\"",
          "unicode": false,
          "value": "7.67",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\":n1\\"",
            "unicode": false,
            "value": ":n1",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "n1",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_bind_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_execute",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "c",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'number_t'",
            "unicode": false,
            "value": "number_t",
          },
          Number {
            "kind": "number",
            "value": "55",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "check_col",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\nTEST56 insert numbers \\\\n\\"",
          "unicode": false,
          "value": "
TEST56 insert numbers 
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "n1",
        },
        "operator": "=",
        "right": Unary {
          "kind": "unary",
          "type": "-",
          "what": Number {
            "kind": "number",
            "value": "5.67",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "s",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "c",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"INSERT INTO bind_misccoltypes_tab (id, number_t) VALUES (56, :n1)\\"",
              "unicode": false,
              "value": "INSERT INTO bind_misccoltypes_tab (id, number_t) VALUES (56, :n1)",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "oci_parse",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\":n1\\"",
            "unicode": false,
            "value": ":n1",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "n1",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_bind_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_execute",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "c",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'number_t'",
            "unicode": false,
            "value": "number_t",
          },
          Number {
            "kind": "number",
            "value": "56",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "check_col",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\nTEST58 insert a VARCHAR2\\\\n\\"",
          "unicode": false,
          "value": "
TEST58 insert a VARCHAR2
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "s",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "c",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"INSERT INTO bind_misccoltypes_tab (id, varchar2_t10) VALUES (58, :c2)\\"",
              "unicode": false,
              "value": "INSERT INTO bind_misccoltypes_tab (id, varchar2_t10) VALUES (58, :c2)",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "oci_parse",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "c2",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Hood\\"",
          "unicode": false,
          "value": "Hood",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\":c2\\"",
            "unicode": false,
            "value": ":c2",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "c2",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_bind_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_execute",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "c",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'varchar2_t10'",
            "unicode": false,
            "value": "varchar2_t10",
          },
          Number {
            "kind": "number",
            "value": "58",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "check_col",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\nTEST59 insert a VARCHAR2\\\\n\\"",
          "unicode": false,
          "value": "
TEST59 insert a VARCHAR2
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "s",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "c",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"INSERT INTO bind_misccoltypes_tab (id, char_t10) VALUES (59, :c2)\\"",
              "unicode": false,
              "value": "INSERT INTO bind_misccoltypes_tab (id, char_t10) VALUES (59, :c2)",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "oci_parse",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "c2",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Hood\\"",
          "unicode": false,
          "value": "Hood",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\":c2\\"",
            "unicode": false,
            "value": ":c2",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "c2",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_bind_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_execute",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "c",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'char_t10'",
            "unicode": false,
            "value": "char_t10",
          },
          Number {
            "kind": "number",
            "value": "59",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "check_col",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\nTEST60 insert a date\\\\n\\"",
          "unicode": false,
          "value": "
TEST60 insert a date
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "s",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "c",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"INSERT INTO bind_misccoltypes_tab (id, date_t) VALUES (60, to_date(:c2, 'YYYY-MM-DD'))\\"",
              "unicode": false,
              "value": "INSERT INTO bind_misccoltypes_tab (id, date_t) VALUES (60, to_date(:c2, 'YYYY-MM-DD'))",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "oci_parse",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "c2",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'2010-04-09'",
          "unicode": false,
          "value": "2010-04-09",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\":c2\\"",
            "unicode": false,
            "value": ":c2",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "c2",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_bind_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_execute",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "c",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'date_t'",
            "unicode": false,
            "value": "date_t",
          },
          Number {
            "kind": "number",
            "value": "60",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "check_col",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "stmtarray",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"drop table bind_misccoltypes_tab\\"",
                "unicode": false,
                "value": "drop table bind_misccoltypes_tab",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "c",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "stmtarray",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci8_test_sql_execute",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "c",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_close",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
