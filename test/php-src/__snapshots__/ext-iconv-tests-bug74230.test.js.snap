// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #74230 iconv fails to fail on surrogates 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "high",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\xED\\\\xa1\\\\x92\\"",
          "unicode": false,
          "value": "í¡",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "low",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\xED\\\\xBD\\\\xA2\\"",
          "unicode": false,
          "value": "í½¢",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "pair",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "high",
          },
          "right": Variable {
            "curly": false,
            "kind": "variable",
            "name": "low",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Silent {
              "expr": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'UTF-8'",
                    "unicode": false,
                    "value": "UTF-8",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'UTF-8'",
                    "unicode": false,
                    "value": "UTF-8",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "high",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "\\\\iconv",
                  "resolution": "fqn",
                },
              },
              "kind": "silent",
            },
            "right": Boolean {
              "kind": "boolean",
              "raw": "false",
              "value": false,
            },
            "type": "===",
          },
          Bin {
            "kind": "bin",
            "left": Silent {
              "expr": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'UTF-8'",
                    "unicode": false,
                    "value": "UTF-8",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'UTF-8'",
                    "unicode": false,
                    "value": "UTF-8",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "low",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "\\\\iconv",
                  "resolution": "fqn",
                },
              },
              "kind": "silent",
            },
            "right": Boolean {
              "kind": "boolean",
              "raw": "false",
              "value": false,
            },
            "type": "===",
          },
          Bin {
            "kind": "bin",
            "left": Silent {
              "expr": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'UTF-8'",
                    "unicode": false,
                    "value": "UTF-8",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'UTF-8'",
                    "unicode": false,
                    "value": "UTF-8",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "pair",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "\\\\iconv",
                  "resolution": "fqn",
                },
              },
              "kind": "silent",
            },
            "right": Boolean {
              "kind": "boolean",
              "raw": "false",
              "value": false,
            },
            "type": "===",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
