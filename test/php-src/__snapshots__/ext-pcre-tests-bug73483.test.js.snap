// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #73483 (Segmentation fault on pcre_replace_callback) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "regex",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"#dummy#\\"",
          "unicode": false,
          "value": "#dummy#",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Name {
            "kind": "name",
            "name": "LC_ALL",
            "resolution": "uqn",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"C\\"",
            "unicode": false,
            "value": "C",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "setlocale",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "regex",
              },
              Closure {
                "arguments": Array [
                  Parameter {
                    "attrGroups": Array [],
                    "byref": false,
                    "flags": 0,
                    "kind": "parameter",
                    "name": Identifier {
                      "kind": "identifier",
                      "name": "matches",
                    },
                    "nullable": false,
                    "readonly": false,
                    "type": TypeReference {
                      "kind": "typereference",
                      "name": "array",
                      "raw": "array",
                    },
                    "value": null,
                    "variadic": false,
                  },
                ],
                "attrGroups": Array [],
                "body": Block {
                  "children": Array [
                    ExpressionStatement {
                      "expression": Call {
                        "arguments": Array [
                          Name {
                            "kind": "name",
                            "name": "LC_ALL",
                            "resolution": "uqn",
                          },
                          String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"en_US\\"",
                            "unicode": false,
                            "value": "en_US",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "setlocale",
                          "resolution": "uqn",
                        },
                      },
                      "kind": "expressionstatement",
                    },
                    ExpressionStatement {
                      "expression": Assign {
                        "kind": "assign",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "ret",
                        },
                        "operator": "=",
                        "right": Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "regex",
                            },
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"okey\\"",
                              "unicode": false,
                              "value": "okey",
                            },
                            OffsetLookup {
                              "kind": "offsetlookup",
                              "offset": Number {
                                "kind": "number",
                                "value": "0",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "matches",
                              },
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "preg_replace",
                            "resolution": "uqn",
                          },
                        },
                      },
                      "kind": "expressionstatement",
                    },
                    ExpressionStatement {
                      "expression": Call {
                        "arguments": Array [
                          Name {
                            "kind": "name",
                            "name": "LC_ALL",
                            "resolution": "uqn",
                          },
                          String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"C\\"",
                            "unicode": false,
                            "value": "C",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "setlocale",
                          "resolution": "uqn",
                        },
                      },
                      "kind": "expressionstatement",
                    },
                    Return {
                      "expr": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "ret",
                      },
                      "kind": "return",
                    },
                  ],
                  "kind": "block",
                },
                "byref": false,
                "isStatic": false,
                "kind": "closure",
                "nullable": false,
                "type": null,
                "uses": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "regex",
                  },
                ],
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"dummy\\"",
                "unicode": false,
                "value": "dummy",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "preg_replace_callback",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
