// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests call_user_func() should error on reference arguments 1`] = `
Program {
  "children": Array [
    Namespace {
      "children": Array [
        _Function {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": true,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "ref",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "ref",
                  },
                  "operator": "=",
                  "right": Number {
                    "kind": "number",
                    "value": "24",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "kind": "function",
          "name": Identifier {
            "kind": "identifier",
            "name": "bar",
          },
          "nullable": false,
          "type": null,
        },
        ExpressionStatement {
          "expression": Assign {
            "kind": "assign",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "x",
            },
            "operator": "=",
            "right": Number {
              "kind": "number",
              "value": "42",
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": AssignRef {
            "kind": "assignref",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "ref",
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "x",
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'Foo\\\\bar'",
                "unicode": false,
                "value": "Foo\\\\bar",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "x",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "\\\\call_user_func",
              "resolution": "fqn",
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "x",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "var_dump",
              "resolution": "uqn",
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Assign {
            "kind": "assign",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "y",
            },
            "operator": "=",
            "right": Number {
              "kind": "number",
              "value": "42",
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": AssignRef {
            "kind": "assignref",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "ref",
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "y",
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'Foo\\\\bar'",
                "unicode": false,
                "value": "Foo\\\\bar",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "y",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "call_user_func",
              "resolution": "uqn",
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "y",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "var_dump",
              "resolution": "uqn",
            },
          },
          "kind": "expressionstatement",
        },
      ],
      "kind": "namespace",
      "name": "Foo",
      "withBrackets": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
