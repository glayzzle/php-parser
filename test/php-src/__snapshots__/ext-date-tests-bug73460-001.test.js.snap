// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #73460 (Datetime add not realising it already applied DST change) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "date",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'2016-11-05 23:45:00'",
              "unicode": false,
              "value": "2016-11-05 23:45:00",
            },
            New {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'America/New_York'",
                  "unicode": false,
                  "value": "America/New_York",
                },
              ],
              "kind": "new",
              "what": Name {
                "kind": "name",
                "name": "DateTimeZone",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "DateTime",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'Y/m/d H:i e T'",
                    "unicode": false,
                    "value": "Y/m/d H:i e T",
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "format",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "date",
                  },
                },
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\n\\"",
                "unicode": false,
                "value": "
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                New {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'PT15M'",
                      "unicode": false,
                      "value": "PT15M",
                    },
                  ],
                  "kind": "new",
                  "what": Name {
                    "kind": "name",
                    "name": "DateInterval",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "add",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "date",
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "1",
          },
          Number {
            "kind": "number",
            "value": "20",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "range",
          "resolution": "uqn",
        },
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "i",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
