// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #69354 Incorrect use of SQLColAttributes with ODBC 3.0 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": false,
        "target": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'config.inc'",
          "unicode": false,
          "value": "config.inc",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "conn",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "dsn",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "user",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "pass",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "odbc_connect",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Silent {
        "expr": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "conn",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'CREATE DATABASE odbcTEST'",
              "unicode": false,
              "value": "CREATE DATABASE odbcTEST",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "odbc_exec",
            "resolution": "uqn",
          },
        },
        "kind": "silent",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "conn",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'CREATE TABLE FOO (ID INT, VARCHAR_COL VARCHAR(100))'",
            "unicode": false,
            "value": "CREATE TABLE FOO (ID INT, VARCHAR_COL VARCHAR(100))",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "odbc_exec",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "conn",
          },
          Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"INSERT INTO FOO(ID, VARCHAR_COL) VALUES (1, '\\"",
                "unicode": false,
                "value": "INSERT INTO FOO(ID, VARCHAR_COL) VALUES (1, '",
              },
              "right": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"a\\"",
                    "unicode": false,
                    "value": "a",
                  },
                  Number {
                    "kind": "number",
                    "value": "100",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "str_repeat",
                  "resolution": "uqn",
                },
              },
              "type": ".",
            },
            "right": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"')\\"",
              "unicode": false,
              "value": "')",
            },
            "type": ".",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "odbc_exec",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "conn",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"select VARCHAR_COL from FOO\\"",
              "unicode": false,
              "value": "select VARCHAR_COL from FOO",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "odbc_exec",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "ret",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "res",
                        },
                        String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'varchar_col'",
                          "unicode": false,
                          "value": "varchar_col",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "odbc_result",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                Echo {
                  "expressions": Array [
                    Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "ret",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "strlen",
                        "resolution": "uqn",
                      },
                    },
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"\\\\n\\"",
                      "unicode": false,
                      "value": "
",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
                Echo {
                  "expressions": Array [
                    OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": Number {
                        "kind": "number",
                        "value": "0",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "ret",
                      },
                    },
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"\\\\n\\"",
                      "unicode": false,
                      "value": "
",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
                Echo {
                  "expressions": Array [
                    OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": Bin {
                        "kind": "bin",
                        "left": Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "ret",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "strlen",
                            "resolution": "uqn",
                          },
                        },
                        "right": Number {
                          "kind": "number",
                          "value": "1",
                        },
                        "type": "-",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "ret",
                      },
                    },
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"\\\\n\\"",
                      "unicode": false,
                      "value": "
",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "res",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "odbc_fetch_row",
                "resolution": "uqn",
              },
            },
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Variable {
        "curly": false,
        "kind": "variable",
        "name": "res",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
