// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests mb_ereg_search() stuff 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "''",
            "unicode": false,
            "value": "",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mb_regex_set_options",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "encs",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'EUC-JP'",
                "unicode": false,
                "value": "EUC-JP",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'Shift_JIS'",
                "unicode": false,
                "value": "Shift_JIS",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'SJIS'",
                "unicode": false,
                "value": "SJIS",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'UTF-8'",
                "unicode": false,
                "value": "UTF-8",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "test_enc",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "str",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "look_for",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "opt",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "in_enc",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'EUC-JP'",
            "unicode": false,
            "value": "EUC-JP",
          },
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "test_enc",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mb_regex_encoding",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "str",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "str",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "test_enc",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "in_enc",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mb_convert_encoding",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "look_for",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "look_for",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "test_enc",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "in_enc",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mb_convert_encoding",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "str",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "look_for",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "opt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mb_ereg_search_init",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          While {
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "regs",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "mb_ereg_search_getregs",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "regs",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "array_shift",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"(%s) (%d) %s\\\\n\\"",
                        "unicode": false,
                        "value": "(%s) (%d) %s
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "test_enc",
                      },
                      Call {
                        "arguments": Array [],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mb_ereg_search_getpos",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          RetIf {
                            "falseExpr": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "''",
                              "unicode": false,
                              "value": "",
                            },
                            "kind": "retif",
                            "parenthesizedExpression": true,
                            "test": Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "regs",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "is_array",
                                "resolution": "uqn",
                              },
                            },
                            "trueExpr": Call {
                              "arguments": Array [
                                String {
                                  "isDoubleQuote": false,
                                  "kind": "string",
                                  "raw": "'-'",
                                  "unicode": false,
                                  "value": "-",
                                },
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "regs",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "implode",
                                "resolution": "uqn",
                              },
                            },
                          },
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "in_enc",
                          },
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "test_enc",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mb_convert_encoding",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "kind": "while",
            "shortForm": false,
            "test": Call {
              "arguments": Array [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mb_ereg_search_pos",
                "resolution": "uqn",
              },
            },
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "test_search",
      },
      "nullable": false,
      "type": null,
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "enc",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "opt",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "enc",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"�ϡ� ����\\\\n\\"",
                  "unicode": false,
                  "value": "�ϡ� ����
",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "' (��?�ϡ�?)[[:space:]]'",
                  "unicode": false,
                  "value": " (��?�ϡ�?)[[:space:]]",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "opt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_search",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "enc",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'abcde abdeabcf anvfabc odu abcd '",
                  "unicode": false,
                  "value": "abcde abdeabcf anvfabc odu abcd ",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'(ab[a-z]+)'",
                  "unicode": false,
                  "value": "(ab[a-z]+)",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "opt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_search",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "do_tests",
      },
      "nullable": false,
      "type": null,
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "enc",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "''",
                  "unicode": false,
                  "value": "",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "do_tests",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "enc",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'x'",
                  "unicode": false,
                  "value": "x",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "do_tests",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "encs",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "enc",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
