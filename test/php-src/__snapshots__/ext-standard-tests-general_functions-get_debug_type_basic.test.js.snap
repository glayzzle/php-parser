// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test get_debug_type() class reading 1`] = `
Program {
  "children": Array [
    Namespace {
      "children": Array [
        Class {
          "attrGroups": Array [],
          "body": Array [],
          "extends": null,
          "implements": null,
          "isAbstract": false,
          "isAnonymous": false,
          "isFinal": false,
          "kind": "class",
          "name": Identifier {
            "kind": "identifier",
            "name": "ClassInNamespace",
          },
        },
      ],
      "kind": "namespace",
      "name": "Demo",
      "withBrackets": true,
    },
    Namespace {
      "children": Array [
        Class {
          "attrGroups": Array [],
          "body": Array [],
          "extends": null,
          "implements": null,
          "isAbstract": false,
          "isAnonymous": false,
          "isFinal": false,
          "kind": "class",
          "name": Identifier {
            "kind": "identifier",
            "name": "ClassInGlobal",
          },
        },
        Class {
          "attrGroups": Array [],
          "body": Array [],
          "extends": null,
          "implements": null,
          "isAbstract": false,
          "isAnonymous": false,
          "isFinal": false,
          "kind": "class",
          "name": Identifier {
            "kind": "identifier",
            "name": "ToBeExtended",
          },
        },
        Interface {
          "attrGroups": Array [],
          "body": Array [],
          "extends": null,
          "kind": "interface",
          "name": Identifier {
            "kind": "identifier",
            "name": "ToBeImplemented",
          },
        },
        ExpressionStatement {
          "expression": Assign {
            "kind": "assign",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "fp",
            },
            "operator": "=",
            "right": Call {
              "arguments": Array [
                Magic {
                  "kind": "magic",
                  "raw": "__FILE__",
                  "value": "__FILE__",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'r'",
                  "unicode": false,
                  "value": "r",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "fopen",
                "resolution": "uqn",
              },
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Assign {
            "kind": "assign",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "fp_closed",
            },
            "operator": "=",
            "right": Call {
              "arguments": Array [
                Magic {
                  "kind": "magic",
                  "raw": "__FILE__",
                  "value": "__FILE__",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'r'",
                  "unicode": false,
                  "value": "r",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "fopen",
                "resolution": "uqn",
              },
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "fp_closed",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "fclose",
              "resolution": "uqn",
            },
          },
          "kind": "expressionstatement",
        },
        Echo {
          "expressions": Array [
            Bin {
              "kind": "bin",
              "left": Call {
                "arguments": Array [
                  New {
                    "arguments": Array [],
                    "kind": "new",
                    "what": Name {
                      "kind": "name",
                      "name": "ClassInGlobal",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "get_debug_type",
                  "resolution": "uqn",
                },
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\n\\"",
                "unicode": false,
                "value": "
",
              },
              "type": ".",
            },
          ],
          "kind": "echo",
          "shortForm": false,
        },
        Echo {
          "expressions": Array [
            Bin {
              "kind": "bin",
              "left": Call {
                "arguments": Array [
                  New {
                    "arguments": Array [],
                    "kind": "new",
                    "what": Name {
                      "kind": "name",
                      "name": "Demo\\\\ClassInNamespace",
                      "resolution": "qn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "get_debug_type",
                  "resolution": "uqn",
                },
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\n\\"",
                "unicode": false,
                "value": "
",
              },
              "type": ".",
            },
          ],
          "kind": "echo",
          "shortForm": false,
        },
        Echo {
          "expressions": Array [
            Bin {
              "kind": "bin",
              "left": Call {
                "arguments": Array [
                  New {
                    "arguments": Array [],
                    "kind": "new",
                    "what": Class {
                      "attrGroups": Array [],
                      "body": Array [],
                      "extends": null,
                      "implements": null,
                      "isAbstract": false,
                      "isAnonymous": true,
                      "isFinal": false,
                      "kind": "class",
                      "name": null,
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "get_debug_type",
                  "resolution": "uqn",
                },
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\n\\"",
                "unicode": false,
                "value": "
",
              },
              "type": ".",
            },
          ],
          "kind": "echo",
          "shortForm": false,
        },
        Echo {
          "expressions": Array [
            Bin {
              "kind": "bin",
              "left": Call {
                "arguments": Array [
                  New {
                    "arguments": Array [],
                    "kind": "new",
                    "what": Class {
                      "attrGroups": Array [],
                      "body": Array [],
                      "extends": Name {
                        "kind": "name",
                        "name": "ToBeExtended",
                        "resolution": "uqn",
                      },
                      "implements": null,
                      "isAbstract": false,
                      "isAnonymous": true,
                      "isFinal": false,
                      "kind": "class",
                      "name": null,
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "get_debug_type",
                  "resolution": "uqn",
                },
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\n\\"",
                "unicode": false,
                "value": "
",
              },
              "type": ".",
            },
          ],
          "kind": "echo",
          "shortForm": false,
        },
        Echo {
          "expressions": Array [
            Bin {
              "kind": "bin",
              "left": Call {
                "arguments": Array [
                  New {
                    "arguments": Array [],
                    "kind": "new",
                    "what": Class {
                      "attrGroups": Array [],
                      "body": Array [],
                      "extends": null,
                      "implements": Array [
                        Name {
                          "kind": "name",
                          "name": "ToBeImplemented",
                          "resolution": "uqn",
                        },
                      ],
                      "isAbstract": false,
                      "isAnonymous": true,
                      "isFinal": false,
                      "kind": "class",
                      "name": null,
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "get_debug_type",
                  "resolution": "uqn",
                },
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\n\\"",
                "unicode": false,
                "value": "
",
              },
              "type": ".",
            },
          ],
          "kind": "echo",
          "shortForm": false,
        },
        Echo {
          "expressions": Array [
            Bin {
              "kind": "bin",
              "left": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"foo\\"",
                    "unicode": false,
                    "value": "foo",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "get_debug_type",
                  "resolution": "uqn",
                },
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\n\\"",
                "unicode": false,
                "value": "
",
              },
              "type": ".",
            },
          ],
          "kind": "echo",
          "shortForm": false,
        },
        Echo {
          "expressions": Array [
            Bin {
              "kind": "bin",
              "left": Call {
                "arguments": Array [
                  Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "get_debug_type",
                  "resolution": "uqn",
                },
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\n\\"",
                "unicode": false,
                "value": "
",
              },
              "type": ".",
            },
          ],
          "kind": "echo",
          "shortForm": false,
        },
        Echo {
          "expressions": Array [
            Bin {
              "kind": "bin",
              "left": Call {
                "arguments": Array [
                  Boolean {
                    "kind": "boolean",
                    "raw": "true",
                    "value": true,
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "get_debug_type",
                  "resolution": "uqn",
                },
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\n\\"",
                "unicode": false,
                "value": "
",
              },
              "type": ".",
            },
          ],
          "kind": "echo",
          "shortForm": false,
        },
        Echo {
          "expressions": Array [
            Bin {
              "kind": "bin",
              "left": Call {
                "arguments": Array [
                  Number {
                    "kind": "number",
                    "value": "1",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "get_debug_type",
                  "resolution": "uqn",
                },
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\n\\"",
                "unicode": false,
                "value": "
",
              },
              "type": ".",
            },
          ],
          "kind": "echo",
          "shortForm": false,
        },
        Echo {
          "expressions": Array [
            Bin {
              "kind": "bin",
              "left": Call {
                "arguments": Array [
                  Number {
                    "kind": "number",
                    "value": "1.1",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "get_debug_type",
                  "resolution": "uqn",
                },
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\n\\"",
                "unicode": false,
                "value": "
",
              },
              "type": ".",
            },
          ],
          "kind": "echo",
          "shortForm": false,
        },
        Echo {
          "expressions": Array [
            Bin {
              "kind": "bin",
              "left": Call {
                "arguments": Array [
                  Array {
                    "items": Array [],
                    "kind": "array",
                    "shortForm": true,
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "get_debug_type",
                  "resolution": "uqn",
                },
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\n\\"",
                "unicode": false,
                "value": "
",
              },
              "type": ".",
            },
          ],
          "kind": "echo",
          "shortForm": false,
        },
        Echo {
          "expressions": Array [
            Bin {
              "kind": "bin",
              "left": Call {
                "arguments": Array [
                  NullKeyword {
                    "kind": "nullkeyword",
                    "raw": "null",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "get_debug_type",
                  "resolution": "uqn",
                },
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\n\\"",
                "unicode": false,
                "value": "
",
              },
              "type": ".",
            },
          ],
          "kind": "echo",
          "shortForm": false,
        },
        Echo {
          "expressions": Array [
            Bin {
              "kind": "bin",
              "left": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "fp",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "get_debug_type",
                  "resolution": "uqn",
                },
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\n\\"",
                "unicode": false,
                "value": "
",
              },
              "type": ".",
            },
          ],
          "kind": "echo",
          "shortForm": false,
        },
        Echo {
          "expressions": Array [
            Bin {
              "kind": "bin",
              "left": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "fp_closed",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "get_debug_type",
                  "resolution": "uqn",
                },
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\n\\"",
                "unicode": false,
                "value": "
",
              },
              "type": ".",
            },
          ],
          "kind": "echo",
          "shortForm": false,
        },
      ],
      "kind": "namespace",
      "name": Array [
        "",
      ],
      "withBrackets": true,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
