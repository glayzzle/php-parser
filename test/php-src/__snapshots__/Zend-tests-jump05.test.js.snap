// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests jump 05: goto from loop (forward) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "ar",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"1\\"",
                "unicode": false,
                "value": "1",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"2\\"",
                "unicode": false,
                "value": "2",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"3\\"",
                "unicode": false,
                "value": "3",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          Switch {
            "body": Block {
              "children": Array [
                Case {
                  "body": Block {
                    "children": Array [
                      Echo {
                        "expressions": Array [
                          String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"1: ok\\\\n\\"",
                            "unicode": false,
                            "value": "1: ok
",
                          },
                        ],
                        "kind": "echo",
                        "shortForm": false,
                      },
                      Break {
                        "kind": "break",
                        "level": null,
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "case",
                  "test": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"1\\"",
                    "unicode": false,
                    "value": "1",
                  },
                },
                Case {
                  "body": Block {
                    "children": Array [
                      Echo {
                        "expressions": Array [
                          String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"2: ok\\\\n\\"",
                            "unicode": false,
                            "value": "2: ok
",
                          },
                        ],
                        "kind": "echo",
                        "shortForm": false,
                      },
                      Goto {
                        "kind": "goto",
                        "label": Identifier {
                          "kind": "identifier",
                          "name": "L1",
                        },
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "case",
                  "test": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"2\\"",
                    "unicode": false,
                    "value": "2",
                  },
                },
                Case {
                  "body": Block {
                    "children": Array [
                      Echo {
                        "expressions": Array [
                          String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"bug\\\\n\\"",
                            "unicode": false,
                            "value": "bug
",
                          },
                        ],
                        "kind": "echo",
                        "shortForm": false,
                      },
                      Break {
                        "kind": "break",
                        "level": null,
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "case",
                  "test": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"3\\"",
                    "unicode": false,
                    "value": "3",
                  },
                },
              ],
              "kind": "block",
            },
            "kind": "switch",
            "shortForm": false,
            "test": Variable {
              "curly": false,
              "kind": "variable",
              "name": "val",
            },
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "ar",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "val",
      },
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"bug\\\\n\\"",
          "unicode": false,
          "value": "bug
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Label {
      "kind": "label",
      "name": Identifier {
        "kind": "identifier",
        "name": "L1",
      },
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"3: ok\\\\n\\"",
          "unicode": false,
          "value": "3: ok
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
