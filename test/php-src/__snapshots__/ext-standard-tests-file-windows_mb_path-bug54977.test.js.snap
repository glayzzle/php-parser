// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #54977 UTF-8 files and folder are not shown 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": false,
        "target": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Magic {
              "kind": "magic",
              "raw": "__DIR__",
              "value": "__DIR__",
            },
            "right": Name {
              "kind": "name",
              "name": "DIRECTORY_SEPARATOR",
              "resolution": "uqn",
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"util.inc\\"",
            "unicode": false,
            "value": "util.inc",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "prefix",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": Magic {
                "kind": "magic",
                "raw": "__DIR__",
                "value": "__DIR__",
              },
              "right": Name {
                "kind": "name",
                "name": "DIRECTORY_SEPARATOR",
                "resolution": "uqn",
              },
              "type": ".",
            },
            "right": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"testBug54977\\"",
              "unicode": false,
              "value": "testBug54977",
            },
            "type": ".",
          },
          "right": Name {
            "kind": "name",
            "name": "DIRECTORY_SEPARATOR",
            "resolution": "uqn",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "paths",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"多国語\\"",
                "unicode": false,
                "value": "多国語",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"王\\"",
                "unicode": false,
                "value": "王",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"汚れて掘る\\"",
                "unicode": false,
                "value": "汚れて掘る",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "prefix",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mkdir",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Bin {
                  "kind": "bin",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "prefix",
                  },
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "d",
                  },
                  "type": ".",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mkdir",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Bin {
                  "kind": "bin",
                  "left": Bin {
                    "kind": "bin",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "prefix",
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "d",
                    },
                    "type": ".",
                  },
                  "right": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\".test\\"",
                    "unicode": false,
                    "value": ".test",
                  },
                  "type": ".",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "d",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "file_put_contents",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "paths",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "d",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "myDirectory",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "prefix",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "opendir",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    While {
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              Bin {
                "kind": "bin",
                "left": Call {
                  "arguments": Array [
                    Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "prefix",
                      },
                      "right": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "entryName",
                      },
                      "type": ".",
                    },
                    Number {
                      "kind": "number",
                      "value": "65001",
                    },
                    Boolean {
                      "kind": "boolean",
                      "raw": "false",
                      "value": false,
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "get_basename_with_cp",
                    "resolution": "uqn",
                  },
                },
                "right": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"\\\\n\\"",
                  "unicode": false,
                  "value": "
",
                },
                "type": ".",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "kind": "while",
      "shortForm": false,
      "test": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "entryName",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "myDirectory",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "readdir",
            "resolution": "uqn",
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "myDirectory",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "closedir",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Bin {
                  "kind": "bin",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "prefix",
                  },
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "d",
                  },
                  "type": ".",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "rmdir",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Bin {
                  "kind": "bin",
                  "left": Bin {
                    "kind": "bin",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "prefix",
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "d",
                    },
                    "type": ".",
                  },
                  "right": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\".test\\"",
                    "unicode": false,
                    "value": ".test",
                  },
                  "type": ".",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "unlink",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "paths",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "d",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "prefix",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "rmdir",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
