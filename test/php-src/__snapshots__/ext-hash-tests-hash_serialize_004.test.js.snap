// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Hash: serialization errors 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "ctx",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"sha256\\"",
              "unicode": false,
              "value": "sha256",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "hash_init",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "__serialize",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "ctx",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "__unserialize",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "ctx",
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Call {
                    "arguments": Array [],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "getMessage",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "e",
                      },
                    },
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"\\\\n\\"",
                    "unicode": false,
                    "value": "
",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "Exception",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    Foreach {
      "body": Block {
        "children": Array [
          Try {
            "always": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "ctx",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "serial",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "base64_decode",
                            "resolution": "uqn",
                          },
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "unserialize",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                Echo {
                  "expressions": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"Unexpected success\\\\n\\"",
                      "unicode": false,
                      "value": "Unexpected success
",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
              ],
              "kind": "block",
            },
            "catches": Array [
              Catch {
                "body": Block {
                  "children": Array [
                    Echo {
                      "expressions": Array [
                        Call {
                          "arguments": Array [],
                          "kind": "call",
                          "what": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "getMessage",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "e",
                            },
                          },
                        },
                        String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"\\\\n\\"",
                          "unicode": false,
                          "value": "
",
                        },
                      ],
                      "kind": "echo",
                      "shortForm": false,
                    },
                  ],
                  "kind": "block",
                },
                "kind": "catch",
                "variable": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "e",
                },
                "what": Array [
                  Name {
                    "kind": "name",
                    "name": "Exception",
                    "resolution": "uqn",
                  },
                ],
              },
            ],
            "kind": "try",
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Array {
        "items": Array [
          Entry {
            "byRef": false,
            "key": null,
            "kind": "entry",
            "unpack": false,
            "value": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"TzoxMToiSGFzaENvbnRleHQiOjA6e30=\\"",
              "unicode": false,
              "value": "TzoxMToiSGFzaENvbnRleHQiOjA6e30=",
            },
          },
          Entry {
            "byRef": false,
            "key": null,
            "kind": "entry",
            "unpack": false,
            "value": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"TzoxMToiSGFzaENvbnRleHQiOjU6e2k6MDtpOjE7aToxO2k6MDtpOjI7YTo4OntpOjA7aToxNzMyNTg0MTkzO2k6MTtpOi0yNzE3MzM4Nzk7aToyO2k6LTE3MzI1ODQxOTQ7aTozO2k6MjcxNzMzODc4O2k6NDtpOi0xMDA5NTg5Nzc2O2k6NTtpOjIwMDtpOjY7aTowO2k6NztzOjY0OiJJIGNhbid0IHJlbWVtYmVyIGFueXRoaW5nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIjt9aTozO2k6MjtpOjQ7YTowOnt9fQ==\\"",
              "unicode": false,
              "value": "TzoxMToiSGFzaENvbnRleHQiOjU6e2k6MDtpOjE7aToxO2k6MDtpOjI7YTo4OntpOjA7aToxNzMyNTg0MTkzO2k6MTtpOi0yNzE3MzM4Nzk7aToyO2k6LTE3MzI1ODQxOTQ7aTozO2k6MjcxNzMzODc4O2k6NDtpOi0xMDA5NTg5Nzc2O2k6NTtpOjIwMDtpOjY7aTowO2k6NztzOjY0OiJJIGNhbid0IHJlbWVtYmVyIGFueXRoaW5nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIjt9aTozO2k6MjtpOjQ7YTowOnt9fQ==",
            },
          },
          Entry {
            "byRef": false,
            "key": null,
            "kind": "entry",
            "unpack": false,
            "value": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"TzoxMToiSGFzaENvbnRleHQiOjU6e2k6MDtzOjQ6InNoYTEiO2k6MTtzOjA6IiI7aToyO2E6ODp7aTowO2k6MTczMjU4NDE5MztpOjE7aTotMjcxNzMzODc5O2k6MjtpOi0xNzMyNTg0MTk0O2k6MztpOjI3MTczMzg3ODtpOjQ7aTotMTAwOTU4OTc3NjtpOjU7aToyMDA7aTo2O2k6MDtpOjc7czo2NDoiSSBjYW4ndCByZW1lbWJlciBhbnl0aGluZwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACI7fWk6MztpOjI7aTo0O2E6MDp7fX0=\\"",
              "unicode": false,
              "value": "TzoxMToiSGFzaENvbnRleHQiOjU6e2k6MDtzOjQ6InNoYTEiO2k6MTtzOjA6IiI7aToyO2E6ODp7aTowO2k6MTczMjU4NDE5MztpOjE7aTotMjcxNzMzODc5O2k6MjtpOi0xNzMyNTg0MTk0O2k6MztpOjI3MTczMzg3ODtpOjQ7aTotMTAwOTU4OTc3NjtpOjU7aToyMDA7aTo2O2k6MDtpOjc7czo2NDoiSSBjYW4ndCByZW1lbWJlciBhbnl0aGluZwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACI7fWk6MztpOjI7aTo0O2E6MDp7fX0=",
            },
          },
          Entry {
            "byRef": false,
            "key": null,
            "kind": "entry",
            "unpack": false,
            "value": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"TzoxMToiSGFzaENvbnRleHQiOjU6e2k6MDtzOjQ6InNoYTEiO2k6MTtpOjE7aToyO2E6ODp7aTowO2k6MTczMjU4NDE5MztpOjE7aTotMjcxNzMzODc5O2k6MjtpOi0xNzMyNTg0MTk0O2k6MztpOjI3MTczMzg3ODtpOjQ7aTotMTAwOTU4OTc3NjtpOjU7aToyMDA7aTo2O2k6MDtpOjc7czo2NDoiSSBjYW4ndCByZW1lbWJlciBhbnl0aGluZwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACI7fWk6MztpOjI7aTo0O2E6MDp7fX0=\\"",
              "unicode": false,
              "value": "TzoxMToiSGFzaENvbnRleHQiOjU6e2k6MDtzOjQ6InNoYTEiO2k6MTtpOjE7aToyO2E6ODp7aTowO2k6MTczMjU4NDE5MztpOjE7aTotMjcxNzMzODc5O2k6MjtpOi0xNzMyNTg0MTk0O2k6MztpOjI3MTczMzg3ODtpOjQ7aTotMTAwOTU4OTc3NjtpOjU7aToyMDA7aTo2O2k6MDtpOjc7czo2NDoiSSBjYW4ndCByZW1lbWJlciBhbnl0aGluZwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACI7fWk6MztpOjI7aTo0O2E6MDp7fX0=",
            },
          },
          Entry {
            "byRef": false,
            "key": null,
            "kind": "entry",
            "unpack": false,
            "value": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"TzoxMToiSGFzaENvbnRleHQiOjU6e2k6MDtzOjQ6InNoYTEiO2k6MTtpOjI7aToyO3M6MTA6ImFiY2RlZmdoaWoiO2k6MztpOjI7aTo0O2E6MDp7fX0=\\"",
              "unicode": false,
              "value": "TzoxMToiSGFzaENvbnRleHQiOjU6e2k6MDtzOjQ6InNoYTEiO2k6MTtpOjI7aToyO3M6MTA6ImFiY2RlZmdoaWoiO2k6MztpOjI7aTo0O2E6MDp7fX0=",
            },
          },
          Entry {
            "byRef": false,
            "key": null,
            "kind": "entry",
            "unpack": false,
            "value": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"TzoxMToiSGFzaENvbnRleHQiOjU6e2k6MDtzOjQ6InNoYTEiO2k6MTtpOjA7aToyO2E6ODp7aTowO2k6MTczMjU4NDE5MztpOjE7aTotMjcxNzMzODc5O2k6MjtpOi0xNzMyNTg0MTk0O2k6MztpOjI3MTczMzg3ODtpOjQ7aTotMTAwOTU4OTc3NjtpOjU7aToyMDA7aTo2O3M6MDoiIjtpOjc7czo2NDoiSSBjYW4ndCByZW1lbWJlciBhbnl0aGluZwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACI7fWk6MztpOjI7aTo0O2E6MDp7fX0=\\"",
              "unicode": false,
              "value": "TzoxMToiSGFzaENvbnRleHQiOjU6e2k6MDtzOjQ6InNoYTEiO2k6MTtpOjA7aToyO2E6ODp7aTowO2k6MTczMjU4NDE5MztpOjE7aTotMjcxNzMzODc5O2k6MjtpOi0xNzMyNTg0MTk0O2k6MztpOjI3MTczMzg3ODtpOjQ7aTotMTAwOTU4OTc3NjtpOjU7aToyMDA7aTo2O3M6MDoiIjtpOjc7czo2NDoiSSBjYW4ndCByZW1lbWJlciBhbnl0aGluZwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACI7fWk6MztpOjI7aTo0O2E6MDp7fX0=",
            },
          },
          Entry {
            "byRef": false,
            "key": null,
            "kind": "entry",
            "unpack": false,
            "value": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"TzoxMToiSGFzaENvbnRleHQiOjU6e2k6MDtzOjQ6InNoYTEiO2k6MTtpOjA7aToyO2E6ODp7aTowO2k6MTczMjU4NDE5MztpOjE7aTotMjcxNzMzODc5O2k6MjtpOi0xNzMyNTg0MTk0O2k6MztpOjI3MTczMzg3ODtpOjQ7aTotMTAwOTU4OTc3NjtpOjU7aToyMDA7aTo2O2k6MDtpOjc7czo2NDoiSSBjYW4ndCByZW1lbWJlciBhbnl0aGluZwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACI7fWk6MztpOjA7aTo0O2E6MDp7fX0=\\"",
              "unicode": false,
              "value": "TzoxMToiSGFzaENvbnRleHQiOjU6e2k6MDtzOjQ6InNoYTEiO2k6MTtpOjA7aToyO2E6ODp7aTowO2k6MTczMjU4NDE5MztpOjE7aTotMjcxNzMzODc5O2k6MjtpOi0xNzMyNTg0MTk0O2k6MztpOjI3MTczMzg3ODtpOjQ7aTotMTAwOTU4OTc3NjtpOjU7aToyMDA7aTo2O2k6MDtpOjc7czo2NDoiSSBjYW4ndCByZW1lbWJlciBhbnl0aGluZwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACI7fWk6MztpOjA7aTo0O2E6MDp7fX0=",
            },
          },
          Entry {
            "byRef": false,
            "key": null,
            "kind": "entry",
            "unpack": false,
            "value": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"TzoxMToiSGFzaENvbnRleHQiOjU6e2k6MDtzOjQ6Inh4eDEiO2k6MTtpOjA7aToyO2E6ODp7aTowO2k6MTczMjU4NDE5MztpOjE7aTotMjcxNzMzODc5O2k6MjtpOi0xNzMyNTg0MTk0O2k6MztpOjI3MTczMzg3ODtpOjQ7aTotMTAwOTU4OTc3NjtpOjU7aToyMDA7aTo2O2k6MDtpOjc7czo2NDoiSSBjYW4ndCByZW1lbWJlciBhbnl0aGluZwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACI7fWk6MztpOjI7aTo0O2E6MDp7fX0=\\"",
              "unicode": false,
              "value": "TzoxMToiSGFzaENvbnRleHQiOjU6e2k6MDtzOjQ6Inh4eDEiO2k6MTtpOjA7aToyO2E6ODp7aTowO2k6MTczMjU4NDE5MztpOjE7aTotMjcxNzMzODc5O2k6MjtpOi0xNzMyNTg0MTk0O2k6MztpOjI3MTczMzg3ODtpOjQ7aTotMTAwOTU4OTc3NjtpOjU7aToyMDA7aTo2O2k6MDtpOjc7czo2NDoiSSBjYW4ndCByZW1lbWJlciBhbnl0aGluZwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACI7fWk6MztpOjI7aTo0O2E6MDp7fX0=",
            },
          },
        ],
        "kind": "array",
        "shortForm": true,
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "serial",
      },
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Done\\\\n\\"",
          "unicode": false,
          "value": "Done
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
