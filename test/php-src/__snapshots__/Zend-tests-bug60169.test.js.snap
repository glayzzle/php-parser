// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #60169 (Conjunction of ternary and list crashes PHP) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "0",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "error_reporting",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "arr",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"test\\"",
                "unicode": false,
                "value": "test",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": List {
          "items": Array [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "name": "a",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "name": "b",
              },
            },
          ],
          "kind": "list",
          "shortForm": false,
        },
        "operator": "=",
        "right": RetIf {
          "falseExpr": Variable {
            "curly": false,
            "kind": "variable",
            "name": "arr",
          },
          "kind": "retif",
          "test": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "arr",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_array",
              "resolution": "uqn",
            },
          },
          "trueExpr": Variable {
            "curly": false,
            "kind": "variable",
            "name": "arr",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": List {
          "items": Array [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "name": "c",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "name": "d",
              },
            },
          ],
          "kind": "list",
          "shortForm": false,
        },
        "operator": "=",
        "right": RetIf {
          "falseExpr": NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          "kind": "retif",
          "test": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "arr",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_array",
              "resolution": "uqn",
            },
          },
          "trueExpr": null,
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"ok\\\\n\\"",
          "unicode": false,
          "value": "ok
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
