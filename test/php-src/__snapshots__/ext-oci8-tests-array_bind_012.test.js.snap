// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests oci_bind_array_by_name(), SQLT_CHR, default max_length and empty array 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": true,
        "target": Bin {
          "kind": "bin",
          "left": Magic {
            "kind": "magic",
            "raw": "__DIR__",
            "value": "__DIR__",
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'/connect.inc'",
            "unicode": false,
            "value": "/connect.inc",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "statement",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "c",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'SELECT user FROM all_objects'",
              "unicode": false,
              "value": "SELECT user FROM all_objects",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "oci_parse",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "array",
        },
        "operator": "=",
        "right": Array {
          "items": Array [],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "statement",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\":c1\\"",
            "unicode": false,
            "value": ":c1",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "array",
          },
          Number {
            "kind": "number",
            "value": "5",
          },
          Unary {
            "kind": "unary",
            "type": "-",
            "what": Number {
              "kind": "number",
              "value": "10",
            },
          },
          Name {
            "kind": "name",
            "name": "SQLT_CHR",
            "resolution": "uqn",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_bind_array_by_name",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "statement",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_execute",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "array",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Done\\\\n\\"",
          "unicode": false,
          "value": "Done
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
