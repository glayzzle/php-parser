// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Attributes can deal with AST nodes. 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'V1'",
            "unicode": false,
            "value": "V1",
          },
          Call {
            "arguments": Array [
              Call {
                "arguments": Array [],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "php_sapi_name",
                  "resolution": "uqn",
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "strtoupper",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "define",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Class {
      "attrGroups": Array [
        AttrGroup {
          "attrs": Array [
            Attribute {
              "args": Array [
                Array {
                  "items": Array [
                    Entry {
                      "byRef": false,
                      "key": Name {
                        "kind": "name",
                        "name": "V1",
                        "resolution": "uqn",
                      },
                      "kind": "entry",
                      "unpack": false,
                      "value": Name {
                        "kind": "name",
                        "name": "V1",
                        "resolution": "uqn",
                      },
                    },
                  ],
                  "kind": "array",
                  "shortForm": true,
                },
              ],
              "kind": "attribute",
              "name": "A1",
            },
          ],
          "kind": "attrgroup",
        },
      ],
      "body": Array [
        ClassConstant {
          "attrGroups": Array [],
          "constants": Array [
            Constant {
              "kind": "constant",
              "name": Identifier {
                "kind": "identifier",
                "name": "BAR",
              },
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'bar'",
                "unicode": false,
                "value": "bar",
              },
            },
          ],
          "kind": "classconstant",
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "C1",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "ref",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "class",
              },
              "what": Name {
                "kind": "name",
                "name": "C1",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "\\\\ReflectionClass",
            "resolution": "fqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "attr",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "getAttributes",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "ref",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "attr",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "count",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "args",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "getArguments",
            },
            "what": OffsetLookup {
              "kind": "offsetlookup",
              "offset": Number {
                "kind": "number",
                "value": "0",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "attr",
              },
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "args",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "count",
              "resolution": "uqn",
            },
          },
          Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": Name {
                "kind": "name",
                "name": "V1",
                "resolution": "uqn",
              },
              "what": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "0",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "args",
                },
              },
            },
            "right": Name {
              "kind": "name",
              "name": "V1",
              "resolution": "uqn",
            },
            "type": "===",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Class {
      "attrGroups": Array [
        AttrGroup {
          "attrs": Array [
            Attribute {
              "args": Array [
                Name {
                  "kind": "name",
                  "name": "V1",
                  "resolution": "uqn",
                },
                Bin {
                  "kind": "bin",
                  "left": Number {
                    "kind": "number",
                    "value": "1",
                  },
                  "right": Number {
                    "kind": "number",
                    "value": "2",
                  },
                  "type": "+",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "class",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "C1",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "attribute",
              "name": "A1",
            },
          ],
          "kind": "attrgroup",
        },
      ],
      "body": Array [],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "C2",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "ref",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "class",
              },
              "what": Name {
                "kind": "name",
                "name": "C2",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "\\\\ReflectionClass",
            "resolution": "fqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "attr",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "getAttributes",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "ref",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "attr",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "count",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "args",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "getArguments",
            },
            "what": OffsetLookup {
              "kind": "offsetlookup",
              "offset": Number {
                "kind": "number",
                "value": "0",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "attr",
              },
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "args",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "count",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": Number {
                "kind": "number",
                "value": "0",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "args",
              },
            },
            "right": Name {
              "kind": "name",
              "name": "V1",
              "resolution": "uqn",
            },
            "type": "===",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": Number {
                "kind": "number",
                "value": "1",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "args",
              },
            },
            "right": Number {
              "kind": "number",
              "value": "3",
            },
            "type": "===",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": Number {
                "kind": "number",
                "value": "2",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "args",
              },
            },
            "right": StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "class",
              },
              "what": Name {
                "kind": "name",
                "name": "C1",
                "resolution": "uqn",
              },
            },
            "type": "===",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Class {
      "attrGroups": Array [
        AttrGroup {
          "attrs": Array [
            Attribute {
              "args": Array [
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "FOO",
                  },
                  "what": SelfReference {
                    "kind": "selfreference",
                    "raw": "self",
                  },
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "BAR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "C1",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "attribute",
              "name": "A1",
            },
          ],
          "kind": "attrgroup",
        },
      ],
      "body": Array [
        ClassConstant {
          "attrGroups": Array [],
          "constants": Array [
            Constant {
              "kind": "constant",
              "name": Identifier {
                "kind": "identifier",
                "name": "FOO",
              },
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'foo'",
                "unicode": false,
                "value": "foo",
              },
            },
          ],
          "kind": "classconstant",
          "visibility": "private",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "C3",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "ref",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "class",
              },
              "what": Name {
                "kind": "name",
                "name": "C3",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "\\\\ReflectionClass",
            "resolution": "fqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "attr",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "getAttributes",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "ref",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "attr",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "count",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "args",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "getArguments",
            },
            "what": OffsetLookup {
              "kind": "offsetlookup",
              "offset": Number {
                "kind": "number",
                "value": "0",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "attr",
              },
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "args",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "count",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": Number {
                "kind": "number",
                "value": "0",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "args",
              },
            },
            "right": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'foo'",
              "unicode": false,
              "value": "foo",
            },
            "type": "===",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": Number {
                "kind": "number",
                "value": "1",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "args",
              },
            },
            "right": StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "BAR",
              },
              "what": Name {
                "kind": "name",
                "name": "C1",
                "resolution": "uqn",
              },
            },
            "type": "===",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Class {
      "attrGroups": Array [
        AttrGroup {
          "attrs": Array [
            Attribute {
              "args": Array [
                Bin {
                  "kind": "bin",
                  "left": Number {
                    "kind": "number",
                    "value": "4",
                  },
                  "right": Number {
                    "kind": "number",
                    "value": "1",
                  },
                  "type": ">>",
                },
              ],
              "kind": "attribute",
              "name": "ExampleWithShift",
            },
          ],
          "kind": "attrgroup",
        },
      ],
      "body": Array [],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "C4",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "ref",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "class",
              },
              "what": Name {
                "kind": "name",
                "name": "C4",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "\\\\ReflectionClass",
            "resolution": "fqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "getArguments",
              },
              "what": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "0",
                },
                "what": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "getAttributes",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "ref",
                    },
                  },
                },
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Class {
      "attrGroups": Array [
        AttrGroup {
          "attrs": Array [
            Attribute {
              "args": Array [],
              "kind": "attribute",
              "name": "Attribute",
            },
          ],
          "kind": "attrgroup",
        },
      ],
      "body": Array [
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "__construct",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "C5",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "ref",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            Closure {
              "arguments": Array [],
              "attrGroups": Array [
                AttrGroup {
                  "attrs": Array [
                    Attribute {
                      "args": Array [
                        StaticLookup {
                          "kind": "staticlookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "SOME_CONST",
                          },
                          "what": Name {
                            "kind": "name",
                            "name": "MissingClass",
                            "resolution": "uqn",
                          },
                        },
                      ],
                      "kind": "attribute",
                      "name": "C5",
                    },
                  ],
                  "kind": "attrgroup",
                },
              ],
              "body": Block {
                "children": Array [],
                "kind": "block",
              },
              "byref": false,
              "isStatic": false,
              "kind": "closure",
              "nullable": false,
              "type": null,
              "uses": Array [],
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "\\\\ReflectionFunction",
            "resolution": "fqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "attr",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "getAttributes",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "ref",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "attr",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "count",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "getArguments",
                },
                "what": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": Number {
                    "kind": "number",
                    "value": "0",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "attr",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getMessage",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "e",
                        },
                      },
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "var_dump",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "\\\\Error",
              "resolution": "fqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "newInstance",
                },
                "what": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": Number {
                    "kind": "number",
                    "value": "0",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "attr",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getMessage",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "e",
                        },
                      },
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "var_dump",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "\\\\Error",
              "resolution": "fqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
