// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Check that __call() and __callStatic() work with named parameters 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [],
      "body": Array [
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "method",
              },
              "nullable": false,
              "readonly": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "string",
                "raw": "string",
              },
              "value": null,
              "variadic": false,
            },
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "args",
              },
              "nullable": false,
              "readonly": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "array",
                "raw": "array",
              },
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    variadic {
                      "kind": "variadic",
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "args",
                      },
                    },
                  ],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": EncapsedPart {
                      "curly": false,
                      "expression": Bin {
                        "kind": "bin",
                        "left": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'_'",
                          "unicode": false,
                          "value": "_",
                        },
                        "right": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "method",
                        },
                        "type": ".",
                      },
                      "kind": "encapsedpart",
                      "syntax": "complex",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "this",
                    },
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "__call",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "method",
              },
              "nullable": false,
              "readonly": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "string",
                "raw": "string",
              },
              "value": null,
              "variadic": false,
            },
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "args",
              },
              "nullable": false,
              "readonly": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "array",
                "raw": "array",
              },
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    variadic {
                      "kind": "variadic",
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "args",
                      },
                    },
                  ],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": EncapsedPart {
                      "curly": false,
                      "expression": Bin {
                        "kind": "bin",
                        "left": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'_'",
                          "unicode": false,
                          "value": "_",
                        },
                        "right": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "method",
                        },
                        "type": ".",
                      },
                      "kind": "encapsedpart",
                      "syntax": "complex",
                    },
                    "what": New {
                      "arguments": Array [],
                      "kind": "new",
                      "parenthesizedExpression": true,
                      "what": StaticReference {
                        "kind": "staticreference",
                        "raw": "static",
                      },
                    },
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": true,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "__callStatic",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "a",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'a'",
                "unicode": false,
                "value": "a",
              },
              "variadic": false,
            },
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "b",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'b'",
                "unicode": false,
                "value": "b",
              },
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Encapsed {
                    "kind": "encapsed",
                    "raw": "\\"a: $a, b: $b\\\\n\\"",
                    "type": "string",
                    "value": Array [
                      EncapsedPart {
                        "curly": false,
                        "expression": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "a: ",
                          "unicode": false,
                          "value": "a: ",
                        },
                        "kind": "encapsedpart",
                        "syntax": null,
                      },
                      EncapsedPart {
                        "curly": false,
                        "expression": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "a",
                        },
                        "kind": "encapsedpart",
                        "syntax": "simple",
                      },
                      EncapsedPart {
                        "curly": false,
                        "expression": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": ", b: ",
                          "unicode": false,
                          "value": ", b: ",
                        },
                        "kind": "encapsedpart",
                        "syntax": null,
                      },
                      EncapsedPart {
                        "curly": false,
                        "expression": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "b",
                        },
                        "kind": "encapsedpart",
                        "syntax": "simple",
                      },
                      EncapsedPart {
                        "curly": false,
                        "expression": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "\\\\n",
                          "unicode": false,
                          "value": "",
                        },
                        "kind": "encapsedpart",
                        "syntax": null,
                      },
                    ],
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "_method",
          },
          "nullable": false,
          "type": null,
          "visibility": "private",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "Test",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "obj",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Class {
            "attrGroups": Array [],
            "body": Array [
              Method {
                "arguments": Array [],
                "attrGroups": Array [],
                "body": Block {
                  "children": Array [
                    Return {
                      "expr": String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"STR\\"",
                        "unicode": false,
                        "value": "STR",
                      },
                      "kind": "return",
                    },
                  ],
                  "kind": "block",
                },
                "byref": false,
                "isAbstract": false,
                "isFinal": false,
                "isStatic": false,
                "kind": "method",
                "name": Identifier {
                  "kind": "identifier",
                  "name": "__toString",
                },
                "nullable": false,
                "type": null,
                "visibility": "public",
              },
            ],
            "extends": null,
            "implements": null,
            "isAbstract": false,
            "isAnonymous": true,
            "isFinal": false,
            "kind": "class",
            "name": null,
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "test",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "Test",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          namedargument {
            "kind": "namedargument",
            "name": "a",
            "value": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'A'",
              "unicode": false,
              "value": "A",
            },
          },
          namedargument {
            "kind": "namedargument",
            "name": "b",
            "value": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'B'",
              "unicode": false,
              "value": "B",
            },
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "method",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "test",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          namedargument {
            "kind": "namedargument",
            "name": "b",
            "value": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'B'",
              "unicode": false,
              "value": "B",
            },
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "method",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "test",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          namedargument {
            "kind": "namedargument",
            "name": "b",
            "value": Variable {
              "curly": false,
              "kind": "variable",
              "name": "obj",
            },
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "method",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "test",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          namedargument {
            "kind": "namedargument",
            "name": "a",
            "value": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'A'",
              "unicode": false,
              "value": "A",
            },
          },
          namedargument {
            "kind": "namedargument",
            "name": "b",
            "value": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'B'",
              "unicode": false,
              "value": "B",
            },
          },
        ],
        "kind": "call",
        "what": StaticLookup {
          "kind": "staticlookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "method",
          },
          "what": Name {
            "kind": "name",
            "name": "Test",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          namedargument {
            "kind": "namedargument",
            "name": "b",
            "value": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'B'",
              "unicode": false,
              "value": "B",
            },
          },
        ],
        "kind": "call",
        "what": StaticLookup {
          "kind": "staticlookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "method",
          },
          "what": Name {
            "kind": "name",
            "name": "Test",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          namedargument {
            "kind": "namedargument",
            "name": "b",
            "value": Variable {
              "curly": false,
              "kind": "variable",
              "name": "obj",
            },
          },
        ],
        "kind": "call",
        "what": StaticLookup {
          "kind": "staticlookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "method",
          },
          "what": Name {
            "kind": "name",
            "name": "Test",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
