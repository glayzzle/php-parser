// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #75317 (UConverter::setDestinationEncoding changes source instead of destinatination) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "utf8",
        },
        "operator": "=",
        "right": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Number {
            "kind": "number",
            "value": "0",
          },
          "what": Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'utf-8'",
                "unicode": false,
                "value": "utf-8",
              },
            ],
            "kind": "call",
            "what": StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "getAliases",
              },
              "what": Name {
                "kind": "name",
                "name": "UConverter",
                "resolution": "uqn",
              },
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "utf16",
        },
        "operator": "=",
        "right": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Number {
            "kind": "number",
            "value": "0",
          },
          "what": Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'utf-16'",
                "unicode": false,
                "value": "utf-16",
              },
            ],
            "kind": "call",
            "what": StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "getAliases",
              },
              "what": Name {
                "kind": "name",
                "name": "UConverter",
                "resolution": "uqn",
              },
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "utf32",
        },
        "operator": "=",
        "right": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Number {
            "kind": "number",
            "value": "0",
          },
          "what": Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'utf-32'",
                "unicode": false,
                "value": "utf-32",
              },
            ],
            "kind": "call",
            "what": StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "getAliases",
              },
              "what": Name {
                "kind": "name",
                "name": "UConverter",
                "resolution": "uqn",
              },
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "latin1",
        },
        "operator": "=",
        "right": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Number {
            "kind": "number",
            "value": "0",
          },
          "what": Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'latin1'",
                "unicode": false,
                "value": "latin1",
              },
            ],
            "kind": "call",
            "what": StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "getAliases",
              },
              "what": Name {
                "kind": "name",
                "name": "UConverter",
                "resolution": "uqn",
              },
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "actual",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "expected",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                RetIf {
                  "falseExpr": Encapsed {
                    "kind": "encapsed",
                    "raw": "\\"expected: $expected, actual: $actual\\"",
                    "type": "string",
                    "value": Array [
                      EncapsedPart {
                        "curly": false,
                        "expression": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "expected: ",
                          "unicode": false,
                          "value": "expected: ",
                        },
                        "kind": "encapsedpart",
                        "syntax": null,
                      },
                      EncapsedPart {
                        "curly": false,
                        "expression": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "expected",
                        },
                        "kind": "encapsedpart",
                        "syntax": "simple",
                      },
                      EncapsedPart {
                        "curly": false,
                        "expression": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": ", actual: ",
                          "unicode": false,
                          "value": ", actual: ",
                        },
                        "kind": "encapsedpart",
                        "syntax": null,
                      },
                      EncapsedPart {
                        "curly": false,
                        "expression": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "actual",
                        },
                        "kind": "encapsedpart",
                        "syntax": "simple",
                      },
                    ],
                  },
                  "kind": "retif",
                  "test": Bin {
                    "kind": "bin",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "actual",
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "expected",
                    },
                    "type": "===",
                  },
                  "trueExpr": Boolean {
                    "kind": "boolean",
                    "raw": "true",
                    "value": true,
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "printResult",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "c",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "UConverter",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "getDestinationEncoding",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "c",
              },
            },
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "utf8",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printResult",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "getSourceEncoding",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "c",
              },
            },
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "utf8",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printResult",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "c",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'utf-16'",
              "unicode": false,
              "value": "utf-16",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'latin1'",
              "unicode": false,
              "value": "latin1",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "UConverter",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "getDestinationEncoding",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "c",
              },
            },
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "utf16",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printResult",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "getSourceEncoding",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "c",
              },
            },
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "latin1",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printResult",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'utf-8'",
                "unicode": false,
                "value": "utf-8",
              },
            ],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "setDestinationEncoding",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "c",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'utf-32'",
                "unicode": false,
                "value": "utf-32",
              },
            ],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "setSourceEncoding",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "c",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "getDestinationEncoding",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "c",
              },
            },
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "utf8",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printResult",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "getSourceEncoding",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "c",
              },
            },
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "utf32",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printResult",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'foobar'",
                  "unicode": false,
                  "value": "foobar",
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "setDestinationEncoding",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "c",
                },
              },
            },
            "right": Boolean {
              "kind": "boolean",
              "raw": "false",
              "value": false,
            },
            "type": "===",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'foobar'",
                  "unicode": false,
                  "value": "foobar",
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "setSourceEncoding",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "c",
                },
              },
            },
            "right": Boolean {
              "kind": "boolean",
              "raw": "false",
              "value": false,
            },
            "type": "===",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "getDestinationEncoding",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "c",
              },
            },
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "utf8",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printResult",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "getSourceEncoding",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "c",
              },
            },
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "utf32",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printResult",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
