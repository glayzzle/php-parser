// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #65683 IntlDateFormatter accepts DateTimeImmutable 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "formatter",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'en-US'",
              "unicode": false,
              "value": "en-US",
            },
            StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "FULL",
              },
              "what": Name {
                "kind": "name",
                "name": "IntlDateFormatter",
                "resolution": "uqn",
              },
            },
            StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "NONE",
              },
              "what": Name {
                "kind": "name",
                "name": "IntlDateFormatter",
                "resolution": "uqn",
              },
            },
            New {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"UTC\\"",
                  "unicode": false,
                  "value": "UTC",
                },
              ],
              "kind": "new",
              "what": Name {
                "kind": "name",
                "name": "DateTimeZone",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "IntlDateFormatter",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Bin {
        "kind": "bin",
        "left": Call {
          "arguments": Array [
            Call {
              "arguments": Array [
                New {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'2017-03-27 00:00:00 UTC'",
                      "unicode": false,
                      "value": "2017-03-27 00:00:00 UTC",
                    },
                  ],
                  "kind": "new",
                  "what": Name {
                    "kind": "name",
                    "name": "DateTimeImmutable",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "format",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "formatter",
                },
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "var_dump",
            "resolution": "uqn",
          },
        },
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
        "type": ".",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
