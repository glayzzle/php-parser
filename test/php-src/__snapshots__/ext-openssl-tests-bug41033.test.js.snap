// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests #41033, enable signing with DSA keys 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "prv",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'file://'",
                "unicode": false,
                "value": "file://",
              },
              "right": Magic {
                "kind": "magic",
                "raw": "__DIR__",
                "value": "__DIR__",
              },
              "type": ".",
            },
            "right": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'/'",
              "unicode": false,
              "value": "/",
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bug41033.pem'",
            "unicode": false,
            "value": "bug41033.pem",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "pub",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'file://'",
                "unicode": false,
                "value": "file://",
              },
              "right": Magic {
                "kind": "magic",
                "raw": "__DIR__",
                "value": "__DIR__",
              },
              "type": ".",
            },
            "right": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'/'",
              "unicode": false,
              "value": "/",
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bug41033pub.pem'",
            "unicode": false,
            "value": "bug41033pub.pem",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "prkeyid",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "prv",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"1234\\"",
              "unicode": false,
              "value": "1234",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "openssl_get_privatekey",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "ct",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Hello I am some text!\\"",
          "unicode": false,
          "value": "Hello I am some text!",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "ct",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "signature",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "prkeyid",
          },
          Name {
            "kind": "name",
            "name": "OPENSSL_ALGO_SHA1",
            "resolution": "uqn",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "openssl_sign",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"Signature: \\"",
              "unicode": false,
              "value": "Signature: ",
            },
            "right": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "signature",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "base64_encode",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "pukeyid",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "pub",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "openssl_get_publickey",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "valid",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "ct",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "signature",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "pukeyid",
            },
            Name {
              "kind": "name",
              "name": "OPENSSL_ALGO_SHA1",
              "resolution": "uqn",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "openssl_verify",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"Signature validity: \\"",
              "unicode": false,
              "value": "Signature validity: ",
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "valid",
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
