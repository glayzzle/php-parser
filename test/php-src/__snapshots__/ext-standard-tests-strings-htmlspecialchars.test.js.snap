// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test htmlspecialchars() function 1`] = `
Program {
  "children": Array [
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"*** Retrieving htmlspecialchars for 256 characters ***\\\\n\\"",
          "unicode": false,
          "value": "*** Retrieving htmlspecialchars for 256 characters ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    For {
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            Call {
              "arguments": Array [
                Call {
                  "arguments": Array [
                    Encapsed {
                      "kind": "encapsed",
                      "raw": "\\"chr($i)\\"",
                      "type": "string",
                      "value": Array [
                        EncapsedPart {
                          "curly": false,
                          "expression": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "chr(",
                            "unicode": false,
                            "value": "chr(",
                          },
                          "kind": "encapsedpart",
                          "syntax": null,
                        },
                        EncapsedPart {
                          "curly": false,
                          "expression": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "i",
                          },
                          "kind": "encapsedpart",
                          "syntax": "simple",
                        },
                        EncapsedPart {
                          "curly": false,
                          "expression": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": ")",
                            "unicode": false,
                            "value": ")",
                          },
                          "kind": "encapsedpart",
                          "syntax": null,
                        },
                      ],
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "htmlspecialchars",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "bin2hex",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "var_dump",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "increment": Array [
        Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "0",
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "right": Number {
            "kind": "number",
            "value": "256",
          },
          "type": "<",
        },
      ],
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n*** Testing htmlspecialchars() with NULL as first, second and third argument ***\\\\n\\"",
          "unicode": false,
          "value": "
*** Testing htmlspecialchars() with NULL as first, second and third argument ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"<br>\\"",
                "unicode": false,
                "value": "<br>",
              },
              Name {
                "kind": "name",
                "name": "ENT_NOQUOTES",
                "resolution": "uqn",
              },
              NullKeyword {
                "kind": "nullkeyword",
                "raw": "NULL",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "htmlspecialchars",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"<br>\\"",
                "unicode": false,
                "value": "<br>",
              },
              Name {
                "kind": "name",
                "name": "ENT_QUOTES",
                "resolution": "uqn",
              },
              NullKeyword {
                "kind": "nullkeyword",
                "raw": "NULL",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "htmlspecialchars",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"<br>\\"",
                "unicode": false,
                "value": "<br>",
              },
              Name {
                "kind": "name",
                "name": "ENT_COMPAT",
                "resolution": "uqn",
              },
              NullKeyword {
                "kind": "nullkeyword",
                "raw": "NULL",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "htmlspecialchars",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n*** Checking a long string for proper memory allocation ***\\\\n\\"",
          "unicode": false,
          "value": "
*** Checking a long string for proper memory allocation ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"<br>Testing<p>New file.</p><p><br>File <b><i><u>WORKS!!!</i></u></b></p><br><p>End of file!!!</p>\\"",
                "unicode": false,
                "value": "<br>Testing<p>New file.</p><p><br>File <b><i><u>WORKS!!!</i></u></b></p><br><p>End of file!!!</p>",
              },
              Name {
                "kind": "name",
                "name": "ENT_QUOTES",
                "resolution": "uqn",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'iso-8859-1'",
                "unicode": false,
                "value": "iso-8859-1",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "htmlspecialchars",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n*** Testing a normal string with htmlspecialchars() ***\\\\n\\"",
          "unicode": false,
          "value": "
*** Testing a normal string with htmlspecialchars() ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"<br>Testing<p>New file.</p> \\"",
                "unicode": false,
                "value": "<br>Testing<p>New file.</p> ",
              },
              Name {
                "kind": "name",
                "name": "ENT_QUOTES",
                "resolution": "uqn",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'iso-8859-1'",
                "unicode": false,
                "value": "iso-8859-1",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "htmlspecialchars",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n*** Testing htmlspecialchars() on a quote...\\\\n\\"",
          "unicode": false,
          "value": "
*** Testing htmlspecialchars() on a quote...
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "str",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"A 'quote' is <b>bold</b>\\"",
          "unicode": false,
          "value": "A 'quote' is <b>bold</b>",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "str",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "htmlspecialchars",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "str",
              },
              Name {
                "kind": "name",
                "name": "ENT_QUOTES",
                "resolution": "uqn",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "htmlspecialchars",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "str",
              },
              Name {
                "kind": "name",
                "name": "ENT_NOQUOTES",
                "resolution": "uqn",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "htmlspecialchars",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "str",
              },
              Name {
                "kind": "name",
                "name": "ENT_COMPAT",
                "resolution": "uqn",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "htmlspecialchars",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Done\\\\n\\"",
          "unicode": false,
          "value": "Done
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
