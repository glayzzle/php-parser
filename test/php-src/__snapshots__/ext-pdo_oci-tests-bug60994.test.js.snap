// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests PDO OCI Bug #60994 (Reading a multibyte CLOB caps at 8192 characters) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": true,
        "target": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'ext/pdo/tests/pdo_test.inc'",
          "unicode": false,
          "value": "ext/pdo/tests/pdo_test.inc",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "dbh",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "factory",
            },
            "what": Name {
              "kind": "name",
              "name": "PDOTest",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "ATTR_CASE",
            },
            "what": Name {
              "kind": "name",
              "name": "PDO",
              "resolution": "uqn",
            },
          },
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "CASE_NATURAL",
            },
            "what": Name {
              "kind": "name",
              "name": "PDO",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "setAttribute",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "dbh",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "ATTR_STRINGIFY_FETCHES",
            },
            "what": Name {
              "kind": "name",
              "name": "PDO",
              "resolution": "uqn",
            },
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "setAttribute",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "dbh",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Silent {
        "expr": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'DROP TABLE pdo_oci_bug60994'",
              "unicode": false,
              "value": "DROP TABLE pdo_oci_bug60994",
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "exec",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "dbh",
            },
          },
        },
        "kind": "silent",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'CREATE TABLE pdo_oci_bug60994 (id NUMBER, data CLOB)'",
            "unicode": false,
            "value": "CREATE TABLE pdo_oci_bug60994 (id NUMBER, data CLOB)",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "exec",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "dbh",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "id",
        },
        "operator": "=",
        "right": NullKeyword {
          "kind": "nullkeyword",
          "raw": "null",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "insert",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'INSERT INTO pdo_oci_bug60994 (id, data) VALUES (:id, :data)'",
              "unicode": false,
              "value": "INSERT INTO pdo_oci_bug60994 (id, data) VALUES (:id, :data)",
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "prepare",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "dbh",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "':id'",
            "unicode": false,
            "value": ":id",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "id",
          },
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "PARAM_STR",
            },
            "what": Name {
              "kind": "name",
              "name": "\\\\PDO",
              "resolution": "fqn",
            },
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "bindParam",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "insert",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "select",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"SELECT data FROM pdo_oci_bug60994 WHERE id = :id\\"",
              "unicode": false,
              "value": "SELECT data FROM pdo_oci_bug60994 WHERE id = :id",
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "prepare",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "dbh",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Name {
          "kind": "name",
          "name": "PHP_EOL",
          "resolution": "uqn",
        },
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'Test 1:  j'",
          "unicode": false,
          "value": "Test 1:  j",
        },
        Name {
          "kind": "name",
          "name": "PHP_EOL",
          "resolution": "uqn",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "string1",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'abc'",
              "unicode": false,
              "value": "abc",
            },
            "right": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'j'",
                  "unicode": false,
                  "value": "j",
                },
                Number {
                  "kind": "number",
                  "value": "8187",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "str_repeat",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'xyz'",
            "unicode": false,
            "value": "xyz",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "id",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "1",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "':data'",
            "unicode": false,
            "value": ":data",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "string1",
          },
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "PARAM_STR",
            },
            "what": Name {
              "kind": "name",
              "name": "\\\\PDO",
              "resolution": "fqn",
            },
          },
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "string1",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "strlen",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "bindParam",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "insert",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "execute",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "insert",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "':id'",
            "unicode": false,
            "value": ":id",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "id",
          },
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "PARAM_STR",
            },
            "what": Name {
              "kind": "name",
              "name": "\\\\PDO",
              "resolution": "fqn",
            },
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "bindParam",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "select",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "execute",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "select",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "row",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "fetch",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "select",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "stream1",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'DATA'",
                "unicode": false,
                "value": "DATA",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "row",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "stream_get_contents",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "start1",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "stream1",
            },
            Number {
              "kind": "number",
              "value": "0",
            },
            Number {
              "kind": "number",
              "value": "10",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_substr",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "ending1",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "stream1",
            },
            Unary {
              "kind": "unary",
              "type": "-",
              "what": Number {
                "kind": "number",
                "value": "10",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_substr",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'size of string1 is '",
          "unicode": false,
          "value": "size of string1 is ",
        },
        Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "string1",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "strlen",
            "resolution": "uqn",
          },
        },
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "' bytes, '",
          "unicode": false,
          "value": " bytes, ",
        },
        Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "string1",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_strlen",
            "resolution": "uqn",
          },
        },
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "' chars.'",
          "unicode": false,
          "value": " chars.",
        },
        Name {
          "kind": "name",
          "name": "PHP_EOL",
          "resolution": "uqn",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'size of stream1 is '",
          "unicode": false,
          "value": "size of stream1 is ",
        },
        Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "stream1",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "strlen",
            "resolution": "uqn",
          },
        },
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "' bytes, '",
          "unicode": false,
          "value": " bytes, ",
        },
        Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "stream1",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_strlen",
            "resolution": "uqn",
          },
        },
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "' chars.'",
          "unicode": false,
          "value": " chars.",
        },
        Name {
          "kind": "name",
          "name": "PHP_EOL",
          "resolution": "uqn",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'beg  of stream1 is '",
          "unicode": false,
          "value": "beg  of stream1 is ",
        },
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "start1",
        },
        Name {
          "kind": "name",
          "name": "PHP_EOL",
          "resolution": "uqn",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'end  of stream1 is '",
          "unicode": false,
          "value": "end  of stream1 is ",
        },
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "ending1",
        },
        Name {
          "kind": "name",
          "name": "PHP_EOL",
          "resolution": "uqn",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Name {
          "kind": "name",
          "name": "PHP_EOL",
          "resolution": "uqn",
        },
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'Test 2:  £'",
          "unicode": false,
          "value": "Test 2:  £",
        },
        Name {
          "kind": "name",
          "name": "PHP_EOL",
          "resolution": "uqn",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "string2",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'abc'",
              "unicode": false,
              "value": "abc",
            },
            "right": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'£'",
                  "unicode": false,
                  "value": "£",
                },
                Number {
                  "kind": "number",
                  "value": "8187",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "str_repeat",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'xyz'",
            "unicode": false,
            "value": "xyz",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "id",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "2",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "':data'",
            "unicode": false,
            "value": ":data",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "string2",
          },
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "PARAM_STR",
            },
            "what": Name {
              "kind": "name",
              "name": "\\\\PDO",
              "resolution": "fqn",
            },
          },
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "string2",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "strlen",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "bindParam",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "insert",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "execute",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "insert",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "':id'",
            "unicode": false,
            "value": ":id",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "id",
          },
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "PARAM_STR",
            },
            "what": Name {
              "kind": "name",
              "name": "\\\\PDO",
              "resolution": "fqn",
            },
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "bindParam",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "select",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "execute",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "select",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "row",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "fetch",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "select",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "stream2",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'DATA'",
                "unicode": false,
                "value": "DATA",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "row",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "stream_get_contents",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "start2",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "stream2",
            },
            Number {
              "kind": "number",
              "value": "0",
            },
            Number {
              "kind": "number",
              "value": "10",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_substr",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "ending2",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "stream2",
            },
            Unary {
              "kind": "unary",
              "type": "-",
              "what": Number {
                "kind": "number",
                "value": "10",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_substr",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'size of string2 is '",
          "unicode": false,
          "value": "size of string2 is ",
        },
        Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "string2",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "strlen",
            "resolution": "uqn",
          },
        },
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "' bytes, '",
          "unicode": false,
          "value": " bytes, ",
        },
        Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "string2",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_strlen",
            "resolution": "uqn",
          },
        },
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "' chars.'",
          "unicode": false,
          "value": " chars.",
        },
        Name {
          "kind": "name",
          "name": "PHP_EOL",
          "resolution": "uqn",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'size of stream2 is '",
          "unicode": false,
          "value": "size of stream2 is ",
        },
        Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "stream2",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "strlen",
            "resolution": "uqn",
          },
        },
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "' bytes, '",
          "unicode": false,
          "value": " bytes, ",
        },
        Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "stream2",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_strlen",
            "resolution": "uqn",
          },
        },
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "' chars.'",
          "unicode": false,
          "value": " chars.",
        },
        Name {
          "kind": "name",
          "name": "PHP_EOL",
          "resolution": "uqn",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'beg  of stream2 is '",
          "unicode": false,
          "value": "beg  of stream2 is ",
        },
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "start2",
        },
        Name {
          "kind": "name",
          "name": "PHP_EOL",
          "resolution": "uqn",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'end  of stream2 is '",
          "unicode": false,
          "value": "end  of stream2 is ",
        },
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "ending2",
        },
        Name {
          "kind": "name",
          "name": "PHP_EOL",
          "resolution": "uqn",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Name {
          "kind": "name",
          "name": "PHP_EOL",
          "resolution": "uqn",
        },
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'Test 3:  Җ'",
          "unicode": false,
          "value": "Test 3:  Җ",
        },
        Name {
          "kind": "name",
          "name": "PHP_EOL",
          "resolution": "uqn",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "string3",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'abc'",
              "unicode": false,
              "value": "abc",
            },
            "right": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'Җ'",
                  "unicode": false,
                  "value": "Җ",
                },
                Number {
                  "kind": "number",
                  "value": "8187",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "str_repeat",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'xyz'",
            "unicode": false,
            "value": "xyz",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "id",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "3",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "':data'",
            "unicode": false,
            "value": ":data",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "string3",
          },
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "PARAM_STR",
            },
            "what": Name {
              "kind": "name",
              "name": "\\\\PDO",
              "resolution": "fqn",
            },
          },
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "string3",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "strlen",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "bindParam",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "insert",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "execute",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "insert",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "':id'",
            "unicode": false,
            "value": ":id",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "id",
          },
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "PARAM_STR",
            },
            "what": Name {
              "kind": "name",
              "name": "\\\\PDO",
              "resolution": "fqn",
            },
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "bindParam",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "select",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "execute",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "select",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "row",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "fetch",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "select",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "stream3",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'DATA'",
                "unicode": false,
                "value": "DATA",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "row",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "stream_get_contents",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "start3",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "stream3",
            },
            Number {
              "kind": "number",
              "value": "0",
            },
            Number {
              "kind": "number",
              "value": "10",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_substr",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "ending3",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "stream3",
            },
            Unary {
              "kind": "unary",
              "type": "-",
              "what": Number {
                "kind": "number",
                "value": "10",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_substr",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'size of string3 is '",
          "unicode": false,
          "value": "size of string3 is ",
        },
        Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "string3",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "strlen",
            "resolution": "uqn",
          },
        },
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "' bytes, '",
          "unicode": false,
          "value": " bytes, ",
        },
        Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "string3",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_strlen",
            "resolution": "uqn",
          },
        },
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "' chars.'",
          "unicode": false,
          "value": " chars.",
        },
        Name {
          "kind": "name",
          "name": "PHP_EOL",
          "resolution": "uqn",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'size of stream3 is '",
          "unicode": false,
          "value": "size of stream3 is ",
        },
        Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "stream3",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "strlen",
            "resolution": "uqn",
          },
        },
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "' bytes, '",
          "unicode": false,
          "value": " bytes, ",
        },
        Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "stream3",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_strlen",
            "resolution": "uqn",
          },
        },
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "' chars.'",
          "unicode": false,
          "value": " chars.",
        },
        Name {
          "kind": "name",
          "name": "PHP_EOL",
          "resolution": "uqn",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'beg  of stream3 is '",
          "unicode": false,
          "value": "beg  of stream3 is ",
        },
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "start3",
        },
        Name {
          "kind": "name",
          "name": "PHP_EOL",
          "resolution": "uqn",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'end  of stream3 is '",
          "unicode": false,
          "value": "end  of stream3 is ",
        },
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "ending3",
        },
        Name {
          "kind": "name",
          "name": "PHP_EOL",
          "resolution": "uqn",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Name {
          "kind": "name",
          "name": "PHP_EOL",
          "resolution": "uqn",
        },
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'Test 4:  の'",
          "unicode": false,
          "value": "Test 4:  の",
        },
        Name {
          "kind": "name",
          "name": "PHP_EOL",
          "resolution": "uqn",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "string4",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'abc'",
              "unicode": false,
              "value": "abc",
            },
            "right": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'の'",
                  "unicode": false,
                  "value": "の",
                },
                Number {
                  "kind": "number",
                  "value": "8187",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "str_repeat",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'xyz'",
            "unicode": false,
            "value": "xyz",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "id",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "4",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "':data'",
            "unicode": false,
            "value": ":data",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "string4",
          },
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "PARAM_STR",
            },
            "what": Name {
              "kind": "name",
              "name": "\\\\PDO",
              "resolution": "fqn",
            },
          },
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "string4",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "strlen",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "bindParam",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "insert",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "execute",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "insert",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "':id'",
            "unicode": false,
            "value": ":id",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "id",
          },
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "PARAM_STR",
            },
            "what": Name {
              "kind": "name",
              "name": "\\\\PDO",
              "resolution": "fqn",
            },
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "bindParam",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "select",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "execute",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "select",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "row",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "fetch",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "select",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "stream4",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'DATA'",
                "unicode": false,
                "value": "DATA",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "row",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "stream_get_contents",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "start4",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "stream4",
            },
            Number {
              "kind": "number",
              "value": "0",
            },
            Number {
              "kind": "number",
              "value": "10",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_substr",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "ending4",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "stream4",
            },
            Unary {
              "kind": "unary",
              "type": "-",
              "what": Number {
                "kind": "number",
                "value": "10",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_substr",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'size of string4 is '",
          "unicode": false,
          "value": "size of string4 is ",
        },
        Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "string4",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "strlen",
            "resolution": "uqn",
          },
        },
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "' bytes, '",
          "unicode": false,
          "value": " bytes, ",
        },
        Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "string4",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_strlen",
            "resolution": "uqn",
          },
        },
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "' chars.'",
          "unicode": false,
          "value": " chars.",
        },
        Name {
          "kind": "name",
          "name": "PHP_EOL",
          "resolution": "uqn",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'size of stream4 is '",
          "unicode": false,
          "value": "size of stream4 is ",
        },
        Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "stream4",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "strlen",
            "resolution": "uqn",
          },
        },
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "' bytes, '",
          "unicode": false,
          "value": " bytes, ",
        },
        Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "stream4",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_strlen",
            "resolution": "uqn",
          },
        },
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "' chars.'",
          "unicode": false,
          "value": " chars.",
        },
        Name {
          "kind": "name",
          "name": "PHP_EOL",
          "resolution": "uqn",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'beg  of stream4 is '",
          "unicode": false,
          "value": "beg  of stream4 is ",
        },
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "start4",
        },
        Name {
          "kind": "name",
          "name": "PHP_EOL",
          "resolution": "uqn",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'end  of stream4 is '",
          "unicode": false,
          "value": "end  of stream4 is ",
        },
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "ending4",
        },
        Name {
          "kind": "name",
          "name": "PHP_EOL",
          "resolution": "uqn",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
