// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests compress.zlib:// wrapper with compression level 1`] = `
Program {
  "children": Array [
    Declare {
      "children": Array [],
      "directives": Array [
        DeclareDirective {
          "key": Identifier {
            "kind": "identifier",
            "name": "strict_types",
          },
          "kind": "declaredirective",
          "value": Number {
            "kind": "number",
            "value": "1",
          },
        },
      ],
      "kind": "declare",
      "mode": "none",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "filename",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "sys_get_temp_dir",
                "resolution": "uqn",
              },
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"php-zlib-test-\\"",
              "unicode": false,
              "value": "php-zlib-test-",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "tempnam",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "thisfile",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Magic {
              "kind": "magic",
              "raw": "__FILE__",
              "value": "__FILE__",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "file_get_contents",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "level",
          },
          "nullable": false,
          "readonly": false,
          "type": TypeReference {
            "kind": "typereference",
            "name": "int",
            "raw": "int",
          },
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          Global {
            "items": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "filename",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "thisfile",
              },
            ],
            "kind": "global",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "ctx",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Array {
                    "items": Array [
                      Entry {
                        "byRef": false,
                        "key": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'zlib'",
                          "unicode": false,
                          "value": "zlib",
                        },
                        "kind": "entry",
                        "unpack": false,
                        "value": Array {
                          "items": Array [
                            Entry {
                              "byRef": false,
                              "key": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'level'",
                                "unicode": false,
                                "value": "level",
                              },
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "level",
                              },
                            },
                          ],
                          "kind": "array",
                          "shortForm": true,
                        },
                      },
                    ],
                    "kind": "array",
                    "shortForm": true,
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "stream_context_create",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "fp",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Encapsed {
                    "kind": "encapsed",
                    "raw": "\\"compress.zlib://$filename\\"",
                    "type": "string",
                    "value": Array [
                      EncapsedPart {
                        "curly": false,
                        "expression": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "compress.zlib://",
                          "unicode": false,
                          "value": "compress.zlib://",
                        },
                        "kind": "encapsedpart",
                        "syntax": null,
                      },
                      EncapsedPart {
                        "curly": false,
                        "expression": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "filename",
                        },
                        "kind": "encapsedpart",
                        "syntax": "simple",
                      },
                    ],
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'w'",
                    "unicode": false,
                    "value": "w",
                  },
                  Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "ctx",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "fopen",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          For {
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "fp",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "thisfile",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "fwrite",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "increment": Array [
              Pre {
                "kind": "pre",
                "type": "+",
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
              },
            ],
            "init": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
                "operator": "=",
                "right": Number {
                  "kind": "number",
                  "value": "0",
                },
              },
            ],
            "kind": "for",
            "shortForm": false,
            "test": Array [
              Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
                "right": Number {
                  "kind": "number",
                  "value": "10",
                },
                "type": "<",
              },
            ],
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "fp",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "fclose",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "size",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "filename",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "filesize",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "filename",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "unlink",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          Return {
            "expr": Variable {
              "curly": false,
              "kind": "variable",
              "name": "size",
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "write_at_level",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "size1",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Number {
              "kind": "number",
              "value": "1",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "write_at_level",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "size9",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Number {
              "kind": "number",
              "value": "9",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "write_at_level",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Number {
              "kind": "number",
              "value": "10",
            },
            "right": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "thisfile",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "strlen",
                "resolution": "uqn",
              },
            },
            "type": "*",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "size1",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "size9",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "size9",
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "size1",
            },
            "type": "<",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
