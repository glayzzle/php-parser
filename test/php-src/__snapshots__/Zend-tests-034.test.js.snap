// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Testing multiples 'default:' in switch 1`] = `
Program {
  "children": Array [
    Switch {
      "body": Block {
        "children": Array [
          Case {
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Print {
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'foo'",
                      "unicode": false,
                      "value": "foo",
                    },
                    "kind": "print",
                  },
                  "kind": "expressionstatement",
                },
                Break {
                  "kind": "break",
                  "level": null,
                },
              ],
              "kind": "block",
            },
            "kind": "case",
            "test": Number {
              "kind": "number",
              "value": "2",
            },
          },
          Case {
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Print {
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'bar'",
                      "unicode": false,
                      "value": "bar",
                    },
                    "kind": "print",
                  },
                  "kind": "expressionstatement",
                },
                Break {
                  "kind": "break",
                  "level": null,
                },
              ],
              "kind": "block",
            },
            "kind": "case",
            "test": Number {
              "kind": "number",
              "value": "3",
            },
          },
          Case {
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Print {
                    "expression": Number {
                      "kind": "number",
                      "value": "1",
                    },
                    "kind": "print",
                  },
                  "kind": "expressionstatement",
                },
                Break {
                  "kind": "break",
                  "level": null,
                },
              ],
              "kind": "block",
            },
            "kind": "case",
            "test": null,
          },
          Case {
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Print {
                    "expression": Number {
                      "kind": "number",
                      "value": "2",
                    },
                    "kind": "print",
                  },
                  "kind": "expressionstatement",
                },
                Break {
                  "kind": "break",
                  "level": null,
                },
              ],
              "kind": "block",
            },
            "kind": "case",
            "test": null,
          },
          Case {
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Print {
                    "expression": Number {
                      "kind": "number",
                      "value": "3",
                    },
                    "kind": "print",
                  },
                  "kind": "expressionstatement",
                },
                Break {
                  "kind": "break",
                  "level": null,
                },
              ],
              "kind": "block",
            },
            "kind": "case",
            "test": null,
          },
        ],
        "kind": "block",
      },
      "kind": "switch",
      "shortForm": false,
      "test": Number {
        "kind": "number",
        "value": "1",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
