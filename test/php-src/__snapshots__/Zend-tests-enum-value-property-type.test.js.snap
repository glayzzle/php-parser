// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Enum value property has automatic type 1`] = `
Program {
  "children": Array [
    Enum {
      "attrGroups": Array [],
      "body": Array [
        EnumCase {
          "kind": "enumcase",
          "name": Identifier {
            "kind": "identifier",
            "name": "Foo",
          },
          "value": Number {
            "kind": "number",
            "value": "0",
          },
        },
      ],
      "implements": null,
      "kind": "enum",
      "name": Identifier {
        "kind": "identifier",
        "name": "IntEnum",
      },
      "valueType": Name {
        "kind": "name",
        "name": "int",
        "resolution": "uqn",
      },
    },
    Enum {
      "attrGroups": Array [],
      "body": Array [
        EnumCase {
          "kind": "enumcase",
          "name": Identifier {
            "kind": "identifier",
            "name": "Foo",
          },
          "value": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'Foo'",
            "unicode": false,
            "value": "Foo",
          },
        },
      ],
      "implements": null,
      "kind": "enum",
      "name": Identifier {
        "kind": "identifier",
        "name": "StringEnum",
      },
      "valueType": Name {
        "kind": "name",
        "name": "string",
        "resolution": "uqn",
      },
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "getType",
              },
              "what": New {
                "arguments": Array [
                  StaticLookup {
                    "kind": "staticlookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "class",
                    },
                    "what": Name {
                      "kind": "name",
                      "name": "IntEnum",
                      "resolution": "uqn",
                    },
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'value'",
                    "unicode": false,
                    "value": "value",
                  },
                ],
                "kind": "new",
                "parenthesizedExpression": true,
                "what": Name {
                  "kind": "name",
                  "name": "ReflectionProperty",
                  "resolution": "uqn",
                },
              },
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "getType",
              },
              "what": New {
                "arguments": Array [
                  StaticLookup {
                    "kind": "staticlookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "class",
                    },
                    "what": Name {
                      "kind": "name",
                      "name": "StringEnum",
                      "resolution": "uqn",
                    },
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'value'",
                    "unicode": false,
                    "value": "value",
                  },
                ],
                "kind": "new",
                "parenthesizedExpression": true,
                "what": Name {
                  "kind": "name",
                  "name": "ReflectionProperty",
                  "resolution": "uqn",
                },
              },
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
