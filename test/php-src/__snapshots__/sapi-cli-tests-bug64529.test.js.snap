// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #64529 (Ran out of opcode space) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "expect_executable",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Encapsed {
              "kind": "encapsed",
              "raw": "\`which expect\`",
              "type": "shell",
              "value": Array [
                EncapsedPart {
                  "curly": false,
                  "expression": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "which expect",
                    "unicode": false,
                    "value": "which expect",
                  },
                  "kind": "encapsedpart",
                  "syntax": null,
                },
              ],
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "trim",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "php_executable",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'TEST_PHP_EXECUTABLE'",
              "unicode": false,
              "value": "TEST_PHP_EXECUTABLE",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "getenv",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "script",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Magic {
            "kind": "magic",
            "raw": "__DIR__",
            "value": "__DIR__",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"/expect.sh\\"",
            "unicode": false,
            "value": "/expect.sh",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expect_script",
              },
              "operator": "=",
              "right": Encapsed {
                "kind": "encapsed",
                "label": "SCRIPT",
                "raw": "<<<SCRIPT
set php_executable [lindex \\\\$argv 0]
spawn \\\\$php_executable -n -d cli.prompt=\\"\\" -a
expect \\"Interactive mode enabled\\"
send \\"<?php echo 'hello world';\\\\n\\"
send \\"\\\\04\\"
expect eof
exit
SCRIPT",
                "type": "heredoc",
                "value": Array [
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "set php_executable [lindex \\\\$argv 0]
spawn \\\\$php_executable -n -d cli.prompt=\\"\\" -a
expect \\"Interactive mode enabled\\"
send \\"<?php echo 'hello world';\\\\n\\"
send \\"\\\\04\\"
expect eof
exit
",
                      "unicode": false,
                      "value": "set php_executable [lindex $argv 0]
spawn $php_executable -n -d cli.prompt=\\"\\" -a
expect \\"Interactive mode enabled\\"
send \\"<?php echo 'hello world';
\\"
send \\"\\"
expect eof
exit",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                ],
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expect_script",
              },
              "operator": "=",
              "right": Encapsed {
                "kind": "encapsed",
                "label": "SCRIPT",
                "raw": "<<<SCRIPT
set php_executable [lindex \\\\$argv 0]
spawn \\\\$php_executable -n -d cli.prompt=\\"\\" -a
expect \\"php >\\"
send \\"echo 'hello world';\\\\n\\"
send \\"\\\\04\\"
expect eof
exit
SCRIPT",
                "type": "heredoc",
                "value": Array [
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "set php_executable [lindex \\\\$argv 0]
spawn \\\\$php_executable -n -d cli.prompt=\\"\\" -a
expect \\"php >\\"
send \\"echo 'hello world';\\\\n\\"
send \\"\\\\04\\"
expect eof
exit
",
                      "unicode": false,
                      "value": "set php_executable [lindex $argv 0]
spawn $php_executable -n -d cli.prompt=\\"\\" -a
expect \\"php >\\"
send \\"echo 'hello world';
\\"
send \\"\\"
expect eof
exit",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                ],
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"readline\\"",
            "unicode": false,
            "value": "readline",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "extension_loaded",
          "resolution": "uqn",
        },
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "script",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expect_script",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "file_put_contents",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "expect_executable",
                  },
                  "right": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\" \\"",
                    "unicode": false,
                    "value": " ",
                  },
                  "type": ".",
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "script",
                },
                "type": ".",
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\" \\"",
                "unicode": false,
                "value": " ",
              },
              "type": ".",
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "php_executable",
            },
            "type": ".",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "system",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Silent {
        "expr": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "script",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "unlink",
            "resolution": "uqn",
          },
        },
        "kind": "silent",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
