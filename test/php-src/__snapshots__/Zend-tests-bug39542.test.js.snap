// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #39542 (Behaviour of require_once/include_once different to < 5.2.0) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "oldcwd",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "getcwd",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Magic {
            "kind": "magic",
            "raw": "__DIR__",
            "value": "__DIR__",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "chdir",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Bin {
                  "kind": "bin",
                  "left": Magic {
                    "kind": "magic",
                    "raw": "__DIR__",
                    "value": "__DIR__",
                  },
                  "right": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'/bug39542:.'",
                    "unicode": false,
                    "value": "/bug39542:.",
                  },
                  "type": ".",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "set_include_path",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Bin {
                  "kind": "bin",
                  "left": Magic {
                    "kind": "magic",
                    "raw": "__DIR__",
                    "value": "__DIR__",
                  },
                  "right": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'/bug39542;.'",
                    "unicode": false,
                    "value": "/bug39542;.",
                  },
                  "type": ".",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "set_include_path",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Call {
          "arguments": Array [
            Name {
              "kind": "name",
              "name": "PHP_OS",
              "resolution": "uqn",
            },
            Number {
              "kind": "number",
              "value": "0",
            },
            Number {
              "kind": "number",
              "value": "3",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "substr",
            "resolution": "uqn",
          },
        },
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'WIN'",
          "unicode": false,
          "value": "WIN",
        },
        "type": "==",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Closure {
            "arguments": Array [
              Parameter {
                "attrGroups": Array [],
                "byref": false,
                "flags": 0,
                "kind": "parameter",
                "name": Identifier {
                  "kind": "identifier",
                  "name": "class",
                },
                "nullable": false,
                "readonly": false,
                "type": null,
                "value": null,
                "variadic": false,
              },
            ],
            "attrGroups": Array [],
            "body": Block {
              "children": Array [
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            Bin {
                              "kind": "bin",
                              "left": Bin {
                                "kind": "bin",
                                "left": String {
                                  "isDoubleQuote": false,
                                  "kind": "string",
                                  "raw": "'Error: Autoload class: '",
                                  "unicode": false,
                                  "value": "Error: Autoload class: ",
                                },
                                "right": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "class",
                                },
                                "type": ".",
                              },
                              "right": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "' not found!'",
                                "unicode": false,
                                "value": " not found!",
                              },
                              "type": ".",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "error_log",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Unary {
                    "kind": "unary",
                    "type": "!",
                    "what": Include {
                      "kind": "include",
                      "once": true,
                      "require": true,
                      "target": Bin {
                        "kind": "bin",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "class",
                        },
                        "parenthesizedExpression": true,
                        "right": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'.inc'",
                          "unicode": false,
                          "value": ".inc",
                        },
                        "type": ".",
                      },
                    },
                  },
                },
              ],
              "kind": "block",
            },
            "byref": false,
            "isStatic": false,
            "kind": "closure",
            "nullable": false,
            "type": null,
            "uses": Array [],
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "spl_autoload_register",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": New {
        "arguments": Array [],
        "kind": "new",
        "what": Name {
          "kind": "name",
          "name": "bug39542",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "oldcwd",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "chdir",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
