// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests PostgreSQL create db 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": false,
        "target": String {
          "isDoubleQuote": false,
          "kind": "string",
          "parenthesizedExpression": true,
          "raw": "'config.inc'",
          "unicode": false,
          "value": "config.inc",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "db",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "conn_str",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "pg_connect",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              Bin {
                "kind": "bin",
                "left": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "pg_last_error",
                    "resolution": "uqn",
                  },
                },
                "right": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"\\\\n\\"",
                  "unicode": false,
                  "value": "
",
                },
                "type": ".",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "table_def",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pg_query",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          For {
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "db",
                      },
                      Bin {
                        "kind": "bin",
                        "left": Bin {
                          "kind": "bin",
                          "left": String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"INSERT INTO \\"",
                            "unicode": false,
                            "value": "INSERT INTO ",
                          },
                          "right": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "table_name",
                          },
                          "type": ".",
                        },
                        "right": Encapsed {
                          "kind": "encapsed",
                          "raw": "\\" VALUES ($i, 'ABC');\\"",
                          "type": "string",
                          "value": Array [
                            EncapsedPart {
                              "curly": false,
                              "expression": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": " VALUES (",
                                "unicode": false,
                                "value": " VALUES (",
                              },
                              "kind": "encapsedpart",
                              "syntax": null,
                            },
                            EncapsedPart {
                              "curly": false,
                              "expression": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "i",
                              },
                              "kind": "encapsedpart",
                              "syntax": "simple",
                            },
                            EncapsedPart {
                              "curly": false,
                              "expression": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": ", 'ABC');",
                                "unicode": false,
                                "value": ", 'ABC');",
                              },
                              "kind": "encapsedpart",
                              "syntax": null,
                            },
                          ],
                        },
                        "type": ".",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "pg_query",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "increment": Array [
              Post {
                "kind": "post",
                "type": "+",
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
              },
            ],
            "init": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
                "operator": "=",
                "right": Number {
                  "kind": "number",
                  "value": "0",
                },
              },
            ],
            "kind": "for",
            "shortForm": false,
            "test": Array [
              Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "num_test_record",
                },
                "type": "<",
              },
            ],
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Assign {
            "kind": "assign",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "q",
            },
            "operator": "=",
            "parenthesizedExpression": true,
            "right": Silent {
              "expr": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "db",
                  },
                  Bin {
                    "kind": "bin",
                    "left": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"SELECT * FROM \\"",
                      "unicode": false,
                      "value": "SELECT * FROM ",
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "table_name",
                    },
                    "type": ".",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "pg_query",
                  "resolution": "uqn",
                },
              },
              "kind": "silent",
            },
          },
        },
        "right": Unary {
          "kind": "unary",
          "type": "!",
          "what": Silent {
            "expr": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "q",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pg_num_rows",
                "resolution": "uqn",
              },
            },
            "kind": "silent",
          },
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "v",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "pg_version",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              Bin {
                "kind": "bin",
                "left": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "pg_last_error",
                    "resolution": "uqn",
                  },
                },
                "right": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"\\\\n\\"",
                  "unicode": false,
                  "value": "
",
                },
                "type": ".",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "table_def_92",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pg_query",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Call {
          "arguments": Array [
            OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'server'",
                "unicode": false,
                "value": "server",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "v",
              },
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'9.2'",
              "unicode": false,
              "value": "9.2",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'>='",
              "unicode": false,
              "value": ">=",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "version_compare",
            "resolution": "uqn",
          },
        },
        "right": Bin {
          "kind": "bin",
          "left": Unary {
            "kind": "unary",
            "type": "!",
            "what": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "q",
              },
              "operator": "=",
              "parenthesizedExpression": true,
              "right": Silent {
                "expr": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "db",
                    },
                    Bin {
                      "kind": "bin",
                      "left": String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"SELECT * FROM \\"",
                        "unicode": false,
                        "value": "SELECT * FROM ",
                      },
                      "right": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "table_name_92",
                      },
                      "type": ".",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "pg_query",
                    "resolution": "uqn",
                  },
                },
                "kind": "silent",
              },
            },
          },
          "parenthesizedExpression": true,
          "right": Unary {
            "kind": "unary",
            "type": "!",
            "what": Silent {
              "expr": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "q",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "pg_num_rows",
                  "resolution": "uqn",
                },
              },
              "kind": "silent",
            },
          },
          "type": "||",
        },
        "type": "&&",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "view_def",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "pg_query",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "pg_close",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"OK\\"",
          "unicode": false,
          "value": "OK",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
