// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests sprintf() %h and %H specifiers 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Name {
            "kind": "name",
            "name": "LC_ALL",
            "resolution": "uqn",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"de_DE.utf8\\"",
            "unicode": false,
            "value": "de_DE.utf8",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "setlocale",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "f",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "1.25",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"%g %G %h %H\\\\n\\"",
            "unicode": false,
            "value": "%g %G %h %H
",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "f",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "f",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "f",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "f",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "f",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "0.00000125",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"%g %G %h %H\\\\n\\"",
            "unicode": false,
            "value": "%g %G %h %H
",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "f",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "f",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "f",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "f",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
