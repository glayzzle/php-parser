// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests ISSUE #115 (path issue when using phar) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "stub",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'<?php
Phar::interceptFileFuncs();
require \\"phar://this/index.php\\";
__HALT_COMPILER(); ?>'",
          "unicode": false,
          "value": "<?php
Phar::interceptFileFuncs();
require \\"phar://this/index.php\\";
__HALT_COMPILER(); ?>",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "p",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            Bin {
              "kind": "bin",
              "left": Magic {
                "kind": "magic",
                "raw": "__DIR__",
                "value": "__DIR__",
              },
              "right": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/issue0115_1.phar.php'",
                "unicode": false,
                "value": "/issue0115_1.phar.php",
              },
              "type": ".",
            },
            Number {
              "kind": "number",
              "value": "0",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'this'",
              "unicode": false,
              "value": "this",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "Phar",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'index.php'",
            "unicode": false,
            "value": "index.php",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "p",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'<?php
  echo \\"Hello from Index 1.\\\\n\\";
  require_once \\"phar://this/hello.php\\";
'",
          "unicode": false,
          "value": "<?php
  echo \\"Hello from Index 1.\\\\n\\";
  require_once \\"phar://this/hello.php\\";
",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'hello.php'",
            "unicode": false,
            "value": "hello.php",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "p",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Hello World 1!\\\\n\\"",
          "unicode": false,
          "value": "Hello World 1!
",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "stub",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "setStub",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "p",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Unset {
      "kind": "unset",
      "variables": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "p",
        },
      ],
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "p",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            Bin {
              "kind": "bin",
              "left": Magic {
                "kind": "magic",
                "raw": "__DIR__",
                "value": "__DIR__",
              },
              "right": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/issue0115_2.phar.php'",
                "unicode": false,
                "value": "/issue0115_2.phar.php",
              },
              "type": ".",
            },
            Number {
              "kind": "number",
              "value": "0",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'this'",
              "unicode": false,
              "value": "this",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "Phar",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'index.php'",
            "unicode": false,
            "value": "index.php",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "p",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'<?php
  echo \\"Hello from Index 2.\\\\n\\";
  require_once \\"phar://this/hello.php\\";
'",
          "unicode": false,
          "value": "<?php
  echo \\"Hello from Index 2.\\\\n\\";
  require_once \\"phar://this/hello.php\\";
",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'hello.php'",
            "unicode": false,
            "value": "hello.php",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "p",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Hello World 2!\\\\n\\"",
          "unicode": false,
          "value": "Hello World 2!
",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "stub",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "setStub",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "p",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Unset {
      "kind": "unset",
      "variables": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "p",
        },
      ],
    },
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": false,
        "target": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"php_cli_server.inc\\"",
          "unicode": false,
          "value": "php_cli_server.inc",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'-d opcache.enable=1 -d opcache.enable_cli=1 -d extension=phar.'",
              "unicode": false,
              "value": "-d opcache.enable=1 -d opcache.enable_cli=1 -d extension=phar.",
            },
            "right": Name {
              "kind": "name",
              "name": "PHP_SHLIB_SUFFIX",
              "resolution": "uqn",
            },
            "type": ".",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "php_cli_server_start",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Call {
          "arguments": Array [
            Bin {
              "kind": "bin",
              "left": Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'http://'",
                  "unicode": false,
                  "value": "http://",
                },
                "right": Name {
                  "kind": "name",
                  "name": "PHP_CLI_SERVER_ADDRESS",
                  "resolution": "uqn",
                },
                "type": ".",
              },
              "right": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/issue0115_1.phar.php'",
                "unicode": false,
                "value": "/issue0115_1.phar.php",
              },
              "type": ".",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "file_get_contents",
            "resolution": "uqn",
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Call {
          "arguments": Array [
            Bin {
              "kind": "bin",
              "left": Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'http://'",
                  "unicode": false,
                  "value": "http://",
                },
                "right": Name {
                  "kind": "name",
                  "name": "PHP_CLI_SERVER_ADDRESS",
                  "resolution": "uqn",
                },
                "type": ".",
              },
              "right": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/issue0115_2.phar.php'",
                "unicode": false,
                "value": "/issue0115_2.phar.php",
              },
              "type": ".",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "file_get_contents",
            "resolution": "uqn",
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
