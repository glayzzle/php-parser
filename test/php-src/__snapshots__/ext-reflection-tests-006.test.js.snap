// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests ReflectionClass::[gs]etStaticPropertyValue 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [],
      "body": Array [
        PropertyStatement {
          "isStatic": true,
          "kind": "propertystatement",
          "properties": Array [
            Property {
              "attrGroups": Array [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "pub",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'pub'",
                "unicode": false,
                "value": "pub",
              },
            },
          ],
          "visibility": "public",
        },
        PropertyStatement {
          "isStatic": true,
          "kind": "propertystatement",
          "properties": Array [
            Property {
              "attrGroups": Array [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "pro",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'pro'",
                "unicode": false,
                "value": "pro",
              },
            },
          ],
          "visibility": "protected",
        },
        PropertyStatement {
          "isStatic": true,
          "kind": "propertystatement",
          "properties": Array [
            Property {
              "attrGroups": Array [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "pri",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'pri'",
                "unicode": false,
                "value": "pri",
              },
            },
          ],
          "visibility": "private",
        },
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "ref",
                  },
                  "operator": "=",
                  "right": New {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'Test'",
                        "unicode": false,
                        "value": "Test",
                      },
                    ],
                    "kind": "new",
                    "what": Name {
                      "kind": "name",
                      "name": "ReflectionClass",
                      "resolution": "uqn",
                    },
                  },
                },
                "kind": "expressionstatement",
              },
              Foreach {
                "body": Block {
                  "children": Array [
                    Try {
                      "always": null,
                      "body": Block {
                        "children": Array [
                          ExpressionStatement {
                            "expression": Call {
                              "arguments": Array [
                                Call {
                                  "arguments": Array [
                                    Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "name",
                                    },
                                  ],
                                  "kind": "call",
                                  "what": PropertyLookup {
                                    "kind": "propertylookup",
                                    "offset": Identifier {
                                      "kind": "identifier",
                                      "name": "getStaticPropertyValue",
                                    },
                                    "what": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "ref",
                                    },
                                  },
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "var_dump",
                                "resolution": "uqn",
                              },
                            },
                            "kind": "expressionstatement",
                          },
                          ExpressionStatement {
                            "expression": Call {
                              "arguments": Array [
                                Call {
                                  "arguments": Array [
                                    Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "name",
                                    },
                                  ],
                                  "kind": "call",
                                  "what": PropertyLookup {
                                    "kind": "propertylookup",
                                    "offset": Identifier {
                                      "kind": "identifier",
                                      "name": "getStaticPropertyValue",
                                    },
                                    "what": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "ref",
                                    },
                                  },
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "var_dump",
                                "resolution": "uqn",
                              },
                            },
                            "kind": "expressionstatement",
                          },
                          ExpressionStatement {
                            "expression": Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "name",
                                },
                                String {
                                  "isDoubleQuote": false,
                                  "kind": "string",
                                  "raw": "'updated'",
                                  "unicode": false,
                                  "value": "updated",
                                },
                              ],
                              "kind": "call",
                              "what": PropertyLookup {
                                "kind": "propertylookup",
                                "offset": Identifier {
                                  "kind": "identifier",
                                  "name": "setStaticPropertyValue",
                                },
                                "what": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "ref",
                                },
                              },
                            },
                            "kind": "expressionstatement",
                          },
                          ExpressionStatement {
                            "expression": Call {
                              "arguments": Array [
                                Call {
                                  "arguments": Array [
                                    Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "name",
                                    },
                                  ],
                                  "kind": "call",
                                  "what": PropertyLookup {
                                    "kind": "propertylookup",
                                    "offset": Identifier {
                                      "kind": "identifier",
                                      "name": "getStaticPropertyValue",
                                    },
                                    "what": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "ref",
                                    },
                                  },
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "var_dump",
                                "resolution": "uqn",
                              },
                            },
                            "kind": "expressionstatement",
                          },
                        ],
                        "kind": "block",
                      },
                      "catches": Array [
                        Catch {
                          "body": Block {
                            "children": Array [
                              Echo {
                                "expressions": Array [
                                  String {
                                    "isDoubleQuote": true,
                                    "kind": "string",
                                    "raw": "\\"EXCEPTION\\\\n\\"",
                                    "unicode": false,
                                    "value": "EXCEPTION
",
                                  },
                                ],
                                "kind": "echo",
                                "shortForm": false,
                              },
                            ],
                            "kind": "block",
                          },
                          "kind": "catch",
                          "variable": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "e",
                          },
                          "what": Array [
                            Name {
                              "kind": "name",
                              "name": "Exception",
                              "resolution": "uqn",
                            },
                          ],
                        },
                      ],
                      "kind": "try",
                    },
                  ],
                  "kind": "block",
                },
                "key": null,
                "kind": "foreach",
                "shortForm": false,
                "source": Array {
                  "items": Array [
                    Entry {
                      "byRef": false,
                      "key": null,
                      "kind": "entry",
                      "unpack": false,
                      "value": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'pub'",
                        "unicode": false,
                        "value": "pub",
                      },
                    },
                    Entry {
                      "byRef": false,
                      "key": null,
                      "kind": "entry",
                      "unpack": false,
                      "value": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'pro'",
                        "unicode": false,
                        "value": "pro",
                      },
                    },
                    Entry {
                      "byRef": false,
                      "key": null,
                      "kind": "entry",
                      "unpack": false,
                      "value": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'pri'",
                        "unicode": false,
                        "value": "pri",
                      },
                    },
                  ],
                  "kind": "array",
                  "shortForm": false,
                },
                "value": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "name",
                },
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": true,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "testing",
          },
          "nullable": false,
          "type": null,
          "visibility": "",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "Test",
      },
    },
    Class {
      "attrGroups": Array [],
      "body": Array [
        PropertyStatement {
          "isStatic": true,
          "kind": "propertystatement",
          "properties": Array [
            Property {
              "attrGroups": Array [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "pri",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'pri'",
                "unicode": false,
                "value": "pri",
              },
            },
          ],
          "visibility": "private",
        },
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "ref",
                  },
                  "operator": "=",
                  "right": New {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'Test'",
                        "unicode": false,
                        "value": "Test",
                      },
                    ],
                    "kind": "new",
                    "what": Name {
                      "kind": "name",
                      "name": "ReflectionClass",
                      "resolution": "uqn",
                    },
                  },
                },
                "kind": "expressionstatement",
              },
              Foreach {
                "body": Block {
                  "children": Array [
                    Try {
                      "always": null,
                      "body": Block {
                        "children": Array [
                          ExpressionStatement {
                            "expression": Call {
                              "arguments": Array [
                                Call {
                                  "arguments": Array [
                                    Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "name",
                                    },
                                  ],
                                  "kind": "call",
                                  "what": PropertyLookup {
                                    "kind": "propertylookup",
                                    "offset": Identifier {
                                      "kind": "identifier",
                                      "name": "getStaticPropertyValue",
                                    },
                                    "what": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "ref",
                                    },
                                  },
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "var_dump",
                                "resolution": "uqn",
                              },
                            },
                            "kind": "expressionstatement",
                          },
                          ExpressionStatement {
                            "expression": Call {
                              "arguments": Array [
                                Call {
                                  "arguments": Array [
                                    Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "name",
                                    },
                                  ],
                                  "kind": "call",
                                  "what": PropertyLookup {
                                    "kind": "propertylookup",
                                    "offset": Identifier {
                                      "kind": "identifier",
                                      "name": "getStaticPropertyValue",
                                    },
                                    "what": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "ref",
                                    },
                                  },
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "var_dump",
                                "resolution": "uqn",
                              },
                            },
                            "kind": "expressionstatement",
                          },
                          ExpressionStatement {
                            "expression": Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "name",
                                },
                                String {
                                  "isDoubleQuote": false,
                                  "kind": "string",
                                  "raw": "'updated'",
                                  "unicode": false,
                                  "value": "updated",
                                },
                              ],
                              "kind": "call",
                              "what": PropertyLookup {
                                "kind": "propertylookup",
                                "offset": Identifier {
                                  "kind": "identifier",
                                  "name": "setStaticPropertyValue",
                                },
                                "what": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "ref",
                                },
                              },
                            },
                            "kind": "expressionstatement",
                          },
                          ExpressionStatement {
                            "expression": Call {
                              "arguments": Array [
                                Call {
                                  "arguments": Array [
                                    Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "name",
                                    },
                                  ],
                                  "kind": "call",
                                  "what": PropertyLookup {
                                    "kind": "propertylookup",
                                    "offset": Identifier {
                                      "kind": "identifier",
                                      "name": "getStaticPropertyValue",
                                    },
                                    "what": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "ref",
                                    },
                                  },
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "var_dump",
                                "resolution": "uqn",
                              },
                            },
                            "kind": "expressionstatement",
                          },
                        ],
                        "kind": "block",
                      },
                      "catches": Array [
                        Catch {
                          "body": Block {
                            "children": Array [
                              Echo {
                                "expressions": Array [
                                  String {
                                    "isDoubleQuote": true,
                                    "kind": "string",
                                    "raw": "\\"EXCEPTION\\\\n\\"",
                                    "unicode": false,
                                    "value": "EXCEPTION
",
                                  },
                                ],
                                "kind": "echo",
                                "shortForm": false,
                              },
                            ],
                            "kind": "block",
                          },
                          "kind": "catch",
                          "variable": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "e",
                          },
                          "what": Array [
                            Name {
                              "kind": "name",
                              "name": "Exception",
                              "resolution": "uqn",
                            },
                          ],
                        },
                      ],
                      "kind": "try",
                    },
                  ],
                  "kind": "block",
                },
                "key": null,
                "kind": "foreach",
                "shortForm": false,
                "source": Array {
                  "items": Array [
                    Entry {
                      "byRef": false,
                      "key": null,
                      "kind": "entry",
                      "unpack": false,
                      "value": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'pub'",
                        "unicode": false,
                        "value": "pub",
                      },
                    },
                    Entry {
                      "byRef": false,
                      "key": null,
                      "kind": "entry",
                      "unpack": false,
                      "value": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'pro'",
                        "unicode": false,
                        "value": "pro",
                      },
                    },
                    Entry {
                      "byRef": false,
                      "key": null,
                      "kind": "entry",
                      "unpack": false,
                      "value": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'pri'",
                        "unicode": false,
                        "value": "pri",
                      },
                    },
                  ],
                  "kind": "array",
                  "shortForm": false,
                },
                "value": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "name",
                },
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": true,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "testing",
          },
          "nullable": false,
          "type": null,
          "visibility": "",
        },
      ],
      "extends": Name {
        "kind": "name",
        "name": "Test",
        "resolution": "uqn",
      },
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "TestDerived",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "ref",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'Test'",
              "unicode": false,
              "value": "Test",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "ReflectionClass",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          Try {
            "always": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "name",
                          },
                        ],
                        "kind": "call",
                        "what": PropertyLookup {
                          "kind": "propertylookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "getStaticPropertyValue",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "ref",
                          },
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "name",
                          },
                        ],
                        "kind": "call",
                        "what": PropertyLookup {
                          "kind": "propertylookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "getStaticPropertyValue",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "ref",
                          },
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "name",
                      },
                      String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'updated'",
                        "unicode": false,
                        "value": "updated",
                      },
                    ],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "setStaticPropertyValue",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "ref",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "name",
                          },
                        ],
                        "kind": "call",
                        "what": PropertyLookup {
                          "kind": "propertylookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "getStaticPropertyValue",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "ref",
                          },
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "catches": Array [
              Catch {
                "body": Block {
                  "children": Array [
                    Echo {
                      "expressions": Array [
                        String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"EXCEPTION\\\\n\\"",
                          "unicode": false,
                          "value": "EXCEPTION
",
                        },
                      ],
                      "kind": "echo",
                      "shortForm": false,
                    },
                  ],
                  "kind": "block",
                },
                "kind": "catch",
                "variable": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "e",
                },
                "what": Array [
                  Name {
                    "kind": "name",
                    "name": "Exception",
                    "resolution": "uqn",
                  },
                ],
              },
            ],
            "kind": "try",
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Array {
        "items": Array [
          Entry {
            "byRef": false,
            "key": null,
            "kind": "entry",
            "unpack": false,
            "value": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'pub'",
              "unicode": false,
              "value": "pub",
            },
          },
          Entry {
            "byRef": false,
            "key": null,
            "kind": "entry",
            "unpack": false,
            "value": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'pro'",
              "unicode": false,
              "value": "pro",
            },
          },
          Entry {
            "byRef": false,
            "key": null,
            "kind": "entry",
            "unpack": false,
            "value": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'pri'",
              "unicode": false,
              "value": "pri",
            },
          },
        ],
        "kind": "array",
        "shortForm": false,
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "name",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": StaticLookup {
          "kind": "staticlookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "testing",
          },
          "what": Name {
            "kind": "name",
            "name": "Test",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": StaticLookup {
          "kind": "staticlookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "testing",
          },
          "what": Name {
            "kind": "name",
            "name": "TestDerived",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
