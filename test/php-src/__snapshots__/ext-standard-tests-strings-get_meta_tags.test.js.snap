// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests get_meta_tags() tests 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "filename",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Magic {
            "kind": "magic",
            "raw": "__DIR__",
            "value": "__DIR__",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"/get_meta_tags.html\\"",
            "unicode": false,
            "value": "/get_meta_tags.html",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "data",
        },
        "operator": "=",
        "right": Encapsed {
          "kind": "encapsed",
          "label": "DATA",
          "raw": "<<<DATA
<meta name=\\"author\\" content=\\"name\\">
<meta name=\\"keywords\\" content=\\"php documentation\\">
<meta name=\\"DESCRIPTION\\" content=\\"a php manual\\">
<meta name=\\"geo.position\\" content=\\"49.33;-86.59\\">
</head> <!-- parsing stops here -->
DATA",
          "type": "heredoc",
          "value": Array [
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "<meta name=\\"author\\" content=\\"name\\">
<meta name=\\"keywords\\" content=\\"php documentation\\">
<meta name=\\"DESCRIPTION\\" content=\\"a php manual\\">
<meta name=\\"geo.position\\" content=\\"49.33;-86.59\\">
</head> <!-- parsing stops here -->
",
                "unicode": false,
                "value": "<meta name=\\"author\\" content=\\"name\\">
<meta name=\\"keywords\\" content=\\"php documentation\\">
<meta name=\\"DESCRIPTION\\" content=\\"a php manual\\">
<meta name=\\"geo.position\\" content=\\"49.33;-86.59\\">
</head> <!-- parsing stops here -->",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
          ],
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "data1",
        },
        "operator": "=",
        "right": Encapsed {
          "kind": "encapsed",
          "label": "DATA",
          "raw": "<<<DATA
<html>
    <head>
        <meta name=\\"author\\" content=\\"name\\">
        <meta name=\\"keywords\\" content=\\"php documentation\\">
        <meta name=\\"DESCRIPTION\\" content=\\"a php manual\\">
        <meta name=\\"geo.position\\" content=\\"49.33;-86.59\\">
    </head>
    <body>
        <meta name=\\"author\\" content=\\"name1\\">
        <meta name=\\"keywords\\" content=\\"php documentation1\\">
        <meta name=\\"DESCRIPTION\\" content=\\"a php manual1\\">
        <meta name=\\"geo.position\\" content=\\"49.33;-86.591\\">
    </body>
</html>
DATA",
          "type": "heredoc",
          "value": Array [
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "<html>
    <head>
        <meta name=\\"author\\" content=\\"name\\">
        <meta name=\\"keywords\\" content=\\"php documentation\\">
        <meta name=\\"DESCRIPTION\\" content=\\"a php manual\\">
        <meta name=\\"geo.position\\" content=\\"49.33;-86.59\\">
    </head>
    <body>
        <meta name=\\"author\\" content=\\"name1\\">
        <meta name=\\"keywords\\" content=\\"php documentation1\\">
        <meta name=\\"DESCRIPTION\\" content=\\"a php manual1\\">
        <meta name=\\"geo.position\\" content=\\"49.33;-86.591\\">
    </body>
</html>
",
                "unicode": false,
                "value": "<html>
    <head>
        <meta name=\\"author\\" content=\\"name\\">
        <meta name=\\"keywords\\" content=\\"php documentation\\">
        <meta name=\\"DESCRIPTION\\" content=\\"a php manual\\">
        <meta name=\\"geo.position\\" content=\\"49.33;-86.59\\">
    </head>
    <body>
        <meta name=\\"author\\" content=\\"name1\\">
        <meta name=\\"keywords\\" content=\\"php documentation1\\">
        <meta name=\\"DESCRIPTION\\" content=\\"a php manual1\\">
        <meta name=\\"geo.position\\" content=\\"49.33;-86.591\\">
    </body>
</html>",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
          ],
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "data2",
        },
        "operator": "=",
        "right": Encapsed {
          "kind": "encapsed",
          "label": "DATA",
          "raw": "<<<DATA
<meta name=\\"author\\" content=\\"name\\"
<meta name=\\"keywords\\" content=\\"php documentation\\">
DATA",
          "type": "heredoc",
          "value": Array [
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "<meta name=\\"author\\" content=\\"name\\"
<meta name=\\"keywords\\" content=\\"php documentation\\">
",
                "unicode": false,
                "value": "<meta name=\\"author\\" content=\\"name\\"
<meta name=\\"keywords\\" content=\\"php documentation\\">",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
          ],
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "data3",
        },
        "operator": "=",
        "right": Encapsed {
          "kind": "encapsed",
          "label": "DATA",
          "raw": "<<<DATA
<meta <meta name=\\"keywords\\" content=\\"php documentation\\">
DATA",
          "type": "heredoc",
          "value": Array [
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "<meta <meta name=\\"keywords\\" content=\\"php documentation\\">
",
                "unicode": false,
                "value": "<meta <meta name=\\"keywords\\" content=\\"php documentation\\">",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
          ],
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "data4",
        },
        "operator": "=",
        "right": Encapsed {
          "kind": "encapsed",
          "label": "DATA",
          "raw": "<<<DATA
<meta name=\\"author\\" content=\\"name\\"
<meta name=\\"keywords\\" content=\\"php documentation\\"
DATA",
          "type": "heredoc",
          "value": Array [
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "<meta name=\\"author\\" content=\\"name\\"
<meta name=\\"keywords\\" content=\\"php documentation\\"
",
                "unicode": false,
                "value": "<meta name=\\"author\\" content=\\"name\\"
<meta name=\\"keywords\\" content=\\"php documentation\\"",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
          ],
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "array",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "name": "data",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "name": "data1",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "name": "data2",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "name": "data3",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "name": "data4",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\"",
                "unicode": false,
                "value": "",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"<>\\"",
                "unicode": false,
                "value": "<>",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"<meta<<<<<\\"",
                "unicode": false,
                "value": "<meta<<<<<",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "filename",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "html",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "file_put_contents",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "filename",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "get_meta_tags",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "array",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "html",
      },
    },
    ExpressionStatement {
      "expression": Silent {
        "expr": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "filename",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "unlink",
            "resolution": "uqn",
          },
        },
        "kind": "silent",
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Done\\\\n\\"",
          "unicode": false,
          "value": "Done
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
