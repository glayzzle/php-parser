// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test array_multisort() function : usage variation - testing with multiple array arguments 1`] = `
Program {
  "children": Array [
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"*** Testing array_multisort() : Testing  all array sort specifiers ***\\\\n\\"",
          "unicode": false,
          "value": "*** Testing array_multisort() : Testing  all array sort specifiers ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "ar",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "2",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"aa\\"",
                "unicode": false,
                "value": "aa",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"1\\"",
                "unicode": false,
                "value": "1",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "ar",
          },
          Name {
            "kind": "name",
            "name": "SORT_REGULAR",
            "resolution": "uqn",
          },
          Name {
            "kind": "name",
            "name": "SORT_ASC",
            "resolution": "uqn",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "array_multisort",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "ar",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "ar",
          },
          Name {
            "kind": "name",
            "name": "SORT_STRING",
            "resolution": "uqn",
          },
          Name {
            "kind": "name",
            "name": "SORT_ASC",
            "resolution": "uqn",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "array_multisort",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "ar",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "ar",
          },
          Name {
            "kind": "name",
            "name": "SORT_NUMERIC",
            "resolution": "uqn",
          },
          Name {
            "kind": "name",
            "name": "SORT_ASC",
            "resolution": "uqn",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "array_multisort",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "ar",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
