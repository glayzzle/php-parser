// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests mb_strwidth() 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'include_path'",
            "unicode": false,
            "value": "include_path",
          },
          Magic {
            "kind": "magic",
            "raw": "__DIR__",
            "value": "__DIR__",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "ini_set",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": false,
        "target": String {
          "isDoubleQuote": false,
          "kind": "string",
          "parenthesizedExpression": true,
          "raw": "'common.inc'",
          "unicode": false,
          "value": "common.inc",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "euc_jp",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'H*'",
              "unicode": false,
              "value": "H*",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'30313233a4b3a4cecab8bbfacef3a4cfc6fccbdcb8eca4c7a4b9a1a34555432d4a50a4f2bbc8a4c3a4c6a4a4a4dea4b9a1a3c6fccbdcb8eca4cfccccc5ddbdada4a4a1a3'",
              "unicode": false,
              "value": "30313233a4b3a4cecab8bbfacef3a4cfc6fccbdcb8eca4c7a4b9a1a34555432d4a50a4f2bbc8a4c3a4c6a4a4a4dea4b9a1a3c6fccbdcb8eca4cfccccc5ddbdada4a4a1a3",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "pack",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "utf8",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'∮ E⋅da = Q'",
          "unicode": false,
          "value": "∮ E⋅da = Q",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "utf16le",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'H*'",
              "unicode": false,
              "value": "H*",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'1a043804400438043b043b04380446043004200069007300200043007900720069006c006c0069006300'",
              "unicode": false,
              "value": "1a043804400438043b043b04380446043004200069007300200043007900720069006c006c0069006300",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "pack",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "utf16be",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'H*'",
              "unicode": false,
              "value": "H*",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'041a043804400438043b043b04380446043000200069007300200043007900720069006c006c00690063'",
              "unicode": false,
              "value": "041a043804400438043b043b04380446043000200069007300200043007900720069006c006c00690063",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "pack",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "koi8r",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'H*'",
              "unicode": false,
              "value": "H*",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'ebc9d2c9ccccc9c3c120697320437972696c6c6963'",
              "unicode": false,
              "value": "ebc9d2c9ccccc9c3c120697320437972696c6c6963",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "pack",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"1: \\"",
              "unicode": false,
              "value": "1: ",
            },
            "right": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "euc_jp",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'EUC-JP'",
                  "unicode": false,
                  "value": "EUC-JP",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mb_strwidth",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"2: \\"",
              "unicode": false,
              "value": "2: ",
            },
            "right": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "utf8",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'UTF-8'",
                  "unicode": false,
                  "value": "UTF-8",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mb_strwidth",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"3: \\"",
              "unicode": false,
              "value": "3: ",
            },
            "right": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "utf16le",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'UTF-16LE'",
                  "unicode": false,
                  "value": "UTF-16LE",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mb_strwidth",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"4: \\"",
              "unicode": false,
              "value": "4: ",
            },
            "right": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "utf16be",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'UTF-16BE'",
                  "unicode": false,
                  "value": "UTF-16BE",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mb_strwidth",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"5: \\"",
              "unicode": false,
              "value": "5: ",
            },
            "right": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "koi8r",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'KOI8-R'",
                  "unicode": false,
                  "value": "KOI8-R",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mb_strwidth",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
