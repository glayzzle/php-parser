// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests sprintf() function 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "agent",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"%.5s\\"",
              "unicode": false,
              "value": "%.5s",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"James Bond, 007\\"",
              "unicode": false,
              "value": "James Bond, 007",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sprintf",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "parenthesizedExpression": true,
          "raw": "\\"sprintf string truncate test:   \\"",
          "unicode": false,
          "value": "sprintf string truncate test:   ",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    If {
      "alternate": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "parenthesizedExpression": true,
                "raw": "\\"failed!\\\\n\\"",
                "unicode": false,
                "value": "failed!
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "parenthesizedExpression": true,
                "raw": "\\"passed\\\\n\\"",
                "unicode": false,
                "value": "passed
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "agent",
        },
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"James\\"",
          "unicode": false,
          "value": "James",
        },
        "type": "==",
      },
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "parenthesizedExpression": true,
          "raw": "\\"sprintf padding and align test: \\"",
          "unicode": false,
          "value": "sprintf padding and align test: ",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "test",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"abc%04d %-20s%c\\"",
              "unicode": false,
              "value": "abc%04d %-20s%c",
            },
            Number {
              "kind": "number",
              "value": "20",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"fisketur\\"",
              "unicode": false,
              "value": "fisketur",
            },
            Number {
              "kind": "number",
              "value": "33",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sprintf",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "parenthesizedExpression": true,
                "raw": "\\"failed!\\\\n\\"",
                "unicode": false,
                "value": "failed!
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "parenthesizedExpression": true,
                "raw": "\\"passed\\\\n\\"",
                "unicode": false,
                "value": "passed
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "test",
        },
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"abc0020 fisketur            !\\"",
          "unicode": false,
          "value": "abc0020 fisketur            !",
        },
        "type": "==",
      },
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "parenthesizedExpression": true,
          "raw": "\\"sprintf octal and hex test:     \\"",
          "unicode": false,
          "value": "sprintf octal and hex test:     ",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "test",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Bin {
              "kind": "bin",
              "left": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"%4o %4x %4X %0\\"",
                "unicode": false,
                "value": "%4o %4x %4X %0",
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"8x\\"",
                "unicode": false,
                "value": "8x",
              },
              "type": ".",
            },
            Number {
              "kind": "number",
              "value": "128",
            },
            Number {
              "kind": "number",
              "value": "1024",
            },
            Number {
              "kind": "number",
              "value": "49151",
            },
            Number {
              "kind": "number",
              "value": "3457925",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sprintf",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "parenthesizedExpression": true,
                "raw": "\\"failed!\\\\n\\"",
                "unicode": false,
                "value": "failed!
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "parenthesizedExpression": true,
                "raw": "\\"passed\\\\n\\"",
                "unicode": false,
                "value": "passed
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "test",
        },
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\" 200  400 BFFF 0034c385\\"",
          "unicode": false,
          "value": " 200  400 BFFF 0034c385",
        },
        "type": "==",
      },
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "parenthesizedExpression": true,
          "raw": "\\"sprintf octal binary test:      \\"",
          "unicode": false,
          "value": "sprintf octal binary test:      ",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "test",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"%b\\"",
              "unicode": false,
              "value": "%b",
            },
            Number {
              "kind": "number",
              "value": "3457925",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sprintf",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "parenthesizedExpression": true,
                "raw": "\\"failed!\\\\n\\"",
                "unicode": false,
                "value": "failed!
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "parenthesizedExpression": true,
                "raw": "\\"passed\\\\n\\"",
                "unicode": false,
                "value": "passed
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "test",
        },
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"1101001100001110000101\\"",
          "unicode": false,
          "value": "1101001100001110000101",
        },
        "type": "==",
      },
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "parenthesizedExpression": true,
          "raw": "\\"sprintf float test:             \\"",
          "unicode": false,
          "value": "sprintf float test:             ",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "test",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Bin {
              "kind": "bin",
              "left": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"%0\\"",
                "unicode": false,
                "value": "%0",
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"06.2f\\"",
                "unicode": false,
                "value": "06.2f",
              },
              "type": ".",
            },
            Bin {
              "kind": "bin",
              "left": Number {
                "kind": "number",
                "value": "10000",
              },
              "right": Number {
                "kind": "number",
                "value": "3.0",
              },
              "type": "/",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sprintf",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "parenthesizedExpression": true,
                "raw": "\\"failed!\\\\n\\"",
                "unicode": false,
                "value": "failed!
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "parenthesizedExpression": true,
                "raw": "\\"passed\\\\n\\"",
                "unicode": false,
                "value": "passed
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "test",
        },
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"003333.33\\"",
          "unicode": false,
          "value": "003333.33",
        },
        "type": "==",
      },
    },
    Echo {
      "expressions": Array [
        Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"%.2f\\\\n\\"",
              "unicode": false,
              "value": "%.2f
",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"99.00\\"",
              "unicode": false,
              "value": "99.00",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sprintf",
            "resolution": "uqn",
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"%.2f\\\\n\\"",
              "unicode": false,
              "value": "%.2f
",
            },
            Number {
              "kind": "number",
              "value": "99.00",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sprintf",
            "resolution": "uqn",
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"%e\\\\n\\"",
              "unicode": false,
              "value": "%e
",
            },
            Number {
              "kind": "number",
              "value": "1.234E-18",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sprintf",
            "resolution": "uqn",
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"%e\\\\n\\"",
              "unicode": false,
              "value": "%e
",
            },
            Number {
              "kind": "number",
              "value": "1.234E+18",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sprintf",
            "resolution": "uqn",
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"%e\\\\n\\"",
              "unicode": false,
              "value": "%e
",
            },
            Number {
              "kind": "number",
              "value": "9843243.12",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sprintf",
            "resolution": "uqn",
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"%e\\\\n\\"",
              "unicode": false,
              "value": "%e
",
            },
            Unary {
              "kind": "unary",
              "type": "-",
              "what": Number {
                "kind": "number",
                "value": "9843243.12",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sprintf",
            "resolution": "uqn",
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
