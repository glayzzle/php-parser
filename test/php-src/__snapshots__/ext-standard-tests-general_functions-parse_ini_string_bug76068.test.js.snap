// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #76068 parse_ini_string fails to parse "[foo]\\nbar=1|>baz" with segfault 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "s",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[foo]\\\\nbar=1|>baz\\"",
              "unicode": false,
              "value": "[foo]
bar=1|>baz",
            },
            Boolean {
              "kind": "boolean",
              "raw": "true",
              "value": true,
            },
            Name {
              "kind": "name",
              "name": "\\\\INI_SCANNER_TYPED",
              "resolution": "fqn",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "parse_ini_string",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "s",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[foo]\\\\nbar=\\\\\\"1|>baz\\\\\\"\\"",
              "unicode": false,
              "value": "[foo]
bar=\\"1|>baz\\\\\\"",
            },
            Boolean {
              "kind": "boolean",
              "raw": "true",
              "value": true,
            },
            Name {
              "kind": "name",
              "name": "\\\\INI_SCANNER_TYPED",
              "resolution": "fqn",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "parse_ini_string",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "s",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[foo]\\\\nbar=1\\"",
              "unicode": false,
              "value": "[foo]
bar=1",
            },
            Boolean {
              "kind": "boolean",
              "raw": "true",
              "value": true,
            },
            Name {
              "kind": "name",
              "name": "\\\\INI_SCANNER_TYPED",
              "resolution": "fqn",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "parse_ini_string",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "s",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[foo]\\\\nbar=42|>baz\\"",
              "unicode": false,
              "value": "[foo]
bar=42|>baz",
            },
            Boolean {
              "kind": "boolean",
              "raw": "true",
              "value": true,
            },
            Name {
              "kind": "name",
              "name": "\\\\INI_SCANNER_TYPED",
              "resolution": "fqn",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "parse_ini_string",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
