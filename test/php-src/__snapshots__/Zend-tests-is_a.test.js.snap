// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests is_a() and is_subclass_of() shouldn't call autoloader 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Closure {
            "arguments": Array [
              Parameter {
                "attrGroups": Array [],
                "byref": false,
                "flags": 0,
                "kind": "parameter",
                "name": Identifier {
                  "kind": "identifier",
                  "name": "name",
                },
                "nullable": false,
                "readonly": false,
                "type": null,
                "value": null,
                "variadic": false,
              },
            ],
            "attrGroups": Array [],
            "body": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    Encapsed {
                      "kind": "encapsed",
                      "parenthesizedExpression": true,
                      "raw": "\\"AUTOLOAD '$name'\\\\n\\"",
                      "type": "string",
                      "value": Array [
                        EncapsedPart {
                          "curly": false,
                          "expression": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "AUTOLOAD '",
                            "unicode": false,
                            "value": "AUTOLOAD '",
                          },
                          "kind": "encapsedpart",
                          "syntax": null,
                        },
                        EncapsedPart {
                          "curly": false,
                          "expression": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "name",
                          },
                          "kind": "encapsedpart",
                          "syntax": "simple",
                        },
                        EncapsedPart {
                          "curly": false,
                          "expression": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'\\\\n",
                            "unicode": false,
                            "value": "'",
                          },
                          "kind": "encapsedpart",
                          "syntax": null,
                        },
                      ],
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
                ExpressionStatement {
                  "expression": Eval {
                    "kind": "eval",
                    "source": Encapsed {
                      "kind": "encapsed",
                      "raw": "\\"class $name {}\\"",
                      "type": "string",
                      "value": Array [
                        EncapsedPart {
                          "curly": false,
                          "expression": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "class ",
                            "unicode": false,
                            "value": "class ",
                          },
                          "kind": "encapsedpart",
                          "syntax": null,
                        },
                        EncapsedPart {
                          "curly": false,
                          "expression": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "name",
                          },
                          "kind": "encapsedpart",
                          "syntax": "simple",
                        },
                        EncapsedPart {
                          "curly": false,
                          "expression": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": " {}",
                            "unicode": false,
                            "value": " {}",
                          },
                          "kind": "encapsedpart",
                          "syntax": null,
                        },
                      ],
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "byref": false,
            "isStatic": false,
            "kind": "closure",
            "nullable": false,
            "type": null,
            "uses": Array [],
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "spl_autoload_register",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Class {
      "attrGroups": Array [],
      "body": Array [],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "BASE",
      },
    },
    Interface {
      "attrGroups": Array [],
      "body": Array [],
      "extends": null,
      "kind": "interface",
      "name": Identifier {
        "kind": "identifier",
        "name": "I",
      },
    },
    Class {
      "attrGroups": Array [],
      "body": Array [],
      "extends": Name {
        "kind": "name",
        "name": "BASE",
        "resolution": "uqn",
      },
      "implements": Array [
        Name {
          "kind": "name",
          "name": "I",
          "resolution": "uqn",
        },
      ],
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "A",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "A",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "a",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"B1\\"",
                "unicode": false,
                "value": "B1",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_a",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "a",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"A\\"",
                "unicode": false,
                "value": "A",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_a",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "a",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"BASE\\"",
                "unicode": false,
                "value": "BASE",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_a",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "a",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"I\\"",
                "unicode": false,
                "value": "I",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_a",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "a",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"B2\\"",
                "unicode": false,
                "value": "B2",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_subclass_of",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "a",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"A\\"",
                "unicode": false,
                "value": "A",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_subclass_of",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "a",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"BASE\\"",
                "unicode": false,
                "value": "BASE",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_subclass_of",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "a",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"I\\"",
                "unicode": false,
                "value": "I",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_subclass_of",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"X1\\"",
                "unicode": false,
                "value": "X1",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"X2\\"",
                "unicode": false,
                "value": "X2",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_subclass_of",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
