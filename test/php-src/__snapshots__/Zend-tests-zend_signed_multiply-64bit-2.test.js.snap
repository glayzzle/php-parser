// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Zend signed multiply 64-bit, variation 2 1`] = `
Program {
  "children": Array [
    For {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "c",
                },
                Call {
                  "arguments": Array [
                    Name {
                      "kind": "name",
                      "name": "PHP_INT_MIN",
                      "resolution": "uqn",
                    },
                    Number {
                      "kind": "number",
                      "value": "10",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "intdiv",
                    "resolution": "uqn",
                  },
                },
                Bin {
                  "kind": "bin",
                  "left": Call {
                    "arguments": Array [
                      Name {
                        "kind": "name",
                        "name": "PHP_INT_MIN",
                        "resolution": "uqn",
                      },
                      Number {
                        "kind": "number",
                        "value": "10",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "intdiv",
                      "resolution": "uqn",
                    },
                  },
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "c",
                  },
                  "type": "*",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"-----------\\\\n\\"",
                "unicode": false,
                "value": "-----------
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "increment": Array [
        Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "c",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "c",
          },
          "operator": "=",
          "right": Unary {
            "kind": "unary",
            "type": "-",
            "what": Number {
              "kind": "number",
              "value": "16",
            },
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "c",
          },
          "right": Number {
            "kind": "number",
            "value": "0",
          },
          "type": "<",
        },
      ],
    },
    For {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "c",
                },
                Call {
                  "arguments": Array [
                    Name {
                      "kind": "name",
                      "name": "PHP_INT_MAX",
                      "resolution": "uqn",
                    },
                    Number {
                      "kind": "number",
                      "value": "10",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "intdiv",
                    "resolution": "uqn",
                  },
                },
                Bin {
                  "kind": "bin",
                  "left": Call {
                    "arguments": Array [
                      Name {
                        "kind": "name",
                        "name": "PHP_INT_MAX",
                        "resolution": "uqn",
                      },
                      Number {
                        "kind": "number",
                        "value": "10",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "intdiv",
                      "resolution": "uqn",
                    },
                  },
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "c",
                  },
                  "type": "*",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"-----------\\\\n\\"",
                "unicode": false,
                "value": "-----------
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "increment": Array [
        Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "c",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "c",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "0",
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "c",
          },
          "right": Number {
            "kind": "number",
            "value": "16",
          },
          "type": "<=",
        },
      ],
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
