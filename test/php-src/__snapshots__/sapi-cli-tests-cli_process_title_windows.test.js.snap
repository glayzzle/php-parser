// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Check cli_process_title support in Windows 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "is_windows8_or_above",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Name {
              "kind": "name",
              "name": "PHP_WINDOWS_VERSION_MAJOR",
              "resolution": "uqn",
            },
            "right": Number {
              "kind": "number",
              "value": "10",
            },
            "type": ">=",
          },
          "right": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": Name {
                "kind": "name",
                "name": "PHP_WINDOWS_VERSION_MAJOR",
                "resolution": "uqn",
              },
              "right": Number {
                "kind": "number",
                "value": "6",
              },
              "type": ">=",
            },
            "right": Bin {
              "kind": "bin",
              "left": Name {
                "kind": "name",
                "name": "PHP_WINDOWS_VERSION_MINOR",
                "resolution": "uqn",
              },
              "right": Number {
                "kind": "number",
                "value": "2",
              },
              "type": ">=",
            },
            "type": "&&",
          },
          "type": "||",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"*** Testing setting the process title ***\\\\n\\"",
          "unicode": false,
          "value": "*** Testing setting the process title ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "original_title",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"title\\"",
              "unicode": false,
              "value": "title",
            },
            Boolean {
              "kind": "boolean",
              "raw": "true",
              "value": true,
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "uniqid",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "pid",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "getmypid",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Echo {
        "expressions": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"Successfully set title\\\\n\\"",
            "unicode": false,
            "value": "Successfully set title
",
          },
        ],
        "kind": "echo",
        "shortForm": false,
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "original_title",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "cli_set_process_title",
            "resolution": "uqn",
          },
        },
        "right": Boolean {
          "kind": "boolean",
          "raw": "true",
          "value": true,
        },
        "type": "===",
      },
    },
    If {
      "alternate": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "loaded_title",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"PowerShell -NoProfile \\\\\\"get-process cmd*,powershell* | Select-Object mainWindowTitle | ft -hide\\\\\\"\\"",
                    "unicode": false,
                    "value": "PowerShell -NoProfile \\"get-process cmd*,powershell* | Select-Object mainWindowTitle | ft -hide\\\\\\"",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "shell_exec",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"Reading title using get-process failed\\\\n\\"",
                      "unicode": false,
                      "value": "Reading title using get-process failed
",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
                ExpressionStatement {
                  "expression": Exit {
                    "expression": null,
                    "kind": "exit",
                    "useDie": true,
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "loaded_title",
              },
              "right": NullKeyword {
                "kind": "nullkeyword",
                "raw": "null",
              },
              "type": "===",
            },
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "loaded_title",
                },
                "operator": "=",
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "original_title",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "loaded_title",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "original_title",
                  },
                  Number {
                    "kind": "number",
                    "value": "0",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "substr_count",
                  "resolution": "uqn",
                },
              },
              "right": Number {
                "kind": "number",
                "value": "1",
              },
              "type": "==",
            },
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "loaded_title",
              },
              "operator": "=",
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "original_title",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Variable {
        "curly": false,
        "kind": "variable",
        "name": "is_windows8_or_above",
      },
    },
    If {
      "alternate": Echo {
        "expressions": Array [
          Encapsed {
            "kind": "encapsed",
            "raw": "\\"Actually loaded from get-process: $loaded_title\\\\n\\"",
            "type": "string",
            "value": Array [
              EncapsedPart {
                "curly": false,
                "expression": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "Actually loaded from get-process: ",
                  "unicode": false,
                  "value": "Actually loaded from get-process: ",
                },
                "kind": "encapsedpart",
                "syntax": null,
              },
              EncapsedPart {
                "curly": false,
                "expression": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "loaded_title",
                },
                "kind": "encapsedpart",
                "syntax": "simple",
              },
              EncapsedPart {
                "curly": false,
                "expression": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "\\\\n",
                  "unicode": false,
                  "value": "",
                },
                "kind": "encapsedpart",
                "syntax": null,
              },
            ],
          },
        ],
        "kind": "echo",
        "shortForm": false,
      },
      "body": Echo {
        "expressions": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"Successfully verified title using get-process\\\\n\\"",
            "unicode": false,
            "value": "Successfully verified title using get-process
",
          },
        ],
        "kind": "echo",
        "shortForm": false,
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "loaded_title",
        },
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "original_title",
        },
        "type": "==",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "read_title",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "cli_get_process_title",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": Echo {
        "expressions": Array [
          Encapsed {
            "kind": "encapsed",
            "raw": "\\"Actually loaded from get: $read_title\\\\n\\"",
            "type": "string",
            "value": Array [
              EncapsedPart {
                "curly": false,
                "expression": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "Actually loaded from get: ",
                  "unicode": false,
                  "value": "Actually loaded from get: ",
                },
                "kind": "encapsedpart",
                "syntax": null,
              },
              EncapsedPart {
                "curly": false,
                "expression": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "read_title",
                },
                "kind": "encapsedpart",
                "syntax": "simple",
              },
              EncapsedPart {
                "curly": false,
                "expression": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "\\\\n",
                  "unicode": false,
                  "value": "",
                },
                "kind": "encapsedpart",
                "syntax": null,
              },
            ],
          },
        ],
        "kind": "echo",
        "shortForm": false,
      },
      "body": Echo {
        "expressions": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"Successfully verified title using get\\\\n\\"",
            "unicode": false,
            "value": "Successfully verified title using get
",
          },
        ],
        "kind": "echo",
        "shortForm": false,
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "read_title",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "original_title",
            },
            Number {
              "kind": "number",
              "value": "0",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "substr_count",
            "resolution": "uqn",
          },
        },
        "right": Number {
          "kind": "number",
          "value": "1",
        },
        "type": "==",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
