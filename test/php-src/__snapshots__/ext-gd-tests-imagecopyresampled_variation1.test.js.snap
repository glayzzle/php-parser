// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test for correct colors of imagecopyresampled() wrt. alpha 1`] = `
Program {
  "children": Array [
    ConstantStatement {
      "constants": Array [
        Constant {
          "kind": "constant",
          "name": Identifier {
            "kind": "identifier",
            "name": "EXP_RED",
          },
          "value": Number {
            "kind": "number",
            "value": "66",
          },
        },
      ],
      "kind": "constantstatement",
    },
    ConstantStatement {
      "constants": Array [
        Constant {
          "kind": "constant",
          "name": Identifier {
            "kind": "identifier",
            "name": "EXP_GREEN",
          },
          "value": Number {
            "kind": "number",
            "value": "66",
          },
        },
      ],
      "kind": "constantstatement",
    },
    ConstantStatement {
      "constants": Array [
        Constant {
          "kind": "constant",
          "name": Identifier {
            "kind": "identifier",
            "name": "EXP_BLUE",
          },
          "value": Number {
            "kind": "number",
            "value": "133",
          },
        },
      ],
      "kind": "constantstatement",
    },
    ConstantStatement {
      "constants": Array [
        Constant {
          "kind": "constant",
          "name": Identifier {
            "kind": "identifier",
            "name": "EXP_ALPHA",
          },
          "value": Number {
            "kind": "number",
            "value": "32",
          },
        },
      ],
      "kind": "constantstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "im",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Number {
              "kind": "number",
              "value": "10",
            },
            Number {
              "kind": "number",
              "value": "10",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "imagecreatetruecolor",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "im",
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imagealphablending",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "solid",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "im",
            },
            Number {
              "kind": "number",
              "value": "0",
            },
            Number {
              "kind": "number",
              "value": "100",
            },
            Number {
              "kind": "number",
              "value": "150",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "imagecolorallocate",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "transparent",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "im",
            },
            Number {
              "kind": "number",
              "value": "200",
            },
            Number {
              "kind": "number",
              "value": "0",
            },
            Number {
              "kind": "number",
              "value": "100",
            },
            Number {
              "kind": "number",
              "value": "64",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "imagecolorallocatealpha",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    For {
      "body": Block {
        "children": Array [
          For {
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "im",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "i",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "j",
                      },
                      RetIf {
                        "falseExpr": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "transparent",
                        },
                        "kind": "retif",
                        "parenthesizedExpression": true,
                        "test": Bin {
                          "kind": "bin",
                          "left": Bin {
                            "kind": "bin",
                            "left": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "i",
                            },
                            "right": Number {
                              "kind": "number",
                              "value": "2",
                            },
                            "type": "%",
                          },
                          "right": Bin {
                            "kind": "bin",
                            "left": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "j",
                            },
                            "right": Number {
                              "kind": "number",
                              "value": "2",
                            },
                            "type": "%",
                          },
                          "type": "!=",
                        },
                        "trueExpr": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "solid",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "imagesetpixel",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "increment": Array [
              Post {
                "kind": "post",
                "type": "+",
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "j",
                },
              },
            ],
            "init": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "j",
                },
                "operator": "=",
                "right": Number {
                  "kind": "number",
                  "value": "0",
                },
              },
            ],
            "kind": "for",
            "shortForm": false,
            "test": Array [
              Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "j",
                },
                "right": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "im",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "imagesy",
                    "resolution": "uqn",
                  },
                },
                "type": "<",
              },
            ],
          },
        ],
        "kind": "block",
      },
      "increment": Array [
        Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "0",
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "im",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "imagesx",
              "resolution": "uqn",
            },
          },
          "type": "<",
        },
      ],
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "copy",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Number {
              "kind": "number",
              "value": "5",
            },
            Number {
              "kind": "number",
              "value": "5",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "imagecreatetruecolor",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "copy",
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imagealphablending",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "copy",
          },
          Boolean {
            "kind": "boolean",
            "raw": "true",
            "value": true,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imagesavealpha",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "copy",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "im",
          },
          Number {
            "kind": "number",
            "value": "0",
          },
          Number {
            "kind": "number",
            "value": "0",
          },
          Number {
            "kind": "number",
            "value": "0",
          },
          Number {
            "kind": "number",
            "value": "0",
          },
          Number {
            "kind": "number",
            "value": "5",
          },
          Number {
            "kind": "number",
            "value": "5",
          },
          Number {
            "kind": "number",
            "value": "10",
          },
          Number {
            "kind": "number",
            "value": "10",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imagecopyresampled",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "color",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "copy",
            },
            Number {
              "kind": "number",
              "value": "3",
            },
            Number {
              "kind": "number",
              "value": "3",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "imagecolorat",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    For {
      "body": Block {
        "children": Array [
          For {
            "body": Block {
              "children": Array [
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      Echo {
                        "expressions": Array [
                          String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'different pixel values'",
                            "unicode": false,
                            "value": "different pixel values",
                          },
                          Name {
                            "kind": "name",
                            "name": "PHP_EOL",
                            "resolution": "uqn",
                          },
                        ],
                        "kind": "echo",
                        "shortForm": false,
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "copy",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "i",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "j",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "imagecolorat",
                        "resolution": "uqn",
                      },
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "color",
                    },
                    "type": "!=",
                  },
                },
              ],
              "kind": "block",
            },
            "increment": Array [
              Post {
                "kind": "post",
                "type": "+",
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "j",
                },
              },
            ],
            "init": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "j",
                },
                "operator": "=",
                "right": Number {
                  "kind": "number",
                  "value": "0",
                },
              },
            ],
            "kind": "for",
            "shortForm": false,
            "test": Array [
              Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "j",
                },
                "right": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "copy",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "imagesy",
                    "resolution": "uqn",
                  },
                },
                "type": "<",
              },
            ],
          },
        ],
        "kind": "block",
      },
      "increment": Array [
        Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "0",
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "copy",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "imagesx",
              "resolution": "uqn",
            },
          },
          "type": "<",
        },
      ],
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "red",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "color",
            },
            "parenthesizedExpression": true,
            "right": Number {
              "kind": "number",
              "value": "0xFF0000",
            },
            "type": "&",
          },
          "right": Number {
            "kind": "number",
            "value": "16",
          },
          "type": ">>",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "green",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "color",
            },
            "parenthesizedExpression": true,
            "right": Number {
              "kind": "number",
              "value": "0x00FF00",
            },
            "type": "&",
          },
          "right": Number {
            "kind": "number",
            "value": "8",
          },
          "type": ">>",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "blue",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "color",
          },
          "parenthesizedExpression": true,
          "right": Number {
            "kind": "number",
            "value": "0x0000FF",
          },
          "type": "&",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "alpha",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "color",
            },
            "parenthesizedExpression": true,
            "right": Number {
              "kind": "number",
              "value": "0x7F000000",
            },
            "type": "&",
          },
          "right": Number {
            "kind": "number",
            "value": "24",
          },
          "type": ">>",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"red: expected roughly %d, got %d\\\\n\\"",
                  "unicode": false,
                  "value": "red: expected roughly %d, got %d
",
                },
                Name {
                  "kind": "name",
                  "name": "EXP_RED",
                  "resolution": "uqn",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "red",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "printf",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "red",
            },
            "right": Bin {
              "kind": "bin",
              "left": Name {
                "kind": "name",
                "name": "EXP_RED",
                "resolution": "uqn",
              },
              "right": Number {
                "kind": "number",
                "value": "1",
              },
              "type": "-",
            },
            "type": ">=",
          },
          "parenthesizedExpression": true,
          "right": Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "red",
            },
            "right": Bin {
              "kind": "bin",
              "left": Name {
                "kind": "name",
                "name": "EXP_RED",
                "resolution": "uqn",
              },
              "right": Number {
                "kind": "number",
                "value": "1",
              },
              "type": "+",
            },
            "type": "<=",
          },
          "type": "&&",
        },
      },
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"green: expected roughly %d, got %d\\\\n\\"",
                  "unicode": false,
                  "value": "green: expected roughly %d, got %d
",
                },
                Name {
                  "kind": "name",
                  "name": "EXP_GREEN",
                  "resolution": "uqn",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "green",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "printf",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "green",
            },
            "right": Bin {
              "kind": "bin",
              "left": Name {
                "kind": "name",
                "name": "EXP_GREEN",
                "resolution": "uqn",
              },
              "right": Number {
                "kind": "number",
                "value": "1",
              },
              "type": "-",
            },
            "type": ">=",
          },
          "parenthesizedExpression": true,
          "right": Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "green",
            },
            "right": Bin {
              "kind": "bin",
              "left": Name {
                "kind": "name",
                "name": "EXP_GREEN",
                "resolution": "uqn",
              },
              "right": Number {
                "kind": "number",
                "value": "1",
              },
              "type": "+",
            },
            "type": "<=",
          },
          "type": "&&",
        },
      },
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"blue: expected roughly %d, got %d\\\\n\\"",
                  "unicode": false,
                  "value": "blue: expected roughly %d, got %d
",
                },
                Name {
                  "kind": "name",
                  "name": "EXP_BLUE",
                  "resolution": "uqn",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "blue",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "printf",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "blue",
            },
            "right": Bin {
              "kind": "bin",
              "left": Name {
                "kind": "name",
                "name": "EXP_BLUE",
                "resolution": "uqn",
              },
              "right": Number {
                "kind": "number",
                "value": "1",
              },
              "type": "-",
            },
            "type": ">=",
          },
          "parenthesizedExpression": true,
          "right": Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "blue",
            },
            "right": Bin {
              "kind": "bin",
              "left": Name {
                "kind": "name",
                "name": "EXP_BLUE",
                "resolution": "uqn",
              },
              "right": Number {
                "kind": "number",
                "value": "1",
              },
              "type": "+",
            },
            "type": "<=",
          },
          "type": "&&",
        },
      },
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"alpha: expected roughly %d, got %d\\\\n\\"",
                  "unicode": false,
                  "value": "alpha: expected roughly %d, got %d
",
                },
                Name {
                  "kind": "name",
                  "name": "EXP_ALPHA",
                  "resolution": "uqn",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "alpha",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "printf",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "alpha",
            },
            "right": Bin {
              "kind": "bin",
              "left": Name {
                "kind": "name",
                "name": "EXP_ALPHA",
                "resolution": "uqn",
              },
              "right": Number {
                "kind": "number",
                "value": "1",
              },
              "type": "-",
            },
            "type": ">=",
          },
          "parenthesizedExpression": true,
          "right": Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "alpha",
            },
            "right": Bin {
              "kind": "bin",
              "left": Name {
                "kind": "name",
                "name": "EXP_ALPHA",
                "resolution": "uqn",
              },
              "right": Number {
                "kind": "number",
                "value": "1",
              },
              "type": "+",
            },
            "type": "<=",
          },
          "type": "&&",
        },
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "copy",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imagedestroy",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "im",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imagedestroy",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'DONE'",
          "unicode": false,
          "value": "DONE",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
