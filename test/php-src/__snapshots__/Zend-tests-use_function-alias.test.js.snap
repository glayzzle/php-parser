// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests aliasing imported functions to resolve naming conflicts 1`] = `
Program {
  "children": Array [
    Namespace {
      "children": Array [
        _Function {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Return {
                "expr": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'foo.baz'",
                  "unicode": false,
                  "value": "foo.baz",
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "kind": "function",
          "name": Identifier {
            "kind": "identifier",
            "name": "baz",
          },
          "nullable": false,
          "type": null,
        },
      ],
      "kind": "namespace",
      "name": "foo",
      "withBrackets": true,
    },
    Namespace {
      "children": Array [
        _Function {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Return {
                "expr": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'bar.baz'",
                  "unicode": false,
                  "value": "bar.baz",
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "kind": "function",
          "name": Identifier {
            "kind": "identifier",
            "name": "baz",
          },
          "nullable": false,
          "type": null,
        },
      ],
      "kind": "namespace",
      "name": "bar",
      "withBrackets": true,
    },
    Namespace {
      "children": Array [
        UseGroup {
          "items": Array [
            UseItem {
              "alias": Identifier {
                "kind": "identifier",
                "name": "foo_baz",
              },
              "kind": "useitem",
              "name": "foo\\\\baz",
              "type": null,
            },
            UseItem {
              "alias": Identifier {
                "kind": "identifier",
                "name": "bar_baz",
              },
              "kind": "useitem",
              "name": "bar\\\\baz",
              "type": null,
            },
          ],
          "kind": "usegroup",
          "name": null,
          "type": "function",
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [
              Call {
                "arguments": Array [],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "foo_baz",
                  "resolution": "uqn",
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "var_dump",
              "resolution": "uqn",
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [
              Call {
                "arguments": Array [],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "bar_baz",
                  "resolution": "uqn",
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "var_dump",
              "resolution": "uqn",
            },
          },
          "kind": "expressionstatement",
        },
        Echo {
          "expressions": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"Done\\\\n\\"",
              "unicode": false,
              "value": "Done
",
            },
          ],
          "kind": "echo",
          "shortForm": false,
        },
      ],
      "kind": "namespace",
      "name": Array [
        "",
      ],
      "withBrackets": true,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
