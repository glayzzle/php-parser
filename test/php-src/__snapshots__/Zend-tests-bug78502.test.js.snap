// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #78502: Incorrect stack size calculation for indirectly recursive function call 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "tree",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'name'",
                "unicode": false,
                "value": "name",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'a'",
                "unicode": false,
                "value": "a",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'quant'",
                "unicode": false,
                "value": "quant",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "1",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'children'",
                "unicode": false,
                "value": "children",
              },
              "kind": "entry",
              "unpack": false,
              "value": Array {
                "items": Array [
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": Array {
                      "items": Array [
                        Entry {
                          "byRef": false,
                          "key": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'name'",
                            "unicode": false,
                            "value": "name",
                          },
                          "kind": "entry",
                          "unpack": false,
                          "value": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'b'",
                            "unicode": false,
                            "value": "b",
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'quant'",
                            "unicode": false,
                            "value": "quant",
                          },
                          "kind": "entry",
                          "unpack": false,
                          "value": Number {
                            "kind": "number",
                            "value": "1",
                          },
                        },
                      ],
                      "kind": "array",
                      "shortForm": true,
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": Array {
                      "items": Array [
                        Entry {
                          "byRef": false,
                          "key": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'name'",
                            "unicode": false,
                            "value": "name",
                          },
                          "kind": "entry",
                          "unpack": false,
                          "value": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'c'",
                            "unicode": false,
                            "value": "c",
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'quant'",
                            "unicode": false,
                            "value": "quant",
                          },
                          "kind": "entry",
                          "unpack": false,
                          "value": Number {
                            "kind": "number",
                            "value": "1",
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'children'",
                            "unicode": false,
                            "value": "children",
                          },
                          "kind": "entry",
                          "unpack": false,
                          "value": Array {
                            "items": Array [
                              Entry {
                                "byRef": false,
                                "key": null,
                                "kind": "entry",
                                "unpack": false,
                                "value": Array {
                                  "items": Array [
                                    Entry {
                                      "byRef": false,
                                      "key": String {
                                        "isDoubleQuote": false,
                                        "kind": "string",
                                        "raw": "'name'",
                                        "unicode": false,
                                        "value": "name",
                                      },
                                      "kind": "entry",
                                      "unpack": false,
                                      "value": String {
                                        "isDoubleQuote": false,
                                        "kind": "string",
                                        "raw": "'d'",
                                        "unicode": false,
                                        "value": "d",
                                      },
                                    },
                                    Entry {
                                      "byRef": false,
                                      "key": String {
                                        "isDoubleQuote": false,
                                        "kind": "string",
                                        "raw": "'quant'",
                                        "unicode": false,
                                        "value": "quant",
                                      },
                                      "kind": "entry",
                                      "unpack": false,
                                      "value": Number {
                                        "kind": "number",
                                        "value": "1",
                                      },
                                    },
                                  ],
                                  "kind": "array",
                                  "shortForm": true,
                                },
                              },
                            ],
                            "kind": "array",
                            "shortForm": true,
                          },
                        },
                      ],
                      "kind": "array",
                      "shortForm": true,
                    },
                  },
                ],
                "kind": "array",
                "shortForm": true,
              },
            },
          ],
          "kind": "array",
          "shortForm": true,
        },
      },
      "kind": "expressionstatement",
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "tree",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "recursive_attr",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "callback",
          },
          "nullable": false,
          "readonly": false,
          "type": Name {
            "kind": "name",
            "name": "closure",
            "resolution": "uqn",
          },
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "recursive_attr",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "tree",
                      },
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Closure {
                          "arguments": Array [
                            Parameter {
                              "attrGroups": Array [],
                              "byref": false,
                              "flags": 0,
                              "kind": "parameter",
                              "name": Identifier {
                                "kind": "identifier",
                                "name": "c",
                              },
                              "nullable": false,
                              "readonly": false,
                              "type": null,
                              "value": null,
                              "variadic": false,
                            },
                          ],
                          "attrGroups": Array [],
                          "body": Block {
                            "children": Array [
                              Return {
                                "expr": Call {
                                  "arguments": Array [
                                    Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "c",
                                    },
                                    Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "recursive_attr",
                                    },
                                    Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "callback",
                                    },
                                  ],
                                  "kind": "call",
                                  "what": Name {
                                    "kind": "name",
                                    "name": "tree_map",
                                    "resolution": "uqn",
                                  },
                                },
                                "kind": "return",
                              },
                            ],
                            "kind": "block",
                          },
                          "byref": false,
                          "isStatic": false,
                          "kind": "closure",
                          "nullable": false,
                          "type": null,
                          "uses": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "recursive_attr",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "callback",
                            },
                          ],
                        },
                        OffsetLookup {
                          "kind": "offsetlookup",
                          "offset": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "recursive_attr",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "tree",
                          },
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "array_map",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Isset {
              "kind": "isset",
              "variables": Array [
                OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "recursive_attr",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "tree",
                  },
                },
              ],
            },
          },
          Return {
            "expr": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "tree",
                },
              ],
              "kind": "call",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "callback",
              },
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "tree_map",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "tree",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'children'",
            "unicode": false,
            "value": "children",
          },
          Closure {
            "arguments": Array [
              Parameter {
                "attrGroups": Array [],
                "byref": false,
                "flags": 0,
                "kind": "parameter",
                "name": Identifier {
                  "kind": "identifier",
                  "name": "node",
                },
                "nullable": false,
                "readonly": false,
                "type": null,
                "value": null,
                "variadic": false,
              },
            ],
            "attrGroups": Array [],
            "body": Block {
              "children": Array [],
              "kind": "block",
            },
            "byref": false,
            "isStatic": false,
            "kind": "closure",
            "nullable": false,
            "type": null,
            "uses": Array [],
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "tree_map",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Inline {
      "kind": "inline",
      "raw": "
===DONE===",
      "value": "===DONE===",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
