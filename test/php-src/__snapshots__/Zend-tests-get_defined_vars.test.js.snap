// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Testing get_defined_vars() Function 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "number",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "22.33",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "string",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"sample string\\"",
          "unicode": false,
          "value": "sample string",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "array1",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "1",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "1",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "2",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "3",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "5",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "8",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "assoc_array",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'a'",
                "unicode": false,
                "value": "a",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "97",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'c'",
                "unicode": false,
                "value": "c",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "99",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'A'",
                "unicode": false,
                "value": "A",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "65",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'C'",
                "unicode": false,
                "value": "C",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "67",
              },
            },
            Entry {
              "byRef": false,
              "key": Number {
                "kind": "number",
                "value": "1",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"string1\\"",
                "unicode": false,
                "value": "string1",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "boolean",
        },
        "operator": "=",
        "right": Boolean {
          "kind": "boolean",
          "raw": "TRUE",
          "value": true,
        },
      },
      "kind": "expressionstatement",
    },
    Class {
      "attrGroups": Array [],
      "body": Array [
        PropertyStatement {
          "isStatic": false,
          "kind": "propertystatement",
          "properties": Array [
            Property {
              "attrGroups": Array [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "number",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": Number {
                "kind": "number",
                "value": "233",
              },
            },
          ],
          "visibility": null,
        },
        PropertyStatement {
          "isStatic": false,
          "kind": "propertystatement",
          "properties": Array [
            Property {
              "attrGroups": Array [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "string",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"string2\\"",
                "unicode": false,
                "value": "string2",
              },
            },
          ],
          "visibility": null,
        },
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "local_var",
                  },
                  "operator": "=",
                  "right": Number {
                    "kind": "number",
                    "value": "2",
                  },
                },
                "kind": "expressionstatement",
              },
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "get_defined_vars",
                        "resolution": "uqn",
                      },
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "var_dump",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "func",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "sample",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "sample_obj",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "sample",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    _Function {
      "arguments": Array [],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "string33",
              },
              "operator": "=",
              "right": Number {
                "kind": "number",
                "value": "22",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "get_defined_vars",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "func",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "arr",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "get_defined_vars",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n*** Displaying various variables through the array captured by the get_defined_vars function call ***\\\\n\\"",
          "unicode": false,
          "value": "
*** Displaying various variables through the array captured by the get_defined_vars function call ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"argc\\"",
              "unicode": false,
              "value": "argc",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "arr",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"number\\"",
              "unicode": false,
              "value": "number",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "arr",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"string\\"",
              "unicode": false,
              "value": "string",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "arr",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"array1\\"",
              "unicode": false,
              "value": "array1",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "arr",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"assoc_array\\"",
              "unicode": false,
              "value": "assoc_array",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "arr",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"boolean\\"",
              "unicode": false,
              "value": "boolean",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "arr",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"sample_obj\\"",
              "unicode": false,
              "value": "sample_obj",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "arr",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n*** Checking for output when get_defined_vars called in local function ***\\\\n\\"",
          "unicode": false,
          "value": "
*** Checking for output when get_defined_vars called in local function ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n*** Checking for output when get_defined_vars called in function of a class ***\\\\n\\"",
          "unicode": false,
          "value": "
*** Checking for output when get_defined_vars called in function of a class ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "func",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "sample_obj",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n*** Checking for output when get_defined_vars called in nested functions ***\\\\n\\"",
          "unicode": false,
          "value": "
*** Checking for output when get_defined_vars called in nested functions ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    _Function {
      "arguments": Array [],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "func1_var",
              },
              "operator": "=",
              "right": Number {
                "kind": "number",
                "value": "2",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "get_defined_vars",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          _Function {
            "arguments": Array [],
            "attrGroups": Array [],
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "func2_var",
                    },
                    "operator": "=",
                    "right": Number {
                      "kind": "number",
                      "value": "3",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Call {
                        "arguments": Array [],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "get_defined_vars",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "byref": false,
            "kind": "function",
            "name": Identifier {
              "kind": "identifier",
              "name": "func2",
            },
            "nullable": false,
            "type": null,
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "func2",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "func1",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func1",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\nDone\\"",
          "unicode": false,
          "value": "
Done",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
