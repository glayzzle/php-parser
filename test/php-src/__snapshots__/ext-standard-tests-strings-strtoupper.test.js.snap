// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test strtoupper on non-ASCII characters 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "chars",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"���\\"",
          "unicode": false,
          "value": "���",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Name {
            "kind": "name",
            "name": "LC_CTYPE",
            "resolution": "uqn",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"de_DE\\"",
            "unicode": false,
            "value": "de_DE",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"de\\"",
            "unicode": false,
            "value": "de",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"german\\"",
            "unicode": false,
            "value": "german",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"ge\\"",
            "unicode": false,
            "value": "ge",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"de_DE.ISO8859-1\\"",
            "unicode": false,
            "value": "de_DE.ISO8859-1",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"ISO8859-1\\"",
            "unicode": false,
            "value": "ISO8859-1",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "setlocale",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "chars",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "strtoupper",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
