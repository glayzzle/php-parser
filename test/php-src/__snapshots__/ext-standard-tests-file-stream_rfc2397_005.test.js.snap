// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Stream: RFC2397 without // 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "streams",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'data:,A%20brief%20note'",
                "unicode": false,
                "value": "data:,A%20brief%20note",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'data:application/vnd-xxx-query,select_vcount,fcol_from_fieldtable/local'",
                "unicode": false,
                "value": "data:application/vnd-xxx-query,select_vcount,fcol_from_fieldtable/local",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'data:;base64,Zm9vYmFyIGZvb2Jhcg=='",
                "unicode": false,
                "value": "data:;base64,Zm9vYmFyIGZvb2Jhcg==",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'data:,;test'",
                "unicode": false,
                "value": "data:,;test",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'data:text/plain,test'",
                "unicode": false,
                "value": "data:text/plain,test",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'data:text/plain;charset=US-ASCII,test'",
                "unicode": false,
                "value": "data:text/plain;charset=US-ASCII,test",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'data:;charset=UTF-8,Hello'",
                "unicode": false,
                "value": "data:;charset=UTF-8,Hello",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'data:text/plain;charset=UTF-8,Hello'",
                "unicode": false,
                "value": "data:text/plain;charset=UTF-8,Hello",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'data:,a,b'",
                "unicode": false,
                "value": "data:,a,b",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Silent {
                  "expr": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "stream",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "file_get_contents",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "silent",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "streams",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "stream",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
