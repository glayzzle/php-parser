// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #79846 (8c67c166996 broke simple regexp) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "item",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"component_phase_1\\"",
          "unicode": false,
          "value": "component_phase_1",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"/([a-z]+_[a-z]+_*[a-z]+)_?(\\\\d+)?/\\"",
            "unicode": false,
            "value": "/([a-z]+_[a-z]+_*[a-z]+)_?(\\\\d+)?/",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "item",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "match",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "preg_match",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "match",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
