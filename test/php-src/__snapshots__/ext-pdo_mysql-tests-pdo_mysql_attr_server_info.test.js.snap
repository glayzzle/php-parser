// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests PDO::ATTR_SERVER_INFO 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": true,
        "target": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Magic {
              "kind": "magic",
              "raw": "__DIR__",
              "value": "__DIR__",
            },
            "right": Name {
              "kind": "name",
              "name": "DIRECTORY_SEPARATOR",
              "resolution": "uqn",
            },
            "type": ".",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'mysql_pdo_test.inc'",
            "unicode": false,
            "value": "mysql_pdo_test.inc",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "db",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "factory",
            },
            "what": Name {
              "kind": "name",
              "name": "MySQLPDOTest",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "''",
                "unicode": false,
                "value": "",
              },
              "parenthesizedExpression": true,
              "right": Call {
                "arguments": Array [],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "errorCode",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "db",
                  },
                },
              },
              "type": "==",
            },
            "right": Bin {
              "kind": "bin",
              "left": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'00000'",
                "unicode": false,
                "value": "00000",
              },
              "parenthesizedExpression": true,
              "right": Call {
                "arguments": Array [],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "errorCode",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "db",
                  },
                },
              },
              "type": "==",
            },
            "type": "||",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "assert",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "info",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "ATTR_SERVER_INFO",
              },
              "what": Name {
                "kind": "name",
                "name": "PDO",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "getAttribute",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[001] Server info must not be empty\\\\n\\"",
              "unicode": false,
              "value": "[001] Server info must not be empty
",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "''",
          "unicode": false,
          "value": "",
        },
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "info",
        },
        "type": "==",
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[002] Wonderful, I can change the client version!\\\\n\\"",
              "unicode": false,
              "value": "[002] Wonderful, I can change the client version!
",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Boolean {
          "kind": "boolean",
          "raw": "false",
          "value": false,
        },
        "right": Call {
          "arguments": Array [
            StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "ATTR_SERVER_INFO",
              },
              "what": Name {
                "kind": "name",
                "name": "PDO",
                "resolution": "uqn",
              },
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'new uptime: 0s'",
              "unicode": false,
              "value": "new uptime: 0s",
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "setAttribute",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
          },
        },
        "type": "!==",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "new_info",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "ATTR_SERVER_INFO",
              },
              "what": Name {
                "kind": "name",
                "name": "PDO",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "getAttribute",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[003] Did we change it from '%s' to '%s'?\\\\n\\"",
              "unicode": false,
              "value": "[003] Did we change it from '%s' to '%s'?
",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "info",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "new_info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "soundex",
            "resolution": "uqn",
          },
        },
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "soundex",
            "resolution": "uqn",
          },
        },
        "type": "!=",
      },
    },
    If {
      "alternate": Block {
        "children": Array [
          If {
            "alternate": ExpressionStatement {
              "expression": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "uptime",
                },
                "operator": "=",
                "right": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": Number {
                    "kind": "number",
                    "value": "1",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "row",
                  },
                },
              },
              "kind": "expressionstatement",
            },
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[005] Unable to fetch uptime, [%s]\\\\n\\"",
                    "unicode": false,
                    "value": "[005] Unable to fetch uptime, [%s]
",
                  },
                  Call {
                    "arguments": Array [],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "errorCode",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "db",
                      },
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "row",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [
                    StaticLookup {
                      "kind": "staticlookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "FETCH_NUM",
                      },
                      "what": Name {
                        "kind": "name",
                        "name": "PDO",
                        "resolution": "uqn",
                      },
                    },
                  ],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "fetch",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "stmt",
                    },
                  },
                },
              },
            },
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "closeCursor",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[004] Cannot run SHOW STATUS, [%s]\\\\n\\"",
              "unicode": false,
              "value": "[004] Cannot run SHOW STATUS, [%s]
",
            },
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "errorCode",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "stmt",
          },
          "operator": "=",
          "right": Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"SHOW STATUS LIKE '%uptime%'\\"",
                "unicode": false,
                "value": "SHOW STATUS LIKE '%uptime%'",
              },
            ],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "query",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "db",
              },
            },
          },
        },
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[006] Can't find uptime in server info '%s'\\\\n\\"",
              "unicode": false,
              "value": "[006] Can't find uptime in server info '%s'
",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'/Uptime/i'",
              "unicode": false,
              "value": "/Uptime/i",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "preg_match",
            "resolution": "uqn",
          },
        },
      },
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[007] SHOW STATUS and server info have reported a different uptime, please check. Server info: '%s', SHOW STATUS: '%s'\\\\n\\"",
                        "unicode": false,
                        "value": "[007] SHOW STATUS and server info have reported a different uptime, please check. Server info: '%s', SHOW STATUS: '%s'
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "info",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "uptime",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Unary {
                "kind": "unary",
                "type": "!",
                "what": Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'/Uptime: (\\\\d+)/i'",
                      "unicode": false,
                      "value": "/Uptime: (\\\\d+)/i",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "info",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "matches",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "preg_match",
                    "resolution": "uqn",
                  },
                },
              },
              "right": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "uptime",
                  },
                  "right": OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": Number {
                      "kind": "number",
                      "value": "1",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "matches",
                    },
                  },
                  "type": "-",
                },
                "right": Number {
                  "kind": "number",
                  "value": "1",
                },
                "type": ">",
              },
              "type": "||",
            },
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Isset {
        "kind": "isset",
        "variables": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "uptime",
          },
        ],
      },
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"done!\\"",
          "unicode": false,
          "value": "done!",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
