// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test: Canonicalization - C14N() 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "xml",
        },
        "operator": "=",
        "right": Encapsed {
          "kind": "encapsed",
          "label": "EOXML",
          "raw": "<<<EOXML
<?xml version=\\"1.0\\" encoding=\\"ISO-8859-1\\" ?>
<foo xmlns=\\"http://www.example.com/ns/foo\\"
     xmlns:fubar=\\"http://www.example.com/ns/fubar\\" xmlns:test=\\"urn::test\\"><contain>
  <bar><test1 /></bar>
  <bar><test2 /></bar>
  <fubar:bar xmlns:fubar=\\"http://www.example.com/ns/fubar\\"><test3 /></fubar:bar>
  <fubar:bar><test4 /></fubar:bar>
<!-- this is a comment -->
</contain>
</foo>
EOXML",
          "type": "heredoc",
          "value": Array [
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "<?xml version=\\"1.0\\" encoding=\\"ISO-8859-1\\" ?>
<foo xmlns=\\"http://www.example.com/ns/foo\\"
     xmlns:fubar=\\"http://www.example.com/ns/fubar\\" xmlns:test=\\"urn::test\\"><contain>
  <bar><test1 /></bar>
  <bar><test2 /></bar>
  <fubar:bar xmlns:fubar=\\"http://www.example.com/ns/fubar\\"><test3 /></fubar:bar>
  <fubar:bar><test4 /></fubar:bar>
<!-- this is a comment -->
</contain>
</foo>
",
                "unicode": false,
                "value": "<?xml version=\\"1.0\\" encoding=\\"ISO-8859-1\\" ?>
<foo xmlns=\\"http://www.example.com/ns/foo\\"
     xmlns:fubar=\\"http://www.example.com/ns/fubar\\" xmlns:test=\\"urn::test\\"><contain>
  <bar><test1 /></bar>
  <bar><test2 /></bar>
  <fubar:bar xmlns:fubar=\\"http://www.example.com/ns/fubar\\"><test3 /></fubar:bar>
  <fubar:bar><test4 /></fubar:bar>
<!-- this is a comment -->
</contain>
</foo>",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
          ],
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "dom",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "DOMDocument",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "xml",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "loadXML",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "dom",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "doc",
        },
        "operator": "=",
        "right": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "firstChild",
          },
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "documentElement",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "dom",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "C14N",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "doc",
              },
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\\\n\\"",
            "unicode": false,
            "value": "

",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Boolean {
                "kind": "boolean",
                "raw": "TRUE",
                "value": true,
              },
            ],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "c14N",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "doc",
              },
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\\\n\\"",
            "unicode": false,
            "value": "

",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Boolean {
                "kind": "boolean",
                "raw": "FALSE",
                "value": false,
              },
              Boolean {
                "kind": "boolean",
                "raw": "TRUE",
                "value": true,
              },
            ],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "C14N",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "doc",
              },
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\\\n\\"",
            "unicode": false,
            "value": "

",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Boolean {
                "kind": "boolean",
                "raw": "TRUE",
                "value": true,
              },
              Boolean {
                "kind": "boolean",
                "raw": "TRUE",
                "value": true,
              },
            ],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "C14N",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "doc",
              },
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\\\n\\"",
            "unicode": false,
            "value": "

",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Boolean {
                "kind": "boolean",
                "raw": "TRUE",
                "value": true,
              },
              Boolean {
                "kind": "boolean",
                "raw": "FALSE",
                "value": false,
              },
              Array {
                "items": Array [
                  Entry {
                    "byRef": false,
                    "key": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'query'",
                      "unicode": false,
                      "value": "query",
                    },
                    "kind": "entry",
                    "unpack": false,
                    "value": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'(//. | //@* | //namespace::*)'",
                      "unicode": false,
                      "value": "(//. | //@* | //namespace::*)",
                    },
                  },
                ],
                "kind": "array",
                "shortForm": false,
              },
            ],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "c14N",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "doc",
              },
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\\\n\\"",
            "unicode": false,
            "value": "

",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Boolean {
                "kind": "boolean",
                "raw": "TRUE",
                "value": true,
              },
              Boolean {
                "kind": "boolean",
                "raw": "FALSE",
                "value": false,
              },
              Array {
                "items": Array [
                  Entry {
                    "byRef": false,
                    "key": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'query'",
                      "unicode": false,
                      "value": "query",
                    },
                    "kind": "entry",
                    "unpack": false,
                    "value": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'(//a:contain | //a:bar | .//namespace::*)'",
                      "unicode": false,
                      "value": "(//a:contain | //a:bar | .//namespace::*)",
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'namespaces'",
                      "unicode": false,
                      "value": "namespaces",
                    },
                    "kind": "entry",
                    "unpack": false,
                    "value": Array {
                      "items": Array [
                        Entry {
                          "byRef": false,
                          "key": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'a'",
                            "unicode": false,
                            "value": "a",
                          },
                          "kind": "entry",
                          "unpack": false,
                          "value": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'http://www.example.com/ns/foo'",
                            "unicode": false,
                            "value": "http://www.example.com/ns/foo",
                          },
                        },
                      ],
                      "kind": "array",
                      "shortForm": false,
                    },
                  },
                ],
                "kind": "array",
                "shortForm": false,
              },
              Array {
                "items": Array [
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'test'",
                      "unicode": false,
                      "value": "test",
                    },
                  },
                ],
                "kind": "array",
                "shortForm": false,
              },
            ],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "c14N",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "doc",
              },
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\\\n\\"",
            "unicode": false,
            "value": "

",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Call {
          "arguments": Array [
            Boolean {
              "kind": "boolean",
              "raw": "TRUE",
              "value": true,
            },
            Boolean {
              "kind": "boolean",
              "raw": "FALSE",
              "value": false,
            },
            NullKeyword {
              "kind": "nullkeyword",
              "raw": "NULL",
            },
            Array {
              "items": Array [
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'test'",
                    "unicode": false,
                    "value": "test",
                  },
                },
              ],
              "kind": "array",
              "shortForm": false,
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "C14N",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "doc",
            },
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
