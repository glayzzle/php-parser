// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #65665 (Exception not properly caught when opcache enabled) 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          Try {
            "always": null,
            "body": Block {
              "children": Array [
                Switch {
                  "body": Block {
                    "children": Array [
                      Case {
                        "body": Block {
                          "children": Array [
                            Try {
                              "always": null,
                              "body": Block {
                                "children": Array [],
                                "kind": "block",
                              },
                              "catches": Array [
                                Catch {
                                  "body": Block {
                                    "children": Array [],
                                    "kind": "block",
                                  },
                                  "kind": "catch",
                                  "variable": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "e",
                                  },
                                  "what": Array [
                                    Name {
                                      "kind": "name",
                                      "name": "Exception",
                                      "resolution": "uqn",
                                    },
                                  ],
                                },
                              ],
                              "kind": "try",
                            },
                            Break {
                              "kind": "break",
                              "level": null,
                            },
                          ],
                          "kind": "block",
                        },
                        "kind": "case",
                        "test": Number {
                          "kind": "number",
                          "value": "0",
                        },
                      },
                      Case {
                        "body": Block {
                          "children": Array [
                            Try {
                              "always": null,
                              "body": Block {
                                "children": Array [
                                  Throw {
                                    "kind": "throw",
                                    "what": New {
                                      "arguments": Array [
                                        String {
                                          "isDoubleQuote": false,
                                          "kind": "string",
                                          "raw": "'aaa'",
                                          "unicode": false,
                                          "value": "aaa",
                                        },
                                      ],
                                      "kind": "new",
                                      "what": Name {
                                        "kind": "name",
                                        "name": "Exception",
                                        "resolution": "uqn",
                                      },
                                    },
                                  },
                                ],
                                "kind": "block",
                              },
                              "catches": Array [
                                Catch {
                                  "body": Block {
                                    "children": Array [
                                      Echo {
                                        "expressions": Array [
                                          String {
                                            "isDoubleQuote": true,
                                            "kind": "string",
                                            "raw": "\\"correct\\\\n\\"",
                                            "unicode": false,
                                            "value": "correct
",
                                          },
                                        ],
                                        "kind": "echo",
                                        "shortForm": false,
                                      },
                                    ],
                                    "kind": "block",
                                  },
                                  "kind": "catch",
                                  "variable": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "e",
                                  },
                                  "what": Array [
                                    Name {
                                      "kind": "name",
                                      "name": "Exception",
                                      "resolution": "uqn",
                                    },
                                  ],
                                },
                              ],
                              "kind": "try",
                            },
                            Break {
                              "kind": "break",
                              "level": null,
                            },
                          ],
                          "kind": "block",
                        },
                        "kind": "case",
                        "test": Number {
                          "kind": "number",
                          "value": "1",
                        },
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "switch",
                  "shortForm": false,
                  "test": Number {
                    "kind": "number",
                    "value": "1",
                  },
                },
              ],
              "kind": "block",
            },
            "catches": Array [
              Catch {
                "body": Block {
                  "children": Array [
                    Echo {
                      "expressions": Array [
                        String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"wrong\\\\n\\"",
                          "unicode": false,
                          "value": "wrong
",
                        },
                      ],
                      "kind": "echo",
                      "shortForm": false,
                    },
                  ],
                  "kind": "block",
                },
                "kind": "catch",
                "variable": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "e",
                },
                "what": Array [
                  Name {
                    "kind": "name",
                    "name": "Exception",
                    "resolution": "uqn",
                  },
                ],
              },
            ],
            "kind": "try",
          },
          Return {
            "expr": null,
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "foo",
      },
      "nullable": false,
      "type": null,
    },
    _Function {
      "arguments": Array [],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          Try {
            "always": null,
            "body": Block {
              "children": Array [
                Switch {
                  "body": Block {
                    "children": Array [
                      Case {
                        "body": Block {
                          "children": Array [
                            Try {
                              "always": null,
                              "body": Block {
                                "children": Array [],
                                "kind": "block",
                              },
                              "catches": Array [
                                Catch {
                                  "body": Block {
                                    "children": Array [
                                      Label {
                                        "kind": "label",
                                        "name": Identifier {
                                          "kind": "identifier",
                                          "name": "dummy",
                                        },
                                      },
                                      Echo {
                                        "expressions": Array [
                                          String {
                                            "isDoubleQuote": true,
                                            "kind": "string",
                                            "raw": "\\"ect\\\\n\\"",
                                            "unicode": false,
                                            "value": "ect
",
                                          },
                                        ],
                                        "kind": "echo",
                                        "shortForm": false,
                                      },
                                    ],
                                    "kind": "block",
                                  },
                                  "kind": "catch",
                                  "variable": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "e",
                                  },
                                  "what": Array [
                                    Name {
                                      "kind": "name",
                                      "name": "Exception",
                                      "resolution": "uqn",
                                    },
                                  ],
                                },
                              ],
                              "kind": "try",
                            },
                            Break {
                              "kind": "break",
                              "level": null,
                            },
                          ],
                          "kind": "block",
                        },
                        "kind": "case",
                        "test": Number {
                          "kind": "number",
                          "value": "0",
                        },
                      },
                      Case {
                        "body": Block {
                          "children": Array [
                            Try {
                              "always": null,
                              "body": Block {
                                "children": Array [
                                  Throw {
                                    "kind": "throw",
                                    "what": New {
                                      "arguments": Array [
                                        String {
                                          "isDoubleQuote": false,
                                          "kind": "string",
                                          "raw": "'aaa'",
                                          "unicode": false,
                                          "value": "aaa",
                                        },
                                      ],
                                      "kind": "new",
                                      "what": Name {
                                        "kind": "name",
                                        "name": "Exception",
                                        "resolution": "uqn",
                                      },
                                    },
                                  },
                                ],
                                "kind": "block",
                              },
                              "catches": Array [
                                Catch {
                                  "body": Block {
                                    "children": Array [
                                      Echo {
                                        "expressions": Array [
                                          String {
                                            "isDoubleQuote": true,
                                            "kind": "string",
                                            "raw": "\\"corr\\"",
                                            "unicode": false,
                                            "value": "corr",
                                          },
                                        ],
                                        "kind": "echo",
                                        "shortForm": false,
                                      },
                                      Goto {
                                        "kind": "goto",
                                        "label": Identifier {
                                          "kind": "identifier",
                                          "name": "dummy",
                                        },
                                      },
                                    ],
                                    "kind": "block",
                                  },
                                  "kind": "catch",
                                  "variable": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "e",
                                  },
                                  "what": Array [
                                    Name {
                                      "kind": "name",
                                      "name": "Exception",
                                      "resolution": "uqn",
                                    },
                                  ],
                                },
                              ],
                              "kind": "try",
                            },
                            Break {
                              "kind": "break",
                              "level": null,
                            },
                          ],
                          "kind": "block",
                        },
                        "kind": "case",
                        "test": Number {
                          "kind": "number",
                          "value": "1",
                        },
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "switch",
                  "shortForm": false,
                  "test": Number {
                    "kind": "number",
                    "value": "1",
                  },
                },
              ],
              "kind": "block",
            },
            "catches": Array [
              Catch {
                "body": Block {
                  "children": Array [
                    Echo {
                      "expressions": Array [
                        String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"wrong\\\\n\\"",
                          "unicode": false,
                          "value": "wrong
",
                        },
                      ],
                      "kind": "echo",
                      "shortForm": false,
                    },
                  ],
                  "kind": "block",
                },
                "kind": "catch",
                "variable": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "e",
                },
                "what": Array [
                  Name {
                    "kind": "name",
                    "name": "Exception",
                    "resolution": "uqn",
                  },
                ],
              },
            ],
            "kind": "try",
          },
          Return {
            "expr": null,
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "foo1",
      },
      "nullable": false,
      "type": null,
    },
    _Function {
      "arguments": Array [],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          Try {
            "always": null,
            "body": Block {
              "children": Array [
                Switch {
                  "body": Block {
                    "children": Array [
                      Case {
                        "body": Block {
                          "children": Array [
                            Try {
                              "always": null,
                              "body": Block {
                                "children": Array [
                                  Label {
                                    "kind": "label",
                                    "name": Identifier {
                                      "kind": "identifier",
                                      "name": "dummy",
                                    },
                                  },
                                  Throw {
                                    "kind": "throw",
                                    "what": New {
                                      "arguments": Array [
                                        String {
                                          "isDoubleQuote": false,
                                          "kind": "string",
                                          "raw": "'aaa'",
                                          "unicode": false,
                                          "value": "aaa",
                                        },
                                      ],
                                      "kind": "new",
                                      "what": Name {
                                        "kind": "name",
                                        "name": "Exception",
                                        "resolution": "uqn",
                                      },
                                    },
                                  },
                                ],
                                "kind": "block",
                              },
                              "catches": Array [
                                Catch {
                                  "body": Block {
                                    "children": Array [
                                      Echo {
                                        "expressions": Array [
                                          String {
                                            "isDoubleQuote": true,
                                            "kind": "string",
                                            "raw": "\\"correct\\\\n\\"",
                                            "unicode": false,
                                            "value": "correct
",
                                          },
                                        ],
                                        "kind": "echo",
                                        "shortForm": false,
                                      },
                                    ],
                                    "kind": "block",
                                  },
                                  "kind": "catch",
                                  "variable": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "e",
                                  },
                                  "what": Array [
                                    Name {
                                      "kind": "name",
                                      "name": "Exception",
                                      "resolution": "uqn",
                                    },
                                  ],
                                },
                              ],
                              "kind": "try",
                            },
                            Break {
                              "kind": "break",
                              "level": null,
                            },
                          ],
                          "kind": "block",
                        },
                        "kind": "case",
                        "test": Number {
                          "kind": "number",
                          "value": "0",
                        },
                      },
                      Case {
                        "body": Block {
                          "children": Array [
                            Goto {
                              "kind": "goto",
                              "label": Identifier {
                                "kind": "identifier",
                                "name": "dummy",
                              },
                            },
                            Break {
                              "kind": "break",
                              "level": null,
                            },
                          ],
                          "kind": "block",
                        },
                        "kind": "case",
                        "test": Number {
                          "kind": "number",
                          "value": "1",
                        },
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "switch",
                  "shortForm": false,
                  "test": Number {
                    "kind": "number",
                    "value": "1",
                  },
                },
              ],
              "kind": "block",
            },
            "catches": Array [
              Catch {
                "body": Block {
                  "children": Array [
                    Echo {
                      "expressions": Array [
                        String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"wrong\\\\n\\"",
                          "unicode": false,
                          "value": "wrong
",
                        },
                      ],
                      "kind": "echo",
                      "shortForm": false,
                    },
                  ],
                  "kind": "block",
                },
                "kind": "catch",
                "variable": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "e",
                },
                "what": Array [
                  Name {
                    "kind": "name",
                    "name": "Exception",
                    "resolution": "uqn",
                  },
                ],
              },
            ],
            "kind": "try",
          },
          Return {
            "expr": null,
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "foo2",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "foo",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "foo1",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "foo2",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
