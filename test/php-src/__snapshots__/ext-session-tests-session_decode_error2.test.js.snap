// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test session_decode() function : error functionality 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "ob_start",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"*** Testing session_decode() : error functionality ***\\\\n\\"",
          "unicode": false,
          "value": "*** Testing session_decode() : error functionality ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "data",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"foo|a:3:{i:0;i:1;i:1;i:2;i:2;i:3;}guff|R:1;blah|R:1;\\"",
          "unicode": false,
          "value": "foo|a:3:{i:0;i:1;i:1;i:2;i:2;i:3;}guff|R:1;blah|R:1;",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "session_start",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    For {
      "body": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "session_start",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Call {
                "arguments": Array [],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "session_status",
                  "resolution": "uqn",
                },
              },
              "right": Name {
                "kind": "name",
                "name": "PHP_SESSION_ACTIVE",
                "resolution": "uqn",
              },
              "type": "!=",
            },
          },
          Echo {
            "expressions": Array [
              Encapsed {
                "kind": "encapsed",
                "raw": "\\"\\\\n-- Iteration $index --\\\\n\\"",
                "type": "string",
                "value": Array [
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "\\\\n-- Iteration ",
                      "unicode": false,
                      "value": "
-- Iteration ",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "index",
                    },
                    "kind": "encapsedpart",
                    "syntax": "simple",
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": " --\\\\n",
                      "unicode": false,
                      "value": " --",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                ],
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "encoded",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "data",
                  },
                  Number {
                    "kind": "number",
                    "value": "0",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "index",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "substr",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "encoded",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "session_decode",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "_SESSION",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "increment": Array [
        Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "index",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "index",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "0",
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "index",
          },
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "data",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "strlen",
              "resolution": "uqn",
            },
          },
          "type": "<",
        },
      ],
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "session_destroy",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Done\\"",
          "unicode": false,
          "value": "Done",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "ob_end_flush",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
