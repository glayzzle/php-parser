// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #50392 (date_create_from_format enforces 6 digits for 'u' format character) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'Europe/Bratislava'",
            "unicode": false,
            "value": "Europe/Bratislava",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "date_default_timezone_set",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "base",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'2009-03-01 18:00:00'",
          "unicode": false,
          "value": "2009-03-01 18:00:00",
        },
      },
      "kind": "expressionstatement",
    },
    For {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "string",
              },
              "operator": "=",
              "right": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "base",
                  },
                  "right": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'.'",
                    "unicode": false,
                    "value": ".",
                  },
                  "type": ".",
                },
                "right": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "i",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "i",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "str_repeat",
                    "resolution": "uqn",
                  },
                },
                "type": ".",
              },
            },
            "kind": "expressionstatement",
          },
          Echo {
            "expressions": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "string",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\n- \\"",
                "unicode": false,
                "value": "
- ",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "result",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'Y-m-d H:i:s.u'",
                    "unicode": false,
                    "value": "Y-m-d H:i:s.u",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "string",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "date_parse_from_format",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          Echo {
            "expressions": Array [
              RetIf {
                "falseExpr": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'X'",
                  "unicode": false,
                  "value": "X",
                },
                "kind": "retif",
                "test": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'fraction'",
                    "unicode": false,
                    "value": "fraction",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "result",
                  },
                },
                "trueExpr": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'fraction'",
                    "unicode": false,
                    "value": "fraction",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "result",
                  },
                },
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\n\\"",
                "unicode": false,
                "value": "
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          Foreach {
            "body": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"- \\"",
                      "unicode": false,
                      "value": "- ",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "error",
                    },
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"\\\\n\\"",
                      "unicode": false,
                      "value": "
",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
              ],
              "kind": "block",
            },
            "key": null,
            "kind": "foreach",
            "shortForm": false,
            "source": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'errors'",
                "unicode": false,
                "value": "errors",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "result",
              },
            },
            "value": Variable {
              "curly": false,
              "kind": "variable",
              "name": "error",
            },
          },
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\n\\"",
                "unicode": false,
                "value": "
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "increment": Array [
        Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "0",
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "right": Number {
            "kind": "number",
            "value": "8",
          },
          "type": "<",
        },
      ],
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
