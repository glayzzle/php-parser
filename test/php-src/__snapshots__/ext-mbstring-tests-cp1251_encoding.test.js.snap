// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Exhaustive test of verification and conversion of CP1251 text 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": false,
        "target": String {
          "isDoubleQuote": false,
          "kind": "string",
          "parenthesizedExpression": true,
          "raw": "'encoding_tests.inc'",
          "unicode": false,
          "value": "encoding_tests.inc",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Magic {
              "kind": "magic",
              "raw": "__DIR__",
              "value": "__DIR__",
            },
            "right": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'/data/CP1251.txt'",
              "unicode": false,
              "value": "/data/CP1251.txt",
            },
            "type": ".",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'CP1251'",
            "unicode": false,
            "value": "CP1251",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "testEncodingFromUTF16ConversionTable",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"long\\"",
            "unicode": false,
            "value": "long",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mb_substitute_character",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\x98\\"",
            "unicode": false,
            "value": "Â˜",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"%\\"",
            "unicode": false,
            "value": "%",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"CP1251\\"",
            "unicode": false,
            "value": "CP1251",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"UTF-8\\"",
            "unicode": false,
            "value": "UTF-8",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "convertInvalidString",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\x12\\\\x34\\"",
            "unicode": false,
            "value": "4",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"U+1234\\"",
            "unicode": false,
            "value": "U+1234",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"UTF-16BE\\"",
            "unicode": false,
            "value": "UTF-16BE",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"CP1251\\"",
            "unicode": false,
            "value": "CP1251",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "convertInvalidString",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Done!\\\\n\\"",
          "unicode": false,
          "value": "Done!
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
