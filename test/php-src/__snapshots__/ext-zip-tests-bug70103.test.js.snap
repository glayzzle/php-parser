// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #70103 (ZipArchive::addGlob ignores remove_all_path option) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "dir",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Magic {
            "kind": "magic",
            "raw": "__DIR__",
            "value": "__DIR__",
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'/bug70103'",
            "unicode": false,
            "value": "/bug70103",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "dir",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mkdir",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "dir",
          },
          Number {
            "kind": "number",
            "value": "0777",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "chmod",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "dir",
            },
            "right": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'/foo.txt'",
              "unicode": false,
              "value": "/foo.txt",
            },
            "type": ".",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'foo'",
            "unicode": false,
            "value": "foo",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "file_put_contents",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "zip",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "ZipArchive",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "dir",
            },
            "right": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'/test.zip'",
              "unicode": false,
              "value": "/test.zip",
            },
            "type": ".",
          },
          Bin {
            "kind": "bin",
            "left": StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "CREATE",
              },
              "what": Name {
                "kind": "name",
                "name": "ZipArchive",
                "resolution": "uqn",
              },
            },
            "right": StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "OVERWRITE",
              },
              "what": Name {
                "kind": "name",
                "name": "ZipArchive",
                "resolution": "uqn",
              },
            },
            "type": "|",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "open",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "zip",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "dir",
            },
            "right": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'/*.txt'",
              "unicode": false,
              "value": "/*.txt",
            },
            "type": ".",
          },
          Name {
            "kind": "name",
            "name": "GLOB_NOSORT",
            "resolution": "uqn",
          },
          Array {
            "items": Array [
              Entry {
                "byRef": false,
                "key": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'remove_all_path'",
                  "unicode": false,
                  "value": "remove_all_path",
                },
                "kind": "entry",
                "unpack": false,
                "value": Boolean {
                  "kind": "boolean",
                  "raw": "true",
                  "value": true,
                },
              },
            ],
            "kind": "array",
            "shortForm": false,
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "addGlob",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "zip",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "close",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "zip",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "zip",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "ZipArchive",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "dir",
            },
            "right": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'/test.zip'",
              "unicode": false,
              "value": "/test.zip",
            },
            "type": ".",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "open",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "zip",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "numFiles",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "zip",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Number {
                "kind": "number",
                "value": "0",
              },
            ],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "getNameIndex",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "zip",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "close",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "zip",
          },
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
