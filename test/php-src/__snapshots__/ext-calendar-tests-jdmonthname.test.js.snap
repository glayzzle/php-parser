// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests jdmonthname() 1`] = `
Program {
  "children": Array [
    Foreach {
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              Encapsed {
                "kind": "encapsed",
                "raw": "\\"### JD $jd ###\\\\n\\"",
                "type": "string",
                "value": Array [
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "### JD ",
                      "unicode": false,
                      "value": "### JD ",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "jd",
                    },
                    "kind": "encapsedpart",
                    "syntax": "simple",
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": " ###\\\\n",
                      "unicode": false,
                      "value": " ###",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                ],
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          For {
            "body": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    Encapsed {
                      "kind": "encapsed",
                      "raw": "\\"--- mode $mode ---\\\\n\\"",
                      "type": "string",
                      "value": Array [
                        EncapsedPart {
                          "curly": false,
                          "expression": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "--- mode ",
                            "unicode": false,
                            "value": "--- mode ",
                          },
                          "kind": "encapsedpart",
                          "syntax": null,
                        },
                        EncapsedPart {
                          "curly": false,
                          "expression": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "mode",
                          },
                          "kind": "encapsedpart",
                          "syntax": "simple",
                        },
                        EncapsedPart {
                          "curly": false,
                          "expression": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": " ---\\\\n",
                            "unicode": false,
                            "value": " ---",
                          },
                          "kind": "encapsedpart",
                          "syntax": null,
                        },
                      ],
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
                For {
                  "body": Block {
                    "children": Array [
                      Echo {
                        "expressions": Array [
                          Bin {
                            "kind": "bin",
                            "left": Call {
                              "arguments": Array [
                                Bin {
                                  "kind": "bin",
                                  "left": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "jd",
                                  },
                                  "right": Bin {
                                    "kind": "bin",
                                    "left": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "offset",
                                    },
                                    "right": Number {
                                      "kind": "number",
                                      "value": "30",
                                    },
                                    "type": "*",
                                  },
                                  "type": "+",
                                },
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "mode",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "jdmonthname",
                                "resolution": "uqn",
                              },
                            },
                            "right": String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"\\\\n\\"",
                              "unicode": false,
                              "value": "
",
                            },
                            "type": ".",
                          },
                        ],
                        "kind": "echo",
                        "shortForm": false,
                      },
                    ],
                    "kind": "block",
                  },
                  "increment": Array [
                    Post {
                      "kind": "post",
                      "type": "+",
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "offset",
                      },
                    },
                  ],
                  "init": Array [
                    Assign {
                      "kind": "assign",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "offset",
                      },
                      "operator": "=",
                      "right": Number {
                        "kind": "number",
                        "value": "0",
                      },
                    },
                  ],
                  "kind": "for",
                  "shortForm": false,
                  "test": Array [
                    Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "offset",
                      },
                      "right": Number {
                        "kind": "number",
                        "value": "12",
                      },
                      "type": "<=",
                    },
                  ],
                },
              ],
              "kind": "block",
            },
            "increment": Array [
              Post {
                "kind": "post",
                "type": "+",
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "mode",
                },
              },
            ],
            "init": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "mode",
                },
                "operator": "=",
                "right": Number {
                  "kind": "number",
                  "value": "0",
                },
              },
            ],
            "kind": "for",
            "shortForm": false,
            "test": Array [
              Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "mode",
                },
                "right": Number {
                  "kind": "number",
                  "value": "6",
                },
                "type": "<=",
              },
            ],
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Array {
        "items": Array [
          Entry {
            "byRef": false,
            "key": null,
            "kind": "entry",
            "unpack": false,
            "value": Number {
              "kind": "number",
              "value": "2440588",
            },
          },
          Entry {
            "byRef": false,
            "key": null,
            "kind": "entry",
            "unpack": false,
            "value": Number {
              "kind": "number",
              "value": "2452162",
            },
          },
          Entry {
            "byRef": false,
            "key": null,
            "kind": "entry",
            "unpack": false,
            "value": Number {
              "kind": "number",
              "value": "2453926",
            },
          },
        ],
        "kind": "array",
        "shortForm": false,
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "jd",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
