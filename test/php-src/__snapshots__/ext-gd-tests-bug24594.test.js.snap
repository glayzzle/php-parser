// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #24594 (Filling an area using tiles). 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "tile",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Number {
              "kind": "number",
              "value": "36",
            },
            Number {
              "kind": "number",
              "value": "36",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "imagecreate",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "base",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Number {
              "kind": "number",
              "value": "150",
            },
            Number {
              "kind": "number",
              "value": "150",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "imagecreate",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "white",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "tile",
            },
            Number {
              "kind": "number",
              "value": "255",
            },
            Number {
              "kind": "number",
              "value": "255",
            },
            Number {
              "kind": "number",
              "value": "255",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "imagecolorallocate",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "black",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "tile",
            },
            Number {
              "kind": "number",
              "value": "0",
            },
            Number {
              "kind": "number",
              "value": "0",
            },
            Number {
              "kind": "number",
              "value": "0",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "imagecolorallocate",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "white",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "base",
            },
            Number {
              "kind": "number",
              "value": "255",
            },
            Number {
              "kind": "number",
              "value": "255",
            },
            Number {
              "kind": "number",
              "value": "255",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "imagecolorallocate",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "black",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "base",
            },
            Number {
              "kind": "number",
              "value": "0",
            },
            Number {
              "kind": "number",
              "value": "0",
            },
            Number {
              "kind": "number",
              "value": "0",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "imagecolorallocate",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    For {
      "body": Block {
        "children": Array [
          For {
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "tile",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "x",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "y",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "black",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "imagesetpixel",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "increment": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "y",
                },
                "operator": "+=",
                "right": Number {
                  "kind": "number",
                  "value": "2",
                },
              },
            ],
            "init": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "y",
                },
                "operator": "=",
                "right": Number {
                  "kind": "number",
                  "value": "0",
                },
              },
            ],
            "kind": "for",
            "shortForm": false,
            "test": Array [
              Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "y",
                },
                "right": Number {
                  "kind": "number",
                  "value": "36",
                },
                "type": "<",
              },
            ],
          },
        ],
        "kind": "block",
      },
      "increment": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "x",
          },
          "operator": "+=",
          "right": Number {
            "kind": "number",
            "value": "2",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "x",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "0",
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "x",
          },
          "right": Number {
            "kind": "number",
            "value": "36",
          },
          "type": "<",
        },
      ],
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "base",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "tile",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imagesettile",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "base",
          },
          Number {
            "kind": "number",
            "value": "9",
          },
          Number {
            "kind": "number",
            "value": "9",
          },
          Number {
            "kind": "number",
            "value": "139",
          },
          Number {
            "kind": "number",
            "value": "139",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "black",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imagerectangle",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "base",
          },
          Number {
            "kind": "number",
            "value": "9",
          },
          Number {
            "kind": "number",
            "value": "9",
          },
          Number {
            "kind": "number",
            "value": "139",
          },
          Number {
            "kind": "number",
            "value": "139",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "black",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imageline",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "base",
          },
          Number {
            "kind": "number",
            "value": "11",
          },
          Number {
            "kind": "number",
            "value": "12",
          },
          Name {
            "kind": "name",
            "name": "IMG_COLOR_TILED",
            "resolution": "uqn",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imagefill",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": "=",
        "right": RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "base",
                },
                Number {
                  "kind": "number",
                  "value": "0",
                },
                Number {
                  "kind": "number",
                  "value": "10",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolorat",
                "resolution": "uqn",
              },
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "black",
            },
            "type": "==",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": ".=",
        "right": RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "base",
                },
                Number {
                  "kind": "number",
                  "value": "0",
                },
                Number {
                  "kind": "number",
                  "value": "20",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolorat",
                "resolution": "uqn",
              },
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "black",
            },
            "type": "==",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": ".=",
        "right": RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "base",
                },
                Number {
                  "kind": "number",
                  "value": "0",
                },
                Number {
                  "kind": "number",
                  "value": "30",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolorat",
                "resolution": "uqn",
              },
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "black",
            },
            "type": "==",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": ".=",
        "right": RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "base",
                },
                Number {
                  "kind": "number",
                  "value": "0",
                },
                Number {
                  "kind": "number",
                  "value": "40",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolorat",
                "resolution": "uqn",
              },
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "black",
            },
            "type": "==",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": ".=",
        "right": RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "base",
                },
                Number {
                  "kind": "number",
                  "value": "0",
                },
                Number {
                  "kind": "number",
                  "value": "50",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolorat",
                "resolution": "uqn",
              },
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "black",
            },
            "type": "==",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": ".=",
        "right": RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "base",
                },
                Number {
                  "kind": "number",
                  "value": "0",
                },
                Number {
                  "kind": "number",
                  "value": "60",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolorat",
                "resolution": "uqn",
              },
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "black",
            },
            "type": "==",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": ".=",
        "right": RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "base",
                },
                Number {
                  "kind": "number",
                  "value": "11",
                },
                Number {
                  "kind": "number",
                  "value": "12",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolorat",
                "resolution": "uqn",
              },
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "white",
            },
            "type": "==",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": ".=",
        "right": RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "base",
                },
                Number {
                  "kind": "number",
                  "value": "12",
                },
                Number {
                  "kind": "number",
                  "value": "13",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolorat",
                "resolution": "uqn",
              },
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "white",
            },
            "type": "==",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": ".=",
        "right": RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "base",
                },
                Number {
                  "kind": "number",
                  "value": "13",
                },
                Number {
                  "kind": "number",
                  "value": "14",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolorat",
                "resolution": "uqn",
              },
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "white",
            },
            "type": "==",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": ".=",
        "right": RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "base",
                },
                Number {
                  "kind": "number",
                  "value": "14",
                },
                Number {
                  "kind": "number",
                  "value": "15",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolorat",
                "resolution": "uqn",
              },
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "white",
            },
            "type": "==",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": ".=",
        "right": RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "base",
                },
                Number {
                  "kind": "number",
                  "value": "15",
                },
                Number {
                  "kind": "number",
                  "value": "16",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolorat",
                "resolution": "uqn",
              },
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "white",
            },
            "type": "==",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": ".=",
        "right": RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "base",
                },
                Number {
                  "kind": "number",
                  "value": "16",
                },
                Number {
                  "kind": "number",
                  "value": "17",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolorat",
                "resolution": "uqn",
              },
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "white",
            },
            "type": "==",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": ".=",
        "right": RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "base",
                },
                Number {
                  "kind": "number",
                  "value": "10",
                },
                Number {
                  "kind": "number",
                  "value": "12",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolorat",
                "resolution": "uqn",
              },
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "black",
            },
            "type": "==",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": ".=",
        "right": RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "base",
                },
                Number {
                  "kind": "number",
                  "value": "11",
                },
                Number {
                  "kind": "number",
                  "value": "13",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolorat",
                "resolution": "uqn",
              },
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "black",
            },
            "type": "==",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": ".=",
        "right": RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "base",
                },
                Number {
                  "kind": "number",
                  "value": "12",
                },
                Number {
                  "kind": "number",
                  "value": "14",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolorat",
                "resolution": "uqn",
              },
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "black",
            },
            "type": "==",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": ".=",
        "right": RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "base",
                },
                Number {
                  "kind": "number",
                  "value": "13",
                },
                Number {
                  "kind": "number",
                  "value": "15",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolorat",
                "resolution": "uqn",
              },
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "black",
            },
            "type": "==",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": ".=",
        "right": RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "base",
                },
                Number {
                  "kind": "number",
                  "value": "14",
                },
                Number {
                  "kind": "number",
                  "value": "16",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolorat",
                "resolution": "uqn",
              },
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "black",
            },
            "type": "==",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": ".=",
        "right": RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "base",
                },
                Number {
                  "kind": "number",
                  "value": "15",
                },
                Number {
                  "kind": "number",
                  "value": "17",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolorat",
                "resolution": "uqn",
              },
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "black",
            },
            "type": "==",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Encapsed {
          "kind": "encapsed",
          "raw": "\\"$res\\\\n\\"",
          "type": "string",
          "value": Array [
            EncapsedPart {
              "curly": false,
              "expression": Variable {
                "curly": false,
                "kind": "variable",
                "name": "res",
              },
              "kind": "encapsedpart",
              "syntax": "simple",
            },
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "\\\\n",
                "unicode": false,
                "value": "",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
          ],
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "base",
          },
          Number {
            "kind": "number",
            "value": "0",
          },
          Number {
            "kind": "number",
            "value": "0",
          },
          Number {
            "kind": "number",
            "value": "149",
          },
          Number {
            "kind": "number",
            "value": "149",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "white",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imagefilledrectangle",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "base",
          },
          Number {
            "kind": "number",
            "value": "9",
          },
          Number {
            "kind": "number",
            "value": "9",
          },
          Number {
            "kind": "number",
            "value": "139",
          },
          Number {
            "kind": "number",
            "value": "139",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "black",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imagerectangle",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "base",
          },
          Number {
            "kind": "number",
            "value": "9",
          },
          Number {
            "kind": "number",
            "value": "9",
          },
          Number {
            "kind": "number",
            "value": "139",
          },
          Number {
            "kind": "number",
            "value": "139",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "black",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imageline",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "base",
          },
          Number {
            "kind": "number",
            "value": "0",
          },
          Number {
            "kind": "number",
            "value": "0",
          },
          Name {
            "kind": "name",
            "name": "IMG_COLOR_TILED",
            "resolution": "uqn",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imagefill",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": "=",
        "right": RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "base",
                },
                Number {
                  "kind": "number",
                  "value": "0",
                },
                Number {
                  "kind": "number",
                  "value": "10",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolorat",
                "resolution": "uqn",
              },
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "black",
            },
            "type": "==",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": ".=",
        "right": RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "base",
                },
                Number {
                  "kind": "number",
                  "value": "0",
                },
                Number {
                  "kind": "number",
                  "value": "20",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolorat",
                "resolution": "uqn",
              },
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "black",
            },
            "type": "==",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": ".=",
        "right": RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "base",
                },
                Number {
                  "kind": "number",
                  "value": "0",
                },
                Number {
                  "kind": "number",
                  "value": "30",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolorat",
                "resolution": "uqn",
              },
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "black",
            },
            "type": "==",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": ".=",
        "right": RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "base",
                },
                Number {
                  "kind": "number",
                  "value": "0",
                },
                Number {
                  "kind": "number",
                  "value": "40",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolorat",
                "resolution": "uqn",
              },
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "black",
            },
            "type": "==",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": ".=",
        "right": RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "base",
                },
                Number {
                  "kind": "number",
                  "value": "0",
                },
                Number {
                  "kind": "number",
                  "value": "50",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolorat",
                "resolution": "uqn",
              },
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "black",
            },
            "type": "==",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": ".=",
        "right": RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "base",
                },
                Number {
                  "kind": "number",
                  "value": "0",
                },
                Number {
                  "kind": "number",
                  "value": "60",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolorat",
                "resolution": "uqn",
              },
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "black",
            },
            "type": "==",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": ".=",
        "right": RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "base",
                },
                Number {
                  "kind": "number",
                  "value": "11",
                },
                Number {
                  "kind": "number",
                  "value": "12",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolorat",
                "resolution": "uqn",
              },
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "white",
            },
            "type": "==",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": ".=",
        "right": RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "base",
                },
                Number {
                  "kind": "number",
                  "value": "12",
                },
                Number {
                  "kind": "number",
                  "value": "13",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolorat",
                "resolution": "uqn",
              },
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "white",
            },
            "type": "==",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": ".=",
        "right": RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "base",
                },
                Number {
                  "kind": "number",
                  "value": "13",
                },
                Number {
                  "kind": "number",
                  "value": "14",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolorat",
                "resolution": "uqn",
              },
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "white",
            },
            "type": "==",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": ".=",
        "right": RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "base",
                },
                Number {
                  "kind": "number",
                  "value": "14",
                },
                Number {
                  "kind": "number",
                  "value": "15",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolorat",
                "resolution": "uqn",
              },
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "white",
            },
            "type": "==",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": ".=",
        "right": RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "base",
                },
                Number {
                  "kind": "number",
                  "value": "15",
                },
                Number {
                  "kind": "number",
                  "value": "16",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolorat",
                "resolution": "uqn",
              },
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "white",
            },
            "type": "==",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": ".=",
        "right": RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "base",
                },
                Number {
                  "kind": "number",
                  "value": "16",
                },
                Number {
                  "kind": "number",
                  "value": "17",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolorat",
                "resolution": "uqn",
              },
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "white",
            },
            "type": "==",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": ".=",
        "right": RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "base",
                },
                Number {
                  "kind": "number",
                  "value": "0",
                },
                Number {
                  "kind": "number",
                  "value": "16",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolorat",
                "resolution": "uqn",
              },
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "black",
            },
            "type": "==",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": ".=",
        "right": RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "base",
                },
                Number {
                  "kind": "number",
                  "value": "2",
                },
                Number {
                  "kind": "number",
                  "value": "42",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolorat",
                "resolution": "uqn",
              },
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "black",
            },
            "type": "==",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": ".=",
        "right": RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "base",
                },
                Number {
                  "kind": "number",
                  "value": "4",
                },
                Number {
                  "kind": "number",
                  "value": "44",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolorat",
                "resolution": "uqn",
              },
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "black",
            },
            "type": "==",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": ".=",
        "right": RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "base",
                },
                Number {
                  "kind": "number",
                  "value": "146",
                },
                Number {
                  "kind": "number",
                  "value": "146",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolorat",
                "resolution": "uqn",
              },
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "black",
            },
            "type": "==",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": ".=",
        "right": RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "base",
                },
                Number {
                  "kind": "number",
                  "value": "148",
                },
                Number {
                  "kind": "number",
                  "value": "146",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolorat",
                "resolution": "uqn",
              },
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "black",
            },
            "type": "==",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": ".=",
        "right": RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "base",
                },
                Number {
                  "kind": "number",
                  "value": "0",
                },
                Number {
                  "kind": "number",
                  "value": "0",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolorat",
                "resolution": "uqn",
              },
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "black",
            },
            "type": "==",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Encapsed {
          "kind": "encapsed",
          "raw": "\\"$res\\\\n\\"",
          "type": "string",
          "value": Array [
            EncapsedPart {
              "curly": false,
              "expression": Variable {
                "curly": false,
                "kind": "variable",
                "name": "res",
              },
              "kind": "encapsedpart",
              "syntax": "simple",
            },
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "\\\\n",
                "unicode": false,
                "value": "",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
          ],
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
