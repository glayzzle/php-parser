// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #72762: Infinite loop while parsing a file with opcache enabled 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [],
      "body": Array [
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "b",
                  },
                  "operator": "=",
                  "right": Array {
                    "items": Array [],
                    "kind": "array",
                    "shortForm": false,
                  },
                },
                "kind": "expressionstatement",
              },
              Foreach {
                "body": Block {
                  "children": Array [
                    Foreach {
                      "body": Block {
                        "children": Array [],
                        "kind": "block",
                      },
                      "key": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "k",
                      },
                      "kind": "foreach",
                      "shortForm": false,
                      "source": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "b",
                      },
                      "value": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "v",
                      },
                    },
                    ExpressionStatement {
                      "expression": Assign {
                        "kind": "assign",
                        "left": OffsetLookup {
                          "kind": "offsetlookup",
                          "offset": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "k",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "b",
                          },
                        },
                        "operator": "=",
                        "right": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "v",
                        },
                      },
                      "kind": "expressionstatement",
                    },
                  ],
                  "kind": "block",
                },
                "key": null,
                "kind": "foreach",
                "shortForm": false,
                "source": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "a",
                },
                "value": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "a",
                },
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "bar",
          },
          "nullable": false,
          "type": null,
          "visibility": "",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "foo",
      },
    },
    Inline {
      "kind": "inline",
      "raw": "
===DONE===",
      "value": "===DONE===",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
