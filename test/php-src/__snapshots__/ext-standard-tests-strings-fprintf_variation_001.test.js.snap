// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test fprintf() function (variation - 1) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "float_variation",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"%f\\"",
                "unicode": false,
                "value": "%f",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"%-f\\"",
                "unicode": false,
                "value": "%-f",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"%+f\\"",
                "unicode": false,
                "value": "%+f",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"%7.2f\\"",
                "unicode": false,
                "value": "%7.2f",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"%-7.2f\\"",
                "unicode": false,
                "value": "%-7.2f",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"%07.2f\\"",
                "unicode": false,
                "value": "%07.2f",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"%-07.2f\\"",
                "unicode": false,
                "value": "%-07.2f",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"%'#7.2f\\"",
                "unicode": false,
                "value": "%'#7.2f",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "float_numbers",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "0",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "1",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Unary {
                "kind": "unary",
                "type": "-",
                "what": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "0.32",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Unary {
                "kind": "unary",
                "type": "-",
                "what": Number {
                  "kind": "number",
                  "value": "0.32",
                },
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Bin {
                "kind": "bin",
                "left": Number {
                  "kind": "number",
                  "value": "3.4",
                },
                "right": Unary {
                  "kind": "unary",
                  "type": "-",
                  "what": Number {
                    "kind": "number",
                    "value": "3.4",
                  },
                },
                "type": ".",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "2.54",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Unary {
                "kind": "unary",
                "type": "-",
                "what": Number {
                  "kind": "number",
                  "value": "2.54",
                },
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "data_file",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Magic {
            "kind": "magic",
            "raw": "__DIR__",
            "value": "__DIR__",
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'/fprintf_variation_001.txt'",
            "unicode": false,
            "value": "/fprintf_variation_001.txt",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Return {
        "expr": null,
        "kind": "return",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "fp",
          },
          "operator": "=",
          "parenthesizedExpression": true,
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "data_file",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'wt'",
                "unicode": false,
                "value": "wt",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "fopen",
              "resolution": "uqn",
            },
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "counter",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "1",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "fp",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n*** Testing fprintf() with floats ***\\\\n\\"",
            "unicode": false,
            "value": "
*** Testing fprintf() with floats ***
",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "fprintf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "fp",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"\\\\n-- Iteration %d --\\\\n\\"",
                  "unicode": false,
                  "value": "
-- Iteration %d --
",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "counter",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "fprintf",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          Foreach {
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "fp",
                      },
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"\\\\n\\"",
                        "unicode": false,
                        "value": "
",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "fprintf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "fp",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "float_var",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "float_num",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "fprintf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "key": null,
            "kind": "foreach",
            "shortForm": false,
            "source": Variable {
              "curly": false,
              "kind": "variable",
              "name": "float_numbers",
            },
            "value": Variable {
              "curly": false,
              "kind": "variable",
              "name": "float_num",
            },
          },
          ExpressionStatement {
            "expression": Post {
              "kind": "post",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "counter",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "float_variation",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "float_var",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "fp",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "fclose",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "data_file",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "file_get_contents",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "print_r",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\nDone\\"",
          "unicode": false,
          "value": "
Done",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "data_file",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "unlink",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
