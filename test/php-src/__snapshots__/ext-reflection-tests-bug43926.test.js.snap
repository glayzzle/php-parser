// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #43926 (isInstance() isn't equivalent to instanceof operator) 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [],
      "body": Array [],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "E",
      },
    },
    Class {
      "attrGroups": Array [],
      "body": Array [],
      "extends": Name {
        "kind": "name",
        "name": "E",
        "resolution": "uqn",
      },
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "D",
      },
    },
    Class {
      "attrGroups": Array [],
      "body": Array [],
      "extends": Name {
        "kind": "name",
        "name": "D",
        "resolution": "uqn",
      },
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "A",
      },
    },
    Class {
      "attrGroups": Array [],
      "body": Array [],
      "extends": Name {
        "kind": "name",
        "name": "A",
        "resolution": "uqn",
      },
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "C",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "ra",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'A'",
              "unicode": false,
              "value": "A",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "ReflectionClass",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "rc",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'C'",
              "unicode": false,
              "value": "C",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "ReflectionClass",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "rd",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'D'",
              "unicode": false,
              "value": "D",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "ReflectionClass",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "re",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'E'",
              "unicode": false,
              "value": "E",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "ReflectionClass",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "ca",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "newInstance",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "ra",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "cc",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "newInstance",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "rc",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "cd",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "newInstance",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "rd",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "ce",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "newInstance",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "re",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"Is? A \\"",
                  "unicode": false,
                  "value": "Is? A ",
                },
                "right": RetIf {
                  "falseExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'false'",
                    "unicode": false,
                    "value": "false",
                  },
                  "kind": "retif",
                  "parenthesizedExpression": true,
                  "test": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "ca",
                      },
                    ],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "isInstance",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "ra",
                      },
                    },
                  },
                  "trueExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'true'",
                    "unicode": false,
                    "value": "true",
                  },
                },
                "type": ".",
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\", instanceof: \\"",
                "unicode": false,
                "value": ", instanceof: ",
              },
              "type": ".",
            },
            "right": RetIf {
              "falseExpr": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'false'",
                "unicode": false,
                "value": "false",
              },
              "kind": "retif",
              "parenthesizedExpression": true,
              "test": Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "ca",
                },
                "parenthesizedExpression": true,
                "right": Name {
                  "kind": "name",
                  "name": "A",
                  "resolution": "uqn",
                },
                "type": "instanceof",
              },
              "trueExpr": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'true'",
                "unicode": false,
                "value": "true",
              },
            },
            "type": ".",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"Is? C \\"",
                  "unicode": false,
                  "value": "Is? C ",
                },
                "right": RetIf {
                  "falseExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'false'",
                    "unicode": false,
                    "value": "false",
                  },
                  "kind": "retif",
                  "parenthesizedExpression": true,
                  "test": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "ca",
                      },
                    ],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "isInstance",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "rc",
                      },
                    },
                  },
                  "trueExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'true'",
                    "unicode": false,
                    "value": "true",
                  },
                },
                "type": ".",
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\", instanceof: \\"",
                "unicode": false,
                "value": ", instanceof: ",
              },
              "type": ".",
            },
            "right": RetIf {
              "falseExpr": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'false'",
                "unicode": false,
                "value": "false",
              },
              "kind": "retif",
              "parenthesizedExpression": true,
              "test": Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "ca",
                },
                "parenthesizedExpression": true,
                "right": Name {
                  "kind": "name",
                  "name": "C",
                  "resolution": "uqn",
                },
                "type": "instanceof",
              },
              "trueExpr": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'true'",
                "unicode": false,
                "value": "true",
              },
            },
            "type": ".",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"Is? D \\"",
                  "unicode": false,
                  "value": "Is? D ",
                },
                "right": RetIf {
                  "falseExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'false'",
                    "unicode": false,
                    "value": "false",
                  },
                  "kind": "retif",
                  "parenthesizedExpression": true,
                  "test": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "ca",
                      },
                    ],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "isInstance",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "rd",
                      },
                    },
                  },
                  "trueExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'true'",
                    "unicode": false,
                    "value": "true",
                  },
                },
                "type": ".",
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\", instanceof: \\"",
                "unicode": false,
                "value": ", instanceof: ",
              },
              "type": ".",
            },
            "right": RetIf {
              "falseExpr": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'false'",
                "unicode": false,
                "value": "false",
              },
              "kind": "retif",
              "parenthesizedExpression": true,
              "test": Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "ca",
                },
                "parenthesizedExpression": true,
                "right": Name {
                  "kind": "name",
                  "name": "D",
                  "resolution": "uqn",
                },
                "type": "instanceof",
              },
              "trueExpr": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'true'",
                "unicode": false,
                "value": "true",
              },
            },
            "type": ".",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"Is? E \\"",
                  "unicode": false,
                  "value": "Is? E ",
                },
                "right": RetIf {
                  "falseExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'false'",
                    "unicode": false,
                    "value": "false",
                  },
                  "kind": "retif",
                  "parenthesizedExpression": true,
                  "test": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "ca",
                      },
                    ],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "isInstance",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "re",
                      },
                    },
                  },
                  "trueExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'true'",
                    "unicode": false,
                    "value": "true",
                  },
                },
                "type": ".",
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\", instanceof: \\"",
                "unicode": false,
                "value": ", instanceof: ",
              },
              "type": ".",
            },
            "right": RetIf {
              "falseExpr": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'false'",
                "unicode": false,
                "value": "false",
              },
              "kind": "retif",
              "parenthesizedExpression": true,
              "test": Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "ca",
                },
                "parenthesizedExpression": true,
                "right": Name {
                  "kind": "name",
                  "name": "E",
                  "resolution": "uqn",
                },
                "type": "instanceof",
              },
              "trueExpr": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'true'",
                "unicode": false,
                "value": "true",
              },
            },
            "type": ".",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"-\\\\n\\"",
          "unicode": false,
          "value": "-
",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"Is? A \\"",
                  "unicode": false,
                  "value": "Is? A ",
                },
                "right": RetIf {
                  "falseExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'false'",
                    "unicode": false,
                    "value": "false",
                  },
                  "kind": "retif",
                  "parenthesizedExpression": true,
                  "test": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "cc",
                      },
                    ],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "isInstance",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "ra",
                      },
                    },
                  },
                  "trueExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'true'",
                    "unicode": false,
                    "value": "true",
                  },
                },
                "type": ".",
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\", instanceof: \\"",
                "unicode": false,
                "value": ", instanceof: ",
              },
              "type": ".",
            },
            "right": RetIf {
              "falseExpr": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'false'",
                "unicode": false,
                "value": "false",
              },
              "kind": "retif",
              "parenthesizedExpression": true,
              "test": Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "cc",
                },
                "parenthesizedExpression": true,
                "right": Name {
                  "kind": "name",
                  "name": "A",
                  "resolution": "uqn",
                },
                "type": "instanceof",
              },
              "trueExpr": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'true'",
                "unicode": false,
                "value": "true",
              },
            },
            "type": ".",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"Is? C \\"",
                  "unicode": false,
                  "value": "Is? C ",
                },
                "right": RetIf {
                  "falseExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'false'",
                    "unicode": false,
                    "value": "false",
                  },
                  "kind": "retif",
                  "parenthesizedExpression": true,
                  "test": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "cc",
                      },
                    ],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "isInstance",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "rc",
                      },
                    },
                  },
                  "trueExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'true'",
                    "unicode": false,
                    "value": "true",
                  },
                },
                "type": ".",
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\", instanceof: \\"",
                "unicode": false,
                "value": ", instanceof: ",
              },
              "type": ".",
            },
            "right": RetIf {
              "falseExpr": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'false'",
                "unicode": false,
                "value": "false",
              },
              "kind": "retif",
              "parenthesizedExpression": true,
              "test": Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "cc",
                },
                "parenthesizedExpression": true,
                "right": Name {
                  "kind": "name",
                  "name": "C",
                  "resolution": "uqn",
                },
                "type": "instanceof",
              },
              "trueExpr": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'true'",
                "unicode": false,
                "value": "true",
              },
            },
            "type": ".",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"Is? D \\"",
                  "unicode": false,
                  "value": "Is? D ",
                },
                "right": RetIf {
                  "falseExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'false'",
                    "unicode": false,
                    "value": "false",
                  },
                  "kind": "retif",
                  "parenthesizedExpression": true,
                  "test": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "cc",
                      },
                    ],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "isInstance",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "rd",
                      },
                    },
                  },
                  "trueExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'true'",
                    "unicode": false,
                    "value": "true",
                  },
                },
                "type": ".",
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\", instanceof: \\"",
                "unicode": false,
                "value": ", instanceof: ",
              },
              "type": ".",
            },
            "right": RetIf {
              "falseExpr": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'false'",
                "unicode": false,
                "value": "false",
              },
              "kind": "retif",
              "parenthesizedExpression": true,
              "test": Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "cc",
                },
                "parenthesizedExpression": true,
                "right": Name {
                  "kind": "name",
                  "name": "D",
                  "resolution": "uqn",
                },
                "type": "instanceof",
              },
              "trueExpr": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'true'",
                "unicode": false,
                "value": "true",
              },
            },
            "type": ".",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"Is? E \\"",
                  "unicode": false,
                  "value": "Is? E ",
                },
                "right": RetIf {
                  "falseExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'false'",
                    "unicode": false,
                    "value": "false",
                  },
                  "kind": "retif",
                  "parenthesizedExpression": true,
                  "test": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "cc",
                      },
                    ],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "isInstance",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "re",
                      },
                    },
                  },
                  "trueExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'true'",
                    "unicode": false,
                    "value": "true",
                  },
                },
                "type": ".",
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\", instanceof: \\"",
                "unicode": false,
                "value": ", instanceof: ",
              },
              "type": ".",
            },
            "right": RetIf {
              "falseExpr": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'false'",
                "unicode": false,
                "value": "false",
              },
              "kind": "retif",
              "parenthesizedExpression": true,
              "test": Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "cc",
                },
                "parenthesizedExpression": true,
                "right": Name {
                  "kind": "name",
                  "name": "E",
                  "resolution": "uqn",
                },
                "type": "instanceof",
              },
              "trueExpr": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'true'",
                "unicode": false,
                "value": "true",
              },
            },
            "type": ".",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"-\\\\n\\"",
          "unicode": false,
          "value": "-
",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"Is? A \\"",
                  "unicode": false,
                  "value": "Is? A ",
                },
                "right": RetIf {
                  "falseExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'false'",
                    "unicode": false,
                    "value": "false",
                  },
                  "kind": "retif",
                  "parenthesizedExpression": true,
                  "test": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "cd",
                      },
                    ],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "isInstance",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "ra",
                      },
                    },
                  },
                  "trueExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'true'",
                    "unicode": false,
                    "value": "true",
                  },
                },
                "type": ".",
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\", instanceof: \\"",
                "unicode": false,
                "value": ", instanceof: ",
              },
              "type": ".",
            },
            "right": RetIf {
              "falseExpr": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'false'",
                "unicode": false,
                "value": "false",
              },
              "kind": "retif",
              "parenthesizedExpression": true,
              "test": Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "cd",
                },
                "parenthesizedExpression": true,
                "right": Name {
                  "kind": "name",
                  "name": "A",
                  "resolution": "uqn",
                },
                "type": "instanceof",
              },
              "trueExpr": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'true'",
                "unicode": false,
                "value": "true",
              },
            },
            "type": ".",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"Is? C \\"",
                  "unicode": false,
                  "value": "Is? C ",
                },
                "right": RetIf {
                  "falseExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'false'",
                    "unicode": false,
                    "value": "false",
                  },
                  "kind": "retif",
                  "parenthesizedExpression": true,
                  "test": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "cd",
                      },
                    ],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "isInstance",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "rc",
                      },
                    },
                  },
                  "trueExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'true'",
                    "unicode": false,
                    "value": "true",
                  },
                },
                "type": ".",
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\", instanceof: \\"",
                "unicode": false,
                "value": ", instanceof: ",
              },
              "type": ".",
            },
            "right": RetIf {
              "falseExpr": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'false'",
                "unicode": false,
                "value": "false",
              },
              "kind": "retif",
              "parenthesizedExpression": true,
              "test": Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "cd",
                },
                "parenthesizedExpression": true,
                "right": Name {
                  "kind": "name",
                  "name": "C",
                  "resolution": "uqn",
                },
                "type": "instanceof",
              },
              "trueExpr": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'true'",
                "unicode": false,
                "value": "true",
              },
            },
            "type": ".",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"Is? D \\"",
                  "unicode": false,
                  "value": "Is? D ",
                },
                "right": RetIf {
                  "falseExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'false'",
                    "unicode": false,
                    "value": "false",
                  },
                  "kind": "retif",
                  "parenthesizedExpression": true,
                  "test": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "cd",
                      },
                    ],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "isInstance",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "rd",
                      },
                    },
                  },
                  "trueExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'true'",
                    "unicode": false,
                    "value": "true",
                  },
                },
                "type": ".",
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\", instanceof: \\"",
                "unicode": false,
                "value": ", instanceof: ",
              },
              "type": ".",
            },
            "right": RetIf {
              "falseExpr": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'false'",
                "unicode": false,
                "value": "false",
              },
              "kind": "retif",
              "parenthesizedExpression": true,
              "test": Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "cd",
                },
                "parenthesizedExpression": true,
                "right": Name {
                  "kind": "name",
                  "name": "D",
                  "resolution": "uqn",
                },
                "type": "instanceof",
              },
              "trueExpr": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'true'",
                "unicode": false,
                "value": "true",
              },
            },
            "type": ".",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"Is? E \\"",
                  "unicode": false,
                  "value": "Is? E ",
                },
                "right": RetIf {
                  "falseExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'false'",
                    "unicode": false,
                    "value": "false",
                  },
                  "kind": "retif",
                  "parenthesizedExpression": true,
                  "test": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "cd",
                      },
                    ],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "isInstance",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "re",
                      },
                    },
                  },
                  "trueExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'true'",
                    "unicode": false,
                    "value": "true",
                  },
                },
                "type": ".",
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\", instanceof: \\"",
                "unicode": false,
                "value": ", instanceof: ",
              },
              "type": ".",
            },
            "right": RetIf {
              "falseExpr": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'false'",
                "unicode": false,
                "value": "false",
              },
              "kind": "retif",
              "parenthesizedExpression": true,
              "test": Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "cd",
                },
                "parenthesizedExpression": true,
                "right": Name {
                  "kind": "name",
                  "name": "E",
                  "resolution": "uqn",
                },
                "type": "instanceof",
              },
              "trueExpr": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'true'",
                "unicode": false,
                "value": "true",
              },
            },
            "type": ".",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"-\\\\n\\"",
          "unicode": false,
          "value": "-
",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"Is? A \\"",
                  "unicode": false,
                  "value": "Is? A ",
                },
                "right": RetIf {
                  "falseExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'false'",
                    "unicode": false,
                    "value": "false",
                  },
                  "kind": "retif",
                  "parenthesizedExpression": true,
                  "test": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "ce",
                      },
                    ],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "isInstance",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "ra",
                      },
                    },
                  },
                  "trueExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'true'",
                    "unicode": false,
                    "value": "true",
                  },
                },
                "type": ".",
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\", instanceof: \\"",
                "unicode": false,
                "value": ", instanceof: ",
              },
              "type": ".",
            },
            "right": RetIf {
              "falseExpr": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'false'",
                "unicode": false,
                "value": "false",
              },
              "kind": "retif",
              "parenthesizedExpression": true,
              "test": Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "ce",
                },
                "parenthesizedExpression": true,
                "right": Name {
                  "kind": "name",
                  "name": "A",
                  "resolution": "uqn",
                },
                "type": "instanceof",
              },
              "trueExpr": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'true'",
                "unicode": false,
                "value": "true",
              },
            },
            "type": ".",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"Is? C \\"",
                  "unicode": false,
                  "value": "Is? C ",
                },
                "right": RetIf {
                  "falseExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'false'",
                    "unicode": false,
                    "value": "false",
                  },
                  "kind": "retif",
                  "parenthesizedExpression": true,
                  "test": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "ce",
                      },
                    ],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "isInstance",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "rc",
                      },
                    },
                  },
                  "trueExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'true'",
                    "unicode": false,
                    "value": "true",
                  },
                },
                "type": ".",
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\", instanceof: \\"",
                "unicode": false,
                "value": ", instanceof: ",
              },
              "type": ".",
            },
            "right": RetIf {
              "falseExpr": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'false'",
                "unicode": false,
                "value": "false",
              },
              "kind": "retif",
              "parenthesizedExpression": true,
              "test": Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "ce",
                },
                "parenthesizedExpression": true,
                "right": Name {
                  "kind": "name",
                  "name": "C",
                  "resolution": "uqn",
                },
                "type": "instanceof",
              },
              "trueExpr": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'true'",
                "unicode": false,
                "value": "true",
              },
            },
            "type": ".",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"Is? D \\"",
                  "unicode": false,
                  "value": "Is? D ",
                },
                "right": RetIf {
                  "falseExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'false'",
                    "unicode": false,
                    "value": "false",
                  },
                  "kind": "retif",
                  "parenthesizedExpression": true,
                  "test": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "ce",
                      },
                    ],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "isInstance",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "rd",
                      },
                    },
                  },
                  "trueExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'true'",
                    "unicode": false,
                    "value": "true",
                  },
                },
                "type": ".",
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\", instanceof: \\"",
                "unicode": false,
                "value": ", instanceof: ",
              },
              "type": ".",
            },
            "right": RetIf {
              "falseExpr": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'false'",
                "unicode": false,
                "value": "false",
              },
              "kind": "retif",
              "parenthesizedExpression": true,
              "test": Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "ce",
                },
                "parenthesizedExpression": true,
                "right": Name {
                  "kind": "name",
                  "name": "D",
                  "resolution": "uqn",
                },
                "type": "instanceof",
              },
              "trueExpr": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'true'",
                "unicode": false,
                "value": "true",
              },
            },
            "type": ".",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"Is? E \\"",
                  "unicode": false,
                  "value": "Is? E ",
                },
                "right": RetIf {
                  "falseExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'false'",
                    "unicode": false,
                    "value": "false",
                  },
                  "kind": "retif",
                  "parenthesizedExpression": true,
                  "test": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "ce",
                      },
                    ],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "isInstance",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "re",
                      },
                    },
                  },
                  "trueExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'true'",
                    "unicode": false,
                    "value": "true",
                  },
                },
                "type": ".",
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\", instanceof: \\"",
                "unicode": false,
                "value": ", instanceof: ",
              },
              "type": ".",
            },
            "right": RetIf {
              "falseExpr": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'false'",
                "unicode": false,
                "value": "false",
              },
              "kind": "retif",
              "parenthesizedExpression": true,
              "test": Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "ce",
                },
                "parenthesizedExpression": true,
                "right": Name {
                  "kind": "name",
                  "name": "E",
                  "resolution": "uqn",
                },
                "type": "instanceof",
              },
              "trueExpr": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'true'",
                "unicode": false,
                "value": "true",
              },
            },
            "type": ".",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
