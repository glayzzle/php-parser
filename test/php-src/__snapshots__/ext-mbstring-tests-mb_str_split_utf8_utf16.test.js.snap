// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests mb_str_split() tests UTF-8 illegal chars & UTF-16 surrogate pairs 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'include_path'",
            "unicode": false,
            "value": "include_path",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'.'",
            "unicode": false,
            "value": ".",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "ini_set",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": false,
        "target": String {
          "isDoubleQuote": false,
          "kind": "string",
          "parenthesizedExpression": true,
          "raw": "'common.inc'",
          "unicode": false,
          "value": "common.inc",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "utf8",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"H*\\"",
              "unicode": false,
              "value": "H*",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"313233f09280a9\\"",
              "unicode": false,
              "value": "313233f09280a9",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "pack",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "utf8_bad",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"H*\\"",
              "unicode": false,
              "value": "H*",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"313233f092\\"",
              "unicode": false,
              "value": "313233f092",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "pack",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "utf16_first_be",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"H*\\"",
              "unicode": false,
              "value": "H*",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"d800dc00\\"",
              "unicode": false,
              "value": "d800dc00",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "pack",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "utf16_first_le",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"H*\\"",
              "unicode": false,
              "value": "H*",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"00d800dc\\"",
              "unicode": false,
              "value": "00d800dc",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "pack",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "utf16_last_be",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"H*\\"",
              "unicode": false,
              "value": "H*",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"dbffdfff\\"",
              "unicode": false,
              "value": "dbffdfff",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "pack",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "utf16_last_le",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"H*\\"",
              "unicode": false,
              "value": "H*",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"ffdbffdf\\"",
              "unicode": false,
              "value": "ffdbffdf",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "pack",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "utf16be_char_bad",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"H*\\"",
              "unicode": false,
              "value": "H*",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"dc00dc00\\"",
              "unicode": false,
              "value": "dc00dc00",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "pack",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "utf16le_char_bad",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"H*\\"",
              "unicode": false,
              "value": "H*",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"00dc00dc\\"",
              "unicode": false,
              "value": "00dc00dc",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "pack",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "utf16be",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "utf16_first_be",
          },
          "right": Variable {
            "curly": false,
            "kind": "variable",
            "name": "utf16_last_be",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "utf16le",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "utf16_first_le",
          },
          "right": Variable {
            "curly": false,
            "kind": "variable",
            "name": "utf16_last_le",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "utf16be_bad",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "utf16_first_be",
          },
          "right": Variable {
            "curly": false,
            "kind": "variable",
            "name": "utf16be_char_bad",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "utf16le_bad",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "utf16_first_le",
          },
          "right": Variable {
            "curly": false,
            "kind": "variable",
            "name": "utf16le_char_bad",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"UTF-8:\\"",
          "unicode": false,
          "value": "UTF-8:",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\" l:%d v:%s\\"",
                  "unicode": false,
                  "value": " l:%d v:%s",
                },
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "chunk",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "strlen",
                    "resolution": "uqn",
                  },
                },
                OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": Number {
                    "kind": "number",
                    "value": "1",
                  },
                  "what": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"H*\\"",
                        "unicode": false,
                        "value": "H*",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "chunk",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "unpack",
                      "resolution": "uqn",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "printf",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "utf8",
          },
          Number {
            "kind": "number",
            "value": "2",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mb_str_split",
          "resolution": "uqn",
        },
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "chunk",
      },
    },
    Echo {
      "expressions": Array [
        Name {
          "kind": "name",
          "name": "PHP_EOL",
          "resolution": "uqn",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"BAD UTF-8:\\"",
          "unicode": false,
          "value": "BAD UTF-8:",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\" l:%d v:%s\\"",
                  "unicode": false,
                  "value": " l:%d v:%s",
                },
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "chunk",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "strlen",
                    "resolution": "uqn",
                  },
                },
                OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": Number {
                    "kind": "number",
                    "value": "1",
                  },
                  "what": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"H*\\"",
                        "unicode": false,
                        "value": "H*",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "chunk",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "unpack",
                      "resolution": "uqn",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "printf",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "utf8_bad",
          },
          Number {
            "kind": "number",
            "value": "2",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mb_str_split",
          "resolution": "uqn",
        },
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "chunk",
      },
    },
    Echo {
      "expressions": Array [
        Name {
          "kind": "name",
          "name": "PHP_EOL",
          "resolution": "uqn",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"UTF-16BE:\\"",
          "unicode": false,
          "value": "UTF-16BE:",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\" l:%d v:%s\\"",
                  "unicode": false,
                  "value": " l:%d v:%s",
                },
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "chunk",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "strlen",
                    "resolution": "uqn",
                  },
                },
                OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": Number {
                    "kind": "number",
                    "value": "1",
                  },
                  "what": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"H*\\"",
                        "unicode": false,
                        "value": "H*",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "chunk",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "unpack",
                      "resolution": "uqn",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "printf",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "utf16be",
          },
          Number {
            "kind": "number",
            "value": "1",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"UTF-16BE\\"",
            "unicode": false,
            "value": "UTF-16BE",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mb_str_split",
          "resolution": "uqn",
        },
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "chunk",
      },
    },
    Echo {
      "expressions": Array [
        Name {
          "kind": "name",
          "name": "PHP_EOL",
          "resolution": "uqn",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"UTF-16LE:\\"",
          "unicode": false,
          "value": "UTF-16LE:",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\" l:%d v:%s\\"",
                  "unicode": false,
                  "value": " l:%d v:%s",
                },
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "chunk",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "strlen",
                    "resolution": "uqn",
                  },
                },
                OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": Number {
                    "kind": "number",
                    "value": "1",
                  },
                  "what": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"H*\\"",
                        "unicode": false,
                        "value": "H*",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "chunk",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "unpack",
                      "resolution": "uqn",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "printf",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "utf16le",
          },
          Number {
            "kind": "number",
            "value": "1",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"UTF-16LE\\"",
            "unicode": false,
            "value": "UTF-16LE",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mb_str_split",
          "resolution": "uqn",
        },
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "chunk",
      },
    },
    Echo {
      "expressions": Array [
        Name {
          "kind": "name",
          "name": "PHP_EOL",
          "resolution": "uqn",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"BAD UTF-16BE:\\"",
          "unicode": false,
          "value": "BAD UTF-16BE:",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\" l:%d v:%s\\"",
                  "unicode": false,
                  "value": " l:%d v:%s",
                },
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "chunk",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "strlen",
                    "resolution": "uqn",
                  },
                },
                OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": Number {
                    "kind": "number",
                    "value": "1",
                  },
                  "what": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"H*\\"",
                        "unicode": false,
                        "value": "H*",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "chunk",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "unpack",
                      "resolution": "uqn",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "printf",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "utf16be_bad",
          },
          Number {
            "kind": "number",
            "value": "1",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"UTF-16BE\\"",
            "unicode": false,
            "value": "UTF-16BE",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mb_str_split",
          "resolution": "uqn",
        },
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "chunk",
      },
    },
    Echo {
      "expressions": Array [
        Name {
          "kind": "name",
          "name": "PHP_EOL",
          "resolution": "uqn",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"BAD UTF-16LE:\\"",
          "unicode": false,
          "value": "BAD UTF-16LE:",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\" l:%d v:%s\\"",
                  "unicode": false,
                  "value": " l:%d v:%s",
                },
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "chunk",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "strlen",
                    "resolution": "uqn",
                  },
                },
                OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": Number {
                    "kind": "number",
                    "value": "1",
                  },
                  "what": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"H*\\"",
                        "unicode": false,
                        "value": "H*",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "chunk",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "unpack",
                      "resolution": "uqn",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "printf",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "utf16le_bad",
          },
          Number {
            "kind": "number",
            "value": "1",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"UTF-16LE\\"",
            "unicode": false,
            "value": "UTF-16LE",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mb_str_split",
          "resolution": "uqn",
        },
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "chunk",
      },
    },
    Echo {
      "expressions": Array [
        Name {
          "kind": "name",
          "name": "PHP_EOL",
          "resolution": "uqn",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\"",
                "unicode": false,
                "value": "",
              },
              Number {
                "kind": "number",
                "value": "1",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"ASCII\\"",
                "unicode": false,
                "value": "ASCII",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_str_split",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\"",
                "unicode": false,
                "value": "",
              },
              Number {
                "kind": "number",
                "value": "1",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"UTF-8\\"",
                "unicode": false,
                "value": "UTF-8",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_str_split",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\"",
                "unicode": false,
                "value": "",
              },
              Number {
                "kind": "number",
                "value": "1",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"UTF-16LE\\"",
                "unicode": false,
                "value": "UTF-16LE",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_str_split",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
