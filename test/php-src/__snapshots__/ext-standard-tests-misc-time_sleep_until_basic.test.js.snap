// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests time_sleep_until() function - basic test for time_sleep_until() 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "time",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Boolean {
                "kind": "boolean",
                "raw": "true",
                "value": true,
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "microtime",
              "resolution": "uqn",
            },
          },
          "right": Number {
            "kind": "number",
            "value": "2",
          },
          "type": "+",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "sleepUntil",
        },
        "operator": "=",
        "right": Cast {
          "expr": Variable {
            "curly": false,
            "kind": "variable",
            "name": "time",
          },
          "kind": "cast",
          "raw": "(int)",
          "type": "int",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "sleepUntil",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "time_sleep_until",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "now",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Boolean {
              "kind": "boolean",
              "raw": "true",
              "value": true,
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "microtime",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "tmp",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "now",
                  },
                  Number {
                    "kind": "number",
                    "value": "3",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "round",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "now",
              },
              "operator": "=",
              "right": RetIf {
                "falseExpr": Bin {
                  "kind": "bin",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "tmp",
                  },
                  "right": Number {
                    "kind": "number",
                    "value": ".05",
                  },
                  "type": "+",
                },
                "kind": "retif",
                "test": Bin {
                  "kind": "bin",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "tmp",
                  },
                  "right": Cast {
                    "expr": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "time",
                    },
                    "kind": "cast",
                    "raw": "(int)",
                    "type": "int",
                  },
                  "type": ">=",
                },
                "trueExpr": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "tmp",
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Call {
          "arguments": Array [
            Name {
              "kind": "name",
              "name": "PHP_OS",
              "resolution": "uqn",
            },
            Number {
              "kind": "number",
              "value": "0",
            },
            Number {
              "kind": "number",
              "value": "3",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "substr",
            "resolution": "uqn",
          },
        },
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'WIN'",
          "unicode": false,
          "value": "WIN",
        },
        "type": "==",
      },
    },
    If {
      "alternate": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Sleep until (before truncation): \\"",
                "unicode": false,
                "value": "Sleep until (before truncation): ",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "time",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\n\\"",
                "unicode": false,
                "value": "
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Sleep until: \\"",
                "unicode": false,
                "value": "Sleep until: ",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "sleepUntil",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\n\\"",
                "unicode": false,
                "value": "
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Now: \\"",
                "unicode": false,
                "value": "Now: ",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "now",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\n\\"",
                "unicode": false,
                "value": "
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Success\\\\n\\"",
                "unicode": false,
                "value": "Success
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "now",
          },
          "right": Number {
            "kind": "number",
            "value": "0.002",
          },
          "type": "+",
        },
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "sleepUntil",
        },
        "type": ">=",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
