// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests PostgreSQL create large object with given oid 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": false,
        "target": String {
          "isDoubleQuote": false,
          "kind": "string",
          "parenthesizedExpression": true,
          "raw": "'config.inc'",
          "unicode": false,
          "value": "config.inc",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "db",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "conn_str",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "pg_connect",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"create LO from int\\\\n\\"",
          "unicode": false,
          "value": "create LO from int
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"begin\\"",
            "unicode": false,
            "value": "begin",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "pg_exec",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "oid",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
            Number {
              "kind": "number",
              "value": "21000",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "pg_lo_create",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Echo {
        "expressions": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "parenthesizedExpression": true,
            "raw": "\\"pg_lo_create() error\\\\n\\"",
            "unicode": false,
            "value": "pg_lo_create() error
",
          },
        ],
        "kind": "echo",
        "shortForm": false,
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Variable {
          "curly": false,
          "kind": "variable",
          "name": "oid",
        },
      },
    },
    If {
      "alternate": null,
      "body": Echo {
        "expressions": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "parenthesizedExpression": true,
            "raw": "\\"pg_lo_create() wrong id\\\\n\\"",
            "unicode": false,
            "value": "pg_lo_create() wrong id
",
          },
        ],
        "kind": "echo",
        "shortForm": false,
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "oid",
        },
        "right": Number {
          "kind": "number",
          "value": "21000",
        },
        "type": "!=",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "oid",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "pg_lo_unlink",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"commit\\"",
            "unicode": false,
            "value": "commit",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "pg_exec",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"create LO from string\\\\n\\"",
          "unicode": false,
          "value": "create LO from string
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"begin\\"",
            "unicode": false,
            "value": "begin",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "pg_exec",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "oid",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"21001\\"",
              "unicode": false,
              "value": "21001",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "pg_lo_create",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Echo {
        "expressions": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "parenthesizedExpression": true,
            "raw": "\\"pg_lo_create() error\\\\n\\"",
            "unicode": false,
            "value": "pg_lo_create() error
",
          },
        ],
        "kind": "echo",
        "shortForm": false,
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Variable {
          "curly": false,
          "kind": "variable",
          "name": "oid",
        },
      },
    },
    If {
      "alternate": null,
      "body": Echo {
        "expressions": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "parenthesizedExpression": true,
            "raw": "\\"pg_lo_create() wrong id\\\\n\\"",
            "unicode": false,
            "value": "pg_lo_create() wrong id
",
          },
        ],
        "kind": "echo",
        "shortForm": false,
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "oid",
        },
        "right": Number {
          "kind": "number",
          "value": "21001",
        },
        "type": "!=",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "oid",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "pg_lo_unlink",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"commit\\"",
            "unicode": false,
            "value": "commit",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "pg_exec",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"create LO using default connection\\\\n\\"",
          "unicode": false,
          "value": "create LO using default connection
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"begin\\"",
            "unicode": false,
            "value": "begin",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "pg_exec",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "oid",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Number {
              "kind": "number",
              "value": "21002",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "pg_lo_create",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Echo {
        "expressions": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "parenthesizedExpression": true,
            "raw": "\\"pg_lo_create() error\\\\n\\"",
            "unicode": false,
            "value": "pg_lo_create() error
",
          },
        ],
        "kind": "echo",
        "shortForm": false,
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Variable {
          "curly": false,
          "kind": "variable",
          "name": "oid",
        },
      },
    },
    If {
      "alternate": null,
      "body": Echo {
        "expressions": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "parenthesizedExpression": true,
            "raw": "\\"pg_lo_create() wrong id\\\\n\\"",
            "unicode": false,
            "value": "pg_lo_create() wrong id
",
          },
        ],
        "kind": "echo",
        "shortForm": false,
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "oid",
        },
        "right": Number {
          "kind": "number",
          "value": "21002",
        },
        "type": "!=",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "oid",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "pg_lo_unlink",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"commit\\"",
            "unicode": false,
            "value": "commit",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "pg_exec",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"OK\\"",
          "unicode": false,
          "value": "OK",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
