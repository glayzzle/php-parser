// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Multicast support: IPv4 receive options 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": false,
        "target": Bin {
          "kind": "bin",
          "left": Magic {
            "kind": "magic",
            "raw": "__DIR__",
            "value": "__DIR__",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"/mcast_helpers.php.inc\\"",
            "unicode": false,
            "value": "/mcast_helpers.php.inc",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "domain",
        },
        "operator": "=",
        "right": Name {
          "kind": "name",
          "name": "AF_INET",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "level",
        },
        "operator": "=",
        "right": Name {
          "kind": "name",
          "name": "IPPROTO_IP",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "interface",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"lo\\"",
          "unicode": false,
          "value": "lo",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "mcastaddr",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'224.0.0.23'",
          "unicode": false,
          "value": "224.0.0.23",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "sblock",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"127.0.0.1\\"",
          "unicode": false,
          "value": "127.0.0.1",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"creating send socket bound to 127.0.0.1\\\\n\\"",
          "unicode": false,
          "value": "creating send socket bound to 127.0.0.1
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "sends1",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "domain",
            },
            Name {
              "kind": "name",
              "name": "SOCK_DGRAM",
              "resolution": "uqn",
            },
            Name {
              "kind": "name",
              "name": "SOL_UDP",
              "resolution": "uqn",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "socket_create",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "br",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "sends1",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'127.0.0.1'",
              "unicode": false,
              "value": "127.0.0.1",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "socket_bind",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "br",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Encapsed {
          "kind": "encapsed",
          "raw": "\\"creating unbound socket and hoping the routing table causes an interface other than lo to be used for sending messages to $mcastaddr\\\\n\\"",
          "type": "string",
          "value": Array [
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "creating unbound socket and hoping the routing table causes an interface other than lo to be used for sending messages to ",
                "unicode": false,
                "value": "creating unbound socket and hoping the routing table causes an interface other than lo to be used for sending messages to ",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
            EncapsedPart {
              "curly": false,
              "expression": Variable {
                "curly": false,
                "kind": "variable",
                "name": "mcastaddr",
              },
              "kind": "encapsedpart",
              "syntax": "simple",
            },
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "\\\\n",
                "unicode": false,
                "value": "",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
          ],
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "sends2",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "domain",
            },
            Name {
              "kind": "name",
              "name": "SOCK_DGRAM",
              "resolution": "uqn",
            },
            Name {
              "kind": "name",
              "name": "SOL_UDP",
              "resolution": "uqn",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "socket_create",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "br",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"creating receive socket\\\\n\\"",
          "unicode": false,
          "value": "creating receive socket
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "s",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "domain",
            },
            Name {
              "kind": "name",
              "name": "SOCK_DGRAM",
              "resolution": "uqn",
            },
            Name {
              "kind": "name",
              "name": "SOL_UDP",
              "resolution": "uqn",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "socket_create",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "br",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "s",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'0.0.0.0'",
              "unicode": false,
              "value": "0.0.0.0",
            },
            Number {
              "kind": "number",
              "value": "0",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "socket_bind",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "unused",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "port",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "socket_getsockname",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "br",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "so",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "s",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "level",
            },
            Name {
              "kind": "name",
              "name": "MCAST_JOIN_GROUP",
              "resolution": "uqn",
            },
            Array {
              "items": Array [
                Entry {
                  "byRef": false,
                  "key": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"group\\"",
                    "unicode": false,
                    "value": "group",
                  },
                  "kind": "entry",
                  "unpack": false,
                  "value": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "mcastaddr",
                  },
                },
                Entry {
                  "byRef": false,
                  "key": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"interface\\"",
                    "unicode": false,
                    "value": "interface",
                  },
                  "kind": "entry",
                  "unpack": false,
                  "value": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "interface",
                  },
                },
              ],
              "kind": "array",
              "shortForm": false,
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "socket_set_option",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "so",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "r",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "sends1",
            },
            Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "m",
              },
              "operator": "=",
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"initial packet\\"",
                "unicode": false,
                "value": "initial packet",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "m",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "strlen",
                "resolution": "uqn",
              },
            },
            Number {
              "kind": "number",
              "value": "0",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "mcastaddr",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "port",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "socket_sendto",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "r",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "i",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "0",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
          Number {
            "kind": "number",
            "value": "500",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "checktimeout",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    While {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Post {
              "kind": "post",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "i",
              },
            },
            "kind": "expressionstatement",
          },
          Echo {
            "expressions": Array [
              Encapsed {
                "kind": "encapsed",
                "raw": "\\"$i> \\"",
                "type": "string",
                "value": Array [
                  EncapsedPart {
                    "curly": false,
                    "expression": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "i",
                    },
                    "kind": "encapsedpart",
                    "syntax": "simple",
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "> ",
                      "unicode": false,
                      "value": "> ",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                ],
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "str",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\n\\"",
                "unicode": false,
                "value": "
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"leaving group\\\\n\\"",
                      "unicode": false,
                      "value": "leaving group
",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "so",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "s",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "level",
                        },
                        Name {
                          "kind": "name",
                          "name": "MCAST_LEAVE_GROUP",
                          "resolution": "uqn",
                        },
                        Array {
                          "items": Array [
                            Entry {
                              "byRef": false,
                              "key": String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"group\\"",
                                "unicode": false,
                                "value": "group",
                              },
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "mcastaddr",
                              },
                            },
                            Entry {
                              "byRef": false,
                              "key": String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"interface\\"",
                                "unicode": false,
                                "value": "interface",
                              },
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "interface",
                              },
                            },
                          ],
                          "kind": "array",
                          "shortForm": false,
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "socket_set_option",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "so",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "r",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "sends1",
                        },
                        Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "m",
                          },
                          "operator": "=",
                          "right": String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"ignored mcast packet\\"",
                            "unicode": false,
                            "value": "ignored mcast packet",
                          },
                        },
                        Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "m",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "strlen",
                            "resolution": "uqn",
                          },
                        },
                        Number {
                          "kind": "number",
                          "value": "0",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "mcastaddr",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "port",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "socket_sendto",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "r",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "r",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "sends1",
                        },
                        Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "m",
                          },
                          "operator": "=",
                          "right": String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"unicast packet\\"",
                            "unicode": false,
                            "value": "unicast packet",
                          },
                        },
                        Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "m",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "strlen",
                            "resolution": "uqn",
                          },
                        },
                        Number {
                          "kind": "number",
                          "value": "0",
                        },
                        String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"127.0.0.1\\"",
                          "unicode": false,
                          "value": "127.0.0.1",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "port",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "socket_sendto",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "r",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "i",
              },
              "right": Number {
                "kind": "number",
                "value": "1",
              },
              "type": "==",
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"re-joining group\\\\n\\"",
                      "unicode": false,
                      "value": "re-joining group
",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "so",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "s",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "level",
                        },
                        Name {
                          "kind": "name",
                          "name": "MCAST_JOIN_GROUP",
                          "resolution": "uqn",
                        },
                        Array {
                          "items": Array [
                            Entry {
                              "byRef": false,
                              "key": String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"group\\"",
                                "unicode": false,
                                "value": "group",
                              },
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "mcastaddr",
                              },
                            },
                            Entry {
                              "byRef": false,
                              "key": String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"interface\\"",
                                "unicode": false,
                                "value": "interface",
                              },
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "interface",
                              },
                            },
                          ],
                          "kind": "array",
                          "shortForm": false,
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "socket_set_option",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "so",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "r",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "sends2",
                        },
                        Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "m",
                          },
                          "operator": "=",
                          "right": String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"ignored mcast packet (different interface)\\"",
                            "unicode": false,
                            "value": "ignored mcast packet (different interface)",
                          },
                        },
                        Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "m",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "strlen",
                            "resolution": "uqn",
                          },
                        },
                        Number {
                          "kind": "number",
                          "value": "0",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "mcastaddr",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "port",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "socket_sendto",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "r",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "r",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "sends1",
                        },
                        Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "m",
                          },
                          "operator": "=",
                          "right": String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"mcast packet\\"",
                            "unicode": false,
                            "value": "mcast packet",
                          },
                        },
                        Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "m",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "strlen",
                            "resolution": "uqn",
                          },
                        },
                        Number {
                          "kind": "number",
                          "value": "0",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "mcastaddr",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "port",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "socket_sendto",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "r",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "i",
              },
              "right": Number {
                "kind": "number",
                "value": "2",
              },
              "type": "==",
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"blocking source\\\\n\\"",
                      "unicode": false,
                      "value": "blocking source
",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "so",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "s",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "level",
                        },
                        Name {
                          "kind": "name",
                          "name": "MCAST_BLOCK_SOURCE",
                          "resolution": "uqn",
                        },
                        Array {
                          "items": Array [
                            Entry {
                              "byRef": false,
                              "key": String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"group\\"",
                                "unicode": false,
                                "value": "group",
                              },
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "mcastaddr",
                              },
                            },
                            Entry {
                              "byRef": false,
                              "key": String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"interface\\"",
                                "unicode": false,
                                "value": "interface",
                              },
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "interface",
                              },
                            },
                            Entry {
                              "byRef": false,
                              "key": String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"source\\"",
                                "unicode": false,
                                "value": "source",
                              },
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "sblock",
                              },
                            },
                          ],
                          "kind": "array",
                          "shortForm": false,
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "socket_set_option",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "so",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "r",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "sends1",
                        },
                        Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "m",
                          },
                          "operator": "=",
                          "right": String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"ignored packet (blocked source)\\"",
                            "unicode": false,
                            "value": "ignored packet (blocked source)",
                          },
                        },
                        Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "m",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "strlen",
                            "resolution": "uqn",
                          },
                        },
                        Number {
                          "kind": "number",
                          "value": "0",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "mcastaddr",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "port",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "socket_sendto",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "r",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "r",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "sends1",
                        },
                        Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "m",
                          },
                          "operator": "=",
                          "right": String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"unicast packet\\"",
                            "unicode": false,
                            "value": "unicast packet",
                          },
                        },
                        Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "m",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "strlen",
                            "resolution": "uqn",
                          },
                        },
                        Number {
                          "kind": "number",
                          "value": "0",
                        },
                        String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"127.0.0.1\\"",
                          "unicode": false,
                          "value": "127.0.0.1",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "port",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "socket_sendto",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "r",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "i",
              },
              "right": Number {
                "kind": "number",
                "value": "3",
              },
              "type": "==",
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"unblocking source\\\\n\\"",
                      "unicode": false,
                      "value": "unblocking source
",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "so",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "s",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "level",
                        },
                        Name {
                          "kind": "name",
                          "name": "MCAST_UNBLOCK_SOURCE",
                          "resolution": "uqn",
                        },
                        Array {
                          "items": Array [
                            Entry {
                              "byRef": false,
                              "key": String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"group\\"",
                                "unicode": false,
                                "value": "group",
                              },
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "mcastaddr",
                              },
                            },
                            Entry {
                              "byRef": false,
                              "key": String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"interface\\"",
                                "unicode": false,
                                "value": "interface",
                              },
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "interface",
                              },
                            },
                            Entry {
                              "byRef": false,
                              "key": String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"source\\"",
                                "unicode": false,
                                "value": "source",
                              },
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "sblock",
                              },
                            },
                          ],
                          "kind": "array",
                          "shortForm": false,
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "socket_set_option",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "so",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "r",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "sends1",
                        },
                        Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "m",
                          },
                          "operator": "=",
                          "right": String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"mcast packet from 127.0.0.1\\"",
                            "unicode": false,
                            "value": "mcast packet from 127.0.0.1",
                          },
                        },
                        Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "m",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "strlen",
                            "resolution": "uqn",
                          },
                        },
                        Number {
                          "kind": "number",
                          "value": "0",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "mcastaddr",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "port",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "socket_sendto",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "r",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "i",
              },
              "right": Number {
                "kind": "number",
                "value": "4",
              },
              "type": "==",
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"leaving group\\\\n\\"",
                      "unicode": false,
                      "value": "leaving group
",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "so",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "s",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "level",
                        },
                        Name {
                          "kind": "name",
                          "name": "MCAST_LEAVE_GROUP",
                          "resolution": "uqn",
                        },
                        Array {
                          "items": Array [
                            Entry {
                              "byRef": false,
                              "key": String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"group\\"",
                                "unicode": false,
                                "value": "group",
                              },
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "mcastaddr",
                              },
                            },
                            Entry {
                              "byRef": false,
                              "key": String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"interface\\"",
                                "unicode": false,
                                "value": "interface",
                              },
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "interface",
                              },
                            },
                          ],
                          "kind": "array",
                          "shortForm": false,
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "socket_set_option",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "so",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "r",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "sends1",
                        },
                        Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "m",
                          },
                          "operator": "=",
                          "right": String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"ignored mcast packet\\"",
                            "unicode": false,
                            "value": "ignored mcast packet",
                          },
                        },
                        Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "m",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "strlen",
                            "resolution": "uqn",
                          },
                        },
                        Number {
                          "kind": "number",
                          "value": "0",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "mcastaddr",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "port",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "socket_sendto",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "r",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "r",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "sends1",
                        },
                        Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "m",
                          },
                          "operator": "=",
                          "right": String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"unicast packet\\"",
                            "unicode": false,
                            "value": "unicast packet",
                          },
                        },
                        Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "m",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "strlen",
                            "resolution": "uqn",
                          },
                        },
                        Number {
                          "kind": "number",
                          "value": "0",
                        },
                        String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"127.0.0.1\\"",
                          "unicode": false,
                          "value": "127.0.0.1",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "port",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "socket_sendto",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "r",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "i",
              },
              "right": Number {
                "kind": "number",
                "value": "5",
              },
              "type": "==",
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"joining source group\\\\n\\"",
                      "unicode": false,
                      "value": "joining source group
",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "so",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "s",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "level",
                        },
                        Name {
                          "kind": "name",
                          "name": "MCAST_JOIN_SOURCE_GROUP",
                          "resolution": "uqn",
                        },
                        Array {
                          "items": Array [
                            Entry {
                              "byRef": false,
                              "key": String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"group\\"",
                                "unicode": false,
                                "value": "group",
                              },
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "mcastaddr",
                              },
                            },
                            Entry {
                              "byRef": false,
                              "key": String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"interface\\"",
                                "unicode": false,
                                "value": "interface",
                              },
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "interface",
                              },
                            },
                            Entry {
                              "byRef": false,
                              "key": String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"source\\"",
                                "unicode": false,
                                "value": "source",
                              },
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "sblock",
                              },
                            },
                          ],
                          "kind": "array",
                          "shortForm": false,
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "socket_set_option",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "so",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "r",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "sends1",
                        },
                        Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "m",
                          },
                          "operator": "=",
                          "right": String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"mcast packet from 127.0.0.1\\"",
                            "unicode": false,
                            "value": "mcast packet from 127.0.0.1",
                          },
                        },
                        Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "m",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "strlen",
                            "resolution": "uqn",
                          },
                        },
                        Number {
                          "kind": "number",
                          "value": "0",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "mcastaddr",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "port",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "socket_sendto",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "r",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "i",
              },
              "right": Number {
                "kind": "number",
                "value": "6",
              },
              "type": "==",
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"leaving source group\\\\n\\"",
                      "unicode": false,
                      "value": "leaving source group
",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "so",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "s",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "level",
                        },
                        Name {
                          "kind": "name",
                          "name": "MCAST_LEAVE_SOURCE_GROUP",
                          "resolution": "uqn",
                        },
                        Array {
                          "items": Array [
                            Entry {
                              "byRef": false,
                              "key": String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"group\\"",
                                "unicode": false,
                                "value": "group",
                              },
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "mcastaddr",
                              },
                            },
                            Entry {
                              "byRef": false,
                              "key": String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"interface\\"",
                                "unicode": false,
                                "value": "interface",
                              },
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "interface",
                              },
                            },
                            Entry {
                              "byRef": false,
                              "key": String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"source\\"",
                                "unicode": false,
                                "value": "source",
                              },
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "sblock",
                              },
                            },
                          ],
                          "kind": "array",
                          "shortForm": false,
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "socket_set_option",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "so",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "r",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "sends1",
                        },
                        Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "m",
                          },
                          "operator": "=",
                          "right": String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"ignored mcast packet\\"",
                            "unicode": false,
                            "value": "ignored mcast packet",
                          },
                        },
                        Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "m",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "strlen",
                            "resolution": "uqn",
                          },
                        },
                        Number {
                          "kind": "number",
                          "value": "0",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "mcastaddr",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "port",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "socket_sendto",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "r",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "r",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "sends1",
                        },
                        Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "m",
                          },
                          "operator": "=",
                          "right": String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"unicast packet\\"",
                            "unicode": false,
                            "value": "unicast packet",
                          },
                        },
                        Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "m",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "strlen",
                            "resolution": "uqn",
                          },
                        },
                        Number {
                          "kind": "number",
                          "value": "0",
                        },
                        String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"127.0.0.1\\"",
                          "unicode": false,
                          "value": "127.0.0.1",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "port",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "socket_sendto",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "r",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "i",
              },
              "right": Number {
                "kind": "number",
                "value": "7",
              },
              "type": "==",
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                Break {
                  "kind": "break",
                  "level": null,
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "i",
              },
              "right": Number {
                "kind": "number",
                "value": "8",
              },
              "type": "==",
            },
          },
        ],
        "kind": "block",
      },
      "kind": "while",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "str",
          },
          "operator": "=",
          "parenthesizedExpression": true,
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "s",
              },
              Number {
                "kind": "number",
                "value": "3000",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "socket_read",
              "resolution": "uqn",
            },
          },
        },
        "right": Boolean {
          "kind": "boolean",
          "raw": "FALSE",
          "value": false,
        },
        "type": "!==",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
