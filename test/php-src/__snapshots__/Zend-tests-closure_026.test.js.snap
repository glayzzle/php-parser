// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Closure 026: Assigning a closure object to an array in $this 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [],
      "body": Array [
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": AssignRef {
                  "kind": "assignref",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "a",
                  },
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "this",
                  },
                },
                "kind": "expressionstatement",
              },
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": false,
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "a",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "a",
                      },
                    },
                  },
                  "operator": "=",
                  "right": Closure {
                    "arguments": Array [],
                    "attrGroups": Array [],
                    "body": Block {
                      "children": Array [
                        Return {
                          "expr": Number {
                            "kind": "number",
                            "value": "1",
                          },
                          "kind": "return",
                        },
                      ],
                      "kind": "block",
                    },
                    "byref": false,
                    "isStatic": false,
                    "kind": "closure",
                    "nullable": false,
                    "type": null,
                    "uses": Array [],
                  },
                },
                "kind": "expressionstatement",
              },
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "this",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "var_dump",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": OffsetLookup {
                        "kind": "offsetlookup",
                        "offset": Number {
                          "kind": "number",
                          "value": "0",
                        },
                        "what": PropertyLookup {
                          "kind": "propertylookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "a",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "this",
                          },
                        },
                      },
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "var_dump",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "__construct",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "foo",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "x",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "foo",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"--------------\\\\n\\"",
          "unicode": false,
          "value": "--------------
",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "b",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "c",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": Number {
                      "kind": "number",
                      "value": "0",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "c",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "key": Variable {
        "curly": false,
        "kind": "variable",
        "name": "b",
      },
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "x",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "c",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
