// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Fetching results from tables of different charsets. 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": true,
        "target": String {
          "isDoubleQuote": true,
          "kind": "string",
          "parenthesizedExpression": true,
          "raw": "\\"connect.inc\\"",
          "unicode": false,
          "value": "connect.inc",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "tmp",
        },
        "operator": "=",
        "right": NullKeyword {
          "kind": "nullkeyword",
          "raw": "NULL",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "link",
        },
        "operator": "=",
        "right": NullKeyword {
          "kind": "nullkeyword",
          "raw": "NULL",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[001] Cannot connect to the server using host=%s, user=%s, passwd=***, dbname=%s, port=%s, socket=%s\\\\n\\"",
              "unicode": false,
              "value": "[001] Cannot connect to the server using host=%s, user=%s, passwd=***, dbname=%s, port=%s, socket=%s
",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "host",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "user",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "port",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "socket",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          "operator": "=",
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "host",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "user",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "passwd",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "db",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "port",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "socket",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "my_mysqli_connect",
              "resolution": "uqn",
            },
          },
        },
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[002] [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[002] [%d] %s
",
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "res",
          },
          "operator": "=",
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "link",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'SELECT version() AS server_version'",
                "unicode": false,
                "value": "SELECT version() AS server_version",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_query",
              "resolution": "uqn",
            },
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "tmp",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "res",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_fetch_assoc",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "res",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_free_result",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "version",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'.'",
              "unicode": false,
              "value": ".",
            },
            OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'server_version'",
                "unicode": false,
                "value": "server_version",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "tmp",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "explode",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[003] Cannot determine server version, need MySQL Server 4.1+ for the test!\\\\n\\"",
              "unicode": false,
              "value": "[003] Cannot determine server version, need MySQL Server 4.1+ for the test!
",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Empty {
        "expression": Variable {
          "curly": false,
          "kind": "variable",
          "name": "version",
        },
        "kind": "empty",
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[004] Need MySQL Server 4.1+ for the test!\\\\n\\"",
              "unicode": false,
              "value": "[004] Need MySQL Server 4.1+ for the test!
",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Bin {
          "kind": "bin",
          "left": OffsetLookup {
            "kind": "offsetlookup",
            "offset": Number {
              "kind": "number",
              "value": "0",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "version",
            },
          },
          "right": Number {
            "kind": "number",
            "value": "4",
          },
          "type": "<=",
        },
        "right": Bin {
          "kind": "bin",
          "left": OffsetLookup {
            "kind": "offsetlookup",
            "offset": Number {
              "kind": "number",
              "value": "1",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "version",
            },
          },
          "right": Number {
            "kind": "number",
            "value": "1",
          },
          "type": "<",
        },
        "type": "&&",
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[005] Cannot get list of available character sets, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[005] Cannot get list of available character sets, [%d] %s
",
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "res",
          },
          "operator": "=",
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "link",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"SHOW CHARACTER SET\\"",
                "unicode": false,
                "value": "SHOW CHARACTER SET",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_query",
              "resolution": "uqn",
            },
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "charsets",
        },
        "operator": "=",
        "right": Array {
          "items": Array [],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    While {
      "body": ExpressionStatement {
        "expression": Assign {
          "kind": "assign",
          "left": OffsetLookup {
            "kind": "offsetlookup",
            "offset": false,
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "charsets",
            },
          },
          "operator": "=",
          "right": Variable {
            "curly": false,
            "kind": "variable",
            "name": "row",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "while",
      "shortForm": false,
      "test": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "row",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "res",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_fetch_assoc",
            "resolution": "uqn",
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "res",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_free_result",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "k",
              },
              "operator": "=",
              "right": OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'Charset'",
                  "unicode": false,
                  "value": "Charset",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "charset",
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                Continue {
                  "kind": "continue",
                  "level": null,
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": OffsetLookup {
                        "kind": "offsetlookup",
                        "offset": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'Charset'",
                          "unicode": false,
                          "value": "Charset",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "charset",
                        },
                      },
                      "right": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'ucs2'",
                        "unicode": false,
                        "value": "ucs2",
                      },
                      "type": "==",
                    },
                    "right": Bin {
                      "kind": "bin",
                      "left": OffsetLookup {
                        "kind": "offsetlookup",
                        "offset": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'Charset'",
                          "unicode": false,
                          "value": "Charset",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "charset",
                        },
                      },
                      "right": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'utf16'",
                        "unicode": false,
                        "value": "utf16",
                      },
                      "type": "==",
                    },
                    "type": "||",
                  },
                  "right": Bin {
                    "kind": "bin",
                    "left": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'Charset'",
                        "unicode": false,
                        "value": "Charset",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "charset",
                      },
                    },
                    "right": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'utf32'",
                      "unicode": false,
                      "value": "utf32",
                    },
                    "type": "==",
                  },
                  "type": "||",
                },
                "right": Bin {
                  "kind": "bin",
                  "left": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'utf16le'",
                    "unicode": false,
                    "value": "utf16le",
                  },
                  "right": OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'Charset'",
                      "unicode": false,
                      "value": "Charset",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "charset",
                    },
                  },
                  "type": "==",
                },
                "type": "||",
              },
              "right": Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'utf8mb3'",
                  "unicode": false,
                  "value": "utf8mb3",
                },
                "right": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'Charset'",
                    "unicode": false,
                    "value": "Charset",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "charset",
                  },
                },
                "type": "==",
              },
              "type": "||",
            },
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[006 + %s] [%d] %s\\\\n\\"",
                    "unicode": false,
                    "value": "[006 + %s] [%d] %s
",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "k",
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "link",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_errno",
                      "resolution": "uqn",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "link",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_error",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "link",
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"DROP TABLE IF EXISTS test\\"",
                    "unicode": false,
                    "value": "DROP TABLE IF EXISTS test",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_query",
                  "resolution": "uqn",
                },
              },
            },
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "sql",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"CREATE TABLE test(id INT, label CHAR(1)) CHARACTER SET '%s' \\"",
                    "unicode": false,
                    "value": "CREATE TABLE test(id INT, label CHAR(1)) CHARACTER SET '%s' ",
                  },
                  OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'Charset'",
                      "unicode": false,
                      "value": "Charset",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "charset",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "sprintf",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[007 + %s] %s [%d] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[007 + %s] %s [%d] %s
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "k",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "sql",
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_errno",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_error",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Continue {
                  "kind": "continue",
                  "level": null,
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "link",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "sql",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_query",
                  "resolution": "uqn",
                },
              },
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[008 + %s] [%d] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[008 + %s] [%d] %s
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "k",
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_errno",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_error",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Continue {
                  "kind": "continue",
                  "level": null,
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "link",
                  },
                  OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'Charset'",
                      "unicode": false,
                      "value": "Charset",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "charset",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_set_charset",
                  "resolution": "uqn",
                },
              },
            },
          },
          For {
            "body": Block {
              "children": Array [
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            OffsetLookup {
                              "kind": "offsetlookup",
                              "offset": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'Charset'",
                                "unicode": false,
                                "value": "Charset",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "charset",
                              },
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "var_dump",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"[009 + %s] [%d] %s\\\\n\\"",
                              "unicode": false,
                              "value": "[009 + %s] [%d] %s
",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "k",
                            },
                            Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "link",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "mysqli_errno",
                                "resolution": "uqn",
                              },
                            },
                            Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "link",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "mysqli_error",
                                "resolution": "uqn",
                              },
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "printf",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      Continue {
                        "kind": "continue",
                        "level": null,
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Unary {
                    "kind": "unary",
                    "type": "!",
                    "what": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "link",
                        },
                        Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"INSERT INTO test (id, label) VALUES (%d, '%s')\\"",
                              "unicode": false,
                              "value": "INSERT INTO test (id, label) VALUES (%d, '%s')",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "i",
                            },
                            Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "link",
                                },
                                Call {
                                  "arguments": Array [
                                    Bin {
                                      "kind": "bin",
                                      "left": Call {
                                        "arguments": Array [
                                          String {
                                            "isDoubleQuote": true,
                                            "kind": "string",
                                            "raw": "\\"a\\"",
                                            "unicode": false,
                                            "value": "a",
                                          },
                                        ],
                                        "kind": "call",
                                        "what": Name {
                                          "kind": "name",
                                          "name": "ord",
                                          "resolution": "uqn",
                                        },
                                      },
                                      "right": Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "i",
                                      },
                                      "type": "+",
                                    },
                                  ],
                                  "kind": "call",
                                  "what": Name {
                                    "kind": "name",
                                    "name": "chr",
                                    "resolution": "uqn",
                                  },
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "mysqli_real_escape_string",
                                "resolution": "uqn",
                              },
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "sprintf",
                            "resolution": "uqn",
                          },
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "mysqli_query",
                        "resolution": "uqn",
                      },
                    },
                  },
                },
              ],
              "kind": "block",
            },
            "increment": Array [
              Post {
                "kind": "post",
                "type": "+",
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
              },
            ],
            "init": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
                "operator": "=",
                "right": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
            ],
            "kind": "for",
            "shortForm": false,
            "test": Array [
              Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
                "right": Number {
                  "kind": "number",
                  "value": "3",
                },
                "type": "<=",
              },
            ],
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[010 + %s] [%d] %s\\\\n\\"",
                    "unicode": false,
                    "value": "[010 + %s] [%d] %s
",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "k",
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "link",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_errno",
                      "resolution": "uqn",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "link",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_error",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "res",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "link",
                    },
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"SELECT id, label FROM test\\"",
                      "unicode": false,
                      "value": "SELECT id, label FROM test",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_query",
                    "resolution": "uqn",
                  },
                },
              },
            },
          },
          For {
            "body": Block {
              "children": Array [
                If {
                  "alternate": null,
                  "body": ExpressionStatement {
                    "expression": Call {
                      "arguments": Array [
                        String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"[011 + %s] [%d] %s\\\\n\\"",
                          "unicode": false,
                          "value": "[011 + %s] [%d] %s
",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "k",
                        },
                        Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "link",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "mysqli_errno",
                            "resolution": "uqn",
                          },
                        },
                        Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "link",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "mysqli_error",
                            "resolution": "uqn",
                          },
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "printf",
                        "resolution": "uqn",
                      },
                    },
                    "kind": "expressionstatement",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Unary {
                    "kind": "unary",
                    "type": "!",
                    "what": Assign {
                      "kind": "assign",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "tmp",
                      },
                      "operator": "=",
                      "right": Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "res",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_fetch_assoc",
                          "resolution": "uqn",
                        },
                      },
                    },
                  },
                },
                If {
                  "alternate": null,
                  "body": ExpressionStatement {
                    "expression": Call {
                      "arguments": Array [
                        String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"[012 + %s] Expecting %d, got %s, [%d] %s\\\\n\\"",
                          "unicode": false,
                          "value": "[012 + %s] Expecting %d, got %s, [%d] %s
",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "k",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "i",
                        },
                        OffsetLookup {
                          "kind": "offsetlookup",
                          "offset": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'id'",
                            "unicode": false,
                            "value": "id",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "tmp",
                          },
                        },
                        Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "link",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "mysqli_errno",
                            "resolution": "uqn",
                          },
                        },
                        Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "link",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "mysqli_error",
                            "resolution": "uqn",
                          },
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "printf",
                        "resolution": "uqn",
                      },
                    },
                    "kind": "expressionstatement",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'id'",
                        "unicode": false,
                        "value": "id",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "tmp",
                      },
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "i",
                    },
                    "type": "!=",
                  },
                },
                If {
                  "alternate": null,
                  "body": ExpressionStatement {
                    "expression": Call {
                      "arguments": Array [
                        String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"[013 + %s] Expecting %d, got %s, [%d] %s\\\\n\\"",
                          "unicode": false,
                          "value": "[013 + %s] Expecting %d, got %s, [%d] %s
",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "k",
                        },
                        Call {
                          "arguments": Array [
                            Bin {
                              "kind": "bin",
                              "left": Call {
                                "arguments": Array [
                                  String {
                                    "isDoubleQuote": true,
                                    "kind": "string",
                                    "raw": "\\"a\\"",
                                    "unicode": false,
                                    "value": "a",
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "ord",
                                  "resolution": "uqn",
                                },
                              },
                              "right": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "i",
                              },
                              "type": "+",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "chr",
                            "resolution": "uqn",
                          },
                        },
                        OffsetLookup {
                          "kind": "offsetlookup",
                          "offset": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'label'",
                            "unicode": false,
                            "value": "label",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "tmp",
                          },
                        },
                        Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "link",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "mysqli_errno",
                            "resolution": "uqn",
                          },
                        },
                        Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "link",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "mysqli_error",
                            "resolution": "uqn",
                          },
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "printf",
                        "resolution": "uqn",
                      },
                    },
                    "kind": "expressionstatement",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'label'",
                        "unicode": false,
                        "value": "label",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "tmp",
                      },
                    },
                    "right": Call {
                      "arguments": Array [
                        Bin {
                          "kind": "bin",
                          "left": Call {
                            "arguments": Array [
                              String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"a\\"",
                                "unicode": false,
                                "value": "a",
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "ord",
                              "resolution": "uqn",
                            },
                          },
                          "right": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "i",
                          },
                          "type": "+",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "chr",
                        "resolution": "uqn",
                      },
                    },
                    "type": "!=",
                  },
                },
              ],
              "kind": "block",
            },
            "increment": Array [
              Post {
                "kind": "post",
                "type": "+",
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
              },
            ],
            "init": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
                "operator": "=",
                "right": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
            ],
            "kind": "for",
            "shortForm": false,
            "test": Array [
              Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
                "right": Number {
                  "kind": "number",
                  "value": "3",
                },
                "type": "<=",
              },
            ],
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "res",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_free_result",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "charsets",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "charset",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_close",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"done!\\"",
          "unicode": false,
          "value": "done!",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
