// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests mysqli_fetch_field() - flags/field->flags 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": true,
        "target": String {
          "isDoubleQuote": true,
          "kind": "string",
          "parenthesizedExpression": true,
          "raw": "\\"connect.inc\\"",
          "unicode": false,
          "value": "connect.inc",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "flags",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": Name {
                "kind": "name",
                "name": "MYSQLI_NOT_NULL_FLAG",
                "resolution": "uqn",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'NOT_NULL'",
                "unicode": false,
                "value": "NOT_NULL",
              },
            },
            Entry {
              "byRef": false,
              "key": Name {
                "kind": "name",
                "name": "MYSQLI_PRI_KEY_FLAG",
                "resolution": "uqn",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'PRI_KEY'",
                "unicode": false,
                "value": "PRI_KEY",
              },
            },
            Entry {
              "byRef": false,
              "key": Name {
                "kind": "name",
                "name": "MYSQLI_UNIQUE_KEY_FLAG",
                "resolution": "uqn",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'UNIQUE_KEY'",
                "unicode": false,
                "value": "UNIQUE_KEY",
              },
            },
            Entry {
              "byRef": false,
              "key": Name {
                "kind": "name",
                "name": "MYSQLI_MULTIPLE_KEY_FLAG",
                "resolution": "uqn",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'MULTIPLE_KEY'",
                "unicode": false,
                "value": "MULTIPLE_KEY",
              },
            },
            Entry {
              "byRef": false,
              "key": Name {
                "kind": "name",
                "name": "MYSQLI_BLOB_FLAG",
                "resolution": "uqn",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'BLOB'",
                "unicode": false,
                "value": "BLOB",
              },
            },
            Entry {
              "byRef": false,
              "key": Name {
                "kind": "name",
                "name": "MYSQLI_UNSIGNED_FLAG",
                "resolution": "uqn",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'UNSIGNED'",
                "unicode": false,
                "value": "UNSIGNED",
              },
            },
            Entry {
              "byRef": false,
              "key": Name {
                "kind": "name",
                "name": "MYSQLI_ZEROFILL_FLAG",
                "resolution": "uqn",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'ZEROFILL'",
                "unicode": false,
                "value": "ZEROFILL",
              },
            },
            Entry {
              "byRef": false,
              "key": Name {
                "kind": "name",
                "name": "MYSQLI_AUTO_INCREMENT_FLAG",
                "resolution": "uqn",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'AUTO_INCREMENT'",
                "unicode": false,
                "value": "AUTO_INCREMENT",
              },
            },
            Entry {
              "byRef": false,
              "key": Name {
                "kind": "name",
                "name": "MYSQLI_TIMESTAMP_FLAG",
                "resolution": "uqn",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'TIMESTAMP'",
                "unicode": false,
                "value": "TIMESTAMP",
              },
            },
            Entry {
              "byRef": false,
              "key": Name {
                "kind": "name",
                "name": "MYSQLI_SET_FLAG",
                "resolution": "uqn",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'SET'",
                "unicode": false,
                "value": "SET",
              },
            },
            Entry {
              "byRef": false,
              "key": Name {
                "kind": "name",
                "name": "MYSQLI_NUM_FLAG",
                "resolution": "uqn",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'NUM'",
                "unicode": false,
                "value": "NUM",
              },
            },
            Entry {
              "byRef": false,
              "key": Name {
                "kind": "name",
                "name": "MYSQLI_PART_KEY_FLAG",
                "resolution": "uqn",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'PART_KEY'",
                "unicode": false,
                "value": "PART_KEY",
              },
            },
            Entry {
              "byRef": false,
              "key": RetIf {
                "falseExpr": Number {
                  "kind": "number",
                  "value": "4096",
                },
                "kind": "retif",
                "parenthesizedExpression": true,
                "test": Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'MYSQLI_NO_DEFAULT_VALUE_FLAG'",
                      "unicode": false,
                      "value": "MYSQLI_NO_DEFAULT_VALUE_FLAG",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "defined",
                    "resolution": "uqn",
                  },
                },
                "trueExpr": Name {
                  "kind": "name",
                  "name": "MYSQLI_NO_DEFAULT_VALUE_FLAG",
                  "resolution": "uqn",
                },
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'NO_DEFAULT_VALUE'",
                "unicode": false,
                "value": "NO_DEFAULT_VALUE",
              },
            },
            Entry {
              "byRef": false,
              "key": RetIf {
                "falseExpr": Number {
                  "kind": "number",
                  "value": "128",
                },
                "kind": "retif",
                "parenthesizedExpression": true,
                "test": Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'MYSQLI_BINARY_FLAG'",
                      "unicode": false,
                      "value": "MYSQLI_BINARY_FLAG",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "defined",
                    "resolution": "uqn",
                  },
                },
                "trueExpr": Name {
                  "kind": "name",
                  "name": "MYSQLI_BINARY_FLAG",
                  "resolution": "uqn",
                },
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'BINARY'",
                "unicode": false,
                "value": "BINARY",
              },
            },
            Entry {
              "byRef": false,
              "key": RetIf {
                "falseExpr": Number {
                  "kind": "number",
                  "value": "256",
                },
                "kind": "retif",
                "parenthesizedExpression": true,
                "test": Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'MYSQLI_ENUM_FLAG'",
                      "unicode": false,
                      "value": "MYSQLI_ENUM_FLAG",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "defined",
                    "resolution": "uqn",
                  },
                },
                "trueExpr": Name {
                  "kind": "name",
                  "name": "MYSQLI_ENUM_FLAG",
                  "resolution": "uqn",
                },
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'ENUM'",
                "unicode": false,
                "value": "ENUM",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": ExpressionStatement {
        "expression": Assign {
          "kind": "assign",
          "left": OffsetLookup {
            "kind": "offsetlookup",
            "offset": Number {
              "kind": "number",
              "value": "8192",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "flags",
            },
          },
          "operator": "=",
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'ON_UPDATE_NOW'",
            "unicode": false,
            "value": "ON_UPDATE_NOW",
          },
        },
        "kind": "expressionstatement",
      },
      "body": ExpressionStatement {
        "expression": Assign {
          "kind": "assign",
          "left": OffsetLookup {
            "kind": "offsetlookup",
            "offset": Name {
              "kind": "name",
              "name": "MYSQLI_ON_UPDATE_NOW",
              "resolution": "uqn",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "flags",
            },
          },
          "operator": "=",
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'ON_UPDATE_NOW'",
            "unicode": false,
            "value": "ON_UPDATE_NOW",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'MYSQLI_ON_UPDATE_NOW'",
            "unicode": false,
            "value": "MYSQLI_ON_UPDATE_NOW",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "defined",
          "resolution": "uqn",
        },
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "flags",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "krsort",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "columns",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'INT DEFAULT NULL'",
                "unicode": false,
                "value": "INT DEFAULT NULL",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'NUM'",
                "unicode": false,
                "value": "NUM",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'INT NOT NULL'",
                "unicode": false,
                "value": "INT NOT NULL",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'NOT_NULL NO_DEFAULT_VALUE NUM'",
                "unicode": false,
                "value": "NOT_NULL NO_DEFAULT_VALUE NUM",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'INT NOT NULL DEFAULT 1'",
                "unicode": false,
                "value": "INT NOT NULL DEFAULT 1",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'NOT_NULL NUM'",
                "unicode": false,
                "value": "NOT_NULL NUM",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'INT UNSIGNED DEFAULT NULL'",
                "unicode": false,
                "value": "INT UNSIGNED DEFAULT NULL",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'UNSIGNED NUM'",
                "unicode": false,
                "value": "UNSIGNED NUM",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'INT UNSIGNED NOT NULL'",
                "unicode": false,
                "value": "INT UNSIGNED NOT NULL",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'NOT_NULL UNSIGNED NO_DEFAULT_VALUE NUM'",
                "unicode": false,
                "value": "NOT_NULL UNSIGNED NO_DEFAULT_VALUE NUM",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'INT UNSIGNED NOT NULL DEFAULT 1'",
                "unicode": false,
                "value": "INT UNSIGNED NOT NULL DEFAULT 1",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'NOT_NULL UNSIGNED NUM'",
                "unicode": false,
                "value": "NOT_NULL UNSIGNED NUM",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'INT UNSIGNED ZEROFILL DEFAULT NULL'",
                "unicode": false,
                "value": "INT UNSIGNED ZEROFILL DEFAULT NULL",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'UNSIGNED ZEROFILL NUM'",
                "unicode": false,
                "value": "UNSIGNED ZEROFILL NUM",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY'",
                "unicode": false,
                "value": "INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'NOT_NULL PRI_KEY UNSIGNED AUTO_INCREMENT NUM PART_KEY'",
                "unicode": false,
                "value": "NOT_NULL PRI_KEY UNSIGNED AUTO_INCREMENT NUM PART_KEY",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'CHAR(1) DEFAULT NULL'",
                "unicode": false,
                "value": "CHAR(1) DEFAULT NULL",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "''",
                "unicode": false,
                "value": "",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'CHAR(1) NOT NULL'",
                "unicode": false,
                "value": "CHAR(1) NOT NULL",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'NOT_NULL NO_DEFAULT_VALUE'",
                "unicode": false,
                "value": "NOT_NULL NO_DEFAULT_VALUE",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'VARBINARY(127) DEFAULT NULL'",
                "unicode": false,
                "value": "VARBINARY(127) DEFAULT NULL",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'BINARY'",
                "unicode": false,
                "value": "BINARY",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'BLOB'",
                "unicode": false,
                "value": "BLOB",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'BLOB BINARY'",
                "unicode": false,
                "value": "BLOB BINARY",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'TINYBLOB'",
                "unicode": false,
                "value": "TINYBLOB",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'BLOB BINARY'",
                "unicode": false,
                "value": "BLOB BINARY",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'MEDIUMBLOB'",
                "unicode": false,
                "value": "MEDIUMBLOB",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'BLOB BINARY'",
                "unicode": false,
                "value": "BLOB BINARY",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'LONGBLOB'",
                "unicode": false,
                "value": "LONGBLOB",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'BLOB BINARY'",
                "unicode": false,
                "value": "BLOB BINARY",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'TEXT'",
                "unicode": false,
                "value": "TEXT",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'BLOB'",
                "unicode": false,
                "value": "BLOB",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'TINYTEXT'",
                "unicode": false,
                "value": "TINYTEXT",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'BLOB'",
                "unicode": false,
                "value": "BLOB",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'MEDIUMTEXT'",
                "unicode": false,
                "value": "MEDIUMTEXT",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'BLOB'",
                "unicode": false,
                "value": "BLOB",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'LONGTEXT'",
                "unicode": false,
                "value": "LONGTEXT",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'BLOB'",
                "unicode": false,
                "value": "BLOB",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'SET(\\"one\\", \\"two\\")'",
                "unicode": false,
                "value": "SET(\\"one\\", \\"two\\")",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'SET'",
                "unicode": false,
                "value": "SET",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'SET(\\"one\\", \\"two\\") NOT NULL'",
                "unicode": false,
                "value": "SET(\\"one\\", \\"two\\") NOT NULL",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'NOT_NULL SET NO_DEFAULT_VALUE'",
                "unicode": false,
                "value": "NOT_NULL SET NO_DEFAULT_VALUE",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'SET(\\"one\\", \\"two\\") NOT NULL DEFAULT \\"one\\"'",
                "unicode": false,
                "value": "SET(\\"one\\", \\"two\\") NOT NULL DEFAULT \\"one\\"",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'NOT_NULL SET'",
                "unicode": false,
                "value": "NOT_NULL SET",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'ENUM(\\"one\\", \\"two\\")'",
                "unicode": false,
                "value": "ENUM(\\"one\\", \\"two\\")",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'ENUM'",
                "unicode": false,
                "value": "ENUM",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'ENUM(\\"one\\", \\"two\\") NOT NULL'",
                "unicode": false,
                "value": "ENUM(\\"one\\", \\"two\\") NOT NULL",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'NOT_NULL ENUM NO_DEFAULT_VALUE'",
                "unicode": false,
                "value": "NOT_NULL ENUM NO_DEFAULT_VALUE",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'ENUM(\\"one\\", \\"two\\") NOT NULL DEFAULT \\"one\\"'",
                "unicode": false,
                "value": "ENUM(\\"one\\", \\"two\\") NOT NULL DEFAULT \\"one\\"",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'NOT_NULL ENUM'",
                "unicode": false,
                "value": "NOT_NULL ENUM",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'TINYINT UNIQUE'",
                "unicode": false,
                "value": "TINYINT UNIQUE",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'UNIQUE_KEY NUM PART_KEY'",
                "unicode": false,
                "value": "UNIQUE_KEY NUM PART_KEY",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'SMALLINT UNIQUE'",
                "unicode": false,
                "value": "SMALLINT UNIQUE",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'UNIQUE_KEY NUM PART_KEY'",
                "unicode": false,
                "value": "UNIQUE_KEY NUM PART_KEY",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'MEDIUMINT UNIQUE DEFAULT 1'",
                "unicode": false,
                "value": "MEDIUMINT UNIQUE DEFAULT 1",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'UNIQUE_KEY NUM PART_KEY'",
                "unicode": false,
                "value": "UNIQUE_KEY NUM PART_KEY",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'BIGINT UNSIGNED UNIQUE DEFAULT 100'",
                "unicode": false,
                "value": "BIGINT UNSIGNED UNIQUE DEFAULT 100",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'UNIQUE_KEY UNSIGNED NUM PART_KEY'",
                "unicode": false,
                "value": "UNIQUE_KEY UNSIGNED NUM PART_KEY",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'BIT'",
                "unicode": false,
                "value": "BIT",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'UNSIGNED'",
                "unicode": false,
                "value": "UNSIGNED",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'VARCHAR(2) NOT NULL PRIMARY KEY'",
                "unicode": false,
                "value": "VARCHAR(2) NOT NULL PRIMARY KEY",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'NOT_NULL PRI_KEY NO_DEFAULT_VALUE PART_KEY'",
                "unicode": false,
                "value": "NOT_NULL PRI_KEY NO_DEFAULT_VALUE PART_KEY",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "reported_flags",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "expected_flags",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "flags",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "found_flags",
              },
              "operator": "=",
              "right": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "unexpected_flags",
                },
                "operator": "=",
                "right": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "''",
                  "unicode": false,
                  "value": "",
                },
              },
            },
            "kind": "expressionstatement",
          },
          Foreach {
            "body": Block {
              "children": Array [
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "reported_flags",
                          },
                          "operator": "-=",
                          "right": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "code",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "found_flags",
                          },
                          "operator": ".=",
                          "right": Bin {
                            "kind": "bin",
                            "left": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "name",
                            },
                            "right": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "' '",
                              "unicode": false,
                              "value": " ",
                            },
                            "type": ".",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      If {
                        "alternate": Block {
                          "children": Array [
                            ExpressionStatement {
                              "expression": Assign {
                                "kind": "assign",
                                "left": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "unexpected_flags",
                                },
                                "operator": ".=",
                                "right": Bin {
                                  "kind": "bin",
                                  "left": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "name",
                                  },
                                  "right": String {
                                    "isDoubleQuote": false,
                                    "kind": "string",
                                    "raw": "' '",
                                    "unicode": false,
                                    "value": " ",
                                  },
                                  "type": ".",
                                },
                              },
                              "kind": "expressionstatement",
                            },
                          ],
                          "kind": "block",
                        },
                        "body": Block {
                          "children": Array [
                            ExpressionStatement {
                              "expression": Assign {
                                "kind": "assign",
                                "left": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "expected_flags",
                                },
                                "operator": "=",
                                "right": Call {
                                  "arguments": Array [
                                    Call {
                                      "arguments": Array [
                                        Variable {
                                          "curly": false,
                                          "kind": "variable",
                                          "name": "name",
                                        },
                                        String {
                                          "isDoubleQuote": false,
                                          "kind": "string",
                                          "raw": "''",
                                          "unicode": false,
                                          "value": "",
                                        },
                                        Variable {
                                          "curly": false,
                                          "kind": "variable",
                                          "name": "expected_flags",
                                        },
                                      ],
                                      "kind": "call",
                                      "what": Name {
                                        "kind": "name",
                                        "name": "str_ireplace",
                                        "resolution": "uqn",
                                      },
                                    },
                                  ],
                                  "kind": "call",
                                  "what": Name {
                                    "kind": "name",
                                    "name": "trim",
                                    "resolution": "uqn",
                                  },
                                },
                              },
                              "kind": "expressionstatement",
                            },
                          ],
                          "kind": "block",
                        },
                        "kind": "if",
                        "shortForm": false,
                        "test": Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "expected_flags",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "name",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "stristr",
                            "resolution": "uqn",
                          },
                        },
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "reported_flags",
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "code",
                    },
                    "type": ">=",
                  },
                },
              ],
              "kind": "block",
            },
            "key": Variable {
              "curly": false,
              "kind": "variable",
              "name": "code",
            },
            "kind": "foreach",
            "shortForm": false,
            "source": Variable {
              "curly": false,
              "kind": "variable",
              "name": "flags",
            },
            "value": Variable {
              "curly": false,
              "kind": "variable",
              "name": "name",
            },
          },
          Return {
            "expr": Array {
              "items": Array [
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "expected_flags",
                  },
                },
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "unexpected_flags",
                  },
                },
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "found_flags",
                  },
                },
              ],
              "kind": "array",
              "shortForm": false,
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "checkFlags",
      },
      "nullable": false,
      "type": null,
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[001] [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[001] [%d] %s
",
            },
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_connect_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_connect_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          "operator": "=",
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "host",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "user",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "passwd",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "db",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "port",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "socket",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "my_mysqli_connect",
              "resolution": "uqn",
            },
          },
        },
      },
    },
    Foreach {
      "body": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[002] %s [%d] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[002] %s [%d] %s
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "column_def",
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_errno",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_error",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Continue {
                  "kind": "continue",
                  "level": null,
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "link",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'DROP TABLE IF EXISTS test'",
                    "unicode": false,
                    "value": "DROP TABLE IF EXISTS test",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_query",
                  "resolution": "uqn",
                },
              },
            },
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "create",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'CREATE TABLE test(id INT, col1 %s)'",
                    "unicode": false,
                    "value": "CREATE TABLE test(id INT, col1 %s)",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "column_def",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "sprintf",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                Continue {
                  "kind": "continue",
                  "level": null,
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "link",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "create",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_query",
                  "resolution": "uqn",
                },
              },
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[003] Can't select from table, %s [%d] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[003] Can't select from table, %s [%d] %s
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "column_def",
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_errno",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_error",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Continue {
                  "kind": "continue",
                  "level": null,
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "res",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "link",
                    },
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'SELECT * FROM test'",
                      "unicode": false,
                      "value": "SELECT * FROM test",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_query",
                    "resolution": "uqn",
                  },
                },
              },
            },
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "field",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "res",
                  },
                  Number {
                    "kind": "number",
                    "value": "1",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_fetch_field_direct",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[004] Fetching the meta data failed, %s [%d] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[004] Fetching the meta data failed, %s [%d] %s
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "column_def",
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_errno",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_error",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Continue {
                  "kind": "continue",
                  "level": null,
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "field",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "is_object",
                  "resolution": "uqn",
                },
              },
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[005] Field information seems wrong, %s [%d] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[005] Field information seems wrong, %s [%d] %s
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "column_def",
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_errno",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_error",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Continue {
                  "kind": "continue",
                  "level": null,
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "name",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "field",
                },
              },
              "right": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'col1'",
                "unicode": false,
                "value": "col1",
              },
              "type": "!=",
            },
          },
          Switch {
            "body": Block {
              "children": Array [
                Case {
                  "body": Block {
                    "children": Array [],
                    "kind": "block",
                  },
                  "kind": "case",
                  "test": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'INT UNSIGNED NOT NULL'",
                    "unicode": false,
                    "value": "INT UNSIGNED NOT NULL",
                  },
                },
                Case {
                  "body": Block {
                    "children": Array [],
                    "kind": "block",
                  },
                  "kind": "case",
                  "test": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'INT NOT NULL'",
                    "unicode": false,
                    "value": "INT NOT NULL",
                  },
                },
                Case {
                  "body": Block {
                    "children": Array [],
                    "kind": "block",
                  },
                  "kind": "case",
                  "test": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'CHAR(1) NOT NULL'",
                    "unicode": false,
                    "value": "CHAR(1) NOT NULL",
                  },
                },
                Case {
                  "body": Block {
                    "children": Array [],
                    "kind": "block",
                  },
                  "kind": "case",
                  "test": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'SET(\\"one\\", \\"two\\") NOT NULL'",
                    "unicode": false,
                    "value": "SET(\\"one\\", \\"two\\") NOT NULL",
                  },
                },
                Case {
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "version",
                          },
                          "operator": "=",
                          "right": Call {
                            "arguments": Array [
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "link",
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "mysqli_get_server_version",
                              "resolution": "uqn",
                            },
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      If {
                        "alternate": null,
                        "body": Block {
                          "children": Array [
                            ExpressionStatement {
                              "expression": Assign {
                                "kind": "assign",
                                "left": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "expected_flags",
                                },
                                "operator": "=",
                                "right": Call {
                                  "arguments": Array [
                                    Call {
                                      "arguments": Array [
                                        String {
                                          "isDoubleQuote": false,
                                          "kind": "string",
                                          "raw": "'NO_DEFAULT_VALUE'",
                                          "unicode": false,
                                          "value": "NO_DEFAULT_VALUE",
                                        },
                                        String {
                                          "isDoubleQuote": false,
                                          "kind": "string",
                                          "raw": "''",
                                          "unicode": false,
                                          "value": "",
                                        },
                                        Variable {
                                          "curly": false,
                                          "kind": "variable",
                                          "name": "expected_flags",
                                        },
                                      ],
                                      "kind": "call",
                                      "what": Name {
                                        "kind": "name",
                                        "name": "str_replace",
                                        "resolution": "uqn",
                                      },
                                    },
                                  ],
                                  "kind": "call",
                                  "what": Name {
                                    "kind": "name",
                                    "name": "trim",
                                    "resolution": "uqn",
                                  },
                                },
                              },
                              "kind": "expressionstatement",
                            },
                          ],
                          "kind": "block",
                        },
                        "kind": "if",
                        "shortForm": false,
                        "test": Bin {
                          "kind": "bin",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "version",
                          },
                          "right": Number {
                            "kind": "number",
                            "value": "50000",
                          },
                          "type": "<",
                        },
                      },
                      Break {
                        "kind": "break",
                        "level": null,
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "case",
                  "test": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'ENUM(\\"one\\", \\"two\\") NOT NULL'",
                    "unicode": false,
                    "value": "ENUM(\\"one\\", \\"two\\") NOT NULL",
                  },
                },
                Case {
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "version",
                          },
                          "operator": "=",
                          "right": Call {
                            "arguments": Array [
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "link",
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "mysqli_get_server_version",
                              "resolution": "uqn",
                            },
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      If {
                        "alternate": null,
                        "body": Block {
                          "children": Array [
                            ExpressionStatement {
                              "expression": Assign {
                                "kind": "assign",
                                "left": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "expected_flags",
                                },
                                "operator": "=",
                                "right": Call {
                                  "arguments": Array [
                                    Call {
                                      "arguments": Array [
                                        String {
                                          "isDoubleQuote": false,
                                          "kind": "string",
                                          "raw": "'UNSIGNED'",
                                          "unicode": false,
                                          "value": "UNSIGNED",
                                        },
                                        String {
                                          "isDoubleQuote": false,
                                          "kind": "string",
                                          "raw": "''",
                                          "unicode": false,
                                          "value": "",
                                        },
                                        Variable {
                                          "curly": false,
                                          "kind": "variable",
                                          "name": "expected_flags",
                                        },
                                      ],
                                      "kind": "call",
                                      "what": Name {
                                        "kind": "name",
                                        "name": "str_replace",
                                        "resolution": "uqn",
                                      },
                                    },
                                  ],
                                  "kind": "call",
                                  "what": Name {
                                    "kind": "name",
                                    "name": "trim",
                                    "resolution": "uqn",
                                  },
                                },
                              },
                              "kind": "expressionstatement",
                            },
                          ],
                          "kind": "block",
                        },
                        "kind": "if",
                        "shortForm": false,
                        "test": Bin {
                          "kind": "bin",
                          "left": Bin {
                            "kind": "bin",
                            "left": Bin {
                              "kind": "bin",
                              "left": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "version",
                              },
                              "right": Number {
                                "kind": "number",
                                "value": "50114",
                              },
                              "type": "<=",
                            },
                            "parenthesizedExpression": true,
                            "right": Bin {
                              "kind": "bin",
                              "left": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "version",
                              },
                              "right": Number {
                                "kind": "number",
                                "value": "50100",
                              },
                              "type": ">",
                            },
                            "type": "&&",
                          },
                          "right": Bin {
                            "kind": "bin",
                            "left": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "version",
                            },
                            "parenthesizedExpression": true,
                            "right": Number {
                              "kind": "number",
                              "value": "50200",
                            },
                            "type": "==",
                          },
                          "type": "||",
                        },
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "case",
                  "test": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'BIT'",
                    "unicode": false,
                    "value": "BIT",
                  },
                },
                Case {
                  "body": Block {
                    "children": Array [
                      Break {
                        "kind": "break",
                        "level": null,
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "case",
                  "test": null,
                },
              ],
              "kind": "block",
            },
            "kind": "switch",
            "shortForm": false,
            "test": Variable {
              "curly": false,
              "kind": "variable",
              "name": "column_def",
            },
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": List {
                "items": Array [
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "missing_flags",
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "unexpected_flags",
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "flags_found",
                    },
                  },
                ],
                "kind": "list",
                "shortForm": false,
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "flags",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "field",
                    },
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "expected_flags",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "flags",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "checkFlags",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[006] Found unexpected flags '%s' for %s, found '%s' with MySQL %s'\\\\n\\"",
                        "unicode": false,
                        "value": "[006] Found unexpected flags '%s' for %s, found '%s' with MySQL %s'
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "unexpected_flags",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "column_def",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "flags_found",
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_get_server_version",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Variable {
              "curly": false,
              "kind": "variable",
              "name": "unexpected_flags",
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[007] The flags '%s' have not been reported for %s, found '%s'\\\\n\\"",
                        "unicode": false,
                        "value": "[007] The flags '%s' have not been reported for %s, found '%s'
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "missing_flags",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "column_def",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "flags_found",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "create",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_get_server_version",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Exit {
                    "expression": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "missing_flags",
                    },
                    "kind": "exit",
                    "useDie": true,
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Variable {
              "curly": false,
              "kind": "variable",
              "name": "missing_flags",
            },
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "res",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_free_result",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "key": Variable {
        "curly": false,
        "kind": "variable",
        "name": "column_def",
      },
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "columns",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "expected_flags",
      },
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"[008] %s [%d] %s\\\\n\\"",
                  "unicode": false,
                  "value": "[008] %s [%d] %s
",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "column_def",
                },
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "link",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_errno",
                    "resolution": "uqn",
                  },
                },
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "link",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_error",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "printf",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "link",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'DROP TABLE IF EXISTS test'",
              "unicode": false,
              "value": "DROP TABLE IF EXISTS test",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_query",
            "resolution": "uqn",
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "column_def",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'col1 CHAR(1)'",
                "unicode": false,
                "value": "col1 CHAR(1)",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'col2 CHAR(2)'",
                "unicode": false,
                "value": "col2 CHAR(2)",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'INDEX idx_col1_col2(col1, col2)'",
                "unicode": false,
                "value": "INDEX idx_col1_col2(col1, col2)",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "expected_flags",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'col1'",
                "unicode": false,
                "value": "col1",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'MULTIPLE_KEY PART_KEY'",
                "unicode": false,
                "value": "MULTIPLE_KEY PART_KEY",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'col2'",
                "unicode": false,
                "value": "col2",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'PART_KEY'",
                "unicode": false,
                "value": "PART_KEY",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "create",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'CREATE TABLE test(id INT, '",
          "unicode": false,
          "value": "CREATE TABLE test(id INT, ",
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "create",
              },
              "operator": ".=",
              "right": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'%s, '",
                    "unicode": false,
                    "value": "%s, ",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "v",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "sprintf",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "key": Variable {
        "curly": false,
        "kind": "variable",
        "name": "k",
      },
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "column_def",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "v",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "create",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'%s)'",
              "unicode": false,
              "value": "%s)",
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "create",
                },
                Number {
                  "kind": "number",
                  "value": "0",
                },
                Unary {
                  "kind": "unary",
                  "type": "-",
                  "what": Number {
                    "kind": "number",
                    "value": "2",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "substr",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sprintf",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[009] Cannot run SELECT, [%d] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[009] Cannot run SELECT, [%d] %s
",
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_errno",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_error",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "res",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "link",
                    },
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'SELECT * FROM test'",
                      "unicode": false,
                      "value": "SELECT * FROM test",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_query",
                    "resolution": "uqn",
                  },
                },
              },
            },
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "field",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "res",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_fetch_field",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          While {
            "body": Block {
              "children": Array [
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"[010] Found unexpected field '%s'\\\\n\\"",
                              "unicode": false,
                              "value": "[010] Found unexpected field '%s'
",
                            },
                            PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "name",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "field",
                              },
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "printf",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Unary {
                    "kind": "unary",
                    "type": "!",
                    "what": Isset {
                      "kind": "isset",
                      "variables": Array [
                        OffsetLookup {
                          "kind": "offsetlookup",
                          "offset": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "name",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "field",
                            },
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "expected_flags",
                          },
                        },
                      ],
                    },
                  },
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": List {
                      "items": Array [
                        Entry {
                          "byRef": false,
                          "key": null,
                          "kind": "entry",
                          "unpack": false,
                          "value": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "missing_flags",
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": null,
                          "kind": "entry",
                          "unpack": false,
                          "value": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "unexpected_flags",
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": null,
                          "kind": "entry",
                          "unpack": false,
                          "value": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "flags_found",
                          },
                        },
                      ],
                      "kind": "list",
                      "shortForm": false,
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        PropertyLookup {
                          "kind": "propertylookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "flags",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "field",
                          },
                        },
                        OffsetLookup {
                          "kind": "offsetlookup",
                          "offset": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "name",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "field",
                            },
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "expected_flags",
                          },
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "flags",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "checkFlags",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                If {
                  "alternate": null,
                  "body": ExpressionStatement {
                    "expression": Call {
                      "arguments": Array [
                        String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"[011] Found unexpected flags '%s' for %s, found '%s'\\\\n\\"",
                          "unicode": false,
                          "value": "[011] Found unexpected flags '%s' for %s, found '%s'
",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "unexpected_flags",
                        },
                        PropertyLookup {
                          "kind": "propertylookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "name",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "field",
                          },
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "flags_found",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "printf",
                        "resolution": "uqn",
                      },
                    },
                    "kind": "expressionstatement",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "unexpected_flags",
                  },
                },
                If {
                  "alternate": null,
                  "body": ExpressionStatement {
                    "expression": Call {
                      "arguments": Array [
                        String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"[012] The flags '%s' have not been reported for %s, found '%s'\\\\n\\"",
                          "unicode": false,
                          "value": "[012] The flags '%s' have not been reported for %s, found '%s'
",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "missing_flags",
                        },
                        PropertyLookup {
                          "kind": "propertylookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "name",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "field",
                          },
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "flags_found",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "printf",
                        "resolution": "uqn",
                      },
                    },
                    "kind": "expressionstatement",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "missing_flags",
                  },
                },
              ],
              "kind": "block",
            },
            "kind": "while",
            "shortForm": false,
            "test": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "field",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "res",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_fetch_field",
                  "resolution": "uqn",
                },
              },
            },
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "create",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_query",
          "resolution": "uqn",
        },
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_close",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"done!\\"",
          "unicode": false,
          "value": "done!",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
