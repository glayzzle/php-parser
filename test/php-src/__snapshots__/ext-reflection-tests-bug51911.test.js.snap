// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #51911 (ReflectionParameter::getDefaultValue() memory leaks with constant array) 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [],
      "body": Array [
        ClassConstant {
          "attrGroups": Array [],
          "constants": Array [
            Constant {
              "kind": "constant",
              "name": Identifier {
                "kind": "identifier",
                "name": "X",
              },
              "value": Number {
                "kind": "number",
                "value": "1",
              },
            },
          ],
          "kind": "classconstant",
          "visibility": "",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "x",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": Array {
                "items": Array [
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": Number {
                      "kind": "number",
                      "value": "1",
                    },
                  },
                ],
                "kind": "array",
                "shortForm": false,
              },
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "x",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "Foo",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "clazz",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'Foo'",
              "unicode": false,
              "value": "Foo",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "ReflectionClass",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "method",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'x'",
              "unicode": false,
              "value": "x",
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "getMethod",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "clazz",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": Echo {
              "expressions": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'$'",
                  "unicode": false,
                  "value": "$",
                },
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "getName",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "param",
                    },
                  },
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "' : '",
                  "unicode": false,
                  "value": " : ",
                },
                Call {
                  "arguments": Array [
                    Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getDefaultValue",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "param",
                        },
                      },
                    },
                    Number {
                      "kind": "number",
                      "value": "1",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "var_export",
                    "resolution": "uqn",
                  },
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"\\\\n\\"",
                  "unicode": false,
                  "value": "
",
                },
              ],
              "kind": "echo",
              "shortForm": false,
            },
            "kind": "if",
            "shortForm": false,
            "test": Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "isDefaultValueAvailable",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "param",
                },
              },
            },
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "getParameters",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "method",
          },
        },
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "param",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
