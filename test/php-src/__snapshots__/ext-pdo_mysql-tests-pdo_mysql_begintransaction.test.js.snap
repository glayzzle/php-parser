// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests PDO->beginTransaction() 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": true,
        "target": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Magic {
              "kind": "magic",
              "raw": "__DIR__",
              "value": "__DIR__",
            },
            "right": Name {
              "kind": "name",
              "name": "DIRECTORY_SEPARATOR",
              "resolution": "uqn",
            },
            "type": ".",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'mysql_pdo_test.inc'",
            "unicode": false,
            "value": "mysql_pdo_test.inc",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "db",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "factory",
            },
            "what": Name {
              "kind": "name",
              "name": "MySQLPDOTest",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "db",
              },
            ],
            "kind": "call",
            "what": StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "detect_transactional_mysql_engine",
              },
              "what": Name {
                "kind": "name",
                "name": "MySQLPDOTest",
                "resolution": "uqn",
              },
            },
          },
        ],
        "kind": "call",
        "what": StaticLookup {
          "kind": "staticlookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "createTestTable",
          },
          "what": Name {
            "kind": "name",
            "name": "MySQLPDOTest",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[001] Autocommit should be on by default\\\\n\\"",
              "unicode": false,
              "value": "[001] Autocommit should be on by default
",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Number {
          "kind": "number",
          "value": "1",
        },
        "right": Call {
          "arguments": Array [
            StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "ATTR_AUTOCOMMIT",
              },
              "what": Name {
                "kind": "name",
                "name": "PDO",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "getAttribute",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
          },
        },
        "type": "!==",
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[002] Cannot start a transaction, [%s] [%s]\\\\n\\"",
              "unicode": false,
              "value": "[002] Cannot start a transaction, [%s] [%s]
",
            },
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "errorCode",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              },
            },
            Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "' '",
                  "unicode": false,
                  "value": " ",
                },
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "errorInfo",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "db",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "implode",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Boolean {
          "kind": "boolean",
          "raw": "false",
          "value": false,
        },
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "beginTransaction",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
          },
        },
        "type": "==",
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[003] Autocommit should be on by default, beginTransaction() shall not impact it\\\\n\\"",
              "unicode": false,
              "value": "[003] Autocommit should be on by default, beginTransaction() shall not impact it
",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Number {
          "kind": "number",
          "value": "1",
        },
        "right": Call {
          "arguments": Array [
            StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "ATTR_AUTOCOMMIT",
              },
              "what": Name {
                "kind": "name",
                "name": "PDO",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "getAttribute",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
          },
        },
        "type": "!==",
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[004] No rows deleted, can't be true.\\\\n\\"",
              "unicode": false,
              "value": "[004] No rows deleted, can't be true.
",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Number {
          "kind": "number",
          "value": "0",
        },
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'DELETE FROM test'",
              "unicode": false,
              "value": "DELETE FROM test",
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "exec",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
          },
        },
        "type": "==",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "db",
        },
        "operator": "=",
        "right": NullKeyword {
          "kind": "nullkeyword",
          "raw": "null",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "db",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "factory",
            },
            "what": Name {
              "kind": "name",
              "name": "MySQLPDOTest",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "ATTR_STRINGIFY_FETCHES",
            },
            "what": Name {
              "kind": "name",
              "name": "PDO",
              "resolution": "uqn",
            },
          },
          Boolean {
            "kind": "boolean",
            "raw": "true",
            "value": true,
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "setAttribute",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[005] [%s] %s\\\\n\\"",
              "unicode": false,
              "value": "[005] [%s] %s
",
            },
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "errorCode",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              },
            },
            Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "' '",
                  "unicode": false,
                  "value": " ",
                },
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "errorInfo",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "db",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "implode",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "stmt",
          },
          "operator": "=",
          "parenthesizedExpression": true,
          "right": Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'SELECT id, label FROM test ORDER BY id ASC'",
                "unicode": false,
                "value": "SELECT id, label FROM test ORDER BY id ASC",
              },
            ],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "query",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "db",
              },
            },
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "row",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "FETCH_ASSOC",
              },
              "what": Name {
                "kind": "name",
                "name": "PDO",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "fetch",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "stmt",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "row",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[006] [%s] %s\\\\n\\"",
              "unicode": false,
              "value": "[006] [%s] %s
",
            },
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "errorCode",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              },
            },
            Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "' '",
                  "unicode": false,
                  "value": " ",
                },
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "errorInfo",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "db",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "implode",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "beginTransaction",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
          },
        },
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[007] DELETE should have indicated 1 deleted row, [%s] %s\\\\n\\"",
              "unicode": false,
              "value": "[007] DELETE should have indicated 1 deleted row, [%s] %s
",
            },
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "errorCode",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              },
            },
            Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "' '",
                  "unicode": false,
                  "value": " ",
                },
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "errorInfo",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "db",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "implode",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Number {
          "kind": "number",
          "value": "1",
        },
        "right": Call {
          "arguments": Array [
            Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'DELETE FROM test WHERE id = %d'",
                  "unicode": false,
                  "value": "DELETE FROM test WHERE id = %d",
                },
                OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'id'",
                    "unicode": false,
                    "value": "id",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "row",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "sprintf",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "exec",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
          },
        },
        "type": "!==",
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[008] [%s] %s\\\\n\\"",
              "unicode": false,
              "value": "[008] [%s] %s
",
            },
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "errorCode",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              },
            },
            Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "' '",
                  "unicode": false,
                  "value": " ",
                },
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "errorInfo",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "db",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "implode",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "commit",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
          },
        },
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[009] Autocommit should be on after commit()\\\\n\\"",
              "unicode": false,
              "value": "[009] Autocommit should be on after commit()
",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Number {
          "kind": "number",
          "value": "1",
        },
        "right": Call {
          "arguments": Array [
            StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "ATTR_AUTOCOMMIT",
              },
              "what": Name {
                "kind": "name",
                "name": "PDO",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "getAttribute",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
          },
        },
        "type": "!==",
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[010] [%s] %s\\\\n\\"",
              "unicode": false,
              "value": "[010] [%s] %s
",
            },
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "errorCode",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              },
            },
            Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "' '",
                  "unicode": false,
                  "value": " ",
                },
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "errorInfo",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "db",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "implode",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "stmt",
          },
          "operator": "=",
          "parenthesizedExpression": true,
          "right": Call {
            "arguments": Array [
              Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'SELECT id, label FROM test WHERE id = %d'",
                    "unicode": false,
                    "value": "SELECT id, label FROM test WHERE id = %d",
                  },
                  OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'id'",
                      "unicode": false,
                      "value": "id",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "row",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "sprintf",
                  "resolution": "uqn",
                },
              },
            ],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "query",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "db",
              },
            },
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              StaticLookup {
                "kind": "staticlookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "FETCH_ASSOC",
                },
                "what": Name {
                  "kind": "name",
                  "name": "PDO",
                  "resolution": "uqn",
                },
              },
            ],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "fetch",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "stmt",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[011] [%s] %s\\\\n\\"",
              "unicode": false,
              "value": "[011] [%s] %s
",
            },
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "errorCode",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              },
            },
            Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "' '",
                  "unicode": false,
                  "value": " ",
                },
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "errorInfo",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "db",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "implode",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "beginTransaction",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"INSERT INTO test(id, label) VALUES (%d, 'z')\\"",
                "unicode": false,
                "value": "INSERT INTO test(id, label) VALUES (%d, 'z')",
              },
              OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'id'",
                  "unicode": false,
                  "value": "id",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "row",
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "sprintf",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "exec",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[012] [%s] %s\\\\n\\"",
              "unicode": false,
              "value": "[012] [%s] %s
",
            },
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "errorCode",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              },
            },
            Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "' '",
                  "unicode": false,
                  "value": " ",
                },
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "errorInfo",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "db",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "implode",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "stmt",
          },
          "operator": "=",
          "parenthesizedExpression": true,
          "right": Call {
            "arguments": Array [
              Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'SELECT id, label FROM test WHERE id = %d'",
                    "unicode": false,
                    "value": "SELECT id, label FROM test WHERE id = %d",
                  },
                  OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'id'",
                      "unicode": false,
                      "value": "id",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "row",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "sprintf",
                  "resolution": "uqn",
                },
              },
            ],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "query",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "db",
              },
            },
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "new_row1",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "FETCH_ASSOC",
              },
              "what": Name {
                "kind": "name",
                "name": "PDO",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "fetch",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "stmt",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_row1",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[013] [%s] %s\\\\n\\"",
              "unicode": false,
              "value": "[013] [%s] %s
",
            },
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "errorCode",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              },
            },
            Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "' '",
                  "unicode": false,
                  "value": " ",
                },
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "errorInfo",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "db",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "implode",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "commit",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
          },
        },
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[014] [%s] %s\\\\n\\"",
              "unicode": false,
              "value": "[014] [%s] %s
",
            },
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "errorCode",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              },
            },
            Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "' '",
                  "unicode": false,
                  "value": " ",
                },
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "errorInfo",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "db",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "implode",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "stmt",
          },
          "operator": "=",
          "parenthesizedExpression": true,
          "right": Call {
            "arguments": Array [
              Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'SELECT id, label FROM test WHERE id = %d'",
                    "unicode": false,
                    "value": "SELECT id, label FROM test WHERE id = %d",
                  },
                  OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'id'",
                      "unicode": false,
                      "value": "id",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "row",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "sprintf",
                  "resolution": "uqn",
                },
              },
            ],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "query",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "db",
              },
            },
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "new_row2",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "FETCH_ASSOC",
              },
              "what": Name {
                "kind": "name",
                "name": "PDO",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "fetch",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "stmt",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"[015] Results must not differ!\\\\n\\"",
                  "unicode": false,
                  "value": "[015] Results must not differ!
",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "printf",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_row1",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_row2",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "new_row1",
        },
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "new_row2",
        },
        "type": "!=",
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[016] [%s] %s\\\\n\\"",
              "unicode": false,
              "value": "[016] [%s] %s
",
            },
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "errorCode",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              },
            },
            Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "' '",
                  "unicode": false,
                  "value": " ",
                },
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "errorInfo",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "db",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "implode",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "beginTransaction",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
          },
        },
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[017] DELETE should have indicated 1 deleted row, [%s] %s\\\\n\\"",
              "unicode": false,
              "value": "[017] DELETE should have indicated 1 deleted row, [%s] %s
",
            },
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "errorCode",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              },
            },
            Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "' '",
                  "unicode": false,
                  "value": " ",
                },
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "errorInfo",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "db",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "implode",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Number {
          "kind": "number",
          "value": "1",
        },
        "right": Call {
          "arguments": Array [
            Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'DELETE FROM test WHERE id = %d'",
                  "unicode": false,
                  "value": "DELETE FROM test WHERE id = %d",
                },
                OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'id'",
                    "unicode": false,
                    "value": "id",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "row",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "sprintf",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "exec",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
          },
        },
        "type": "!==",
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[018] [%s] %s\\\\n\\"",
              "unicode": false,
              "value": "[018] [%s] %s
",
            },
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "errorCode",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              },
            },
            Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "' '",
                  "unicode": false,
                  "value": " ",
                },
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "errorInfo",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "db",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "implode",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "rollback",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
          },
        },
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[019] Autocommit should be on after rollback\\\\n\\"",
              "unicode": false,
              "value": "[019] Autocommit should be on after rollback
",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Number {
          "kind": "number",
          "value": "1",
        },
        "right": Call {
          "arguments": Array [
            StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "ATTR_AUTOCOMMIT",
              },
              "what": Name {
                "kind": "name",
                "name": "PDO",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "getAttribute",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
          },
        },
        "type": "!==",
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[020] [%s] %s\\\\n\\"",
              "unicode": false,
              "value": "[020] [%s] %s
",
            },
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "errorCode",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              },
            },
            Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "' '",
                  "unicode": false,
                  "value": " ",
                },
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "errorInfo",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "db",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "implode",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "stmt",
          },
          "operator": "=",
          "parenthesizedExpression": true,
          "right": Call {
            "arguments": Array [
              Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'SELECT id, label FROM test WHERE id = %d'",
                    "unicode": false,
                    "value": "SELECT id, label FROM test WHERE id = %d",
                  },
                  OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'id'",
                      "unicode": false,
                      "value": "id",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "row",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "sprintf",
                  "resolution": "uqn",
                },
              },
            ],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "query",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "db",
              },
            },
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "new_row2",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "FETCH_ASSOC",
              },
              "what": Name {
                "kind": "name",
                "name": "PDO",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "fetch",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "stmt",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"[021] Results must not differ!\\\\n\\"",
                  "unicode": false,
                  "value": "[021] Results must not differ!
",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "printf",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_row1",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_row2",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "new_row1",
        },
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "new_row2",
        },
        "type": "!=",
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[022] [%s] %s\\\\n\\"",
              "unicode": false,
              "value": "[022] [%s] %s
",
            },
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "errorCode",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              },
            },
            Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "' '",
                  "unicode": false,
                  "value": " ",
                },
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "errorInfo",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "db",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "implode",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "stmt",
          },
          "operator": "=",
          "parenthesizedExpression": true,
          "right": Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'SELECT @@autocommit as auto_commit'",
                "unicode": false,
                "value": "SELECT @@autocommit as auto_commit",
              },
            ],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "query",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "db",
              },
            },
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "tmp",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "FETCH_ASSOC",
              },
              "what": Name {
                "kind": "name",
                "name": "PDO",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "fetch",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "stmt",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[023] MySQL Server should indicate autocommit mode, expecting 1, got '%s', [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[023] MySQL Server should indicate autocommit mode, expecting 1, got '%s', [%d] %s
",
            },
            OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'auto_commit'",
                "unicode": false,
                "value": "auto_commit",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "tmp",
              },
            },
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "errorCode",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              },
            },
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "errorInfo",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'auto_commit'",
            "unicode": false,
            "value": "auto_commit",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "tmp",
          },
        },
        "right": Number {
          "kind": "number",
          "value": "1",
        },
        "type": "!=",
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[024] [%s] %s\\\\n\\"",
              "unicode": false,
              "value": "[024] [%s] %s
",
            },
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "errorCode",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              },
            },
            Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "' '",
                  "unicode": false,
                  "value": " ",
                },
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "errorInfo",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "db",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "implode",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "beginTransaction",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
          },
        },
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[025] [%s] %s\\\\n\\"",
              "unicode": false,
              "value": "[025] [%s] %s
",
            },
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "errorCode",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              },
            },
            Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "' '",
                  "unicode": false,
                  "value": " ",
                },
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "errorInfo",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "db",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "implode",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "stmt",
          },
          "operator": "=",
          "parenthesizedExpression": true,
          "right": Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'SELECT @@autocommit as auto_commit'",
                "unicode": false,
                "value": "SELECT @@autocommit as auto_commit",
              },
            ],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "query",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "db",
              },
            },
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "tmp",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "FETCH_ASSOC",
              },
              "what": Name {
                "kind": "name",
                "name": "PDO",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "fetch",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "stmt",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[026] Autocommit mode of the MySQL Server should be off, got '%s', [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[026] Autocommit mode of the MySQL Server should be off, got '%s', [%d] %s
",
            },
            OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'auto_commit'",
                "unicode": false,
                "value": "auto_commit",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "tmp",
              },
            },
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "errorCode",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              },
            },
            Call {
              "arguments": Array [
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "' '",
                      "unicode": false,
                      "value": " ",
                    },
                    Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "errorInfo",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "stmt",
                        },
                      },
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "implode",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "trim",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'auto_commit'",
            "unicode": false,
            "value": "auto_commit",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "tmp",
          },
        },
        "right": Number {
          "kind": "number",
          "value": "0",
        },
        "type": "!=",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "commit",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[027] MySQL Server should indicate autocommit mode, expecting 1, got '%s', [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[027] MySQL Server should indicate autocommit mode, expecting 1, got '%s', [%d] %s
",
            },
            OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'auto_commit'",
                "unicode": false,
                "value": "auto_commit",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "tmp",
              },
            },
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "errorCode",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              },
            },
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "errorInfo",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'auto_commit'",
            "unicode": false,
            "value": "auto_commit",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "tmp",
          },
        },
        "right": Number {
          "kind": "number",
          "value": "1",
        },
        "type": "!=",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'SET @@autocommit = 0'",
            "unicode": false,
            "value": "SET @@autocommit = 0",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "exec",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[028] I'm confused, how can autocommit be on? Didn't I say I want to manually control transactions?\\\\n\\"",
              "unicode": false,
              "value": "[028] I'm confused, how can autocommit be on? Didn't I say I want to manually control transactions?
",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Number {
          "kind": "number",
          "value": "1",
        },
        "right": Call {
          "arguments": Array [
            StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "ATTR_AUTOCOMMIT",
              },
              "what": Name {
                "kind": "name",
                "name": "PDO",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "getAttribute",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
          },
        },
        "type": "===",
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[029] Cannot start a transaction, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[029] Cannot start a transaction, [%d] %s
",
            },
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "errorCode",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              },
            },
            Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "' '",
                  "unicode": false,
                  "value": " ",
                },
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "errorInfo",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "db",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "implode",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "beginTransaction",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
          },
        },
      },
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[030] No false and no exception - that's wrong.\\\\n\\"",
                        "unicode": false,
                        "value": "[030] No false and no exception - that's wrong.
",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Boolean {
                "kind": "boolean",
                "raw": "false",
                "value": false,
              },
              "right": Call {
                "arguments": Array [],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "beginTransaction",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "db",
                  },
                },
              },
              "type": "!==",
            },
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    Bin {
                      "kind": "bin",
                      "left": Call {
                        "arguments": Array [],
                        "kind": "call",
                        "what": PropertyLookup {
                          "kind": "propertylookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "getMessage",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "e",
                          },
                        },
                      },
                      "right": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "''",
                        "unicode": false,
                        "value": "",
                      },
                      "type": "!=",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "assert",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "PDOException",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "db",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "factory",
            },
            "what": Name {
              "kind": "name",
              "name": "MySQLPDOTest",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'MyISAM'",
            "unicode": false,
            "value": "MyISAM",
          },
        ],
        "kind": "call",
        "what": StaticLookup {
          "kind": "staticlookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "createTestTable",
          },
          "what": Name {
            "kind": "name",
            "name": "MySQLPDOTest",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[031] Cannot start a transaction, [%s] [%s]\\\\n\\"",
              "unicode": false,
              "value": "[031] Cannot start a transaction, [%s] [%s]
",
            },
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "errorCode",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              },
            },
            Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "' '",
                  "unicode": false,
                  "value": " ",
                },
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "errorInfo",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "db",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "implode",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Boolean {
          "kind": "boolean",
          "raw": "false",
          "value": false,
        },
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "beginTransaction",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
          },
        },
        "type": "==",
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[032] Autocommit should be on my default, beginTransaction() should not change that\\\\n\\"",
              "unicode": false,
              "value": "[032] Autocommit should be on my default, beginTransaction() should not change that
",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Number {
          "kind": "number",
          "value": "1",
        },
        "right": Call {
          "arguments": Array [
            StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "ATTR_AUTOCOMMIT",
              },
              "what": Name {
                "kind": "name",
                "name": "PDO",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "getAttribute",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
          },
        },
        "type": "!==",
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[033] No rows deleted, can't be true.\\\\n\\"",
              "unicode": false,
              "value": "[033] No rows deleted, can't be true.
",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Number {
          "kind": "number",
          "value": "0",
        },
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'DELETE FROM test'",
              "unicode": false,
              "value": "DELETE FROM test",
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "exec",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
          },
        },
        "type": "==",
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[034] [%s] %s\\\\n\\"",
              "unicode": false,
              "value": "[034] [%s] %s
",
            },
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "errorCode",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              },
            },
            Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "' '",
                  "unicode": false,
                  "value": " ",
                },
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "errorInfo",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "db",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "implode",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "commit",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
          },
        },
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[035] Cannot start a transaction, [%s] [%s]\\\\n\\"",
              "unicode": false,
              "value": "[035] Cannot start a transaction, [%s] [%s]
",
            },
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "errorCode",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              },
            },
            Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "' '",
                  "unicode": false,
                  "value": " ",
                },
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "errorInfo",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "db",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "implode",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Boolean {
          "kind": "boolean",
          "raw": "false",
          "value": false,
        },
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "beginTransaction",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
          },
        },
        "type": "==",
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[036] Cannot insert data, [%s] [%s]\\\\n\\"",
              "unicode": false,
              "value": "[036] Cannot insert data, [%s] [%s]
",
            },
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "errorCode",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              },
            },
            Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "' '",
                  "unicode": false,
                  "value": " ",
                },
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "errorInfo",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "db",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "implode",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Number {
          "kind": "number",
          "value": "0",
        },
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"INSERT INTO test(id, label) VALUES (1, 'a')\\"",
              "unicode": false,
              "value": "INSERT INTO test(id, label) VALUES (1, 'a')",
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "exec",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
          },
        },
        "type": "==",
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[037] [%s] %s\\\\n\\"",
              "unicode": false,
              "value": "[037] [%s] %s
",
            },
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "errorCode",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              },
            },
            Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "' '",
                  "unicode": false,
                  "value": " ",
                },
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "errorInfo",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "db",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "implode",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "rollback",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "errorCode",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "db",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[038] No rows deleted, can't be true.\\\\n\\"",
              "unicode": false,
              "value": "[038] No rows deleted, can't be true.
",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Number {
          "kind": "number",
          "value": "1",
        },
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'DELETE FROM test'",
              "unicode": false,
              "value": "DELETE FROM test",
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "exec",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
          },
        },
        "type": "!=",
      },
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"done!\\"",
          "unicode": false,
          "value": "done!",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
