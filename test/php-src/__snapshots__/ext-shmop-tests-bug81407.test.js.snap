// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #81407 (shmop_open won't attach and causes php to crash) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Number {
              "kind": "number",
              "value": "367504384",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'n'",
              "unicode": false,
              "value": "n",
            },
            Number {
              "kind": "number",
              "value": "0664",
            },
            Number {
              "kind": "number",
              "value": "262144",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "shmop_open",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "b",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Number {
              "kind": "number",
              "value": "367504385",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'n'",
              "unicode": false,
              "value": "n",
            },
            Number {
              "kind": "number",
              "value": "0664",
            },
            Number {
              "kind": "number",
              "value": "65536",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "shmop_open",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "b",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Number {
                    "kind": "number",
                    "value": "367504385",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'w'",
                    "unicode": false,
                    "value": "w",
                  },
                  Number {
                    "kind": "number",
                    "value": "0664",
                  },
                  Number {
                    "kind": "number",
                    "value": "65536",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "shmop_open",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "b",
        },
        "right": Boolean {
          "kind": "boolean",
          "raw": "false",
          "value": false,
        },
        "type": "==",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "a",
            },
            "right": Boolean {
              "kind": "boolean",
              "raw": "false",
              "value": false,
            },
            "type": "!==",
          },
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "b",
            },
            "right": Boolean {
              "kind": "boolean",
              "raw": "false",
              "value": false,
            },
            "type": "!==",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
