// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Uninitialized run-time cache when resolving default values 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [],
      "body": Array [
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "a",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": Name {
                "kind": "name",
                "name": "FOO",
                "resolution": "uqn",
              },
              "variadic": false,
            },
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "b",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": Number {
                "kind": "number",
                "value": "1",
              },
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Encapsed {
                    "kind": "encapsed",
                    "raw": "\\"a = $a, b = $b\\\\n\\"",
                    "type": "string",
                    "value": Array [
                      EncapsedPart {
                        "curly": false,
                        "expression": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "a = ",
                          "unicode": false,
                          "value": "a = ",
                        },
                        "kind": "encapsedpart",
                        "syntax": null,
                      },
                      EncapsedPart {
                        "curly": false,
                        "expression": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "a",
                        },
                        "kind": "encapsedpart",
                        "syntax": "simple",
                      },
                      EncapsedPart {
                        "curly": false,
                        "expression": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": ", b = ",
                          "unicode": false,
                          "value": ", b = ",
                        },
                        "kind": "encapsedpart",
                        "syntax": null,
                      },
                      EncapsedPart {
                        "curly": false,
                        "expression": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "b",
                        },
                        "kind": "encapsedpart",
                        "syntax": "simple",
                      },
                      EncapsedPart {
                        "curly": false,
                        "expression": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "\\\\n",
                          "unicode": false,
                          "value": "",
                        },
                        "kind": "encapsedpart",
                        "syntax": null,
                      },
                    ],
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": true,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "method",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "Test",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'FOO'",
            "unicode": false,
            "value": "FOO",
          },
          Number {
            "kind": "number",
            "value": "42",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "define",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Array {
            "items": Array [
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'Test'",
                  "unicode": false,
                  "value": "Test",
                },
              },
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'method'",
                  "unicode": false,
                  "value": "method",
                },
              },
            ],
            "kind": "array",
            "shortForm": true,
          },
          namedargument {
            "kind": "namedargument",
            "name": "b",
            "value": Number {
              "kind": "number",
              "value": "0",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "call_user_func",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
