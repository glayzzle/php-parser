// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Class constant inheritance with mutable data 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [],
      "body": Array [
        ClassConstant {
          "attrGroups": Array [],
          "constants": Array [
            Constant {
              "kind": "constant",
              "name": Identifier {
                "kind": "identifier",
                "name": "X",
              },
              "value": Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'X'",
                  "unicode": false,
                  "value": "X",
                },
                "right": StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "Y",
                  },
                  "what": SelfReference {
                    "kind": "selfreference",
                    "raw": "self",
                  },
                },
                "type": ".",
              },
            },
          ],
          "kind": "classconstant",
          "visibility": "",
        },
        ClassConstant {
          "attrGroups": Array [],
          "constants": Array [
            Constant {
              "kind": "constant",
              "name": Identifier {
                "kind": "identifier",
                "name": "Y",
              },
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'Y'",
                "unicode": false,
                "value": "Y",
              },
            },
          ],
          "kind": "classconstant",
          "visibility": "",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "A",
      },
    },
    Interface {
      "attrGroups": Array [],
      "body": Array [
        ClassConstant {
          "attrGroups": Array [],
          "constants": Array [
            Constant {
              "kind": "constant",
              "name": Identifier {
                "kind": "identifier",
                "name": "X2",
              },
              "value": Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'X2'",
                  "unicode": false,
                  "value": "X2",
                },
                "right": StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "Y2",
                  },
                  "what": SelfReference {
                    "kind": "selfreference",
                    "raw": "self",
                  },
                },
                "type": ".",
              },
            },
          ],
          "kind": "classconstant",
          "visibility": "",
        },
        ClassConstant {
          "attrGroups": Array [],
          "constants": Array [
            Constant {
              "kind": "constant",
              "name": Identifier {
                "kind": "identifier",
                "name": "Y2",
              },
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'Y2'",
                "unicode": false,
                "value": "Y2",
              },
            },
          ],
          "kind": "classconstant",
          "visibility": "",
        },
      ],
      "extends": null,
      "kind": "interface",
      "name": Identifier {
        "kind": "identifier",
        "name": "I",
      },
    },
    ExpressionStatement {
      "expression": Eval {
        "kind": "eval",
        "source": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'class B extends A implements I {}'",
          "unicode": false,
          "value": "class B extends A implements I {}",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          New {
            "arguments": Array [],
            "kind": "new",
            "what": Name {
              "kind": "name",
              "name": "B",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "X",
            },
            "what": Name {
              "kind": "name",
              "name": "B",
              "resolution": "uqn",
            },
          },
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "X2",
            },
            "what": Name {
              "kind": "name",
              "name": "B",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Class {
      "attrGroups": Array [],
      "body": Array [
        ClassConstant {
          "attrGroups": Array [],
          "constants": Array [
            Constant {
              "kind": "constant",
              "name": Identifier {
                "kind": "identifier",
                "name": "C",
              },
              "value": Bin {
                "kind": "bin",
                "left": Number {
                  "kind": "number",
                  "value": "1",
                },
                "right": Number {
                  "kind": "number",
                  "value": "1.5",
                },
                "type": "%",
              },
            },
          ],
          "kind": "classconstant",
          "visibility": "",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "X",
      },
    },
    Class {
      "attrGroups": Array [],
      "body": Array [],
      "extends": Name {
        "kind": "name",
        "name": "X",
        "resolution": "uqn",
      },
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "Y",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "C",
            },
            "what": Name {
              "kind": "name",
              "name": "X",
              "resolution": "uqn",
            },
          },
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "C",
            },
            "what": Name {
              "kind": "name",
              "name": "Y",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
