// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Combination of foreach, finally and goto 1`] = `
Program {
  "children": Array [
    Foreach {
      "body": Block {
        "children": Array [
          Try {
            "always": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"finally2\\\\n\\"",
                      "unicode": false,
                      "value": "finally2
",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
              ],
              "kind": "block",
            },
            "body": Block {
              "children": Array [
                Foreach {
                  "body": Block {
                    "children": Array [
                      Try {
                        "always": Block {
                          "children": Array [
                            Echo {
                              "expressions": Array [
                                String {
                                  "isDoubleQuote": true,
                                  "kind": "string",
                                  "raw": "\\"finally1\\\\n\\"",
                                  "unicode": false,
                                  "value": "finally1
",
                                },
                              ],
                              "kind": "echo",
                              "shortForm": false,
                            },
                          ],
                          "kind": "block",
                        },
                        "body": Block {
                          "children": Array [
                            Foreach {
                              "body": Block {
                                "children": Array [
                                  Goto {
                                    "kind": "goto",
                                    "label": Identifier {
                                      "kind": "identifier",
                                      "name": "out",
                                    },
                                  },
                                ],
                                "kind": "block",
                              },
                              "key": null,
                              "kind": "foreach",
                              "shortForm": false,
                              "source": Array {
                                "items": Array [
                                  Entry {
                                    "byRef": false,
                                    "key": null,
                                    "kind": "entry",
                                    "unpack": false,
                                    "value": New {
                                      "arguments": Array [],
                                      "kind": "new",
                                      "what": Name {
                                        "kind": "name",
                                        "name": "stdClass",
                                        "resolution": "uqn",
                                      },
                                    },
                                  },
                                ],
                                "kind": "array",
                                "shortForm": true,
                              },
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "a",
                              },
                            },
                          ],
                          "kind": "block",
                        },
                        "catches": Array [],
                        "kind": "try",
                      },
                      Label {
                        "kind": "label",
                        "name": Identifier {
                          "kind": "identifier",
                          "name": "out",
                        },
                      },
                    ],
                    "kind": "block",
                  },
                  "key": null,
                  "kind": "foreach",
                  "shortForm": false,
                  "source": Array {
                    "items": Array [
                      Entry {
                        "byRef": false,
                        "key": null,
                        "kind": "entry",
                        "unpack": false,
                        "value": New {
                          "arguments": Array [],
                          "kind": "new",
                          "what": Name {
                            "kind": "name",
                            "name": "stdClass",
                            "resolution": "uqn",
                          },
                        },
                      },
                    ],
                    "kind": "array",
                    "shortForm": true,
                  },
                  "value": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "a",
                  },
                },
              ],
              "kind": "block",
            },
            "catches": Array [],
            "kind": "try",
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Array {
        "items": Array [
          Entry {
            "byRef": false,
            "key": null,
            "kind": "entry",
            "unpack": false,
            "value": New {
              "arguments": Array [],
              "kind": "new",
              "what": Name {
                "kind": "name",
                "name": "stdClass",
                "resolution": "uqn",
              },
            },
          },
        ],
        "kind": "array",
        "shortForm": true,
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "a",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
