// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests SSA construction for CFG with unreachable basic blocks 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [],
      "body": Array [
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "n",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              If {
                "alternate": null,
                "body": Block {
                  "children": Array [
                    ExpressionStatement {
                      "expression": Call {
                        "arguments": Array [
                          String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'Deprecated type property called; use instanceof'",
                            "unicode": false,
                            "value": "Deprecated type property called; use instanceof",
                          },
                          Name {
                            "kind": "name",
                            "name": "E_USER_NOTICE",
                            "resolution": "uqn",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "trigger_error",
                          "resolution": "uqn",
                        },
                      },
                      "kind": "expressionstatement",
                    },
                    Switch {
                      "body": Block {
                        "children": Array [
                          Case {
                            "body": Block {
                              "children": Array [
                                Return {
                                  "expr": String {
                                    "isDoubleQuote": false,
                                    "kind": "string",
                                    "raw": "'start'",
                                    "unicode": false,
                                    "value": "start",
                                  },
                                  "kind": "return",
                                },
                              ],
                              "kind": "block",
                            },
                            "kind": "case",
                            "test": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "'HTMLPurifier_Token_Start'",
                              "unicode": false,
                              "value": "HTMLPurifier_Token_Start",
                            },
                          },
                          Case {
                            "body": Block {
                              "children": Array [
                                Return {
                                  "expr": NullKeyword {
                                    "kind": "nullkeyword",
                                    "raw": "null",
                                  },
                                  "kind": "return",
                                },
                              ],
                              "kind": "block",
                            },
                            "kind": "case",
                            "test": null,
                          },
                        ],
                        "kind": "block",
                      },
                      "kind": "switch",
                      "shortForm": false,
                      "test": Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "this",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "get_class",
                          "resolution": "uqn",
                        },
                      },
                    },
                  ],
                  "kind": "block",
                },
                "kind": "if",
                "shortForm": false,
                "test": Bin {
                  "kind": "bin",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "n",
                  },
                  "right": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'type'",
                    "unicode": false,
                    "value": "type",
                  },
                  "type": "===",
                },
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "__get",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "X",
      },
    },
    Inline {
      "kind": "inline",
      "raw": "
OK",
      "value": "OK",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
