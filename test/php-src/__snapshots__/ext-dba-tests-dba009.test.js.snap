// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests DBA dba_popen Test 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": true,
        "target": Bin {
          "kind": "bin",
          "left": Magic {
            "kind": "magic",
            "raw": "__DIR__",
            "value": "__DIR__",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'/test.inc'",
            "unicode": false,
            "value": "/test.inc",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Encapsed {
          "kind": "encapsed",
          "raw": "\\"database handler: $handler\\\\n\\"",
          "type": "string",
          "value": Array [
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "database handler: ",
                "unicode": false,
                "value": "database handler: ",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
            EncapsedPart {
              "curly": false,
              "expression": Variable {
                "curly": false,
                "kind": "variable",
                "name": "handler",
              },
              "kind": "encapsedpart",
              "syntax": "simple",
            },
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "\\\\n",
                "unicode": false,
                "value": "",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
          ],
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    If {
      "alternate": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Error creating database\\\\n\\"",
                "unicode": false,
                "value": "Error creating database
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Opened\\\\n\\"",
                "unicode": false,
                "value": "Opened
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"a\\"",
                  "unicode": false,
                  "value": "a",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"Inserted\\"",
                  "unicode": false,
                  "value": "Inserted",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "dba_insert",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          Echo {
            "expressions": Array [
              Bin {
                "kind": "bin",
                "left": Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"a\\"",
                      "unicode": false,
                      "value": "a",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "db",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "dba_fetch",
                    "resolution": "uqn",
                  },
                },
                "right": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"\\\\n\\"",
                  "unicode": false,
                  "value": "
",
                },
                "type": ".",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "dba_close",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Closed\\\\n\\"",
                "unicode": false,
                "value": "Closed
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          "operator": "=",
          "parenthesizedExpression": true,
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "db_file",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"n\\"",
                "unicode": false,
                "value": "n",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "handler",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "dba_popen",
              "resolution": "uqn",
            },
          },
        },
        "right": Boolean {
          "kind": "boolean",
          "raw": "FALSE",
          "value": false,
        },
        "type": "!==",
      },
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Opened\\\\n\\"",
                "unicode": false,
                "value": "Opened
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"a\\"",
                  "unicode": false,
                  "value": "a",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"Inserted\\"",
                  "unicode": false,
                  "value": "Inserted",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "dba_insert",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          Echo {
            "expressions": Array [
              Bin {
                "kind": "bin",
                "left": Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"a\\"",
                      "unicode": false,
                      "value": "a",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "db",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "dba_fetch",
                    "resolution": "uqn",
                  },
                },
                "right": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"\\\\n\\"",
                  "unicode": false,
                  "value": "
",
                },
                "type": ".",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          "operator": "=",
          "parenthesizedExpression": true,
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "db_file",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"n\\"",
                "unicode": false,
                "value": "n",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "handler",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "dba_popen",
              "resolution": "uqn",
            },
          },
        },
        "right": Boolean {
          "kind": "boolean",
          "raw": "FALSE",
          "value": false,
        },
        "type": "!==",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
