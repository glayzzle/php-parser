// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #42434 (ImageLine w/ antialias = 1px shorter) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "im",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Number {
              "kind": "number",
              "value": "10",
            },
            Number {
              "kind": "number",
              "value": "2",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "imagecreatetruecolor",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "im",
          },
          Number {
            "kind": "number",
            "value": "0",
          },
          Number {
            "kind": "number",
            "value": "0",
          },
          Number {
            "kind": "number",
            "value": "10",
          },
          Number {
            "kind": "number",
            "value": "2",
          },
          Number {
            "kind": "number",
            "value": "0xFFFFFF",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imagefilledrectangle",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "im",
          },
          Boolean {
            "kind": "boolean",
            "raw": "true",
            "value": true,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imageantialias",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "im",
          },
          Number {
            "kind": "number",
            "value": "0",
          },
          Number {
            "kind": "number",
            "value": "0",
          },
          Number {
            "kind": "number",
            "value": "10",
          },
          Number {
            "kind": "number",
            "value": "0",
          },
          Number {
            "kind": "number",
            "value": "0x000000",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imageline",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'Bugged'",
                "unicode": false,
                "value": "Bugged",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'DONE'",
                "unicode": false,
                "value": "DONE",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "im",
            },
            Number {
              "kind": "number",
              "value": "9",
            },
            Number {
              "kind": "number",
              "value": "0",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "imagecolorat",
            "resolution": "uqn",
          },
        },
        "right": Number {
          "kind": "number",
          "value": "0x000000",
        },
        "type": "==",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "im",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imagedestroy",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
