// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Reconstructing a script using token_get_all() 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "phpstr",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'
<?php
// A php script to test token_get_all()
/* a different
type of
comment */
// a class
class TestClass {
    public function foo() {
        echo \\"Called foo()\\\\n\\";
    }
}
$a = new TestClass();
$a->foo();
for ($i = 0; $i < 10; $i++) {
    echo \\"Loop iteration $i\\\\n\\";
}
?>'",
          "unicode": false,
          "value": "
<?php
// A php script to test token_get_all()
/* a different
type of
comment */
// a class
class TestClass {
    public function foo() {
        echo \\"Called foo()\\\\n\\";
    }
}
$a = new TestClass();
$a->foo();
for ($i = 0; $i < 10; $i++) {
    echo \\"Loop iteration $i\\\\n\\";
}
?>",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "token_array",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "phpstr",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "token_get_all",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "script",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\"",
          "unicode": false,
          "value": "",
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          If {
            "alternate": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "script",
                    },
                    "operator": ".=",
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "token",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "body": Block {
              "children": Array [
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      Continue {
                        "kind": "continue",
                        "level": null,
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Call {
                      "arguments": Array [
                        OffsetLookup {
                          "kind": "offsetlookup",
                          "offset": Number {
                            "kind": "number",
                            "value": "1",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "token",
                          },
                        },
                        String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'<?php'",
                          "unicode": false,
                          "value": "<?php",
                        },
                        Number {
                          "kind": "number",
                          "value": "5",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "strncmp",
                        "resolution": "uqn",
                      },
                    },
                    "right": Number {
                      "kind": "number",
                      "value": "0",
                    },
                    "type": "==",
                  },
                },
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      Continue {
                        "kind": "continue",
                        "level": null,
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Call {
                      "arguments": Array [
                        OffsetLookup {
                          "kind": "offsetlookup",
                          "offset": Number {
                            "kind": "number",
                            "value": "1",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "token",
                          },
                        },
                        String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'?>'",
                          "unicode": false,
                          "value": "?>",
                        },
                        Number {
                          "kind": "number",
                          "value": "2",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "strncmp",
                        "resolution": "uqn",
                      },
                    },
                    "right": Number {
                      "kind": "number",
                      "value": "0",
                    },
                    "type": "==",
                  },
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "script",
                    },
                    "operator": ".=",
                    "right": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": Number {
                        "kind": "number",
                        "value": "1",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "token",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "token",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "is_array",
                "resolution": "uqn",
              },
            },
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "token_array",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "token",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "script",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Eval {
        "kind": "eval",
        "source": Variable {
          "curly": false,
          "kind": "variable",
          "name": "script",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
