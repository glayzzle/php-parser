// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests oci_set_call_timeout: test timing out  1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": true,
        "target": Bin {
          "kind": "bin",
          "left": Magic {
            "kind": "magic",
            "raw": "__DIR__",
            "value": "__DIR__",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'/connect.inc'",
            "unicode": false,
            "value": "/connect.inc",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "c",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "t",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "s",
              },
              "operator": "=",
              "right": Silent {
                "expr": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "c",
                    },
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"begin dbms_lock.sleep(:t); end;\\"",
                      "unicode": false,
                      "value": "begin dbms_lock.sleep(:t); end;",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "oci_parse",
                    "resolution": "uqn",
                  },
                },
                "kind": "silent",
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "m",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "c",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "oci_error",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                Echo {
                  "expressions": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"Execute error was \\"",
                      "unicode": false,
                      "value": "Execute error was ",
                    },
                    OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'message'",
                        "unicode": false,
                        "value": "message",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "m",
                      },
                    },
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"\\\\n\\"",
                      "unicode": false,
                      "value": "
",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
                Return {
                  "expr": null,
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "s",
              },
            },
          },
          ExpressionStatement {
            "expression": Silent {
              "expr": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "s",
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\":t\\"",
                    "unicode": false,
                    "value": ":t",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "t",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "oci_bind_by_name",
                  "resolution": "uqn",
                },
              },
              "kind": "silent",
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "r",
              },
              "operator": "=",
              "right": Silent {
                "expr": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "s",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "oci_execute",
                    "resolution": "uqn",
                  },
                },
                "kind": "silent",
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "m",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "s",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "oci_error",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                Echo {
                  "expressions": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"Execute error was \\"",
                      "unicode": false,
                      "value": "Execute error was ",
                    },
                    OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'message'",
                        "unicode": false,
                        "value": "message",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "m",
                      },
                    },
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"\\\\n\\"",
                      "unicode": false,
                      "value": "
",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
              ],
              "kind": "block",
            },
            "body": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"Execute succeeded\\\\n\\"",
                      "unicode": false,
                      "value": "Execute succeeded
",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Variable {
              "curly": false,
              "kind": "variable",
              "name": "r",
            },
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "mysleep",
      },
      "nullable": false,
      "type": null,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Test 1\\\\n\\"",
          "unicode": false,
          "value": "Test 1
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "c",
          },
          Number {
            "kind": "number",
            "value": "4000",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_set_call_timeout",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "r",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "c",
            },
            Number {
              "kind": "number",
              "value": "8",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysleep",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
