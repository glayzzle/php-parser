// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Check for libsodium auth 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "msg",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Number {
              "kind": "number",
              "value": "1000",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "random_bytes",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "key",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_auth_keygen",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "mac",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "msg",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "key",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_auth",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "mac",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "msg",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "key",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "sodium_crypto_auth_verify",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "bad_key",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Bin {
              "kind": "bin",
              "left": Name {
                "kind": "name",
                "name": "SODIUM_CRYPTO_AUTH_KEYBYTES",
                "resolution": "uqn",
              },
              "right": Number {
                "kind": "number",
                "value": "1",
              },
              "type": "-",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "random_bytes",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "mac",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "msg",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "bad_key",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "sodium_crypto_auth",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'Fail!'",
                "unicode": false,
                "value": "Fail!",
              },
              Name {
                "kind": "name",
                "name": "PHP_EOL",
                "resolution": "uqn",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Call {
                    "arguments": Array [],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "getMessage",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "ex",
                      },
                    },
                  },
                  Name {
                    "kind": "name",
                    "name": "PHP_EOL",
                    "resolution": "uqn",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "ex",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "SodiumException",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "badmsg",
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "msg",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Number {
            "kind": "number",
            "value": "0",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "badmsg",
          },
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Bin {
              "kind": "bin",
              "left": Call {
                "arguments": Array [
                  OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": Number {
                      "kind": "number",
                      "value": "0",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "badmsg",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "\\\\ord",
                  "resolution": "fqn",
                },
              },
              "right": Number {
                "kind": "number",
                "value": "0x80",
              },
              "type": "^",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "\\\\chr",
            "resolution": "fqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "mac",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "badmsg",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "key",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "sodium_crypto_auth_verify",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "badmsg",
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "msg",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Assign {
            "kind": "assign",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "i",
            },
            "operator": "=",
            "right": Call {
              "arguments": Array [
                Number {
                  "kind": "number",
                  "value": "0",
                },
                Number {
                  "kind": "number",
                  "value": "999",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mt_rand",
                "resolution": "uqn",
              },
            },
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "badmsg",
          },
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Bin {
              "kind": "bin",
              "left": Call {
                "arguments": Array [
                  OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "i",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "msg",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "\\\\ord",
                  "resolution": "fqn",
                },
              },
              "right": Bin {
                "kind": "bin",
                "left": Number {
                  "kind": "number",
                  "value": "1",
                },
                "parenthesizedExpression": true,
                "right": Call {
                  "arguments": Array [
                    Number {
                      "kind": "number",
                      "value": "0",
                    },
                    Number {
                      "kind": "number",
                      "value": "7",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mt_rand",
                    "resolution": "uqn",
                  },
                },
                "type": "<<",
              },
              "type": "^",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "\\\\chr",
            "resolution": "fqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "mac",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "badmsg",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "key",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "sodium_crypto_auth_verify",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "badmac",
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "mac",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Number {
            "kind": "number",
            "value": "0",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "badmac",
          },
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Bin {
              "kind": "bin",
              "left": Call {
                "arguments": Array [
                  OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": Number {
                      "kind": "number",
                      "value": "0",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "badmac",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "\\\\ord",
                  "resolution": "fqn",
                },
              },
              "right": Number {
                "kind": "number",
                "value": "0x80",
              },
              "type": "^",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "\\\\chr",
            "resolution": "fqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "badmac",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "msg",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "key",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "sodium_crypto_auth_verify",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
