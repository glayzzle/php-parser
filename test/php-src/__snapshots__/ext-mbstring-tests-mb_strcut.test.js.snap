// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests mb_strcut() 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "string",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "encoding",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "chars",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "string",
                  },
                  Number {
                    "kind": "number",
                    "value": "1",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "encoding",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mb_str_split",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          Return {
            "expr": Bin {
              "kind": "bin",
              "left": Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'['",
                  "unicode": false,
                  "value": "[",
                },
                "right": Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "' '",
                      "unicode": false,
                      "value": " ",
                    },
                    Call {
                      "arguments": Array [
                        Closure {
                          "arguments": Array [
                            Parameter {
                              "attrGroups": Array [],
                              "byref": false,
                              "flags": 0,
                              "kind": "parameter",
                              "name": Identifier {
                                "kind": "identifier",
                                "name": "char",
                              },
                              "nullable": false,
                              "readonly": false,
                              "type": null,
                              "value": null,
                              "variadic": false,
                            },
                          ],
                          "attrGroups": Array [],
                          "body": Block {
                            "children": Array [
                              Return {
                                "expr": Call {
                                  "arguments": Array [
                                    Call {
                                      "arguments": Array [
                                        String {
                                          "isDoubleQuote": false,
                                          "kind": "string",
                                          "raw": "'H*'",
                                          "unicode": false,
                                          "value": "H*",
                                        },
                                        Variable {
                                          "curly": false,
                                          "kind": "variable",
                                          "name": "char",
                                        },
                                      ],
                                      "kind": "call",
                                      "what": Name {
                                        "kind": "name",
                                        "name": "unpack",
                                        "resolution": "uqn",
                                      },
                                    },
                                  ],
                                  "kind": "call",
                                  "what": Name {
                                    "kind": "name",
                                    "name": "join",
                                    "resolution": "uqn",
                                  },
                                },
                                "kind": "return",
                              },
                            ],
                            "kind": "block",
                          },
                          "byref": false,
                          "isStatic": false,
                          "kind": "closure",
                          "nullable": false,
                          "type": null,
                          "uses": Array [],
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "chars",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "array_map",
                        "resolution": "uqn",
                      },
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "implode",
                    "resolution": "uqn",
                  },
                },
                "type": ".",
              },
              "right": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "']'",
                "unicode": false,
                "value": "]",
              },
              "type": ".",
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "MBStringChars",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'include_path'",
            "unicode": false,
            "value": "include_path",
          },
          Magic {
            "kind": "magic",
            "raw": "__DIR__",
            "value": "__DIR__",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "ini_set",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": false,
        "target": String {
          "isDoubleQuote": false,
          "kind": "string",
          "parenthesizedExpression": true,
          "raw": "'common.inc'",
          "unicode": false,
          "value": "common.inc",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "euc_jp",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'H*'",
              "unicode": false,
              "value": "H*",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'30313233a4b3a4cecab8bbfacef3a4cfc6fccbdcb8eca4c7a4b9a1a34555432d4a50a4f2bbc8a4c3a4c6a4a4a4dea4b9a1a3c6fccbdcb8eca4cfccccc5ddbdada4a4a1a3'",
              "unicode": false,
              "value": "30313233a4b3a4cecab8bbfacef3a4cfc6fccbdcb8eca4c7a4b9a1a34555432d4a50a4f2bbc8a4c3a4c6a4a4a4dea4b9a1a3c6fccbdcb8eca4cfccccc5ddbdada4a4a1a3",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "pack",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "utf8",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'H*'",
              "unicode": false,
              "value": "H*",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'e288ae2045e28b856461203d2051'",
              "unicode": false,
              "value": "e288ae2045e28b856461203d2051",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "pack",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "utf16le",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'H*'",
              "unicode": false,
              "value": "H*",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'1a043804400438043b043b04380446043004200069007300200043007900720069006c006c0069006300'",
              "unicode": false,
              "value": "1a043804400438043b043b04380446043004200069007300200043007900720069006c006c0069006300",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "pack",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"== EUC-JP ==\\\\n\\"",
          "unicode": false,
          "value": "== EUC-JP ==
",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "euc_jp",
                  },
                  Number {
                    "kind": "number",
                    "value": "6",
                  },
                  Number {
                    "kind": "number",
                    "value": "5",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'EUC-JP'",
                    "unicode": false,
                    "value": "EUC-JP",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mb_strcut",
                  "resolution": "uqn",
                },
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'EUC-JP'",
                "unicode": false,
                "value": "EUC-JP",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "MBStringChars",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "euc_jp",
                  },
                  Number {
                    "kind": "number",
                    "value": "5",
                  },
                  Number {
                    "kind": "number",
                    "value": "5",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'EUC-JP'",
                    "unicode": false,
                    "value": "EUC-JP",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mb_strcut",
                  "resolution": "uqn",
                },
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'EUC-JP'",
                "unicode": false,
                "value": "EUC-JP",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "MBStringChars",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "euc_jp",
                  },
                  Number {
                    "kind": "number",
                    "value": "0",
                  },
                  Number {
                    "kind": "number",
                    "value": "100",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'EUC-JP'",
                    "unicode": false,
                    "value": "EUC-JP",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mb_strcut",
                  "resolution": "uqn",
                },
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'EUC-JP'",
                "unicode": false,
                "value": "EUC-JP",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "MBStringChars",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "str",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "euc_jp",
            },
            Number {
              "kind": "number",
              "value": "100",
            },
            Number {
              "kind": "number",
              "value": "10",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'EUC-JP'",
              "unicode": false,
              "value": "EUC-JP",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_strcut",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": RetIf {
        "falseExpr": Print {
          "expression": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"No good\\\\n\\"",
            "unicode": false,
            "value": "No good
",
          },
          "kind": "print",
        },
        "kind": "retif",
        "test": Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "str",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\"",
            "unicode": false,
            "value": "",
          },
          "type": "===",
        },
        "trueExpr": Print {
          "expression": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"OK\\\\n\\"",
            "unicode": false,
            "value": "OK
",
          },
          "kind": "print",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "str",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "euc_jp",
            },
            Unary {
              "kind": "unary",
              "type": "-",
              "what": Number {
                "kind": "number",
                "value": "100",
              },
            },
            Number {
              "kind": "number",
              "value": "10",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'EUC-JP'",
              "unicode": false,
              "value": "EUC-JP",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_strcut",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": RetIf {
        "falseExpr": Print {
          "expression": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"No good\\\\n\\"",
            "unicode": false,
            "value": "No good
",
          },
          "kind": "print",
        },
        "kind": "retif",
        "test": Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "str",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\"",
            "unicode": false,
            "value": "",
          },
          "type": "!==",
        },
        "trueExpr": Print {
          "expression": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"OK\\\\n\\"",
            "unicode": false,
            "value": "OK
",
          },
          "kind": "print",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"== UTF-8 ==\\\\n\\"",
          "unicode": false,
          "value": "== UTF-8 ==
",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "utf8",
                  },
                  Number {
                    "kind": "number",
                    "value": "0",
                  },
                  Number {
                    "kind": "number",
                    "value": "0",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'UTF-8'",
                    "unicode": false,
                    "value": "UTF-8",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mb_strcut",
                  "resolution": "uqn",
                },
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'UTF-8'",
                "unicode": false,
                "value": "UTF-8",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "MBStringChars",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "utf8",
                  },
                  Number {
                    "kind": "number",
                    "value": "0",
                  },
                  Number {
                    "kind": "number",
                    "value": "1",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'UTF-8'",
                    "unicode": false,
                    "value": "UTF-8",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mb_strcut",
                  "resolution": "uqn",
                },
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'UTF-8'",
                "unicode": false,
                "value": "UTF-8",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "MBStringChars",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "utf8",
                  },
                  Number {
                    "kind": "number",
                    "value": "0",
                  },
                  Number {
                    "kind": "number",
                    "value": "2",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'UTF-8'",
                    "unicode": false,
                    "value": "UTF-8",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mb_strcut",
                  "resolution": "uqn",
                },
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'UTF-8'",
                "unicode": false,
                "value": "UTF-8",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "MBStringChars",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "utf8",
                  },
                  Number {
                    "kind": "number",
                    "value": "0",
                  },
                  Number {
                    "kind": "number",
                    "value": "3",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'UTF-8'",
                    "unicode": false,
                    "value": "UTF-8",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mb_strcut",
                  "resolution": "uqn",
                },
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'UTF-8'",
                "unicode": false,
                "value": "UTF-8",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "MBStringChars",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "utf8",
                  },
                  Number {
                    "kind": "number",
                    "value": "0",
                  },
                  Number {
                    "kind": "number",
                    "value": "4",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'UTF-8'",
                    "unicode": false,
                    "value": "UTF-8",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mb_strcut",
                  "resolution": "uqn",
                },
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'UTF-8'",
                "unicode": false,
                "value": "UTF-8",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "MBStringChars",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "utf8",
                  },
                  Number {
                    "kind": "number",
                    "value": "0",
                  },
                  Number {
                    "kind": "number",
                    "value": "5",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'UTF-8'",
                    "unicode": false,
                    "value": "UTF-8",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mb_strcut",
                  "resolution": "uqn",
                },
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'UTF-8'",
                "unicode": false,
                "value": "UTF-8",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "MBStringChars",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "utf8",
                  },
                  Number {
                    "kind": "number",
                    "value": "1",
                  },
                  Number {
                    "kind": "number",
                    "value": "2",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'UTF-8'",
                    "unicode": false,
                    "value": "UTF-8",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mb_strcut",
                  "resolution": "uqn",
                },
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'UTF-8'",
                "unicode": false,
                "value": "UTF-8",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "MBStringChars",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "utf8",
                  },
                  Number {
                    "kind": "number",
                    "value": "1",
                  },
                  Number {
                    "kind": "number",
                    "value": "3",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'UTF-8'",
                    "unicode": false,
                    "value": "UTF-8",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mb_strcut",
                  "resolution": "uqn",
                },
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'UTF-8'",
                "unicode": false,
                "value": "UTF-8",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "MBStringChars",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "utf8",
                  },
                  Number {
                    "kind": "number",
                    "value": "1",
                  },
                  Number {
                    "kind": "number",
                    "value": "4",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'UTF-8'",
                    "unicode": false,
                    "value": "UTF-8",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mb_strcut",
                  "resolution": "uqn",
                },
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'UTF-8'",
                "unicode": false,
                "value": "UTF-8",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "MBStringChars",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"== UTF-16LE ==\\\\n\\"",
          "unicode": false,
          "value": "== UTF-16LE ==
",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "utf16le",
                  },
                  Number {
                    "kind": "number",
                    "value": "0",
                  },
                  Number {
                    "kind": "number",
                    "value": "0",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'UTF-16LE'",
                    "unicode": false,
                    "value": "UTF-16LE",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mb_strcut",
                  "resolution": "uqn",
                },
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'UTF-16LE'",
                "unicode": false,
                "value": "UTF-16LE",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "MBStringChars",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "utf16le",
                  },
                  Number {
                    "kind": "number",
                    "value": "0",
                  },
                  Number {
                    "kind": "number",
                    "value": "1",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'UTF-16LE'",
                    "unicode": false,
                    "value": "UTF-16LE",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mb_strcut",
                  "resolution": "uqn",
                },
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'UTF-16LE'",
                "unicode": false,
                "value": "UTF-16LE",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "MBStringChars",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "utf16le",
                  },
                  Number {
                    "kind": "number",
                    "value": "0",
                  },
                  Number {
                    "kind": "number",
                    "value": "2",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'UTF-16LE'",
                    "unicode": false,
                    "value": "UTF-16LE",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mb_strcut",
                  "resolution": "uqn",
                },
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'UTF-16LE'",
                "unicode": false,
                "value": "UTF-16LE",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "MBStringChars",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "utf16le",
                  },
                  Number {
                    "kind": "number",
                    "value": "0",
                  },
                  Number {
                    "kind": "number",
                    "value": "3",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'UTF-16LE'",
                    "unicode": false,
                    "value": "UTF-16LE",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mb_strcut",
                  "resolution": "uqn",
                },
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'UTF-16LE'",
                "unicode": false,
                "value": "UTF-16LE",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "MBStringChars",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "utf16le",
                  },
                  Number {
                    "kind": "number",
                    "value": "1",
                  },
                  Number {
                    "kind": "number",
                    "value": "2",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'UTF-16LE'",
                    "unicode": false,
                    "value": "UTF-16LE",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mb_strcut",
                  "resolution": "uqn",
                },
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'UTF-16LE'",
                "unicode": false,
                "value": "UTF-16LE",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "MBStringChars",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "utf16le",
                  },
                  Number {
                    "kind": "number",
                    "value": "1",
                  },
                  Number {
                    "kind": "number",
                    "value": "3",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'UTF-16LE'",
                    "unicode": false,
                    "value": "UTF-16LE",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mb_strcut",
                  "resolution": "uqn",
                },
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'UTF-16LE'",
                "unicode": false,
                "value": "UTF-16LE",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "MBStringChars",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "utf16le",
                  },
                  Number {
                    "kind": "number",
                    "value": "1",
                  },
                  Number {
                    "kind": "number",
                    "value": "4",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'UTF-16LE'",
                    "unicode": false,
                    "value": "UTF-16LE",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mb_strcut",
                  "resolution": "uqn",
                },
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'UTF-16LE'",
                "unicode": false,
                "value": "UTF-16LE",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "MBStringChars",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
