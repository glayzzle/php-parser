// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #30638 (localeconv returns wrong LC_NUMERIC settings) (ok to fail on MacOS X) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Name {
            "kind": "name",
            "name": "LC_NUMERIC",
            "resolution": "uqn",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"de_DE.UTF-8\\"",
            "unicode": false,
            "value": "de_DE.UTF-8",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"de_DE\\"",
            "unicode": false,
            "value": "de_DE",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"de\\"",
            "unicode": false,
            "value": "de",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"german\\"",
            "unicode": false,
            "value": "german",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"ge\\"",
            "unicode": false,
            "value": "ge",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"de_DE.ISO-8859-1\\"",
            "unicode": false,
            "value": "de_DE.ISO-8859-1",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "setlocale",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "lc",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "localeconv",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"decimal_point: %s\\\\n\\"",
            "unicode": false,
            "value": "decimal_point: %s
",
          },
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'decimal_point'",
              "unicode": false,
              "value": "decimal_point",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "lc",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"thousands_sep: %s\\\\n\\"",
            "unicode": false,
            "value": "thousands_sep: %s
",
          },
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'thousands_sep'",
              "unicode": false,
              "value": "thousands_sep",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "lc",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
