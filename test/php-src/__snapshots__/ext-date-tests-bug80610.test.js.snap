// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #80610 (DateTime calculate wrong with DateInterval) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "expectEaster",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'Y-m-d H:i:s'",
              "unicode": false,
              "value": "Y-m-d H:i:s",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'2020-04-12 12:00:00'",
              "unicode": false,
              "value": "2020-04-12 12:00:00",
            },
            New {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'Europe/Berlin'",
                  "unicode": false,
                  "value": "Europe/Berlin",
                },
              ],
              "kind": "new",
              "what": Name {
                "kind": "name",
                "name": "DateTimeZone",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "date_create_from_format",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "interval",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'PT20800M'",
              "unicode": false,
              "value": "PT20800M",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "DateInterval",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "interval",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "sub",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expectEaster",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "interval",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "add",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expectEaster",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'easter '",
              "unicode": false,
              "value": "easter ",
            },
            "right": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'Y-m-d H:i:s'",
                  "unicode": false,
                  "value": "Y-m-d H:i:s",
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "format",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "expectEaster",
                },
              },
            },
            "type": ".",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "expectEaster",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'Y-m-d H:i:s'",
              "unicode": false,
              "value": "Y-m-d H:i:s",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'2020-04-12 12:00:00'",
              "unicode": false,
              "value": "2020-04-12 12:00:00",
            },
            New {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'Europe/Berlin'",
                  "unicode": false,
                  "value": "Europe/Berlin",
                },
              ],
              "kind": "new",
              "what": Name {
                "kind": "name",
                "name": "DateTimeZone",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "date_create_from_format",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "interval",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'PT20715M'",
              "unicode": false,
              "value": "PT20715M",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "DateInterval",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "interval",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "sub",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expectEaster",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "interval",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "add",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expectEaster",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'easter '",
              "unicode": false,
              "value": "easter ",
            },
            "right": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'Y-m-d H:i:s'",
                  "unicode": false,
                  "value": "Y-m-d H:i:s",
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "format",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "expectEaster",
                },
              },
            },
            "type": ".",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "expectEaster",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'Y-m-d H:i:s'",
              "unicode": false,
              "value": "Y-m-d H:i:s",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'2020-04-12 12:00:00'",
              "unicode": false,
              "value": "2020-04-12 12:00:00",
            },
            New {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'Europe/Berlin'",
                  "unicode": false,
                  "value": "Europe/Berlin",
                },
              ],
              "kind": "new",
              "what": Name {
                "kind": "name",
                "name": "DateTimeZone",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "date_create_from_format",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "interval",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'PT20700M'",
              "unicode": false,
              "value": "PT20700M",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "DateInterval",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "interval",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "sub",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expectEaster",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "interval",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "add",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expectEaster",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'easter '",
              "unicode": false,
              "value": "easter ",
            },
            "right": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'Y-m-d H:i:s'",
                  "unicode": false,
                  "value": "Y-m-d H:i:s",
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "format",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "expectEaster",
                },
              },
            },
            "type": ".",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
