// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #21758 (preg_replace_callback() not working with class methods) 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [],
      "body": Array [
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "s",
                  },
                  "operator": "=",
                  "right": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'preg_replace() is broken'",
                    "unicode": false,
                    "value": "preg_replace() is broken",
                  },
                },
                "kind": "expressionstatement",
              },
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    Call {
                      "arguments": Array [
                        String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'/broken/'",
                          "unicode": false,
                          "value": "/broken/",
                        },
                        Array {
                          "items": Array [
                            Entry {
                              "byRef": true,
                              "key": null,
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "this",
                              },
                            },
                            Entry {
                              "byRef": false,
                              "key": null,
                              "kind": "entry",
                              "unpack": false,
                              "value": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'bar'",
                                "unicode": false,
                                "value": "bar",
                              },
                            },
                          ],
                          "kind": "array",
                          "shortForm": false,
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "s",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "preg_replace_callback",
                        "resolution": "uqn",
                      },
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "var_dump",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "__construct",
          },
          "nullable": false,
          "type": null,
          "visibility": "",
        },
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Return {
                "expr": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'working'",
                  "unicode": false,
                  "value": "working",
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "bar",
          },
          "nullable": false,
          "type": null,
          "visibility": "",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "Foo",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "o",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "Foo",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
