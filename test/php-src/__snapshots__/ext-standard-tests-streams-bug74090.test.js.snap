// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #74090 stream_get_contents maxlength>-1 returns empty string on windows 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "port",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "12327",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "server",
        },
        "operator": "=",
        "right": Boolean {
          "kind": "boolean",
          "raw": "false",
          "value": false,
        },
      },
      "kind": "expressionstatement",
    },
    While {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Post {
              "kind": "post",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "port",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "server",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Encapsed {
                    "kind": "encapsed",
                    "raw": "\\"udp://localhost:$port\\"",
                    "type": "string",
                    "value": Array [
                      EncapsedPart {
                        "curly": false,
                        "expression": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "udp://localhost:",
                          "unicode": false,
                          "value": "udp://localhost:",
                        },
                        "kind": "encapsedpart",
                        "syntax": null,
                      },
                      EncapsedPart {
                        "curly": false,
                        "expression": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "port",
                        },
                        "kind": "encapsedpart",
                        "syntax": "simple",
                      },
                    ],
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "errno",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "errstr",
                  },
                  Name {
                    "kind": "name",
                    "name": "STREAM_SERVER_BIND",
                    "resolution": "uqn",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "stream_socket_server",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "while",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "server",
          },
        },
        "right": Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "port",
          },
          "right": Number {
            "kind": "number",
            "value": "20000",
          },
          "type": "<",
        },
        "type": "&&",
      },
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Boolean {
                  "kind": "boolean",
                  "raw": "false",
                  "value": false,
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Exit {
              "expression": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Cannot create server socket\\"",
                "unicode": false,
                "value": "Cannot create server socket",
              },
              "kind": "exit",
              "useDie": true,
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Variable {
          "curly": false,
          "kind": "variable",
          "name": "server",
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "data",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"1oIBAAABAAAAAAAAB2V4YW1wbGUDb3JnAAABAAE=\\"",
              "unicode": false,
              "value": "1oIBAAABAAAAAAAAB2V4YW1wbGUDb3JnAAABAAE=",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "base64_decode",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "fd",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Encapsed {
              "kind": "encapsed",
              "raw": "\\"udp://localhost:$port\\"",
              "type": "string",
              "value": Array [
                EncapsedPart {
                  "curly": false,
                  "expression": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "udp://localhost:",
                    "unicode": false,
                    "value": "udp://localhost:",
                  },
                  "kind": "encapsedpart",
                  "syntax": null,
                },
                EncapsedPart {
                  "curly": false,
                  "expression": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "port",
                  },
                  "kind": "encapsedpart",
                  "syntax": "simple",
                },
              ],
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "errno",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "errstr",
            },
            Number {
              "kind": "number",
              "value": "0",
            },
            Bin {
              "kind": "bin",
              "left": Name {
                "kind": "name",
                "name": "STREAM_CLIENT_CONNECT",
                "resolution": "uqn",
              },
              "right": Name {
                "kind": "name",
                "name": "STREAM_CLIENT_ASYNC_CONNECT",
                "resolution": "uqn",
              },
              "type": "|",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "stream_socket_client",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "fd",
          },
          Number {
            "kind": "number",
            "value": "0",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "stream_set_blocking",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "fd",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "data",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "stream_socket_sendto",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "server",
          },
          Number {
            "kind": "number",
            "value": "1",
          },
          Number {
            "kind": "number",
            "value": "0",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "peer",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "stream_socket_recvfrom",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "server",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "data",
          },
          Number {
            "kind": "number",
            "value": "0",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "peer",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "stream_socket_sendto",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "ret",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "fd",
            },
            Number {
              "kind": "number",
              "value": "65565",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "stream_get_contents",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "ret",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "strlen",
                "resolution": "uqn",
              },
            },
            "right": Number {
              "kind": "number",
              "value": "0",
            },
            "type": ">",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "fd",
          },
          Name {
            "kind": "name",
            "name": "STREAM_SHUT_RDWR",
            "resolution": "uqn",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "stream_socket_shutdown",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "server",
          },
          Name {
            "kind": "name",
            "name": "STREAM_SHUT_RDWR",
            "resolution": "uqn",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "stream_socket_shutdown",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
