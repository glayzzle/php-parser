// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #55451 (substr_compare with NULL as default length) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"abcde\\"",
                  "unicode": false,
                  "value": "abcde",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"ABCD\\"",
                  "unicode": false,
                  "value": "ABCD",
                },
                Number {
                  "kind": "number",
                  "value": "0",
                },
                NullKeyword {
                  "kind": "nullkeyword",
                  "raw": "NULL",
                },
                Boolean {
                  "kind": "boolean",
                  "raw": "false",
                  "value": false,
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "substr_compare",
                "resolution": "uqn",
              },
            },
            "right": Number {
              "kind": "number",
              "value": "0",
            },
            "type": "!=",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"abcde\\"",
                  "unicode": false,
                  "value": "abcde",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"ABCD\\"",
                  "unicode": false,
                  "value": "ABCD",
                },
                Number {
                  "kind": "number",
                  "value": "0",
                },
                NullKeyword {
                  "kind": "nullkeyword",
                  "raw": "NULL",
                },
                Boolean {
                  "kind": "boolean",
                  "raw": "true",
                  "value": true,
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "substr_compare",
                "resolution": "uqn",
              },
            },
            "right": Number {
              "kind": "number",
              "value": "0",
            },
            "type": "!=",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"abcde\\"",
                  "unicode": false,
                  "value": "abcde",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"ABCDE\\"",
                  "unicode": false,
                  "value": "ABCDE",
                },
                Number {
                  "kind": "number",
                  "value": "0",
                },
                NullKeyword {
                  "kind": "nullkeyword",
                  "raw": "NULL",
                },
                Boolean {
                  "kind": "boolean",
                  "raw": "false",
                  "value": false,
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "substr_compare",
                "resolution": "uqn",
              },
            },
            "right": Number {
              "kind": "number",
              "value": "0",
            },
            "type": "!=",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"abcde\\"",
                  "unicode": false,
                  "value": "abcde",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"ABCDE\\"",
                  "unicode": false,
                  "value": "ABCDE",
                },
                Number {
                  "kind": "number",
                  "value": "0",
                },
                NullKeyword {
                  "kind": "nullkeyword",
                  "raw": "NULL",
                },
                Boolean {
                  "kind": "boolean",
                  "raw": "true",
                  "value": true,
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "substr_compare",
                "resolution": "uqn",
              },
            },
            "right": Number {
              "kind": "number",
              "value": "0",
            },
            "type": "==",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
