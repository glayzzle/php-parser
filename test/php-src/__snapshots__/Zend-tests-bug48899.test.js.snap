// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #48899 (is_callable returns true even if method does not exist in parent class) 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [],
      "body": Array [],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "ParentClass",
      },
    },
    Class {
      "attrGroups": Array [],
      "body": Array [
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    Call {
                      "arguments": Array [
                        Array {
                          "items": Array [
                            Entry {
                              "byRef": false,
                              "key": null,
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "this",
                              },
                            },
                            Entry {
                              "byRef": false,
                              "key": null,
                              "kind": "entry",
                              "unpack": false,
                              "value": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'parent::testIsCallable'",
                                "unicode": false,
                                "value": "parent::testIsCallable",
                              },
                            },
                          ],
                          "kind": "array",
                          "shortForm": false,
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "is_callable",
                        "resolution": "uqn",
                      },
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "var_dump",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "testIsCallable",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    Call {
                      "arguments": Array [
                        Array {
                          "items": Array [
                            Entry {
                              "byRef": false,
                              "key": null,
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "this",
                              },
                            },
                            Entry {
                              "byRef": false,
                              "key": null,
                              "kind": "entry",
                              "unpack": false,
                              "value": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'static::testIsCallable2'",
                                "unicode": false,
                                "value": "static::testIsCallable2",
                              },
                            },
                          ],
                          "kind": "array",
                          "shortForm": false,
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "is_callable",
                        "resolution": "uqn",
                      },
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "var_dump",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "testIsCallable2",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
      ],
      "extends": Name {
        "kind": "name",
        "name": "ParentClass",
        "resolution": "uqn",
      },
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "ChildClass",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "child",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "ChildClass",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "testIsCallable",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "child",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "testIsCallable2",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "child",
          },
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
