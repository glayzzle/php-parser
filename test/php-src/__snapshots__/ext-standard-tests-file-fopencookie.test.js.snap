// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests fopencookie detected and working (or cast mechanism works) 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [],
      "body": Array [
        PropertyStatement {
          "isStatic": false,
          "kind": "propertystatement",
          "properties": Array [
            Property {
              "attrGroups": Array [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "position",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": Number {
                "kind": "number",
                "value": "0",
              },
            },
          ],
          "visibility": "public",
        },
        PropertyStatement {
          "isStatic": false,
          "kind": "propertystatement",
          "properties": Array [
            Property {
              "attrGroups": Array [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "data",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"If you can read this, it worked\\"",
                "unicode": false,
                "value": "If you can read this, it worked",
              },
            },
          ],
          "visibility": "public",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "path",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "mode",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "options",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
            Parameter {
              "attrGroups": Array [],
              "byref": true,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "opened_path",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Return {
                "expr": Boolean {
                  "kind": "boolean",
                  "raw": "true",
                  "value": true,
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "stream_open",
          },
          "nullable": false,
          "type": null,
          "visibility": "",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "count",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "ret",
                  },
                  "operator": "=",
                  "right": Call {
                    "arguments": Array [
                      PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "data",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "this",
                        },
                      },
                      PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "position",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "this",
                        },
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "count",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "substr",
                      "resolution": "uqn",
                    },
                  },
                },
                "kind": "expressionstatement",
              },
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "position",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "this",
                    },
                  },
                  "operator": "+=",
                  "right": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "ret",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "strlen",
                      "resolution": "uqn",
                    },
                  },
                },
                "kind": "expressionstatement",
              },
              Return {
                "expr": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "ret",
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "stream_read",
          },
          "nullable": false,
          "type": null,
          "visibility": "",
        },
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Return {
                "expr": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "position",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "this",
                  },
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "stream_tell",
          },
          "nullable": false,
          "type": null,
          "visibility": "",
        },
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Return {
                "expr": Bin {
                  "kind": "bin",
                  "left": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "position",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "this",
                    },
                  },
                  "right": Call {
                    "arguments": Array [
                      PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "data",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "this",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "strlen",
                      "resolution": "uqn",
                    },
                  },
                  "type": ">=",
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "stream_eof",
          },
          "nullable": false,
          "type": null,
          "visibility": "",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "offset",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "whence",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Switch {
                "body": Block {
                  "children": Array [
                    Case {
                      "body": Block {
                        "children": Array [
                          If {
                            "alternate": Block {
                              "children": Array [
                                Return {
                                  "expr": Boolean {
                                    "kind": "boolean",
                                    "raw": "false",
                                    "value": false,
                                  },
                                  "kind": "return",
                                },
                              ],
                              "kind": "block",
                            },
                            "body": Block {
                              "children": Array [
                                ExpressionStatement {
                                  "expression": Assign {
                                    "kind": "assign",
                                    "left": PropertyLookup {
                                      "kind": "propertylookup",
                                      "offset": Identifier {
                                        "kind": "identifier",
                                        "name": "position",
                                      },
                                      "what": Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "this",
                                      },
                                    },
                                    "operator": "=",
                                    "right": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "offset",
                                    },
                                  },
                                  "kind": "expressionstatement",
                                },
                                Return {
                                  "expr": Boolean {
                                    "kind": "boolean",
                                    "raw": "true",
                                    "value": true,
                                  },
                                  "kind": "return",
                                },
                              ],
                              "kind": "block",
                            },
                            "kind": "if",
                            "shortForm": false,
                            "test": Bin {
                              "kind": "bin",
                              "left": Bin {
                                "kind": "bin",
                                "left": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "offset",
                                },
                                "right": Call {
                                  "arguments": Array [
                                    PropertyLookup {
                                      "kind": "propertylookup",
                                      "offset": Identifier {
                                        "kind": "identifier",
                                        "name": "data",
                                      },
                                      "what": Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "this",
                                      },
                                    },
                                  ],
                                  "kind": "call",
                                  "what": Name {
                                    "kind": "name",
                                    "name": "strlen",
                                    "resolution": "uqn",
                                  },
                                },
                                "type": "<",
                              },
                              "right": Bin {
                                "kind": "bin",
                                "left": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "offset",
                                },
                                "right": Number {
                                  "kind": "number",
                                  "value": "0",
                                },
                                "type": ">=",
                              },
                              "type": "&&",
                            },
                          },
                          Break {
                            "kind": "break",
                            "level": null,
                          },
                        ],
                        "kind": "block",
                      },
                      "kind": "case",
                      "test": Name {
                        "kind": "name",
                        "name": "SEEK_SET",
                        "resolution": "uqn",
                      },
                    },
                    Case {
                      "body": Block {
                        "children": Array [
                          If {
                            "alternate": Block {
                              "children": Array [
                                Return {
                                  "expr": Boolean {
                                    "kind": "boolean",
                                    "raw": "false",
                                    "value": false,
                                  },
                                  "kind": "return",
                                },
                              ],
                              "kind": "block",
                            },
                            "body": Block {
                              "children": Array [
                                ExpressionStatement {
                                  "expression": Assign {
                                    "kind": "assign",
                                    "left": PropertyLookup {
                                      "kind": "propertylookup",
                                      "offset": Identifier {
                                        "kind": "identifier",
                                        "name": "position",
                                      },
                                      "what": Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "this",
                                      },
                                    },
                                    "operator": "+=",
                                    "right": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "offset",
                                    },
                                  },
                                  "kind": "expressionstatement",
                                },
                                Return {
                                  "expr": Boolean {
                                    "kind": "boolean",
                                    "raw": "true",
                                    "value": true,
                                  },
                                  "kind": "return",
                                },
                              ],
                              "kind": "block",
                            },
                            "kind": "if",
                            "shortForm": false,
                            "test": Bin {
                              "kind": "bin",
                              "left": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "offset",
                              },
                              "right": Number {
                                "kind": "number",
                                "value": "0",
                              },
                              "type": ">=",
                            },
                          },
                          Break {
                            "kind": "break",
                            "level": null,
                          },
                        ],
                        "kind": "block",
                      },
                      "kind": "case",
                      "test": Name {
                        "kind": "name",
                        "name": "SEEK_CUR",
                        "resolution": "uqn",
                      },
                    },
                    Case {
                      "body": Block {
                        "children": Array [
                          If {
                            "alternate": Block {
                              "children": Array [
                                Return {
                                  "expr": Boolean {
                                    "kind": "boolean",
                                    "raw": "false",
                                    "value": false,
                                  },
                                  "kind": "return",
                                },
                              ],
                              "kind": "block",
                            },
                            "body": Block {
                              "children": Array [
                                ExpressionStatement {
                                  "expression": Assign {
                                    "kind": "assign",
                                    "left": PropertyLookup {
                                      "kind": "propertylookup",
                                      "offset": Identifier {
                                        "kind": "identifier",
                                        "name": "position",
                                      },
                                      "what": Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "this",
                                      },
                                    },
                                    "operator": "=",
                                    "right": Bin {
                                      "kind": "bin",
                                      "left": Call {
                                        "arguments": Array [
                                          PropertyLookup {
                                            "kind": "propertylookup",
                                            "offset": Identifier {
                                              "kind": "identifier",
                                              "name": "data",
                                            },
                                            "what": Variable {
                                              "curly": false,
                                              "kind": "variable",
                                              "name": "this",
                                            },
                                          },
                                        ],
                                        "kind": "call",
                                        "what": Name {
                                          "kind": "name",
                                          "name": "strlen",
                                          "resolution": "uqn",
                                        },
                                      },
                                      "right": Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "offset",
                                      },
                                      "type": "+",
                                    },
                                  },
                                  "kind": "expressionstatement",
                                },
                                Return {
                                  "expr": Boolean {
                                    "kind": "boolean",
                                    "raw": "true",
                                    "value": true,
                                  },
                                  "kind": "return",
                                },
                              ],
                              "kind": "block",
                            },
                            "kind": "if",
                            "shortForm": false,
                            "test": Bin {
                              "kind": "bin",
                              "left": Bin {
                                "kind": "bin",
                                "left": Call {
                                  "arguments": Array [
                                    PropertyLookup {
                                      "kind": "propertylookup",
                                      "offset": Identifier {
                                        "kind": "identifier",
                                        "name": "data",
                                      },
                                      "what": Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "this",
                                      },
                                    },
                                  ],
                                  "kind": "call",
                                  "what": Name {
                                    "kind": "name",
                                    "name": "strlen",
                                    "resolution": "uqn",
                                  },
                                },
                                "right": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "offset",
                                },
                                "type": "+",
                              },
                              "right": Number {
                                "kind": "number",
                                "value": "0",
                              },
                              "type": ">=",
                            },
                          },
                          Break {
                            "kind": "break",
                            "level": null,
                          },
                        ],
                        "kind": "block",
                      },
                      "kind": "case",
                      "test": Name {
                        "kind": "name",
                        "name": "SEEK_END",
                        "resolution": "uqn",
                      },
                    },
                    Case {
                      "body": Block {
                        "children": Array [
                          Return {
                            "expr": Boolean {
                              "kind": "boolean",
                              "raw": "false",
                              "value": false,
                            },
                            "kind": "return",
                          },
                        ],
                        "kind": "block",
                      },
                      "kind": "case",
                      "test": null,
                    },
                  ],
                  "kind": "block",
                },
                "kind": "switch",
                "shortForm": false,
                "test": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "whence",
                },
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "stream_seek",
          },
          "nullable": false,
          "type": null,
          "visibility": "",
        },
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Return {
                "expr": Array {
                  "items": Array [
                    Entry {
                      "byRef": false,
                      "key": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'size'",
                        "unicode": false,
                        "value": "size",
                      },
                      "kind": "entry",
                      "unpack": false,
                      "value": Call {
                        "arguments": Array [
                          PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "data",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "this",
                            },
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "strlen",
                          "resolution": "uqn",
                        },
                      },
                    },
                  ],
                  "kind": "array",
                  "shortForm": false,
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "stream_stat",
          },
          "nullable": false,
          "type": null,
          "visibility": "",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "option",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "arg1",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "arg2",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Return {
                "expr": Boolean {
                  "kind": "boolean",
                  "raw": "false",
                  "value": false,
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "stream_set_option",
          },
          "nullable": false,
          "type": null,
          "visibility": "",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "userstream",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"cookietest\\"",
            "unicode": false,
            "value": "cookietest",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"userstream\\"",
            "unicode": false,
            "value": "userstream",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "stream_wrapper_register",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": false,
        "target": String {
          "isDoubleQuote": true,
          "kind": "string",
          "parenthesizedExpression": true,
          "raw": "\\"cookietest://foo\\"",
          "unicode": false,
          "value": "cookietest://foo",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
