// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #69864 (Segfault in preg_replace_callback) 1`] = `
Program {
  "children": Array [
    ConstantStatement {
      "constants": Array [
        Constant {
          "kind": "constant",
          "name": Identifier {
            "kind": "identifier",
            "name": "PREG_CACHE_SIZE",
          },
          "value": Number {
            "kind": "number",
            "value": "4096",
          },
        },
      ],
      "kind": "constantstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/a/'",
                "unicode": false,
                "value": "/a/",
              },
              Closure {
                "arguments": Array [
                  Parameter {
                    "attrGroups": Array [],
                    "byref": false,
                    "flags": 0,
                    "kind": "parameter",
                    "name": Identifier {
                      "kind": "identifier",
                      "name": "m",
                    },
                    "nullable": false,
                    "readonly": false,
                    "type": null,
                    "value": null,
                    "variadic": false,
                  },
                ],
                "attrGroups": Array [],
                "body": Block {
                  "children": Array [
                    For {
                      "body": Block {
                        "children": Array [
                          ExpressionStatement {
                            "expression": Call {
                              "arguments": Array [
                                Bin {
                                  "kind": "bin",
                                  "left": Bin {
                                    "kind": "bin",
                                    "left": String {
                                      "isDoubleQuote": false,
                                      "kind": "string",
                                      "raw": "'/foo'",
                                      "unicode": false,
                                      "value": "/foo",
                                    },
                                    "right": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "i",
                                    },
                                    "type": ".",
                                  },
                                  "right": String {
                                    "isDoubleQuote": false,
                                    "kind": "string",
                                    "raw": "'bar/'",
                                    "unicode": false,
                                    "value": "bar/",
                                  },
                                  "type": ".",
                                },
                                Bin {
                                  "kind": "bin",
                                  "left": Bin {
                                    "kind": "bin",
                                    "left": String {
                                      "isDoubleQuote": false,
                                      "kind": "string",
                                      "raw": "'???foo'",
                                      "unicode": false,
                                      "value": "???foo",
                                    },
                                    "right": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "i",
                                    },
                                    "type": ".",
                                  },
                                  "right": String {
                                    "isDoubleQuote": false,
                                    "kind": "string",
                                    "raw": "'bar???'",
                                    "unicode": false,
                                    "value": "bar???",
                                  },
                                  "type": ".",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "preg_match",
                                "resolution": "uqn",
                              },
                            },
                            "kind": "expressionstatement",
                          },
                        ],
                        "kind": "block",
                      },
                      "increment": Array [
                        Post {
                          "kind": "post",
                          "type": "+",
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "i",
                          },
                        },
                      ],
                      "init": Array [
                        Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "i",
                          },
                          "operator": "=",
                          "right": Number {
                            "kind": "number",
                            "value": "0",
                          },
                        },
                      ],
                      "kind": "for",
                      "shortForm": false,
                      "test": Array [
                        Bin {
                          "kind": "bin",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "i",
                          },
                          "right": Name {
                            "kind": "name",
                            "name": "PREG_CACHE_SIZE",
                            "resolution": "uqn",
                          },
                          "type": "<",
                        },
                      ],
                    },
                    Return {
                      "expr": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'b'",
                        "unicode": false,
                        "value": "b",
                      },
                      "kind": "return",
                    },
                  ],
                  "kind": "block",
                },
                "byref": false,
                "isStatic": false,
                "kind": "closure",
                "nullable": false,
                "type": null,
                "uses": Array [],
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'aa'",
                "unicode": false,
                "value": "aa",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "preg_replace_callback",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/a/'",
                "unicode": false,
                "value": "/a/",
              },
              Closure {
                "arguments": Array [
                  Parameter {
                    "attrGroups": Array [],
                    "byref": false,
                    "flags": 0,
                    "kind": "parameter",
                    "name": Identifier {
                      "kind": "identifier",
                      "name": "m",
                    },
                    "nullable": false,
                    "readonly": false,
                    "type": null,
                    "value": null,
                    "variadic": false,
                  },
                ],
                "attrGroups": Array [],
                "body": Block {
                  "children": Array [
                    For {
                      "body": Block {
                        "children": Array [
                          ExpressionStatement {
                            "expression": Call {
                              "arguments": Array [
                                Bin {
                                  "kind": "bin",
                                  "left": Bin {
                                    "kind": "bin",
                                    "left": String {
                                      "isDoubleQuote": false,
                                      "kind": "string",
                                      "raw": "'/foo'",
                                      "unicode": false,
                                      "value": "/foo",
                                    },
                                    "right": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "i",
                                    },
                                    "type": ".",
                                  },
                                  "right": String {
                                    "isDoubleQuote": false,
                                    "kind": "string",
                                    "raw": "'bar/'",
                                    "unicode": false,
                                    "value": "bar/",
                                  },
                                  "type": ".",
                                },
                                String {
                                  "isDoubleQuote": false,
                                  "kind": "string",
                                  "raw": "'baz'",
                                  "unicode": false,
                                  "value": "baz",
                                },
                                Bin {
                                  "kind": "bin",
                                  "left": Bin {
                                    "kind": "bin",
                                    "left": String {
                                      "isDoubleQuote": false,
                                      "kind": "string",
                                      "raw": "'???foo'",
                                      "unicode": false,
                                      "value": "???foo",
                                    },
                                    "right": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "i",
                                    },
                                    "type": ".",
                                  },
                                  "right": String {
                                    "isDoubleQuote": false,
                                    "kind": "string",
                                    "raw": "'bar???'",
                                    "unicode": false,
                                    "value": "bar???",
                                  },
                                  "type": ".",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "preg_replace",
                                "resolution": "uqn",
                              },
                            },
                            "kind": "expressionstatement",
                          },
                        ],
                        "kind": "block",
                      },
                      "increment": Array [
                        Post {
                          "kind": "post",
                          "type": "+",
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "i",
                          },
                        },
                      ],
                      "init": Array [
                        Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "i",
                          },
                          "operator": "=",
                          "right": Number {
                            "kind": "number",
                            "value": "0",
                          },
                        },
                      ],
                      "kind": "for",
                      "shortForm": false,
                      "test": Array [
                        Bin {
                          "kind": "bin",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "i",
                          },
                          "right": Name {
                            "kind": "name",
                            "name": "PREG_CACHE_SIZE",
                            "resolution": "uqn",
                          },
                          "type": "<",
                        },
                      ],
                    },
                    Return {
                      "expr": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'b'",
                        "unicode": false,
                        "value": "b",
                      },
                      "kind": "return",
                    },
                  ],
                  "kind": "block",
                },
                "byref": false,
                "isStatic": false,
                "kind": "closure",
                "nullable": false,
                "type": null,
                "uses": Array [],
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'aa'",
                "unicode": false,
                "value": "aa",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "preg_replace_callback",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/a/'",
                "unicode": false,
                "value": "/a/",
              },
              Closure {
                "arguments": Array [
                  Parameter {
                    "attrGroups": Array [],
                    "byref": false,
                    "flags": 0,
                    "kind": "parameter",
                    "name": Identifier {
                      "kind": "identifier",
                      "name": "m",
                    },
                    "nullable": false,
                    "readonly": false,
                    "type": null,
                    "value": null,
                    "variadic": false,
                  },
                ],
                "attrGroups": Array [],
                "body": Block {
                  "children": Array [
                    For {
                      "body": Block {
                        "children": Array [
                          ExpressionStatement {
                            "expression": Call {
                              "arguments": Array [
                                Bin {
                                  "kind": "bin",
                                  "left": Bin {
                                    "kind": "bin",
                                    "left": String {
                                      "isDoubleQuote": false,
                                      "kind": "string",
                                      "raw": "'/foo'",
                                      "unicode": false,
                                      "value": "/foo",
                                    },
                                    "right": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "i",
                                    },
                                    "type": ".",
                                  },
                                  "right": String {
                                    "isDoubleQuote": false,
                                    "kind": "string",
                                    "raw": "'bar/'",
                                    "unicode": false,
                                    "value": "bar/",
                                  },
                                  "type": ".",
                                },
                                Bin {
                                  "kind": "bin",
                                  "left": Bin {
                                    "kind": "bin",
                                    "left": String {
                                      "isDoubleQuote": false,
                                      "kind": "string",
                                      "raw": "'???foo'",
                                      "unicode": false,
                                      "value": "???foo",
                                    },
                                    "right": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "i",
                                    },
                                    "type": ".",
                                  },
                                  "right": String {
                                    "isDoubleQuote": false,
                                    "kind": "string",
                                    "raw": "'bar???'",
                                    "unicode": false,
                                    "value": "bar???",
                                  },
                                  "type": ".",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "preg_split",
                                "resolution": "uqn",
                              },
                            },
                            "kind": "expressionstatement",
                          },
                        ],
                        "kind": "block",
                      },
                      "increment": Array [
                        Post {
                          "kind": "post",
                          "type": "+",
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "i",
                          },
                        },
                      ],
                      "init": Array [
                        Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "i",
                          },
                          "operator": "=",
                          "right": Number {
                            "kind": "number",
                            "value": "0",
                          },
                        },
                      ],
                      "kind": "for",
                      "shortForm": false,
                      "test": Array [
                        Bin {
                          "kind": "bin",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "i",
                          },
                          "right": Name {
                            "kind": "name",
                            "name": "PREG_CACHE_SIZE",
                            "resolution": "uqn",
                          },
                          "type": "<",
                        },
                      ],
                    },
                    Return {
                      "expr": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'b'",
                        "unicode": false,
                        "value": "b",
                      },
                      "kind": "return",
                    },
                  ],
                  "kind": "block",
                },
                "byref": false,
                "isStatic": false,
                "kind": "closure",
                "nullable": false,
                "type": null,
                "uses": Array [],
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'aa'",
                "unicode": false,
                "value": "aa",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "preg_replace_callback",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/a/'",
                "unicode": false,
                "value": "/a/",
              },
              Closure {
                "arguments": Array [
                  Parameter {
                    "attrGroups": Array [],
                    "byref": false,
                    "flags": 0,
                    "kind": "parameter",
                    "name": Identifier {
                      "kind": "identifier",
                      "name": "m",
                    },
                    "nullable": false,
                    "readonly": false,
                    "type": null,
                    "value": null,
                    "variadic": false,
                  },
                ],
                "attrGroups": Array [],
                "body": Block {
                  "children": Array [
                    For {
                      "body": Block {
                        "children": Array [
                          ExpressionStatement {
                            "expression": Call {
                              "arguments": Array [
                                Bin {
                                  "kind": "bin",
                                  "left": Bin {
                                    "kind": "bin",
                                    "left": String {
                                      "isDoubleQuote": false,
                                      "kind": "string",
                                      "raw": "'/foo'",
                                      "unicode": false,
                                      "value": "/foo",
                                    },
                                    "right": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "i",
                                    },
                                    "type": ".",
                                  },
                                  "right": String {
                                    "isDoubleQuote": false,
                                    "kind": "string",
                                    "raw": "'bar/'",
                                    "unicode": false,
                                    "value": "bar/",
                                  },
                                  "type": ".",
                                },
                                Array {
                                  "items": Array [
                                    Entry {
                                      "byRef": false,
                                      "key": null,
                                      "kind": "entry",
                                      "unpack": false,
                                      "value": Bin {
                                        "kind": "bin",
                                        "left": Bin {
                                          "kind": "bin",
                                          "left": String {
                                            "isDoubleQuote": false,
                                            "kind": "string",
                                            "raw": "'???foo'",
                                            "unicode": false,
                                            "value": "???foo",
                                          },
                                          "right": Variable {
                                            "curly": false,
                                            "kind": "variable",
                                            "name": "i",
                                          },
                                          "type": ".",
                                        },
                                        "right": String {
                                          "isDoubleQuote": false,
                                          "kind": "string",
                                          "raw": "'bar???'",
                                          "unicode": false,
                                          "value": "bar???",
                                        },
                                        "type": ".",
                                      },
                                    },
                                  ],
                                  "kind": "array",
                                  "shortForm": true,
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "preg_grep",
                                "resolution": "uqn",
                              },
                            },
                            "kind": "expressionstatement",
                          },
                        ],
                        "kind": "block",
                      },
                      "increment": Array [
                        Post {
                          "kind": "post",
                          "type": "+",
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "i",
                          },
                        },
                      ],
                      "init": Array [
                        Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "i",
                          },
                          "operator": "=",
                          "right": Number {
                            "kind": "number",
                            "value": "0",
                          },
                        },
                      ],
                      "kind": "for",
                      "shortForm": false,
                      "test": Array [
                        Bin {
                          "kind": "bin",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "i",
                          },
                          "right": Name {
                            "kind": "name",
                            "name": "PREG_CACHE_SIZE",
                            "resolution": "uqn",
                          },
                          "type": "<",
                        },
                      ],
                    },
                    Return {
                      "expr": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'b'",
                        "unicode": false,
                        "value": "b",
                      },
                      "kind": "return",
                    },
                  ],
                  "kind": "block",
                },
                "byref": false,
                "isStatic": false,
                "kind": "closure",
                "nullable": false,
                "type": null,
                "uses": Array [],
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'aa'",
                "unicode": false,
                "value": "aa",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "preg_replace_callback",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
