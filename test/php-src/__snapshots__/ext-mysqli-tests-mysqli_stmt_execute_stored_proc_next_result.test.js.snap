// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests mysqli_stmt_execute() - SP, next result 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": true,
        "target": String {
          "isDoubleQuote": false,
          "kind": "string",
          "parenthesizedExpression": true,
          "raw": "'connect.inc'",
          "unicode": false,
          "value": "connect.inc",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"[001] Cannot connect to the server using host=%s, user=%s, passwd=***, dbname=%s, port=%s, socket=%s\\\\n\\"",
                  "unicode": false,
                  "value": "[001] Cannot connect to the server using host=%s, user=%s, passwd=***, dbname=%s, port=%s, socket=%s
",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "host",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "user",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "port",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "socket",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "printf",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          "operator": "=",
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "host",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "user",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "passwd",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "db",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "port",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "socket",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "my_mysqli_connect",
              "resolution": "uqn",
            },
          },
        },
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[003] [%d] %s.\\\\n\\"",
              "unicode": false,
              "value": "[003] [%d] %s.
",
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "link",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'DROP PROCEDURE IF EXISTS p'",
              "unicode": false,
              "value": "DROP PROCEDURE IF EXISTS p",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_query",
            "resolution": "uqn",
          },
        },
      },
    },
    If {
      "alternate": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"[004] Cannot create SP, [%d] %s.\\\\n\\"",
                  "unicode": false,
                  "value": "[004] Cannot create SP, [%d] %s.
",
                },
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "link",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_errno",
                    "resolution": "uqn",
                  },
                },
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "link",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_error",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "printf",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[005] Cannot prepare CALL, [%d] %s\\\\n\\"",
                    "unicode": false,
                    "value": "[005] Cannot prepare CALL, [%d] %s
",
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "link",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_errno",
                      "resolution": "uqn",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "link",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_error",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "link",
                    },
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'CALL p(?)'",
                      "unicode": false,
                      "value": "CALL p(?)",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_prepare",
                    "resolution": "uqn",
                  },
                },
              },
            },
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "version",
              },
              "operator": "=",
              "right": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'myversion'",
                "unicode": false,
                "value": "myversion",
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[006] Cannot bind input parameter, [%d] %s\\\\n\\"",
                    "unicode": false,
                    "value": "[006] Cannot bind input parameter, [%d] %s
",
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "stmt",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_stmt_errno",
                      "resolution": "uqn",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "stmt",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_stmt_error",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'s'",
                    "unicode": false,
                    "value": "s",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "version",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_stmt_bind_param",
                  "resolution": "uqn",
                },
              },
            },
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[007] Cannot execute CALL, [%d] %s\\\\n\\"",
                    "unicode": false,
                    "value": "[007] Cannot execute CALL, [%d] %s
",
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "stmt",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_stmt_errno",
                      "resolution": "uqn",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "stmt",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_stmt_error",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_stmt_execute",
                  "resolution": "uqn",
                },
              },
            },
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "version",
              },
              "operator": "=",
              "right": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'unknown'",
                "unicode": false,
                "value": "unknown",
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[008] [%d] %s\\\\n\\"",
                    "unicode": false,
                    "value": "[008] [%d] %s
",
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "stmt",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_stmt_errno",
                      "resolution": "uqn",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "stmt",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_stmt_error",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Unary {
                "kind": "unary",
                "type": "!",
                "what": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "stmt",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "version",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_stmt_bind_result",
                    "resolution": "uqn",
                  },
                },
              },
              "right": Unary {
                "kind": "unary",
                "type": "!",
                "what": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "stmt",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_stmt_fetch",
                    "resolution": "uqn",
                  },
                },
              },
              "type": "||",
            },
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[009] Results seem wrong, got %s, [%d] %s\\\\n\\"",
                    "unicode": false,
                    "value": "[009] Results seem wrong, got %s, [%d] %s
",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "version",
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "stmt",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_stmt_errno",
                      "resolution": "uqn",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "stmt",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_stmt_error",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "version",
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"myversion\\"",
                "unicode": false,
                "value": "myversion",
              },
              "type": "!==",
            },
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_free_result",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"[010] More results: %s\\\\n\\"",
                  "unicode": false,
                  "value": "[010] More results: %s
",
                },
                RetIf {
                  "falseExpr": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"no\\"",
                    "unicode": false,
                    "value": "no",
                  },
                  "kind": "retif",
                  "test": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "link",
                      },
                    ],
                    "kind": "call",
                    "parenthesizedExpression": true,
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_more_results",
                      "resolution": "uqn",
                    },
                  },
                  "trueExpr": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"yes\\"",
                    "unicode": false,
                    "value": "yes",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "printf",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"[011] Next result: %s\\\\n\\"",
                  "unicode": false,
                  "value": "[011] Next result: %s
",
                },
                RetIf {
                  "falseExpr": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"no\\"",
                    "unicode": false,
                    "value": "no",
                  },
                  "kind": "retif",
                  "test": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "link",
                      },
                    ],
                    "kind": "call",
                    "parenthesizedExpression": true,
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_next_result",
                      "resolution": "uqn",
                    },
                  },
                  "trueExpr": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"yes\\"",
                    "unicode": false,
                    "value": "yes",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "printf",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[012] Cannot close statement, [%d] %s\\\\n\\"",
                    "unicode": false,
                    "value": "[012] Cannot close statement, [%d] %s
",
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "stmt",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_stmt_errno",
                      "resolution": "uqn",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "stmt",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_stmt_error",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_stmt_close",
                  "resolution": "uqn",
                },
              },
            },
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[013] [%d] %s\\\\n\\"",
                    "unicode": false,
                    "value": "[013] [%d] %s
",
                  },
                  PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "errno",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "link",
                    },
                  },
                  PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "error",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "link",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"SELECT 1\\"",
                    "unicode": false,
                    "value": "SELECT 1",
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "query",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "link",
                  },
                },
              },
            },
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'CREATE PROCEDURE p(IN ver_in VARCHAR(25)) BEGIN SELECT ver_in AS _ver_out; END;'",
            "unicode": false,
            "value": "CREATE PROCEDURE p(IN ver_in VARCHAR(25)) BEGIN SELECT ver_in AS _ver_out; END;",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_real_query",
          "resolution": "uqn",
        },
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[014] [%d] %s.\\\\n\\"",
              "unicode": false,
              "value": "[014] [%d] %s.
",
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "link",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'DROP PROCEDURE IF EXISTS p'",
              "unicode": false,
              "value": "DROP PROCEDURE IF EXISTS p",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_query",
            "resolution": "uqn",
          },
        },
      },
    },
    If {
      "alternate": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"[025] Cannot create SP, [%d] %s.\\\\n\\"",
                  "unicode": false,
                  "value": "[025] Cannot create SP, [%d] %s.
",
                },
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "link",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_errno",
                    "resolution": "uqn",
                  },
                },
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "link",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_error",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "printf",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[015] Cannot prepare CALL, [%d] %s\\\\n\\"",
                    "unicode": false,
                    "value": "[015] Cannot prepare CALL, [%d] %s
",
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "link",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_errno",
                      "resolution": "uqn",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "link",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_error",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "link",
                    },
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'CALL p(?)'",
                      "unicode": false,
                      "value": "CALL p(?)",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_prepare",
                    "resolution": "uqn",
                  },
                },
              },
            },
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "version",
              },
              "operator": "=",
              "right": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'myversion'",
                "unicode": false,
                "value": "myversion",
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[016] Cannot bind input parameter, [%d] %s\\\\n\\"",
                    "unicode": false,
                    "value": "[016] Cannot bind input parameter, [%d] %s
",
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "stmt",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_stmt_errno",
                      "resolution": "uqn",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "stmt",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_stmt_error",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'s'",
                    "unicode": false,
                    "value": "s",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "version",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_stmt_bind_param",
                  "resolution": "uqn",
                },
              },
            },
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[017] Cannot execute CALL, [%d] %s\\\\n\\"",
                    "unicode": false,
                    "value": "[017] Cannot execute CALL, [%d] %s
",
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "stmt",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_stmt_errno",
                      "resolution": "uqn",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "stmt",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_stmt_error",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_stmt_execute",
                  "resolution": "uqn",
                },
              },
            },
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "version",
              },
              "operator": "=",
              "right": NullKeyword {
                "kind": "nullkeyword",
                "raw": "NULL",
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[018] [%d] %s\\\\n\\"",
                    "unicode": false,
                    "value": "[018] [%d] %s
",
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "stmt",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_stmt_errno",
                      "resolution": "uqn",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "stmt",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_stmt_error",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Unary {
                "kind": "unary",
                "type": "!",
                "what": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "stmt",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "version",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_stmt_bind_result",
                    "resolution": "uqn",
                  },
                },
              },
              "right": Unary {
                "kind": "unary",
                "type": "!",
                "what": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "stmt",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_stmt_fetch",
                    "resolution": "uqn",
                  },
                },
              },
              "type": "||",
            },
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[019] Results seem wrong, got %s, [%d] %s\\\\n\\"",
                    "unicode": false,
                    "value": "[019] Results seem wrong, got %s, [%d] %s
",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "version",
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "stmt",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_stmt_errno",
                      "resolution": "uqn",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "stmt",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_stmt_error",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "version",
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"myversion\\"",
                "unicode": false,
                "value": "myversion",
              },
              "type": "!==",
            },
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[020] [%d] %s\\\\n\\"",
                    "unicode": false,
                    "value": "[020] [%d] %s
",
                  },
                  PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "errno",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "link",
                    },
                  },
                  PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "error",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "link",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Unary {
                "kind": "unary",
                "type": "!",
                "what": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "link",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_more_results",
                    "resolution": "uqn",
                  },
                },
              },
              "right": Unary {
                "kind": "unary",
                "type": "!",
                "what": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "link",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_next_result",
                    "resolution": "uqn",
                  },
                },
              },
              "type": "||",
            },
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "more",
              },
              "operator": "=",
              "right": NullKeyword {
                "kind": "nullkeyword",
                "raw": "NULL",
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[021] [%d] %s\\\\n\\"",
                    "unicode": false,
                    "value": "[021] [%d] %s
",
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "stmt",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_stmt_errno",
                      "resolution": "uqn",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "stmt",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_stmt_error",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Unary {
                "kind": "unary",
                "type": "!",
                "what": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "stmt",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "more",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_stmt_bind_result",
                    "resolution": "uqn",
                  },
                },
              },
              "right": Unary {
                "kind": "unary",
                "type": "!",
                "what": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "stmt",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_stmt_fetch",
                    "resolution": "uqn",
                  },
                },
              },
              "type": "||",
            },
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[022] Results seem wrong, got %s, [%d] %s\\\\n\\"",
                    "unicode": false,
                    "value": "[022] Results seem wrong, got %s, [%d] %s
",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "more",
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "stmt",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_stmt_errno",
                      "resolution": "uqn",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "stmt",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_stmt_error",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "more",
              },
              "right": Number {
                "kind": "number",
                "value": "1",
              },
              "type": "!==",
            },
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[023] Cannot close statement, [%d] %s\\\\n\\"",
                    "unicode": false,
                    "value": "[023] Cannot close statement, [%d] %s
",
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "stmt",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_stmt_errno",
                      "resolution": "uqn",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "stmt",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_stmt_error",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_stmt_close",
                  "resolution": "uqn",
                },
              },
            },
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[024] [%d] %s\\\\n\\"",
                    "unicode": false,
                    "value": "[024] [%d] %s
",
                  },
                  PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "errno",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "link",
                    },
                  },
                  PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "error",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "link",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"SELECT 1\\"",
                    "unicode": false,
                    "value": "SELECT 1",
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "query",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "link",
                  },
                },
              },
            },
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'CREATE PROCEDURE p(IN ver_in VARCHAR(25)) BEGIN SELECT ver_in AS _ver_out; SELECT 1 AS _more; END;'",
            "unicode": false,
            "value": "CREATE PROCEDURE p(IN ver_in VARCHAR(25)) BEGIN SELECT ver_in AS _ver_out; SELECT 1 AS _more; END;",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_real_query",
          "resolution": "uqn",
        },
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_close",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"done!\\"",
          "unicode": false,
          "value": "done!",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
