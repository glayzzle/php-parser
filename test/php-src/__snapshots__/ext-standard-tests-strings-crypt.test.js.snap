// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests crypt() function 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "str",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'rasmuslerdorf'",
          "unicode": false,
          "value": "rasmuslerdorf",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "salt1",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'rl'",
          "unicode": false,
          "value": "rl",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res_1",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'rl.3StKT.4T8M'",
          "unicode": false,
          "value": "rl.3StKT.4T8M",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "salt2",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'_J9..rasm'",
          "unicode": false,
          "value": "_J9..rasm",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res_2",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'_J9..rasmBYk8r9AiWNc'",
          "unicode": false,
          "value": "_J9..rasmBYk8r9AiWNc",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "salt3",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'$1$rasmusle$'",
          "unicode": false,
          "value": "$1$rasmusle$",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res_3",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'$1$rasmusle$rISCgZzpwk3UhDidwXvin0'",
          "unicode": false,
          "value": "$1$rasmusle$rISCgZzpwk3UhDidwXvin0",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "salt4",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'$2a$07$rasmuslerd............'",
          "unicode": false,
          "value": "$2a$07$rasmuslerd............",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res_4",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'$2a$07$rasmuslerd............nIdrcHdxcUxWomQX9j6kvERCFjTg7Ra'",
          "unicode": false,
          "value": "$2a$07$rasmuslerd............nIdrcHdxcUxWomQX9j6kvERCFjTg7Ra",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'STD'",
            "unicode": false,
            "value": "STD",
          },
          "kind": "retif",
          "test": Name {
            "kind": "name",
            "name": "CRYPT_STD_DES",
            "parenthesizedExpression": true,
            "resolution": "uqn",
          },
          "trueExpr": RetIf {
            "falseExpr": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'STD - ERROR'",
              "unicode": false,
              "value": "STD - ERROR",
            },
            "kind": "retif",
            "parenthesizedExpression": true,
            "test": Bin {
              "kind": "bin",
              "left": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "str",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "salt1",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "crypt",
                  "resolution": "uqn",
                },
              },
              "parenthesizedExpression": true,
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "res_1",
              },
              "type": "===",
            },
            "trueExpr": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'STD'",
              "unicode": false,
              "value": "STD",
            },
          },
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'EXT'",
            "unicode": false,
            "value": "EXT",
          },
          "kind": "retif",
          "test": Name {
            "kind": "name",
            "name": "CRYPT_EXT_DES",
            "parenthesizedExpression": true,
            "resolution": "uqn",
          },
          "trueExpr": RetIf {
            "falseExpr": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'EXT - ERROR'",
              "unicode": false,
              "value": "EXT - ERROR",
            },
            "kind": "retif",
            "parenthesizedExpression": true,
            "test": Bin {
              "kind": "bin",
              "left": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "str",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "salt2",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "crypt",
                  "resolution": "uqn",
                },
              },
              "parenthesizedExpression": true,
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "res_2",
              },
              "type": "===",
            },
            "trueExpr": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'EXT'",
              "unicode": false,
              "value": "EXT",
            },
          },
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'MD5'",
            "unicode": false,
            "value": "MD5",
          },
          "kind": "retif",
          "test": Name {
            "kind": "name",
            "name": "CRYPT_MD5",
            "parenthesizedExpression": true,
            "resolution": "uqn",
          },
          "trueExpr": RetIf {
            "falseExpr": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'MD5 - ERROR'",
              "unicode": false,
              "value": "MD5 - ERROR",
            },
            "kind": "retif",
            "parenthesizedExpression": true,
            "test": Bin {
              "kind": "bin",
              "left": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "str",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "salt3",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "crypt",
                  "resolution": "uqn",
                },
              },
              "parenthesizedExpression": true,
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "res_3",
              },
              "type": "===",
            },
            "trueExpr": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'MD5'",
              "unicode": false,
              "value": "MD5",
            },
          },
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'BLO'",
            "unicode": false,
            "value": "BLO",
          },
          "kind": "retif",
          "test": Name {
            "kind": "name",
            "name": "CRYPT_BLOWFISH",
            "parenthesizedExpression": true,
            "resolution": "uqn",
          },
          "trueExpr": RetIf {
            "falseExpr": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'BLO - ERROR'",
              "unicode": false,
              "value": "BLO - ERROR",
            },
            "kind": "retif",
            "parenthesizedExpression": true,
            "test": Bin {
              "kind": "bin",
              "left": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "str",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "salt4",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "crypt",
                  "resolution": "uqn",
                },
              },
              "parenthesizedExpression": true,
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "res_4",
              },
              "type": "===",
            },
            "trueExpr": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'BLO'",
              "unicode": false,
              "value": "BLO",
            },
          },
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "str",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "crypt",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Call {
                    "arguments": Array [],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "getMessage",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "e",
                      },
                    },
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"\\\\n\\"",
                    "unicode": false,
                    "value": "
",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "ArgumentCountError",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
