// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests SimpleXML: Text data 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "sxe",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Encapsed {
              "kind": "encapsed",
              "label": "EOF",
              "raw": "<<<EOF
<?xml version='1.0'?>
<!DOCTYPE sxe SYSTEM \\"notfound.dtd\\">
<sxe id=\\"elem1\\">
 Plain text.
 <elem1 attr1='first'>
  <!-- comment -->
  <elem2>
   Here we have some text data.
   <elem3>
    And here some more.
    <elem4>
     Wow once again.
    </elem4>
   </elem3>
  </elem2>
 </elem1>
</sxe>
EOF
",
              "type": "heredoc",
              "value": Array [
                EncapsedPart {
                  "curly": false,
                  "expression": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "<?xml version='1.0'?>
<!DOCTYPE sxe SYSTEM \\"notfound.dtd\\">
<sxe id=\\"elem1\\">
 Plain text.
 <elem1 attr1='first'>
  <!-- comment -->
  <elem2>
   Here we have some text data.
   <elem3>
    And here some more.
    <elem4>
     Wow once again.
    </elem4>
   </elem3>
  </elem2>
 </elem1>
</sxe>
",
                    "unicode": false,
                    "value": "<?xml version='1.0'?>
<!DOCTYPE sxe SYSTEM \\"notfound.dtd\\">
<sxe id=\\"elem1\\">
 Plain text.
 <elem1 attr1='first'>
  <!-- comment -->
  <elem2>
   Here we have some text data.
   <elem3>
    And here some more.
    <elem4>
     Wow once again.
    </elem4>
   </elem3>
  </elem2>
 </elem1>
</sxe>",
                  },
                  "kind": "encapsedpart",
                  "syntax": null,
                },
              ],
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "simplexml_load_string",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "elem2",
                },
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "elem1",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "sxe",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "trim",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "elem3",
                },
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "elem2",
                  },
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "elem1",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "sxe",
                    },
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "trim",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "elem4",
                },
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "elem3",
                  },
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "elem2",
                    },
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "elem1",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "sxe",
                      },
                    },
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "trim",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"---Done---\\\\n\\"",
          "unicode": false,
          "value": "---Done---
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
