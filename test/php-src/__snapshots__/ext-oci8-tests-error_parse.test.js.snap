// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test error handling when persistent connection is passed to oci_error() 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": true,
        "target": Bin {
          "kind": "bin",
          "left": Magic {
            "kind": "magic",
            "raw": "__DIR__",
            "value": "__DIR__",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'/details.inc'",
            "unicode": false,
            "value": "/details.inc",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "c1",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "user",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "password",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "oci_connect",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "c1",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "user",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "password",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "dbase",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "oci_connect",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "dbase",
          },
          "kind": "empty",
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "s",
        },
        "operator": "=",
        "right": Silent {
          "expr": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "c1",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"select ' from dual\\"",
                "unicode": false,
                "value": "select ' from dual",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "oci_parse",
              "resolution": "uqn",
            },
          },
          "kind": "silent",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Normal connection: Parse error\\\\n\\"",
                "unicode": false,
                "value": "Normal connection: Parse error
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "m",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "c1",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "oci_error",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "m",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Variable {
          "curly": false,
          "kind": "variable",
          "name": "s",
        },
      },
    },
    If {
      "alternate": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "c2",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "user",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "password",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "oci_new_connect",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "c2",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "user",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "password",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "dbase",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "oci_new_connect",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "dbase",
          },
          "kind": "empty",
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "s",
        },
        "operator": "=",
        "right": Silent {
          "expr": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "c2",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"select ' from dual\\"",
                "unicode": false,
                "value": "select ' from dual",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "oci_parse",
              "resolution": "uqn",
            },
          },
          "kind": "silent",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"New connection: Parse error\\\\n\\"",
                "unicode": false,
                "value": "New connection: Parse error
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "m",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "c2",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "oci_error",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "m",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Variable {
          "curly": false,
          "kind": "variable",
          "name": "s",
        },
      },
    },
    If {
      "alternate": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "c3",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "user",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "password",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "oci_pconnect",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "c3",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "user",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "password",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "dbase",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "oci_pconnect",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "dbase",
          },
          "kind": "empty",
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "s",
        },
        "operator": "=",
        "right": Silent {
          "expr": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "c3",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"select ' from dual\\"",
                "unicode": false,
                "value": "select ' from dual",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "oci_parse",
              "resolution": "uqn",
            },
          },
          "kind": "silent",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Persistent connection: Parse error\\\\n\\"",
                "unicode": false,
                "value": "Persistent connection: Parse error
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "m",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "c3",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "oci_error",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "m",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Variable {
          "curly": false,
          "kind": "variable",
          "name": "s",
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "m",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "oci_error",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"No connection: error: \\"",
          "unicode": false,
          "value": "No connection: error: ",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "m",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "m",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "c1",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "oci_error",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Normal connection (take #2): Parse error: \\"",
          "unicode": false,
          "value": "Normal connection (take #2): Parse error: ",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"message\\"",
            "unicode": false,
            "value": "message",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "m",
          },
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "m",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "c2",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "oci_error",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"New connection (take #2): Parse error: \\"",
          "unicode": false,
          "value": "New connection (take #2): Parse error: ",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"message\\"",
            "unicode": false,
            "value": "message",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "m",
          },
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "m",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "c3",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "oci_error",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Persistent connection (take #2): Parse error: \\"",
          "unicode": false,
          "value": "Persistent connection (take #2): Parse error: ",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"message\\"",
            "unicode": false,
            "value": "message",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "m",
          },
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "s",
        },
        "operator": "=",
        "right": Silent {
          "expr": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "c1",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"ABC\\"",
                "unicode": false,
                "value": "ABC",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "oci_new_collection",
              "resolution": "uqn",
            },
          },
          "kind": "silent",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "m",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "c1",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "oci_error",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Normal connection: New Collection error: \\"",
          "unicode": false,
          "value": "Normal connection: New Collection error: ",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"message\\"",
            "unicode": false,
            "value": "message",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "m",
          },
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "m",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "c2",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "oci_error",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"New connection (take #3): Parse error: \\"",
          "unicode": false,
          "value": "New connection (take #3): Parse error: ",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"message\\"",
            "unicode": false,
            "value": "message",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "m",
          },
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "m",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "c3",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "oci_error",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Persistent connection (take #3): Parse error: \\"",
          "unicode": false,
          "value": "Persistent connection (take #3): Parse error: ",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"message\\"",
            "unicode": false,
            "value": "message",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "m",
          },
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Done\\\\n\\"",
          "unicode": false,
          "value": "Done
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
