// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Observer: call_user_func_array() from namespace 1`] = `
Program {
  "children": Array [
    Namespace {
      "children": Array [
        Class {
          "attrGroups": Array [],
          "body": Array [
            Method {
              "arguments": Array [
                Parameter {
                  "attrGroups": Array [],
                  "byref": false,
                  "flags": 0,
                  "kind": "parameter",
                  "name": Identifier {
                    "kind": "identifier",
                    "name": "msg",
                  },
                  "nullable": false,
                  "readonly": false,
                  "type": TypeReference {
                    "kind": "typereference",
                    "name": "string",
                    "raw": "string",
                  },
                  "value": null,
                  "variadic": false,
                },
              ],
              "attrGroups": Array [],
              "body": Block {
                "children": Array [
                  Echo {
                    "expressions": Array [
                      Bin {
                        "kind": "bin",
                        "left": Bin {
                          "kind": "bin",
                          "left": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'MyClass::myMethod '",
                            "unicode": false,
                            "value": "MyClass::myMethod ",
                          },
                          "right": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "msg",
                          },
                          "type": ".",
                        },
                        "right": Name {
                          "kind": "name",
                          "name": "PHP_EOL",
                          "resolution": "uqn",
                        },
                        "type": ".",
                      },
                    ],
                    "kind": "echo",
                    "shortForm": false,
                  },
                ],
                "kind": "block",
              },
              "byref": false,
              "isAbstract": false,
              "isFinal": false,
              "isStatic": true,
              "kind": "method",
              "name": Identifier {
                "kind": "identifier",
                "name": "myMethod",
              },
              "nullable": false,
              "type": null,
              "visibility": "public",
            },
          ],
          "extends": null,
          "implements": null,
          "isAbstract": false,
          "isAnonymous": false,
          "isFinal": true,
          "kind": "class",
          "name": Identifier {
            "kind": "identifier",
            "name": "MyClass",
          },
        },
        _Function {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "msg",
              },
              "nullable": false,
              "readonly": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "string",
                "raw": "string",
              },
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'my_function '",
                        "unicode": false,
                        "value": "my_function ",
                      },
                      "right": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "msg",
                      },
                      "type": ".",
                    },
                    "right": Name {
                      "kind": "name",
                      "name": "PHP_EOL",
                      "resolution": "uqn",
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "kind": "function",
          "name": Identifier {
            "kind": "identifier",
            "name": "my_function",
          },
          "nullable": false,
          "type": null,
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'Test\\\\\\\\MyClass::myMethod'",
                "unicode": false,
                "value": "Test\\\\MyClass::myMethod",
              },
              Array {
                "items": Array [
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'called'",
                      "unicode": false,
                      "value": "called",
                    },
                  },
                ],
                "kind": "array",
                "shortForm": true,
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "call_user_func_array",
              "resolution": "uqn",
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'Test\\\\\\\\my_function'",
                "unicode": false,
                "value": "Test\\\\my_function",
              },
              Array {
                "items": Array [
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'called'",
                      "unicode": false,
                      "value": "called",
                    },
                  },
                ],
                "kind": "array",
                "shortForm": true,
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "call_user_func_array",
              "resolution": "uqn",
            },
          },
          "kind": "expressionstatement",
        },
      ],
      "kind": "namespace",
      "name": "Test",
      "withBrackets": true,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
