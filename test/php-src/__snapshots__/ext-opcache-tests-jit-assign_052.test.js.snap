// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests JIT ASSIGN: incorrect reference counting 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          For {
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": false,
                      "what": OffsetLookup {
                        "kind": "offsetlookup",
                        "offset": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "i",
                          },
                          "operator": "=",
                          "right": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "s",
                          },
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "t",
                        },
                      },
                    },
                    "operator": "=",
                    "right": Bin {
                      "kind": "bin",
                      "left": Array {
                        "items": Array [],
                        "kind": "array",
                        "shortForm": true,
                      },
                      "right": Assign {
                        "kind": "assign",
                        "left": OffsetLookup {
                          "kind": "offsetlookup",
                          "offset": Assign {
                            "kind": "assign",
                            "left": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "i",
                            },
                            "operator": "=",
                            "right": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "j",
                            },
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "n",
                          },
                        },
                        "operator": "=",
                        "right": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "s",
                          },
                          "operator": "=",
                          "right": Bin {
                            "kind": "bin",
                            "left": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "a",
                            },
                            "right": Assign {
                              "kind": "assign",
                              "left": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "a",
                              },
                              "operator": "=",
                              "right": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "f",
                              },
                            },
                            "type": ".",
                          },
                        },
                      },
                      "type": ">",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "increment": Array [
              Post {
                "kind": "post",
                "type": "+",
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "cnt",
                },
              },
            ],
            "init": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "cnt",
                },
                "operator": "=",
                "right": Number {
                  "kind": "number",
                  "value": "0",
                },
              },
            ],
            "kind": "for",
            "shortForm": false,
            "test": Array [
              Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "cnt",
                },
                "right": Number {
                  "kind": "number",
                  "value": "6",
                },
                "type": "<",
              },
            ],
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "foo",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Silent {
        "expr": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "foo",
            "resolution": "uqn",
          },
        },
        "kind": "silent",
      },
      "kind": "expressionstatement",
    },
    Inline {
      "kind": "inline",
      "raw": "
DONE",
      "value": "DONE",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
