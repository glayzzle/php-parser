// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #30549 (incorrect character translations for some ISO8859 charsets) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'ISO-8859-7'",
            "unicode": false,
            "value": "ISO-8859-7",
          },
          Array {
            "items": Array [
              Entry {
                "byRef": false,
                "key": Number {
                  "kind": "number",
                  "value": "0xa4",
                },
                "kind": "entry",
                "unpack": false,
                "value": Number {
                  "kind": "number",
                  "value": "0x20ac",
                },
              },
              Entry {
                "byRef": false,
                "key": Number {
                  "kind": "number",
                  "value": "0xa5",
                },
                "kind": "entry",
                "unpack": false,
                "value": Number {
                  "kind": "number",
                  "value": "0x20af",
                },
              },
              Entry {
                "byRef": false,
                "key": Number {
                  "kind": "number",
                  "value": "0xaa",
                },
                "kind": "entry",
                "unpack": false,
                "value": Number {
                  "kind": "number",
                  "value": "0x037a",
                },
              },
            ],
            "kind": "array",
            "shortForm": false,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'ISO-8859-8'",
            "unicode": false,
            "value": "ISO-8859-8",
          },
          Array {
            "items": Array [
              Entry {
                "byRef": false,
                "key": Number {
                  "kind": "number",
                  "value": "0xaf",
                },
                "kind": "entry",
                "unpack": false,
                "value": Number {
                  "kind": "number",
                  "value": "0x00af",
                },
              },
              Entry {
                "byRef": false,
                "key": Number {
                  "kind": "number",
                  "value": "0xfd",
                },
                "kind": "entry",
                "unpack": false,
                "value": Number {
                  "kind": "number",
                  "value": "0x200e",
                },
              },
              Entry {
                "byRef": false,
                "key": Number {
                  "kind": "number",
                  "value": "0xfe",
                },
                "kind": "entry",
                "unpack": false,
                "value": Number {
                  "kind": "number",
                  "value": "0x200f",
                },
              },
            ],
            "kind": "array",
            "shortForm": false,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'ISO-8859-10'",
            "unicode": false,
            "value": "ISO-8859-10",
          },
          Array {
            "items": Array [
              Entry {
                "byRef": false,
                "key": Number {
                  "kind": "number",
                  "value": "0xa4",
                },
                "kind": "entry",
                "unpack": false,
                "value": Number {
                  "kind": "number",
                  "value": "0x012a",
                },
              },
            ],
            "kind": "array",
            "shortForm": false,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "enc",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "map",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Print {
              "expression": Encapsed {
                "kind": "encapsed",
                "raw": "\\"$enc\\\\n\\"",
                "type": "string",
                "value": Array [
                  EncapsedPart {
                    "curly": false,
                    "expression": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "enc",
                    },
                    "kind": "encapsedpart",
                    "syntax": "simple",
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "\\\\n",
                      "unicode": false,
                      "value": "",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                ],
              },
              "kind": "print",
            },
            "kind": "expressionstatement",
          },
          Foreach {
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "ustr",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "'C'",
                              "unicode": false,
                              "value": "C",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "fromc",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "pack",
                            "resolution": "uqn",
                          },
                        },
                        String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'UCS-4BE'",
                          "unicode": false,
                          "value": "UCS-4BE",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "enc",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "mb_convert_encoding",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                Foreach {
                  "body": null,
                  "key": null,
                  "kind": "foreach",
                  "shortForm": false,
                  "source": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'Nc'",
                        "unicode": false,
                        "value": "Nc",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "ustr",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "unpack",
                      "resolution": "uqn",
                    },
                  },
                  "value": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "unic",
                  },
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"0x%04x, 0x%04x\\\\n\\"",
                        "unicode": false,
                        "value": "0x%04x, 0x%04x
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "toc",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "unic",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "key": Variable {
              "curly": false,
              "kind": "variable",
              "name": "fromc",
            },
            "kind": "foreach",
            "shortForm": false,
            "source": Variable {
              "curly": false,
              "kind": "variable",
              "name": "map",
            },
            "value": Variable {
              "curly": false,
              "kind": "variable",
              "name": "toc",
            },
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "test",
      },
      "nullable": false,
      "type": null,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
