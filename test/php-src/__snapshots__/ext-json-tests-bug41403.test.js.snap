// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #41403 (json_decode cannot decode floats if localeconv decimal_point is not '.') 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Name {
            "kind": "name",
            "name": "LC_NUMERIC",
            "resolution": "uqn",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'de_DE'",
            "unicode": false,
            "value": "de_DE",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "setlocale",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'[2.1]'",
                "unicode": false,
                "value": "[2.1]",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "json_decode",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'[0.15]'",
                "unicode": false,
                "value": "[0.15]",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "json_decode",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'[123.13452345]'",
                "unicode": false,
                "value": "[123.13452345]",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "json_decode",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'[123,13452345]'",
                "unicode": false,
                "value": "[123,13452345]",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "json_decode",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Done\\\\n\\"",
          "unicode": false,
          "value": "Done
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
