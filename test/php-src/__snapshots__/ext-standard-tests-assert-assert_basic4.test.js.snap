// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests assert() - basic - test initial values using ini.get and assert_options 1`] = `
Program {
  "children": Array [
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"Initial values: assert_options(ASSERT_ACTIVE) => [\\"",
              "unicode": false,
              "value": "Initial values: assert_options(ASSERT_ACTIVE) => [",
            },
            "right": Call {
              "arguments": Array [
                Name {
                  "kind": "name",
                  "name": "ASSERT_ACTIVE",
                  "resolution": "uqn",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "assert_options",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"]\\\\n\\"",
            "unicode": false,
            "value": "]
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"Initial values: assert_options(ASSERT_WARNING) => [\\"",
              "unicode": false,
              "value": "Initial values: assert_options(ASSERT_WARNING) => [",
            },
            "right": Call {
              "arguments": Array [
                Name {
                  "kind": "name",
                  "name": "ASSERT_WARNING",
                  "resolution": "uqn",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "assert_options",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"]\\\\n\\"",
            "unicode": false,
            "value": "]
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"Initial values: assert_options(ASSERT_BAIL) => [\\"",
              "unicode": false,
              "value": "Initial values: assert_options(ASSERT_BAIL) => [",
            },
            "right": Call {
              "arguments": Array [
                Name {
                  "kind": "name",
                  "name": "ASSERT_BAIL",
                  "resolution": "uqn",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "assert_options",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"]\\\\n\\"",
            "unicode": false,
            "value": "]
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"Initial values: assert_options(ASSERT_CALLBACK) => [\\"",
              "unicode": false,
              "value": "Initial values: assert_options(ASSERT_CALLBACK) => [",
            },
            "right": Call {
              "arguments": Array [
                Name {
                  "kind": "name",
                  "name": "ASSERT_CALLBACK",
                  "resolution": "uqn",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "assert_options",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"]\\\\n\\"",
            "unicode": false,
            "value": "]
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"Initial values: ini.get(\\\\\\"assert.active\\\\\\") => [\\"",
              "unicode": false,
              "value": "Initial values: ini.get(\\"assert.active\\\\\\") => [",
            },
            "right": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"assert.active\\"",
                  "unicode": false,
                  "value": "assert.active",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "ini_get",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"]\\\\n\\"",
            "unicode": false,
            "value": "]
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"Initial values: ini.get(\\\\\\"assert.warning\\\\\\") => [\\"",
              "unicode": false,
              "value": "Initial values: ini.get(\\"assert.warning\\\\\\") => [",
            },
            "right": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"assert.warning\\"",
                  "unicode": false,
                  "value": "assert.warning",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "ini_get",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"]\\\\n\\"",
            "unicode": false,
            "value": "]
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"Initial values: ini.get(\\\\\\"assert.bail\\\\\\") => [\\"",
              "unicode": false,
              "value": "Initial values: ini.get(\\"assert.bail\\\\\\") => [",
            },
            "right": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"assert.bail\\"",
                  "unicode": false,
                  "value": "assert.bail",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "ini_get",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"]\\\\n\\"",
            "unicode": false,
            "value": "]
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"Initial values: ini.get(\\\\\\"assert.callback\\\\\\") => [\\"",
              "unicode": false,
              "value": "Initial values: ini.get(\\"assert.callback\\\\\\") => [",
            },
            "right": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"assert.callback\\"",
                  "unicode": false,
                  "value": "assert.callback",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "ini_get",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"]\\\\n\\\\n\\"",
            "unicode": false,
            "value": "]

",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
