// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #53580 (During resize gdImageCopyResampled cause colors change) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "w0",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "100",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "h0",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "100",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "w1",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "150",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "h1",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "150",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "c0",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "0xffffff",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "im0",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "w0",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "h0",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "imagecreatetruecolor",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "im0",
          },
          Number {
            "kind": "number",
            "value": "0",
          },
          Number {
            "kind": "number",
            "value": "0",
          },
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "w0",
            },
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "-",
          },
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "h0",
            },
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "-",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "c0",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imagefilledrectangle",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "im1",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "w1",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "h1",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "imagecreatetruecolor",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "im1",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "im0",
          },
          Number {
            "kind": "number",
            "value": "0",
          },
          Number {
            "kind": "number",
            "value": "0",
          },
          Number {
            "kind": "number",
            "value": "0",
          },
          Number {
            "kind": "number",
            "value": "0",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "w1",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "h1",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "w0",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "h0",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imagecopyresampled",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    For {
      "body": Block {
        "children": Array [
          For {
            "body": Block {
              "children": Array [
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"%d,%d = %d\\\\n\\"",
                              "unicode": false,
                              "value": "%d,%d = %d
",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "i",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "j",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "c1",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "printf",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Assign {
                      "kind": "assign",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "c1",
                      },
                      "operator": "=",
                      "parenthesizedExpression": true,
                      "right": Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "im1",
                          },
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "i",
                          },
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "j",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "imagecolorat",
                          "resolution": "uqn",
                        },
                      },
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "c0",
                    },
                    "type": "!==",
                  },
                },
              ],
              "kind": "block",
            },
            "increment": Array [
              Post {
                "kind": "post",
                "type": "+",
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "j",
                },
              },
            ],
            "init": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "j",
                },
                "operator": "=",
                "right": Number {
                  "kind": "number",
                  "value": "0",
                },
              },
            ],
            "kind": "for",
            "shortForm": false,
            "test": Array [
              Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "j",
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "h1",
                },
                "type": "<",
              },
            ],
          },
        ],
        "kind": "block",
      },
      "increment": Array [
        Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "0",
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "right": Variable {
            "curly": false,
            "kind": "variable",
            "name": "w1",
          },
          "type": "<",
        },
      ],
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
