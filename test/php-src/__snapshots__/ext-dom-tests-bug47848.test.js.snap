// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #47848 (importNode doesn't preserve attribute namespaces) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "aDOM",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "DOMDocument",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'http://friend2friend.net/'",
                "unicode": false,
                "value": "http://friend2friend.net/",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'f2f:a'",
                "unicode": false,
                "value": "f2f:a",
              },
            ],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "createElementNS",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "aDOM",
              },
            },
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "appendChild",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "aDOM",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "fromdom",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "DOMDocument",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'<data xmlns:ai=\\"http://altruists.org\\" ai:attr=\\"namespaced\\" />'",
            "unicode": false,
            "value": "<data xmlns:ai=\\"http://altruists.org\\" ai:attr=\\"namespaced\\" />",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "loadXML",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "fromdom",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "attr",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Number {
              "kind": "number",
              "value": "0",
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "item",
            },
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "attributes",
              },
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "firstChild",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "fromdom",
                },
              },
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "att",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "attr",
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "importNode",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "aDOM",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "attr",
              },
              Boolean {
                "kind": "boolean",
                "raw": "true",
                "value": true,
              },
            ],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "importNode",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "aDOM",
              },
            },
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "appendChild",
          },
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "documentElement",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "aDOM",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "saveXML",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "aDOM",
            },
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
