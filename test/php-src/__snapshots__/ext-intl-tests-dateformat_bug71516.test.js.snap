// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #71516 IntlDateFormatter losts locale if pattern is set via constructor 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "loc",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"ru_RU\\"",
          "unicode": false,
          "value": "ru_RU",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "goodFormatter",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "loc",
            },
            StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "FULL",
              },
              "what": Name {
                "kind": "name",
                "name": "IntlDateFormatter",
                "resolution": "uqn",
              },
            },
            StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "FULL",
              },
              "what": Name {
                "kind": "name",
                "name": "IntlDateFormatter",
                "resolution": "uqn",
              },
            },
            New {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"UTC\\"",
                  "unicode": false,
                  "value": "UTC",
                },
              ],
              "kind": "new",
              "what": Name {
                "kind": "name",
                "name": "DateTimeZone",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "IntlDateFormatter",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "badFormatter",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "loc",
            },
            StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "FULL",
              },
              "what": Name {
                "kind": "name",
                "name": "IntlDateFormatter",
                "resolution": "uqn",
              },
            },
            StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "FULL",
              },
              "what": Name {
                "kind": "name",
                "name": "IntlDateFormatter",
                "resolution": "uqn",
              },
            },
            New {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"UTC\\"",
                  "unicode": false,
                  "value": "UTC",
                },
              ],
              "kind": "new",
              "what": Name {
                "kind": "name",
                "name": "DateTimeZone",
                "resolution": "uqn",
              },
            },
            NullKeyword {
              "kind": "nullkeyword",
              "raw": "null",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"d MMM\\"",
              "unicode": false,
              "value": "d MMM",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "IntlDateFormatter",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "badFormatter2",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "loc",
            },
            StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "FULL",
              },
              "what": Name {
                "kind": "name",
                "name": "IntlDateFormatter",
                "resolution": "uqn",
              },
            },
            StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "FULL",
              },
              "what": Name {
                "kind": "name",
                "name": "IntlDateFormatter",
                "resolution": "uqn",
              },
            },
            New {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"UTC\\"",
                  "unicode": false,
                  "value": "UTC",
                },
              ],
              "kind": "new",
              "what": Name {
                "kind": "name",
                "name": "DateTimeZone",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "IntlDateFormatter",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"d MMM\\"",
            "unicode": false,
            "value": "d MMM",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "setPattern",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "badFormatter2",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"Formatter without pattern: \\"",
              "unicode": false,
              "value": "Formatter without pattern: ",
            },
            "right": Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "getLocale",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "goodFormatter",
                },
              },
            },
            "type": ".",
          },
          "right": Name {
            "kind": "name",
            "name": "PHP_EOL",
            "resolution": "uqn",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"Formatter with pattern: \\"",
              "unicode": false,
              "value": "Formatter with pattern: ",
            },
            "right": Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "getLocale",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "badFormatter",
                },
              },
            },
            "type": ".",
          },
          "right": Name {
            "kind": "name",
            "name": "PHP_EOL",
            "resolution": "uqn",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"Formatter with pattern set later: \\"",
              "unicode": false,
              "value": "Formatter with pattern set later: ",
            },
            "right": Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "getLocale",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "badFormatter2",
                },
              },
            },
            "type": ".",
          },
          "right": Name {
            "kind": "name",
            "name": "PHP_EOL",
            "resolution": "uqn",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
