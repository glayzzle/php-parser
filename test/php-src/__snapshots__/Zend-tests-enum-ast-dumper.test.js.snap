// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Enum AST dumper 1`] = `
Program {
  "children": Array [
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Closure {
                    "arguments": Array [],
                    "attrGroups": Array [],
                    "body": Block {
                      "children": Array [
                        Enum {
                          "attrGroups": Array [],
                          "body": Array [
                            EnumCase {
                              "kind": "enumcase",
                              "name": Identifier {
                                "kind": "identifier",
                                "name": "Bar",
                              },
                              "value": null,
                            },
                          ],
                          "implements": null,
                          "kind": "enum",
                          "name": Identifier {
                            "kind": "identifier",
                            "name": "Foo",
                          },
                          "valueType": null,
                        },
                        Enum {
                          "attrGroups": Array [],
                          "body": Array [
                            EnumCase {
                              "kind": "enumcase",
                              "name": Identifier {
                                "kind": "identifier",
                                "name": "Bar",
                              },
                              "value": Bin {
                                "kind": "bin",
                                "left": Number {
                                  "kind": "number",
                                  "value": "1",
                                },
                                "right": Number {
                                  "kind": "number",
                                  "value": "0",
                                },
                                "type": "<<",
                              },
                            },
                            EnumCase {
                              "kind": "enumcase",
                              "name": Identifier {
                                "kind": "identifier",
                                "name": "Baz",
                              },
                              "value": Bin {
                                "kind": "bin",
                                "left": Number {
                                  "kind": "number",
                                  "value": "1",
                                },
                                "right": Number {
                                  "kind": "number",
                                  "value": "1",
                                },
                                "type": "<<",
                              },
                            },
                            Method {
                              "arguments": Array [],
                              "attrGroups": Array [
                                AttrGroup {
                                  "attrs": Array [
                                    Attribute {
                                      "args": Array [],
                                      "kind": "attribute",
                                      "name": "CaseAttr",
                                    },
                                  ],
                                  "kind": "attrgroup",
                                },
                              ],
                              "body": Block {
                                "children": Array [
                                  Return {
                                    "expr": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "this",
                                    },
                                    "kind": "return",
                                  },
                                ],
                                "kind": "block",
                              },
                              "byref": false,
                              "isAbstract": false,
                              "isFinal": false,
                              "isStatic": false,
                              "kind": "method",
                              "name": Identifier {
                                "kind": "identifier",
                                "name": "self",
                              },
                              "nullable": false,
                              "type": null,
                              "visibility": "public",
                            },
                          ],
                          "implements": null,
                          "kind": "enum",
                          "name": Identifier {
                            "kind": "identifier",
                            "name": "IntFoo",
                          },
                          "valueType": Name {
                            "kind": "name",
                            "name": "int",
                            "resolution": "uqn",
                          },
                        },
                        Return {
                          "expr": Boolean {
                            "kind": "boolean",
                            "raw": "false",
                            "value": false,
                          },
                          "kind": "return",
                        },
                      ],
                      "kind": "block",
                    },
                    "byref": false,
                    "isStatic": false,
                    "kind": "closure",
                    "nullable": false,
                    "parenthesizedExpression": true,
                    "type": null,
                    "uses": Array [],
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "assert",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Call {
                    "arguments": Array [],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "getMessage",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "e",
                      },
                    },
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "Error",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
