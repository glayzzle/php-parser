// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #36732 (add support for req_extensions in openss_csr_new and sign) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "configargs",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"req_extensions\\"",
                "unicode": false,
                "value": "req_extensions",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"v3_req\\"",
                "unicode": false,
                "value": "v3_req",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"x509_extensions\\"",
                "unicode": false,
                "value": "x509_extensions",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"usr_cert\\"",
                "unicode": false,
                "value": "usr_cert",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"config\\"",
                "unicode": false,
                "value": "config",
              },
              "kind": "entry",
              "unpack": false,
              "value": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": Magic {
                    "kind": "magic",
                    "raw": "__DIR__",
                    "value": "__DIR__",
                  },
                  "right": Name {
                    "kind": "name",
                    "name": "DIRECTORY_SEPARATOR",
                    "resolution": "uqn",
                  },
                  "type": ".",
                },
                "right": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"openssl.cnf\\"",
                  "unicode": false,
                  "value": "openssl.cnf",
                },
                "type": ".",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "dn",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"countryName\\"",
                "unicode": false,
                "value": "countryName",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"GB\\"",
                "unicode": false,
                "value": "GB",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"stateOrProvinceName\\"",
                "unicode": false,
                "value": "stateOrProvinceName",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Berkshire\\"",
                "unicode": false,
                "value": "Berkshire",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"localityName\\"",
                "unicode": false,
                "value": "localityName",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Newbury\\"",
                "unicode": false,
                "value": "Newbury",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"organizationName\\"",
                "unicode": false,
                "value": "organizationName",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"My Company Ltd\\"",
                "unicode": false,
                "value": "My Company Ltd",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"commonName\\"",
                "unicode": false,
                "value": "commonName",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Demo Cert\\"",
                "unicode": false,
                "value": "Demo Cert",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "key",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "openssl_pkey_new",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "csr",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "dn",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "key",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "configargs",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "openssl_csr_new",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "crt",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "csr",
            },
            NullKeyword {
              "kind": "nullkeyword",
              "raw": "NULL",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "key",
            },
            Number {
              "kind": "number",
              "value": "365",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "configargs",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "openssl_csr_sign",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "str",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "''",
          "unicode": false,
          "value": "",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "csr",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "str",
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "openssl_csr_export",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Ok\\\\n\\"",
                "unicode": false,
                "value": "Ok
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "str",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'Requested Extensions:'",
            "unicode": false,
            "value": "Requested Extensions:",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "strpos",
          "resolution": "uqn",
        },
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "crt",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "str",
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "openssl_x509_export",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Ok\\\\n\\"",
                "unicode": false,
                "value": "Ok
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "str",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'X509v3 extensions:'",
            "unicode": false,
            "value": "X509v3 extensions:",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "strpos",
          "resolution": "uqn",
        },
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
