// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #61964 (finfo_open with directory cause invalid free) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "magic_file",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Magic {
              "kind": "magic",
              "raw": "__DIR__",
              "value": "__DIR__",
            },
            "right": Name {
              "kind": "name",
              "name": "DIRECTORY_SEPARATOR",
              "resolution": "uqn",
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'magic'",
            "unicode": false,
            "value": "magic",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "ret",
        },
        "operator": "=",
        "right": Silent {
          "expr": Call {
            "arguments": Array [
              Name {
                "kind": "name",
                "name": "FILEINFO_NONE",
                "resolution": "uqn",
              },
              Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "magic_file",
                },
                "right": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\".non-exits\\"",
                  "unicode": false,
                  "value": ".non-exits",
                },
                "type": ".",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "finfo_open",
              "resolution": "uqn",
            },
          },
          "kind": "silent",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "ret",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "dir",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Magic {
            "kind": "magic",
            "raw": "__DIR__",
            "value": "__DIR__",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"/bug61964\\"",
            "unicode": false,
            "value": "/bug61964",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Silent {
        "expr": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "dir",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mkdir",
            "resolution": "uqn",
          },
        },
        "kind": "silent",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "magic_file_copy",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "dir",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"/magic.copy\\"",
            "unicode": false,
            "value": "/magic.copy",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "magic_file_copy2",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "magic_file_copy",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"2\\"",
            "unicode": false,
            "value": "2",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "magic_file",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "magic_file_copy",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "copy",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "magic_file",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "magic_file_copy2",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "copy",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "ret",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Name {
              "kind": "name",
              "name": "FILEINFO_NONE",
              "resolution": "uqn",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "dir",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "finfo_open",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "ret",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "ret",
        },
        "operator": "=",
        "right": Silent {
          "expr": Call {
            "arguments": Array [
              Name {
                "kind": "name",
                "name": "FILEINFO_NONE",
                "resolution": "uqn",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "dir",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "finfo_open",
              "resolution": "uqn",
            },
          },
          "kind": "silent",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "ret",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "ret",
        },
        "operator": "=",
        "right": Silent {
          "expr": Call {
            "arguments": Array [
              Name {
                "kind": "name",
                "name": "FILEINFO_NONE",
                "resolution": "uqn",
              },
              Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "dir",
                },
                "right": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"/non-exits-dir\\"",
                  "unicode": false,
                  "value": "/non-exits-dir",
                },
                "type": ".",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "finfo_open",
              "resolution": "uqn",
            },
          },
          "kind": "silent",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "ret",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "dir",
            },
            "right": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"/test1.txt\\"",
              "unicode": false,
              "value": "/test1.txt",
            },
            "type": ".",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"string\\\\n> Core\\\\n> Me\\"",
            "unicode": false,
            "value": "string
> Core
> Me",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "file_put_contents",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "dir",
            },
            "right": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"/test2.txt\\"",
              "unicode": false,
              "value": "/test2.txt",
            },
            "type": ".",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"a\\\\nb\\\\n\\"",
            "unicode": false,
            "value": "a
b
",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "file_put_contents",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Silent {
        "expr": Call {
          "arguments": Array [
            Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "dir",
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"/test-inner-folder\\"",
                "unicode": false,
                "value": "/test-inner-folder",
              },
              "type": ".",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mkdir",
            "resolution": "uqn",
          },
        },
        "kind": "silent",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Name {
            "kind": "name",
            "name": "FILEINFO_NONE",
            "resolution": "uqn",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "dir",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "finfo_open",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"DONE: testing dir with files\\\\n\\"",
          "unicode": false,
          "value": "DONE: testing dir with files
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "dir",
            },
            "right": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"/test-inner-folder\\"",
              "unicode": false,
              "value": "/test-inner-folder",
            },
            "type": ".",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "rmdir",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "dir",
            },
            "right": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"/test1.txt\\"",
              "unicode": false,
              "value": "/test1.txt",
            },
            "type": ".",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "unlink",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "dir",
            },
            "right": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"/test2.txt\\"",
              "unicode": false,
              "value": "/test2.txt",
            },
            "type": ".",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "unlink",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "magic_file_copy",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "unlink",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "magic_file_copy2",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "unlink",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "dir",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "rmdir",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
