// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests iconv() test 1 1`] = `
Program {
  "children": Array [
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"iconv extension is available\\\\n\\"",
          "unicode": false,
          "value": "iconv extension is available
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "test",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"���\\"",
          "unicode": false,
          "value": "���",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Encapsed {
            "kind": "encapsed",
            "raw": "\\"ISO-8859-1: $test\\"",
            "type": "string",
            "value": Array [
              EncapsedPart {
                "curly": false,
                "expression": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "ISO-8859-1: ",
                  "unicode": false,
                  "value": "ISO-8859-1: ",
                },
                "kind": "encapsedpart",
                "syntax": null,
              },
              EncapsedPart {
                "curly": false,
                "expression": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "test",
                },
                "kind": "encapsedpart",
                "syntax": "simple",
              },
            ],
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"UTF-8: \\"",
              "unicode": false,
              "value": "UTF-8: ",
            },
            "right": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"ISO-8859-1\\"",
                  "unicode": false,
                  "value": "ISO-8859-1",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"UTF-8\\"",
                  "unicode": false,
                  "value": "UTF-8",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "test",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "iconv",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
