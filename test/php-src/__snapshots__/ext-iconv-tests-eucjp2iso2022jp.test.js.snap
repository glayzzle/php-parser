// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests EUC-JP to ISO-2022-JP 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "str",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "len",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "str",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "strlen",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          For {
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"%02x\\"",
                        "unicode": false,
                        "value": "%02x",
                      },
                      Call {
                        "arguments": Array [
                          OffsetLookup {
                            "kind": "offsetlookup",
                            "offset": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "i",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "str",
                            },
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "ord",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "increment": Array [
              Pre {
                "kind": "pre",
                "type": "+",
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
              },
            ],
            "init": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
                "operator": "=",
                "right": Number {
                  "kind": "number",
                  "value": "0",
                },
              },
            ],
            "kind": "for",
            "shortForm": false,
            "test": Array [
              Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "len",
                },
                "type": "<",
              },
            ],
          },
          ExpressionStatement {
            "expression": Print {
              "expression": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\n\\"",
                "unicode": false,
                "value": "
",
              },
              "kind": "print",
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "hexdump",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "str",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"���ܸ�ƥ����Ȥ� English text\\"",
              "unicode": false,
              "value": "���ܸ�ƥ����Ȥ� English text",
            },
            Number {
              "kind": "number",
              "value": "30",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "str_repeat",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "str",
        },
        "operator": ".=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"���ܸ�\\"",
          "unicode": false,
          "value": "���ܸ�",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Call {
          "arguments": Array [
            Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"EUC-JP\\"",
                  "unicode": false,
                  "value": "EUC-JP",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"ISO-2022-JP\\"",
                  "unicode": false,
                  "value": "ISO-2022-JP",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "str",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "iconv",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "hexdump",
            "resolution": "uqn",
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
