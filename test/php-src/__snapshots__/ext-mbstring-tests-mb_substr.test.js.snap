// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests mb_substr() 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'include_path'",
            "unicode": false,
            "value": "include_path",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'.'",
            "unicode": false,
            "value": ".",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "ini_set",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": false,
        "target": String {
          "isDoubleQuote": false,
          "kind": "string",
          "parenthesizedExpression": true,
          "raw": "'common.inc'",
          "unicode": false,
          "value": "common.inc",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "euc_jp",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'0123����ʸ��������ܸ�Ǥ���EUC-JP��ȤäƤ��ޤ������ܸ�����ݽ�����'",
          "unicode": false,
          "value": "0123����ʸ��������ܸ�Ǥ���EUC-JP��ȤäƤ��ޤ������ܸ�����ݽ�����",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"1: \\"",
              "unicode": false,
              "value": "1: ",
            },
            "right": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "euc_jp",
                    },
                    Number {
                      "kind": "number",
                      "value": "10",
                    },
                    Number {
                      "kind": "number",
                      "value": "10",
                    },
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'EUC-JP'",
                      "unicode": false,
                      "value": "EUC-JP",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mb_substr",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "bin2hex",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"2: \\"",
              "unicode": false,
              "value": "2: ",
            },
            "right": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "euc_jp",
                    },
                    Number {
                      "kind": "number",
                      "value": "0",
                    },
                    Number {
                      "kind": "number",
                      "value": "100",
                    },
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'EUC-JP'",
                      "unicode": false,
                      "value": "EUC-JP",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mb_substr",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "bin2hex",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "str",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "euc_jp",
            },
            Number {
              "kind": "number",
              "value": "100",
            },
            Number {
              "kind": "number",
              "value": "10",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'EUC-JP'",
              "unicode": false,
              "value": "EUC-JP",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_substr",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": RetIf {
        "falseExpr": Print {
          "expression": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"NG: \\"",
                "unicode": false,
                "value": "NG: ",
              },
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "str",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "bin2hex",
                  "resolution": "uqn",
                },
              },
              "type": ".",
            },
            "right": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"\\\\n\\"",
              "unicode": false,
              "value": "
",
            },
            "type": ".",
          },
          "kind": "print",
        },
        "kind": "retif",
        "test": Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "str",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\"",
            "unicode": false,
            "value": "",
          },
          "type": "===",
        },
        "trueExpr": Print {
          "expression": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"3 OK\\\\n\\"",
            "unicode": false,
            "value": "3 OK
",
          },
          "kind": "print",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "str",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "euc_jp",
            },
            Unary {
              "kind": "unary",
              "type": "-",
              "what": Number {
                "kind": "number",
                "value": "100",
              },
            },
            Number {
              "kind": "number",
              "value": "10",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'EUC-JP'",
              "unicode": false,
              "value": "EUC-JP",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_substr",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": RetIf {
        "falseExpr": Print {
          "expression": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"NG: \\"",
                "unicode": false,
                "value": "NG: ",
              },
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "str",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "bin2hex",
                  "resolution": "uqn",
                },
              },
              "type": ".",
            },
            "right": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"\\\\n\\"",
              "unicode": false,
              "value": "
",
            },
            "type": ".",
          },
          "kind": "print",
        },
        "kind": "retif",
        "test": Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "str",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\"",
            "unicode": false,
            "value": "",
          },
          "type": "!==",
        },
        "trueExpr": Print {
          "expression": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"4 OK: \\"",
                "unicode": false,
                "value": "4 OK: ",
              },
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "str",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "bin2hex",
                  "resolution": "uqn",
                },
              },
              "type": ".",
            },
            "right": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"\\\\n\\"",
              "unicode": false,
              "value": "
",
            },
            "type": ".",
          },
          "kind": "print",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
