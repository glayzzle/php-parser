// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Testing nested functions 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "a",
              },
              "operator": "=",
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Hello \\"",
                "unicode": false,
                "value": "Hello ",
              },
            },
            "kind": "expressionstatement",
          },
          Return {
            "expr": Variable {
              "curly": false,
              "kind": "variable",
              "name": "a",
              "parenthesizedExpression": true,
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "F",
      },
      "nullable": false,
      "type": null,
    },
    _Function {
      "arguments": Array [],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          Static {
            "kind": "static",
            "variables": Array [
              StaticVariable {
                "defaultValue": Number {
                  "kind": "number",
                  "value": "4",
                },
                "kind": "staticvariable",
                "variable": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "myvar",
                },
              },
            ],
          },
          Echo {
            "expressions": Array [
              Encapsed {
                "kind": "encapsed",
                "raw": "\\"$myvar \\"",
                "type": "string",
                "value": Array [
                  EncapsedPart {
                    "curly": false,
                    "expression": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "myvar",
                    },
                    "kind": "encapsedpart",
                    "syntax": "simple",
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": " ",
                      "unicode": false,
                      "value": " ",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                ],
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          Echo {
            "expressions": Array [
              Call {
                "arguments": Array [],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "F",
                  "resolution": "uqn",
                },
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          Echo {
            "expressions": Array [
              Encapsed {
                "kind": "encapsed",
                "raw": "\\"$myvar\\"",
                "type": "string",
                "value": Array [
                  EncapsedPart {
                    "curly": false,
                    "expression": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "myvar",
                    },
                    "kind": "encapsedpart",
                    "syntax": "simple",
                  },
                ],
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "G",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "G",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
