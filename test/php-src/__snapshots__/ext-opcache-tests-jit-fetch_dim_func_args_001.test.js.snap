// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests JIT FETCH_DIM_FUNC_ARG: 001 1`] = `
Program {
  "children": Array [
    Namespace {
      "children": Array [
        Class {
          "attrGroups": Array [],
          "body": Array [
            Method {
              "arguments": Array [
                Parameter {
                  "attrGroups": Array [],
                  "byref": false,
                  "flags": 0,
                  "kind": "parameter",
                  "name": Identifier {
                    "kind": "identifier",
                    "name": "config",
                  },
                  "nullable": false,
                  "readonly": false,
                  "type": TypeReference {
                    "kind": "typereference",
                    "name": "array",
                    "raw": "array",
                  },
                  "value": null,
                  "variadic": false,
                },
              ],
              "attrGroups": Array [],
              "body": Block {
                "children": Array [
                  ExpressionStatement {
                    "expression": Assign {
                      "kind": "assign",
                      "left": OffsetLookup {
                        "kind": "offsetlookup",
                        "offset": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'keys'",
                          "unicode": false,
                          "value": "keys",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "config",
                        },
                      },
                      "operator": "=",
                      "right": Call {
                        "arguments": Array [
                          OffsetLookup {
                            "kind": "offsetlookup",
                            "offset": String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"a\\"",
                              "unicode": false,
                              "value": "a",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "config",
                            },
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "array_keys",
                          "resolution": "uqn",
                        },
                      },
                    },
                    "kind": "expressionstatement",
                  },
                ],
                "kind": "block",
              },
              "byref": false,
              "isAbstract": false,
              "isFinal": false,
              "isStatic": false,
              "kind": "method",
              "name": Identifier {
                "kind": "identifier",
                "name": "change",
              },
              "nullable": false,
              "type": null,
              "visibility": "public",
            },
          ],
          "extends": null,
          "implements": null,
          "isAbstract": false,
          "isAnonymous": false,
          "isFinal": false,
          "kind": "class",
          "name": Identifier {
            "kind": "identifier",
            "name": "A",
          },
        },
        ExpressionStatement {
          "expression": Assign {
            "kind": "assign",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "a",
            },
            "operator": "=",
            "right": New {
              "arguments": Array [],
              "kind": "new",
              "what": Name {
                "kind": "name",
                "name": "A",
                "resolution": "uqn",
              },
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "a",
                },
                "operator": "=",
                "right": Array {
                  "items": Array [
                    Entry {
                      "byRef": false,
                      "key": String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"a\\"",
                        "unicode": false,
                        "value": "a",
                      },
                      "kind": "entry",
                      "unpack": false,
                      "value": Call {
                        "arguments": Array [
                          Number {
                            "kind": "number",
                            "value": "1",
                          },
                          Number {
                            "kind": "number",
                            "value": "5",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "range",
                          "resolution": "uqn",
                        },
                      },
                    },
                  ],
                  "kind": "array",
                  "shortForm": false,
                },
              },
            ],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "change",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "a",
              },
            },
          },
          "kind": "expressionstatement",
        },
        Inline {
          "kind": "inline",
          "raw": "
okey",
          "value": "okey",
        },
      ],
      "kind": "namespace",
      "name": "A",
      "withBrackets": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
