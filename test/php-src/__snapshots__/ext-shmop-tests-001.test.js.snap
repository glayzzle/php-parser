// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests shmop extension test 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "hex_shm_id",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "0xff3",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "write_d1",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"test #1 of the shmop() extension\\"",
          "unicode": false,
          "value": "test #1 of the shmop() extension",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "write_d2",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"test #2 append data to shared memory segment\\"",
          "unicode": false,
          "value": "test #2 append data to shared memory segment",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"shm open for create: \\"",
          "unicode": false,
          "value": "shm open for create: ",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "shm_id",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "hex_shm_id",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"n\\"",
              "unicode": false,
              "value": "n",
            },
            Number {
              "kind": "number",
              "value": "0644",
            },
            Number {
              "kind": "number",
              "value": "1024",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "shmop_open",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"ok\\\\n\\"",
                "unicode": false,
                "value": "ok
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Exit {
              "expression": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"failed\\\\n\\"",
                "unicode": false,
                "value": "failed
",
              },
              "kind": "exit",
              "useDie": true,
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Variable {
          "curly": false,
          "kind": "variable",
          "name": "shm_id",
        },
      },
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"shm size is: \\"",
              "unicode": false,
              "value": "shm size is: ",
            },
            "right": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "shm_size",
              },
              "operator": "=",
              "parenthesizedExpression": true,
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "shm_id",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "shmop_size",
                  "resolution": "uqn",
                },
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"shm write test #1: \\"",
          "unicode": false,
          "value": "shm write test #1: ",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "written",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "shm_id",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "write_d1",
            },
            Number {
              "kind": "number",
              "value": "0",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "shmop_write",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"ok\\\\n\\"",
                "unicode": false,
                "value": "ok
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"failed\\\\n\\"",
                "unicode": false,
                "value": "failed
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "written",
        },
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "write_d1",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "strlen",
            "resolution": "uqn",
          },
        },
        "type": "!=",
      },
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"data in memory is: \\"",
              "unicode": false,
              "value": "data in memory is: ",
            },
            "right": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "shm_id",
                },
                Number {
                  "kind": "number",
                  "value": "0",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "written",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "shmop_read",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"shm open for read only: \\"",
          "unicode": false,
          "value": "shm open for read only: ",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "shm_id",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "hex_shm_id",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"a\\"",
              "unicode": false,
              "value": "a",
            },
            Number {
              "kind": "number",
              "value": "0644",
            },
            Number {
              "kind": "number",
              "value": "1024",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "shmop_open",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"ok\\\\n\\"",
                "unicode": false,
                "value": "ok
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"failed\\\\n\\"",
                "unicode": false,
                "value": "failed
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Variable {
          "curly": false,
          "kind": "variable",
          "name": "shm_id",
        },
      },
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"data in memory is: \\"",
              "unicode": false,
              "value": "data in memory is: ",
            },
            "right": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "shm_id",
                },
                Number {
                  "kind": "number",
                  "value": "0",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "written",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "shmop_read",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "shm_id",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "write_d1",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "written",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "shmop_write",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getMessage",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "exception",
                        },
                      },
                    },
                    "right": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"\\\\n\\"",
                      "unicode": false,
                      "value": "
",
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "exception",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "Error",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"shm open for read only: \\"",
          "unicode": false,
          "value": "shm open for read only: ",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "shm_id",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "hex_shm_id",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"w\\"",
              "unicode": false,
              "value": "w",
            },
            Number {
              "kind": "number",
              "value": "0644",
            },
            Number {
              "kind": "number",
              "value": "1024",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "shmop_open",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"ok\\\\n\\"",
                "unicode": false,
                "value": "ok
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"failed\\\\n\\"",
                "unicode": false,
                "value": "failed
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Variable {
          "curly": false,
          "kind": "variable",
          "name": "shm_id",
        },
      },
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"shm write test #2: \\"",
          "unicode": false,
          "value": "shm write test #2: ",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "written",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "shm_id",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "write_d2",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "written",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "shmop_write",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"ok\\\\n\\"",
                "unicode": false,
                "value": "ok
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Exit {
              "expression": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"failed\\\\n\\"",
                "unicode": false,
                "value": "failed
",
              },
              "kind": "exit",
              "useDie": true,
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "written",
        },
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "write_d2",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "strlen",
            "resolution": "uqn",
          },
        },
        "type": "!=",
      },
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"data in memory is: \\"",
              "unicode": false,
              "value": "data in memory is: ",
            },
            "right": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "shm_id",
                },
                Number {
                  "kind": "number",
                  "value": "0",
                },
                Call {
                  "arguments": Array [
                    Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "write_d1",
                      },
                      "right": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "write_d2",
                      },
                      "type": ".",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "strlen",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "shmop_read",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"deletion of shm segment: \\"",
          "unicode": false,
          "value": "deletion of shm segment: ",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    If {
      "alternate": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"ok\\\\n\\"",
                "unicode": false,
                "value": "ok
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"failed\\\\n\\"",
                "unicode": false,
                "value": "failed
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "shm_id",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "shmop_delete",
            "resolution": "uqn",
          },
        },
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
