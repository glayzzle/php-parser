// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test nl2br() function : usage variations - heredoc strings for 'str' argument 1`] = `
Program {
  "children": Array [
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"*** Testing nl2br() : usage variations ***\\\\n\\"",
          "unicode": false,
          "value": "*** Testing nl2br() : usage variations ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "heredoc_str1",
        },
        "operator": "=",
        "right": Encapsed {
          "kind": "encapsed",
          "label": "EOD",
          "raw": "<<<EOD
\\\\n
\\\\r
\\\\r\\\\n
\\\\nnn\\\\n\\\\n\\\\nn
\\\\rrr\\\\r\\\\r\\\\rr
\\\\n\\\\r\\\\n\\\\r\\\\r\\\\n\\\\nr\\\\rn
EOD",
          "type": "heredoc",
          "value": Array [
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "\\\\n
\\\\r
\\\\r\\\\n
\\\\nnn\\\\n\\\\n\\\\nn
\\\\rrr\\\\r\\\\r\\\\rr
\\\\n\\\\r\\\\n\\\\r\\\\r\\\\n\\\\nr\\\\rn
",
                "unicode": false,
                "value": "





nn


n

rr


r





r
n",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
          ],
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "heredoc_str2",
        },
        "operator": "=",
        "right": Encapsed {
          "kind": "encapsed",
          "label": "EOD",
          "raw": "<<<EOD
Hello\\\\nWorld\\\\r
This is \\\\tes\\\\t for \\\\n \\\\new lines
like \\\\n \\\\r\\\\n \\\\r \\\\n\\\\r and etc
EOD",
          "type": "heredoc",
          "value": Array [
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "Hello\\\\nWorld\\\\r
This is \\\\tes\\\\t for \\\\n \\\\new lines
like \\\\n \\\\r\\\\n \\\\r \\\\n\\\\r and etc
",
                "unicode": false,
                "value": "Hello
World
This is 	es	 for 
 
ew lines
like 
 
 
 

 and etc",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
          ],
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "heredoc_str1",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "nl2br",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "heredoc_str2",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "nl2br",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Done\\"",
          "unicode": false,
          "value": "Done",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
