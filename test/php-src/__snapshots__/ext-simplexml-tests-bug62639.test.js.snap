// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #62639 (XML structure broken) 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [],
      "body": Array [],
      "extends": Name {
        "kind": "name",
        "name": "SimpleXMLElement",
        "resolution": "uqn",
      },
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "A",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "xml1",
        },
        "operator": "=",
        "right": Encapsed {
          "kind": "encapsed",
          "label": "XML",
          "raw": "<<<XML
<?xml version=\\"1.0\\"?>
<a>
    <b>
        <c>
            <value attr=\\"Some Attr\\">Some Value</value>
        </c>
    </b>
</a>
XML",
          "type": "heredoc",
          "value": Array [
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "<?xml version=\\"1.0\\"?>
<a>
    <b>
        <c>
            <value attr=\\"Some Attr\\">Some Value</value>
        </c>
    </b>
</a>
",
                "unicode": false,
                "value": "<?xml version=\\"1.0\\"?>
<a>
    <b>
        <c>
            <value attr=\\"Some Attr\\">Some Value</value>
        </c>
    </b>
</a>",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
          ],
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a1",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "xml1",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "A",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "value",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "key": Variable {
        "curly": false,
        "kind": "variable",
        "name": "key",
      },
      "kind": "foreach",
      "shortForm": false,
      "source": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "children",
          },
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "c",
            },
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "b",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "a1",
              },
            },
          },
        },
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "value",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "xml2",
        },
        "operator": "=",
        "right": Encapsed {
          "kind": "encapsed",
          "label": "XML",
          "raw": "<<<XML
<?xml version=\\"1.0\\"?>
<a>
    <b>
        <c><value attr=\\"Some Attr\\">Some Value</value></c>
    </b>
</a>
XML",
          "type": "heredoc",
          "value": Array [
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "<?xml version=\\"1.0\\"?>
<a>
    <b>
        <c><value attr=\\"Some Attr\\">Some Value</value></c>
    </b>
</a>
",
                "unicode": false,
                "value": "<?xml version=\\"1.0\\"?>
<a>
    <b>
        <c><value attr=\\"Some Attr\\">Some Value</value></c>
    </b>
</a>",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
          ],
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a2",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "xml2",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "A",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "value",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "key": Variable {
        "curly": false,
        "kind": "variable",
        "name": "key",
      },
      "kind": "foreach",
      "shortForm": false,
      "source": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "children",
          },
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "c",
            },
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "b",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "a2",
              },
            },
          },
        },
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "value",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
