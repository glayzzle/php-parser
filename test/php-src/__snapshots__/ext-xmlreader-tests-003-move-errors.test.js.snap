// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests XMLReader: libxml2 XML Reader, Move cursor to an attribute, with invalid arguments 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "xmlstring",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<books><book num=\\"1\\" idx=\\"2\\">book1</book></books>'",
          "unicode": false,
          "value": "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<books><book num=\\"1\\" idx=\\"2\\">book1</book></books>",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "filename",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Magic {
            "kind": "magic",
            "raw": "__DIR__",
            "value": "__DIR__",
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'/003-move-errors.xml'",
            "unicode": false,
            "value": "/003-move-errors.xml",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "filename",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "xmlstring",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "file_put_contents",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "reader",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "XMLReader",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Exit {
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'XML could not be read'",
                "unicode": false,
                "value": "XML could not be read",
              },
              "kind": "exit",
              "useDie": false,
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "filename",
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "open",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "reader",
            },
          },
        },
      },
    },
    While {
      "body": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      Echo {
                        "expressions": Array [
                          Bin {
                            "kind": "bin",
                            "left": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "name",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "reader",
                              },
                            },
                            "right": String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"\\\\n\\"",
                              "unicode": false,
                              "value": "
",
                            },
                            "type": ".",
                          },
                        ],
                        "kind": "echo",
                        "shortForm": false,
                      },
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "attr",
                          },
                          "operator": "=",
                          "right": Call {
                            "arguments": Array [],
                            "kind": "call",
                            "what": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "moveToNextAttribute",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "reader",
                              },
                            },
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "attr",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "var_dump",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      Echo {
                        "expressions": Array [
                          Bin {
                            "kind": "bin",
                            "left": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "name",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "reader",
                              },
                            },
                            "right": String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\": \\"",
                              "unicode": false,
                              "value": ": ",
                            },
                            "type": ".",
                          },
                        ],
                        "kind": "echo",
                        "shortForm": false,
                      },
                      Echo {
                        "expressions": Array [
                          Bin {
                            "kind": "bin",
                            "left": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "value",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "reader",
                              },
                            },
                            "right": String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"\\\\n\\"",
                              "unicode": false,
                              "value": "
",
                            },
                            "type": ".",
                          },
                        ],
                        "kind": "echo",
                        "shortForm": false,
                      },
                      Try {
                        "always": null,
                        "body": Block {
                          "children": Array [
                            ExpressionStatement {
                              "expression": Call {
                                "arguments": Array [
                                  String {
                                    "isDoubleQuote": false,
                                    "kind": "string",
                                    "raw": "''",
                                    "unicode": false,
                                    "value": "",
                                  },
                                ],
                                "kind": "call",
                                "what": PropertyLookup {
                                  "kind": "propertylookup",
                                  "offset": Identifier {
                                    "kind": "identifier",
                                    "name": "moveToAttribute",
                                  },
                                  "what": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "reader",
                                  },
                                },
                              },
                              "kind": "expressionstatement",
                            },
                          ],
                          "kind": "block",
                        },
                        "catches": Array [
                          Catch {
                            "body": Block {
                              "children": Array [
                                Echo {
                                  "expressions": Array [
                                    Bin {
                                      "kind": "bin",
                                      "left": Call {
                                        "arguments": Array [],
                                        "kind": "call",
                                        "what": PropertyLookup {
                                          "kind": "propertylookup",
                                          "offset": Identifier {
                                            "kind": "identifier",
                                            "name": "getMessage",
                                          },
                                          "what": Variable {
                                            "curly": false,
                                            "kind": "variable",
                                            "name": "exception",
                                          },
                                        },
                                      },
                                      "right": String {
                                        "isDoubleQuote": true,
                                        "kind": "string",
                                        "raw": "\\"\\\\n\\"",
                                        "unicode": false,
                                        "value": "
",
                                      },
                                      "type": ".",
                                    },
                                  ],
                                  "kind": "echo",
                                  "shortForm": false,
                                },
                              ],
                              "kind": "block",
                            },
                            "kind": "catch",
                            "variable": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "exception",
                            },
                            "what": Array [
                              Name {
                                "kind": "name",
                                "name": "ValueError",
                                "resolution": "uqn",
                              },
                            ],
                          },
                        ],
                        "kind": "try",
                      },
                      Echo {
                        "expressions": Array [
                          Bin {
                            "kind": "bin",
                            "left": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "name",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "reader",
                              },
                            },
                            "right": String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\": \\"",
                              "unicode": false,
                              "value": ": ",
                            },
                            "type": ".",
                          },
                        ],
                        "kind": "echo",
                        "shortForm": false,
                      },
                      Echo {
                        "expressions": Array [
                          Bin {
                            "kind": "bin",
                            "left": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "value",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "reader",
                              },
                            },
                            "right": String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"\\\\n\\"",
                              "unicode": false,
                              "value": "
",
                            },
                            "type": ".",
                          },
                        ],
                        "kind": "echo",
                        "shortForm": false,
                      },
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "attr",
                          },
                          "operator": "=",
                          "right": Call {
                            "arguments": Array [
                              String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'isbn'",
                                "unicode": false,
                                "value": "isbn",
                              },
                            ],
                            "kind": "call",
                            "what": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "moveToAttribute",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "reader",
                              },
                            },
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "attr",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "var_dump",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      Echo {
                        "expressions": Array [
                          Bin {
                            "kind": "bin",
                            "left": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "name",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "reader",
                              },
                            },
                            "right": String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\": \\"",
                              "unicode": false,
                              "value": ": ",
                            },
                            "type": ".",
                          },
                        ],
                        "kind": "echo",
                        "shortForm": false,
                      },
                      Echo {
                        "expressions": Array [
                          Bin {
                            "kind": "bin",
                            "left": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "value",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "reader",
                              },
                            },
                            "right": String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"\\\\n\\"",
                              "unicode": false,
                              "value": "
",
                            },
                            "type": ".",
                          },
                        ],
                        "kind": "echo",
                        "shortForm": false,
                      },
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "attr",
                          },
                          "operator": "=",
                          "right": Call {
                            "arguments": Array [
                              Number {
                                "kind": "number",
                                "value": "911",
                              },
                            ],
                            "kind": "call",
                            "what": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "moveToAttributeNo",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "reader",
                              },
                            },
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "attr",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "var_dump",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      Echo {
                        "expressions": Array [
                          Bin {
                            "kind": "bin",
                            "left": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "name",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "reader",
                              },
                            },
                            "right": String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"\\\\n\\"",
                              "unicode": false,
                              "value": "
",
                            },
                            "type": ".",
                          },
                        ],
                        "kind": "echo",
                        "shortForm": false,
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "nodeType",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "reader",
                        },
                      },
                      "right": StaticLookup {
                        "kind": "staticlookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "ELEMENT",
                        },
                        "what": Name {
                          "kind": "name",
                          "name": "XMLREADER",
                          "resolution": "uqn",
                        },
                      },
                      "type": "==",
                    },
                    "right": Bin {
                      "kind": "bin",
                      "left": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "name",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "reader",
                        },
                      },
                      "right": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'book'",
                        "unicode": false,
                        "value": "book",
                      },
                      "type": "==",
                    },
                    "type": "&&",
                  },
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "nodeType",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "reader",
                },
              },
              "right": StaticLookup {
                "kind": "staticlookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "END_ELEMENT",
                },
                "what": Name {
                  "kind": "name",
                  "name": "XMLREADER",
                  "resolution": "uqn",
                },
              },
              "type": "!=",
            },
          },
        ],
        "kind": "block",
      },
      "kind": "while",
      "shortForm": false,
      "test": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "read",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "reader",
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "close",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "reader",
          },
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
