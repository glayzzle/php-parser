// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests call_user_func_array() passes value to prefer-ref arg if element wasn't a reference 1`] = `
Program {
  "children": Array [
    Namespace {
      "children": Array [
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'array_multisort'",
                "unicode": false,
                "value": "array_multisort",
              },
              Array {
                "items": Array [
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": Array {
                      "items": Array [
                        Entry {
                          "byRef": false,
                          "key": null,
                          "kind": "entry",
                          "unpack": false,
                          "value": Number {
                            "kind": "number",
                            "value": "3",
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": null,
                          "kind": "entry",
                          "unpack": false,
                          "value": Number {
                            "kind": "number",
                            "value": "2",
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": null,
                          "kind": "entry",
                          "unpack": false,
                          "value": Number {
                            "kind": "number",
                            "value": "1",
                          },
                        },
                      ],
                      "kind": "array",
                      "shortForm": true,
                    },
                  },
                ],
                "kind": "array",
                "shortForm": true,
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "call_user_func_array",
              "resolution": "uqn",
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Assign {
            "kind": "assign",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "args",
            },
            "operator": "=",
            "right": Array {
              "items": Array [
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": Array {
                    "items": Array [
                      Entry {
                        "byRef": false,
                        "key": null,
                        "kind": "entry",
                        "unpack": false,
                        "value": Number {
                          "kind": "number",
                          "value": "3",
                        },
                      },
                      Entry {
                        "byRef": false,
                        "key": null,
                        "kind": "entry",
                        "unpack": false,
                        "value": Number {
                          "kind": "number",
                          "value": "2",
                        },
                      },
                      Entry {
                        "byRef": false,
                        "key": null,
                        "kind": "entry",
                        "unpack": false,
                        "value": Number {
                          "kind": "number",
                          "value": "1",
                        },
                      },
                    ],
                    "kind": "array",
                    "shortForm": true,
                  },
                },
              ],
              "kind": "array",
              "shortForm": true,
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'array_multisort'",
                "unicode": false,
                "value": "array_multisort",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "args",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "call_user_func_array",
              "resolution": "uqn",
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "args",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "var_dump",
              "resolution": "uqn",
            },
          },
          "kind": "expressionstatement",
        },
        Unset {
          "kind": "unset",
          "variables": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "args",
            },
          ],
        },
        ExpressionStatement {
          "expression": Assign {
            "kind": "assign",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "array",
            },
            "operator": "=",
            "right": Array {
              "items": Array [
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": Number {
                    "kind": "number",
                    "value": "3",
                  },
                },
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": Number {
                    "kind": "number",
                    "value": "2",
                  },
                },
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": Number {
                    "kind": "number",
                    "value": "1",
                  },
                },
              ],
              "kind": "array",
              "shortForm": true,
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'array_multisort'",
                "unicode": false,
                "value": "array_multisort",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "array",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "call_user_func",
              "resolution": "uqn",
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "array",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "var_dump",
              "resolution": "uqn",
            },
          },
          "kind": "expressionstatement",
        },
        Unset {
          "kind": "unset",
          "variables": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "array",
            },
          ],
        },
      ],
      "kind": "namespace",
      "name": Array [
        "",
      ],
      "withBrackets": true,
    },
    Namespace {
      "children": Array [
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'array_multisort'",
                "unicode": false,
                "value": "array_multisort",
              },
              Array {
                "items": Array [
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": Array {
                      "items": Array [
                        Entry {
                          "byRef": false,
                          "key": null,
                          "kind": "entry",
                          "unpack": false,
                          "value": Number {
                            "kind": "number",
                            "value": "3",
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": null,
                          "kind": "entry",
                          "unpack": false,
                          "value": Number {
                            "kind": "number",
                            "value": "2",
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": null,
                          "kind": "entry",
                          "unpack": false,
                          "value": Number {
                            "kind": "number",
                            "value": "1",
                          },
                        },
                      ],
                      "kind": "array",
                      "shortForm": true,
                    },
                  },
                ],
                "kind": "array",
                "shortForm": true,
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "call_user_func_array",
              "resolution": "uqn",
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Assign {
            "kind": "assign",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "args",
            },
            "operator": "=",
            "right": Array {
              "items": Array [
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": Array {
                    "items": Array [
                      Entry {
                        "byRef": false,
                        "key": null,
                        "kind": "entry",
                        "unpack": false,
                        "value": Number {
                          "kind": "number",
                          "value": "3",
                        },
                      },
                      Entry {
                        "byRef": false,
                        "key": null,
                        "kind": "entry",
                        "unpack": false,
                        "value": Number {
                          "kind": "number",
                          "value": "2",
                        },
                      },
                      Entry {
                        "byRef": false,
                        "key": null,
                        "kind": "entry",
                        "unpack": false,
                        "value": Number {
                          "kind": "number",
                          "value": "1",
                        },
                      },
                    ],
                    "kind": "array",
                    "shortForm": true,
                  },
                },
              ],
              "kind": "array",
              "shortForm": true,
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'array_multisort'",
                "unicode": false,
                "value": "array_multisort",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "args",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "call_user_func_array",
              "resolution": "uqn",
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "args",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "var_dump",
              "resolution": "uqn",
            },
          },
          "kind": "expressionstatement",
        },
        Unset {
          "kind": "unset",
          "variables": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "args",
            },
          ],
        },
        ExpressionStatement {
          "expression": Assign {
            "kind": "assign",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "array",
            },
            "operator": "=",
            "right": Array {
              "items": Array [
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": Number {
                    "kind": "number",
                    "value": "3",
                  },
                },
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": Number {
                    "kind": "number",
                    "value": "2",
                  },
                },
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": Number {
                    "kind": "number",
                    "value": "1",
                  },
                },
              ],
              "kind": "array",
              "shortForm": true,
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'array_multisort'",
                "unicode": false,
                "value": "array_multisort",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "array",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "call_user_func",
              "resolution": "uqn",
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "array",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "var_dump",
              "resolution": "uqn",
            },
          },
          "kind": "expressionstatement",
        },
        Unset {
          "kind": "unset",
          "variables": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "array",
            },
          ],
        },
      ],
      "kind": "namespace",
      "name": "Foo",
      "withBrackets": true,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
