// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #52681 (mb_send_mail() appends an extra MIME-Version header) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "to",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'example@example.com'",
          "unicode": false,
          "value": "example@example.com",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "headers",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'MIME-Version: 2.0'",
          "unicode": false,
          "value": "MIME-Version: 2.0",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "to",
          },
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_language",
              "resolution": "uqn",
            },
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"test\\"",
            "unicode": false,
            "value": "test",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "headers",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mb_send_mail",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
