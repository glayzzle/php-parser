// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests DBA CDB handler test (read only) 1`] = `
Program {
  "children": Array [
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"database handler: cdb\\\\n\\"",
          "unicode": false,
          "value": "database handler: cdb
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "handler",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'cdb'",
          "unicode": false,
          "value": "cdb",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "db_file",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Magic {
            "kind": "magic",
            "raw": "__DIR__",
            "value": "__DIR__",
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'/test.cdb'",
            "unicode": false,
            "value": "/test.cdb",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Error creating database\\\\n\\"",
                "unicode": false,
                "value": "Error creating database
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "a",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "db_file",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "dba_firstkey",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "count",
              },
              "operator": "=",
              "right": Number {
                "kind": "number",
                "value": "0",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "keys",
              },
              "operator": "=",
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "a",
              },
            },
            "kind": "expressionstatement",
          },
          While {
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "a",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "db_file",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "dba_nextkey",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "keys",
                    },
                    "operator": ".=",
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "a",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Post {
                    "kind": "post",
                    "type": "+",
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "count",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "kind": "while",
            "shortForm": false,
            "test": Variable {
              "curly": false,
              "kind": "variable",
              "name": "a",
            },
          },
          Echo {
            "expressions": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "count",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          For {
            "body": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    RetIf {
                      "falseExpr": String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"N\\"",
                        "unicode": false,
                        "value": "N",
                      },
                      "kind": "retif",
                      "test": Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "i",
                          },
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "db_file",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "dba_exists",
                          "resolution": "uqn",
                        },
                      },
                      "trueExpr": String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"Y\\"",
                        "unicode": false,
                        "value": "Y",
                      },
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
              ],
              "kind": "block",
            },
            "increment": Array [
              Post {
                "kind": "post",
                "type": "+",
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
              },
            ],
            "init": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
                "operator": "=",
                "right": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
            ],
            "kind": "for",
            "shortForm": false,
            "test": Array [
              Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
                "right": Number {
                  "kind": "number",
                  "value": "8",
                },
                "type": "<",
              },
            ],
          },
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\n=\\"",
                "unicode": false,
                "value": "
=",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          Echo {
            "expressions": Array [
              Call {
                "arguments": Array [
                  Number {
                    "kind": "number",
                    "value": "1",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "db_file",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "dba_fetch",
                  "resolution": "uqn",
                },
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          Echo {
            "expressions": Array [
              Call {
                "arguments": Array [
                  Number {
                    "kind": "number",
                    "value": "2",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "db_file",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "dba_fetch",
                  "resolution": "uqn",
                },
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          Echo {
            "expressions": Array [
              Call {
                "arguments": Array [
                  Number {
                    "kind": "number",
                    "value": "3",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "db_file",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "dba_fetch",
                  "resolution": "uqn",
                },
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          Echo {
            "expressions": Array [
              Call {
                "arguments": Array [
                  Number {
                    "kind": "number",
                    "value": "4",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "db_file",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "dba_fetch",
                  "resolution": "uqn",
                },
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\n#\\"",
                "unicode": false,
                "value": "
#",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          Echo {
            "expressions": Array [
              Call {
                "arguments": Array [
                  Number {
                    "kind": "number",
                    "value": "1",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "db_file",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "dba_fetch",
                  "resolution": "uqn",
                },
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          Echo {
            "expressions": Array [
              Call {
                "arguments": Array [
                  Number {
                    "kind": "number",
                    "value": "1",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "db_file",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "dba_fetch",
                  "resolution": "uqn",
                },
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          Echo {
            "expressions": Array [
              Call {
                "arguments": Array [
                  Number {
                    "kind": "number",
                    "value": "2",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "db_file",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "dba_fetch",
                  "resolution": "uqn",
                },
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          Echo {
            "expressions": Array [
              Call {
                "arguments": Array [
                  Number {
                    "kind": "number",
                    "value": "2",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "db_file",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "dba_fetch",
                  "resolution": "uqn",
                },
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          Echo {
            "expressions": Array [
              Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"\\\\n?\\"",
                  "unicode": false,
                  "value": "
?",
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "keys",
                },
                "type": ".",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\n#\\"",
                "unicode": false,
                "value": "
#",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "skip",
              },
              "operator": "=",
              "right": Array {
                "items": Array [],
                "kind": "array",
                "shortForm": false,
              },
            },
            "kind": "expressionstatement",
          },
          For {
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "key",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "keys",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "i",
                        },
                        Number {
                          "kind": "number",
                          "value": "1",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "substr",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "key",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "skip",
                      },
                    },
                    "operator": "=",
                    "right": Number {
                      "kind": "number",
                      "value": "0",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Echo {
                  "expressions": Array [
                    Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "key",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "db_file",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "dba_fetch",
                        "resolution": "uqn",
                      },
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
              ],
              "kind": "block",
            },
            "increment": Array [
              Post {
                "kind": "post",
                "type": "+",
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
              },
            ],
            "init": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
                "operator": "=",
                "right": Number {
                  "kind": "number",
                  "value": "0",
                },
              },
            ],
            "kind": "for",
            "shortForm": false,
            "test": Array [
              Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
                "right": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "keys",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "strlen",
                    "resolution": "uqn",
                  },
                },
                "type": "<",
              },
            ],
          },
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\n=\\"",
                "unicode": false,
                "value": "
=",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          For {
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "key",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "keys",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "i",
                        },
                        Number {
                          "kind": "number",
                          "value": "1",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "substr",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                Echo {
                  "expressions": Array [
                    Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "key",
                        },
                        OffsetLookup {
                          "kind": "offsetlookup",
                          "offset": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "key",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "skip",
                          },
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "db_file",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "dba_fetch",
                        "resolution": "uqn",
                      },
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
                ExpressionStatement {
                  "expression": Post {
                    "kind": "post",
                    "type": "+",
                    "what": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "key",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "skip",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "increment": Array [
              Post {
                "kind": "post",
                "type": "+",
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
              },
            ],
            "init": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
                "operator": "=",
                "right": Number {
                  "kind": "number",
                  "value": "0",
                },
              },
            ],
            "kind": "for",
            "shortForm": false,
            "test": Array [
              Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
                "right": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "keys",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "strlen",
                    "resolution": "uqn",
                  },
                },
                "type": "<",
              },
            ],
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db_file",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "dba_close",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "db_file",
          },
          "operator": "=",
          "parenthesizedExpression": true,
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "db_file",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"r\\"",
                "unicode": false,
                "value": "r",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "handler",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "dba_open",
              "resolution": "uqn",
            },
          },
        },
        "right": Boolean {
          "kind": "boolean",
          "raw": "FALSE",
          "value": false,
        },
        "type": "!==",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
