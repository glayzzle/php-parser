// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Hash: hash_hkdf() function: edge cases 1`] = `
Program {
  "children": Array [
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"*** Testing hash_hkdf(): edge cases ***\\\\n\\"",
          "unicode": false,
          "value": "*** Testing hash_hkdf(): edge cases ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "ikm",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'input key material'",
          "unicode": false,
          "value": "input key material",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'Length < digestSize: '",
          "unicode": false,
          "value": "Length < digestSize: ",
        },
        Call {
          "arguments": Array [
            Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'md5'",
                  "unicode": false,
                  "value": "md5",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "ikm",
                },
                Number {
                  "kind": "number",
                  "value": "7",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "hash_hkdf",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "bin2hex",
            "resolution": "uqn",
          },
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'Length % digestSize != 0: '",
          "unicode": false,
          "value": "Length % digestSize != 0: ",
        },
        Call {
          "arguments": Array [
            Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'md5'",
                  "unicode": false,
                  "value": "md5",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "ikm",
                },
                Number {
                  "kind": "number",
                  "value": "17",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "hash_hkdf",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "bin2hex",
            "resolution": "uqn",
          },
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'Algo name case-sensitivity: '",
          "unicode": false,
          "value": "Algo name case-sensitivity: ",
        },
        RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'false'",
            "unicode": false,
            "value": "false",
          },
          "kind": "retif",
          "parenthesizedExpression": true,
          "test": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'Md5'",
                      "unicode": false,
                      "value": "Md5",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "ikm",
                    },
                    Number {
                      "kind": "number",
                      "value": "7",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "hash_hkdf",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "bin2hex",
                "resolution": "uqn",
              },
            },
            "right": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'98b16391063ece'",
              "unicode": false,
              "value": "98b16391063ece",
            },
            "type": "===",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'true'",
            "unicode": false,
            "value": "true",
          },
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Non-crypto algo name case-sensitivity:\\\\n\\"",
          "unicode": false,
          "value": "Non-crypto algo name case-sensitivity:
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'jOaAt'",
                      "unicode": false,
                      "value": "jOaAt",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "ikm",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "hash_hkdf",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'[Error] '",
                        "unicode": false,
                        "value": "[Error] ",
                      },
                      "right": Call {
                        "arguments": Array [],
                        "kind": "call",
                        "what": PropertyLookup {
                          "kind": "propertylookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "getMessage",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "e",
                          },
                        },
                      },
                      "type": ".",
                    },
                    "right": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"\\\\n\\"",
                      "unicode": false,
                      "value": "
",
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "\\\\Error",
              "resolution": "fqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
