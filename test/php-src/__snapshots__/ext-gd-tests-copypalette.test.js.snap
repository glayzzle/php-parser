// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests imagepalettecopy 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "failed",
        },
        "operator": "=",
        "right": Boolean {
          "kind": "boolean",
          "raw": "false",
          "value": false,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "im",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Number {
              "kind": "number",
              "value": "1",
            },
            Number {
              "kind": "number",
              "value": "1",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "imagecreate",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    For {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "im",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolorallocate",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "increment": Array [
        Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "0",
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "right": Number {
            "kind": "number",
            "value": "256",
          },
          "type": "<",
        },
      ],
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "im2",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Number {
              "kind": "number",
              "value": "1",
            },
            Number {
              "kind": "number",
              "value": "1",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "imagecreate",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "im2",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "im",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imagepalettecopy",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    For {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "c",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "im2",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "i",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "imagecolorsforindex",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "failed",
                    },
                    "operator": "=",
                    "right": Boolean {
                      "kind": "boolean",
                      "raw": "true",
                      "value": true,
                    },
                  },
                  "kind": "expressionstatement",
                },
                Break {
                  "kind": "break",
                  "level": null,
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'red'",
                      "unicode": false,
                      "value": "red",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "c",
                    },
                  },
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "i",
                  },
                  "type": "!=",
                },
                "right": Bin {
                  "kind": "bin",
                  "left": OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'green'",
                      "unicode": false,
                      "value": "green",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "c",
                    },
                  },
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "i",
                  },
                  "type": "!=",
                },
                "type": "||",
              },
              "right": Bin {
                "kind": "bin",
                "left": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'blue'",
                    "unicode": false,
                    "value": "blue",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "c",
                  },
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
                "type": "!=",
              },
              "type": "||",
            },
          },
        ],
        "kind": "block",
      },
      "increment": Array [
        Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "0",
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "right": Number {
            "kind": "number",
            "value": "256",
          },
          "type": "<",
        },
      ],
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"copy palette 255 colors: \\"",
          "unicode": false,
          "value": "copy palette 255 colors: ",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'ok'",
            "unicode": false,
            "value": "ok",
          },
          "kind": "retif",
          "test": Variable {
            "curly": false,
            "kind": "variable",
            "name": "failed",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'failed'",
            "unicode": false,
            "value": "failed",
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "im",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Number {
              "kind": "number",
              "value": "1",
            },
            Number {
              "kind": "number",
              "value": "1",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "imagecreate",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "im2",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Number {
              "kind": "number",
              "value": "1",
            },
            Number {
              "kind": "number",
              "value": "1",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "imagecreate",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "im",
          },
          Number {
            "kind": "number",
            "value": "0",
          },
          Number {
            "kind": "number",
            "value": "0",
          },
          Number {
            "kind": "number",
            "value": "0",
          },
          Number {
            "kind": "number",
            "value": "100",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imagecolorallocatealpha",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "im2",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "im",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imagepalettecopy",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "c",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "im2",
            },
            Number {
              "kind": "number",
              "value": "0",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "imagecolorsforindex",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "failed",
              },
              "operator": "=",
              "right": Boolean {
                "kind": "boolean",
                "raw": "true",
                "value": true,
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'red'",
                  "unicode": false,
                  "value": "red",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "c",
                },
              },
              "right": Number {
                "kind": "number",
                "value": "0",
              },
              "type": "!=",
            },
            "right": Bin {
              "kind": "bin",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'green'",
                  "unicode": false,
                  "value": "green",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "c",
                },
              },
              "right": Number {
                "kind": "number",
                "value": "0",
              },
              "type": "!=",
            },
            "type": "||",
          },
          "right": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'blue'",
                "unicode": false,
                "value": "blue",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "c",
              },
            },
            "right": Number {
              "kind": "number",
              "value": "0",
            },
            "type": "!=",
          },
          "type": "||",
        },
        "right": Bin {
          "kind": "bin",
          "left": OffsetLookup {
            "kind": "offsetlookup",
            "offset": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'alpha'",
              "unicode": false,
              "value": "alpha",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "c",
            },
          },
          "right": Number {
            "kind": "number",
            "value": "100",
          },
          "type": "!=",
        },
        "type": "||",
      },
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'copy palette 1 color and alpha: '",
          "unicode": false,
          "value": "copy palette 1 color and alpha: ",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'ok'",
            "unicode": false,
            "value": "ok",
          },
          "kind": "retif",
          "test": Variable {
            "curly": false,
            "kind": "variable",
            "name": "failed",
          },
          "trueExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'failed'",
            "unicode": false,
            "value": "failed",
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
