// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test preg_match() function : error conditions - Malformed UTF-8 offset 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'/a/u'",
            "unicode": false,
            "value": "/a/u",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\xE3\\\\x82\\\\xA2\\"",
            "unicode": false,
            "value": "ã¢",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "m",
          },
          Number {
            "kind": "number",
            "value": "0",
          },
          Number {
            "kind": "number",
            "value": "1",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "preg_match",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "preg_last_error",
                "resolution": "uqn",
              },
            },
            "right": Name {
              "kind": "name",
              "name": "PREG_BAD_UTF8_OFFSET_ERROR",
              "resolution": "uqn",
            },
            "type": "===",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "preg_last_error_msg",
                "resolution": "uqn",
              },
            },
            "right": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'The offset did not correspond to the beginning of a valid UTF-8 code point'",
              "unicode": false,
              "value": "The offset did not correspond to the beginning of a valid UTF-8 code point",
            },
            "type": "===",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
