// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Check for libsodium box 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "keypair",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_box_keypair",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "keypair",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "strlen",
                "resolution": "uqn",
              },
            },
            "right": Name {
              "kind": "name",
              "name": "SODIUM_CRYPTO_BOX_KEYPAIRBYTES",
              "resolution": "uqn",
            },
            "type": "===",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "sk",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "keypair",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_box_secretkey",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "sk",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "strlen",
                "resolution": "uqn",
              },
            },
            "right": Name {
              "kind": "name",
              "name": "SODIUM_CRYPTO_BOX_SECRETKEYBYTES",
              "resolution": "uqn",
            },
            "type": "===",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "pk",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "keypair",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_box_publickey",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "pk",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "strlen",
                "resolution": "uqn",
              },
            },
            "right": Name {
              "kind": "name",
              "name": "SODIUM_CRYPTO_BOX_PUBLICKEYBYTES",
              "resolution": "uqn",
            },
            "type": "===",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "pk",
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "sk",
            },
            "type": "!==",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "pk2",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "sk",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_box_publickey_from_secretkey",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "pk",
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "pk2",
            },
            "type": "===",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "pk2",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "sk",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_scalarmult_base",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "pk",
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "pk2",
            },
            "type": "===",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "keypair2",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "sk",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "pk",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_box_keypair_from_secretkey_and_publickey",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "keypair",
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "keypair2",
            },
            "type": "===",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "seed_x",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'x'",
              "unicode": false,
              "value": "x",
            },
            Name {
              "kind": "name",
              "name": "SODIUM_CRYPTO_BOX_SEEDBYTES",
              "resolution": "uqn",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "str_repeat",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "seed_y",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'y'",
              "unicode": false,
              "value": "y",
            },
            Name {
              "kind": "name",
              "name": "SODIUM_CRYPTO_BOX_SEEDBYTES",
              "resolution": "uqn",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "str_repeat",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "alice_box_kp",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "seed_x",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_box_seed_keypair",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "bob_box_kp",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "seed_y",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_box_seed_keypair",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "message_nonce",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Name {
              "kind": "name",
              "name": "SODIUM_CRYPTO_BOX_NONCEBYTES",
              "resolution": "uqn",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "random_bytes",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "alice_box_secretkey",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "alice_box_kp",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_box_secretkey",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "bob_box_publickey",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "bob_box_kp",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_box_publickey",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "alice_to_bob_kp",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "alice_box_secretkey",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "bob_box_publickey",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_box_keypair_from_secretkey_and_publickey",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "msg",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"Here is another message, to be signed using Alice's secret key, and \\"",
              "unicode": false,
              "value": "Here is another message, to be signed using Alice's secret key, and ",
            },
            "right": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"to be encrypted using Bob's public key. The keys will always be the same \\"",
              "unicode": false,
              "value": "to be encrypted using Bob's public key. The keys will always be the same ",
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"since they are derived from a fixed seeds\\"",
            "unicode": false,
            "value": "since they are derived from a fixed seeds",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "ciphertext",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "msg",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "message_nonce",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "alice_to_bob_kp",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_box",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "ciphertext",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "msg",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "message_nonce",
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "alice_to_bob_kp",
                      },
                      Number {
                        "kind": "number",
                        "value": "1",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "substr",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "sodium_crypto_box",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Call {
                    "arguments": Array [],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "getMessage",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "ex",
                      },
                    },
                  },
                  Name {
                    "kind": "name",
                    "name": "PHP_EOL",
                    "resolution": "uqn",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "ex",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "SodiumException",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "alice_box_kp",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "sodium_memzero",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "bob_box_kp",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "sodium_memzero",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "alice_box_kp",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "seed_x",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_box_seed_keypair",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "bob_box_kp",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "seed_y",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_box_seed_keypair",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "alice_box_publickey",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "alice_box_kp",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_box_publickey",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "bob_box_secretkey",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "bob_box_kp",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_box_secretkey",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "bob_to_alice_kp",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "bob_box_secretkey",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "alice_box_publickey",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_box_keypair_from_secretkey_and_publickey",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "plaintext",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "ciphertext",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "message_nonce",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "bob_to_alice_kp",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_box_open",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "msg",
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "plaintext",
            },
            "type": "===",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "alice_kp",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_box_keypair",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "alice_secretkey",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "alice_kp",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_box_secretkey",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "alice_publickey",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "alice_kp",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_box_publickey",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "bob_kp",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_box_keypair",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "bob_secretkey",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "bob_kp",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_box_secretkey",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "bob_publickey",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "bob_kp",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_box_publickey",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "alice_to_bob_kp",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "alice_secretkey",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "bob_publickey",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_box_keypair_from_secretkey_and_publickey",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "bob_to_alice_kp",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "bob_secretkey",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "alice_publickey",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_box_keypair_from_secretkey_and_publickey",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "alice_to_bob_message_nonce",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Name {
              "kind": "name",
              "name": "SODIUM_CRYPTO_BOX_NONCEBYTES",
              "resolution": "uqn",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "random_bytes",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "alice_to_bob_ciphertext",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'Hi, this is Alice'",
              "unicode": false,
              "value": "Hi, this is Alice",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "alice_to_bob_message_nonce",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "alice_to_bob_kp",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_box",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "alice_message_decrypted_by_bob",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "alice_to_bob_ciphertext",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "alice_to_bob_message_nonce",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "bob_to_alice_kp",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_box_open",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "bob_to_alice_message_nonce",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Name {
              "kind": "name",
              "name": "SODIUM_CRYPTO_BOX_NONCEBYTES",
              "resolution": "uqn",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "random_bytes",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "bob_to_alice_ciphertext",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'Hi Alice! This is Bob'",
              "unicode": false,
              "value": "Hi Alice! This is Bob",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "bob_to_alice_message_nonce",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "bob_to_alice_kp",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_box",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "bob_message_decrypted_by_alice",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "bob_to_alice_ciphertext",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "bob_to_alice_message_nonce",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "alice_to_bob_kp",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_box_open",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "alice_message_decrypted_by_bob",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "bob_message_decrypted_by_alice",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "decrypted_message",
              },
              "operator": "=",
              "right": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'Anonymous message'",
                "unicode": false,
                "value": "Anonymous message",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "anonymous_message_to_alice",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'Anonymous message'",
                    "unicode": false,
                    "value": "Anonymous message",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "alice_publickey",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "sodium_crypto_box_seal",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "decrypted_message",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "anonymous_message_to_alice",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "alice_kp",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "sodium_crypto_box_seal_open",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Bin {
          "kind": "bin",
          "left": Name {
            "kind": "name",
            "name": "SODIUM_LIBRARY_MAJOR_VERSION",
            "resolution": "uqn",
          },
          "right": Number {
            "kind": "number",
            "value": "7",
          },
          "type": ">",
        },
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Name {
              "kind": "name",
              "name": "SODIUM_LIBRARY_MAJOR_VERSION",
              "resolution": "uqn",
            },
            "right": Number {
              "kind": "number",
              "value": "7",
            },
            "type": "==",
          },
          "parenthesizedExpression": true,
          "right": Bin {
            "kind": "bin",
            "left": Name {
              "kind": "name",
              "name": "SODIUM_LIBRARY_MINOR_VERSION",
              "resolution": "uqn",
            },
            "right": Number {
              "kind": "number",
              "value": "5",
            },
            "type": ">=",
          },
          "type": "&&",
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "decrypted_message",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "msg",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Bin {
              "kind": "bin",
              "left": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'7375f4094f1151640bd853cb13dbc1a0ee9e13b0287a89d34fa2f6732be9de13f88457553d'",
                "unicode": false,
                "value": "7375f4094f1151640bd853cb13dbc1a0ee9e13b0287a89d34fa2f6732be9de13f88457553d",
              },
              "right": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'768347116522d6d32c9cb353ef07aa7c83bd129b2bb5db35b28334c935b24f2639405a0604'",
                "unicode": false,
                "value": "768347116522d6d32c9cb353ef07aa7c83bd129b2bb5db35b28334c935b24f2639405a0604",
              },
              "type": ".",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_hex2bin",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "kp",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Bin {
              "kind": "bin",
              "left": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'36a6c2b96a650d80bf7e025e0f58f3d636339575defb370801a54213bd54582d'",
                "unicode": false,
                "value": "36a6c2b96a650d80bf7e025e0f58f3d636339575defb370801a54213bd54582d",
              },
              "right": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'5aecbcf7866e7a4d58a6c1317e2b955f54ecbe2fcbbf7d262c10636ed524480c'",
                "unicode": false,
                "value": "5aecbcf7866e7a4d58a6c1317e2b955f54ecbe2fcbbf7d262c10636ed524480c",
              },
              "type": ".",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_hex2bin",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "msg",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "kp",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "sodium_crypto_box_seal_open",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
