// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Enum namespace 1`] = `
Program {
  "children": Array [
    Namespace {
      "children": Array [
        Enum {
          "attrGroups": Array [],
          "body": Array [
            EnumCase {
              "kind": "enumcase",
              "name": Identifier {
                "kind": "identifier",
                "name": "Baz",
              },
              "value": null,
            },
            Method {
              "arguments": Array [],
              "attrGroups": Array [],
              "body": Block {
                "children": Array [
                  ExpressionStatement {
                    "expression": Call {
                      "arguments": Array [
                        StaticLookup {
                          "kind": "staticlookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "Baz",
                          },
                          "what": Name {
                            "kind": "name",
                            "name": "Bar",
                            "resolution": "uqn",
                          },
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "var_dump",
                        "resolution": "uqn",
                      },
                    },
                    "kind": "expressionstatement",
                  },
                ],
                "kind": "block",
              },
              "byref": false,
              "isAbstract": false,
              "isFinal": false,
              "isStatic": false,
              "kind": "method",
              "name": Identifier {
                "kind": "identifier",
                "name": "dump",
              },
              "nullable": false,
              "type": null,
              "visibility": "public",
            },
          ],
          "implements": null,
          "kind": "enum",
          "name": Identifier {
            "kind": "identifier",
            "name": "Bar",
          },
          "valueType": null,
        },
        _Function {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "dump",
                    },
                    "what": StaticLookup {
                      "kind": "staticlookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "Baz",
                      },
                      "what": Name {
                        "kind": "name",
                        "name": "Bar",
                        "resolution": "uqn",
                      },
                    },
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "kind": "function",
          "name": Identifier {
            "kind": "identifier",
            "name": "dumpBar",
          },
          "nullable": false,
          "type": null,
        },
      ],
      "kind": "namespace",
      "name": "Foo",
      "withBrackets": true,
    },
    Namespace {
      "children": Array [
        UseGroup {
          "items": Array [
            UseItem {
              "alias": null,
              "kind": "useitem",
              "name": "Foo\\\\Bar",
              "type": null,
            },
          ],
          "kind": "usegroup",
          "name": null,
          "type": null,
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "\\\\Foo\\\\dumpBar",
              "resolution": "fqn",
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "dump",
              },
              "what": StaticLookup {
                "kind": "staticlookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "Baz",
                },
                "what": Name {
                  "kind": "name",
                  "name": "\\\\Foo\\\\Bar",
                  "resolution": "fqn",
                },
              },
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "dump",
              },
              "what": StaticLookup {
                "kind": "staticlookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "Baz",
                },
                "what": Name {
                  "kind": "name",
                  "name": "Bar",
                  "resolution": "uqn",
                },
              },
            },
          },
          "kind": "expressionstatement",
        },
      ],
      "kind": "namespace",
      "name": Array [
        "",
      ],
      "withBrackets": true,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
