// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Switch test 1 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "i",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"abc\\"",
          "unicode": false,
          "value": "abc",
        },
      },
      "kind": "expressionstatement",
    },
    For {
      "body": Block {
        "children": Array [
          Switch {
            "body": Block {
              "children": Array [
                Case {
                  "body": Block {
                    "children": Array [
                      Echo {
                        "expressions": Array [
                          String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"In branch 1\\\\n\\"",
                            "unicode": false,
                            "value": "In branch 1
",
                          },
                        ],
                        "kind": "echo",
                        "shortForm": false,
                      },
                      Switch {
                        "body": Block {
                          "children": Array [
                            Case {
                              "body": Block {
                                "children": Array [
                                  Echo {
                                    "expressions": Array [
                                      String {
                                        "isDoubleQuote": true,
                                        "kind": "string",
                                        "raw": "\\"This doesn't work... :(\\\\n\\"",
                                        "unicode": false,
                                        "value": "This doesn't work... :(
",
                                      },
                                    ],
                                    "kind": "echo",
                                    "shortForm": false,
                                  },
                                  Break {
                                    "kind": "break",
                                    "level": null,
                                  },
                                ],
                                "kind": "block",
                              },
                              "kind": "case",
                              "test": String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"ab\\"",
                                "unicode": false,
                                "value": "ab",
                              },
                            },
                            Case {
                              "body": Block {
                                "children": Array [
                                  Echo {
                                    "expressions": Array [
                                      String {
                                        "isDoubleQuote": true,
                                        "kind": "string",
                                        "raw": "\\"This works!\\\\n\\"",
                                        "unicode": false,
                                        "value": "This works!
",
                                      },
                                    ],
                                    "kind": "echo",
                                    "shortForm": false,
                                  },
                                  Break {
                                    "kind": "break",
                                    "level": null,
                                  },
                                ],
                                "kind": "block",
                              },
                              "kind": "case",
                              "test": String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"abcd\\"",
                                "unicode": false,
                                "value": "abcd",
                              },
                            },
                            Case {
                              "body": Block {
                                "children": Array [
                                  Echo {
                                    "expressions": Array [
                                      String {
                                        "isDoubleQuote": true,
                                        "kind": "string",
                                        "raw": "\\"Hmmm, no worki\\\\n\\"",
                                        "unicode": false,
                                        "value": "Hmmm, no worki
",
                                      },
                                    ],
                                    "kind": "echo",
                                    "shortForm": false,
                                  },
                                  Break {
                                    "kind": "break",
                                    "level": null,
                                  },
                                ],
                                "kind": "block",
                              },
                              "kind": "case",
                              "test": String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"blah\\"",
                                "unicode": false,
                                "value": "blah",
                              },
                            },
                            Case {
                              "body": Block {
                                "children": Array [
                                  Echo {
                                    "expressions": Array [
                                      String {
                                        "isDoubleQuote": true,
                                        "kind": "string",
                                        "raw": "\\"Inner default...\\\\n\\"",
                                        "unicode": false,
                                        "value": "Inner default...
",
                                      },
                                    ],
                                    "kind": "echo",
                                    "shortForm": false,
                                  },
                                ],
                                "kind": "block",
                              },
                              "kind": "case",
                              "test": null,
                            },
                          ],
                          "kind": "block",
                        },
                        "kind": "switch",
                        "shortForm": false,
                        "test": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "i",
                        },
                      },
                      For {
                        "body": Block {
                          "children": Array [
                            If {
                              "alternate": null,
                              "body": Block {
                                "children": Array [
                                  Echo {
                                    "expressions": Array [
                                      Encapsed {
                                        "kind": "encapsed",
                                        "raw": "\\"blah=$blah\\\\n\\"",
                                        "type": "string",
                                        "value": Array [
                                          EncapsedPart {
                                            "curly": false,
                                            "expression": String {
                                              "isDoubleQuote": false,
                                              "kind": "string",
                                              "raw": "blah=",
                                              "unicode": false,
                                              "value": "blah=",
                                            },
                                            "kind": "encapsedpart",
                                            "syntax": null,
                                          },
                                          EncapsedPart {
                                            "curly": false,
                                            "expression": Variable {
                                              "curly": false,
                                              "kind": "variable",
                                              "name": "blah",
                                            },
                                            "kind": "encapsedpart",
                                            "syntax": "simple",
                                          },
                                          EncapsedPart {
                                            "curly": false,
                                            "expression": String {
                                              "isDoubleQuote": false,
                                              "kind": "string",
                                              "raw": "\\\\n",
                                              "unicode": false,
                                              "value": "",
                                            },
                                            "kind": "encapsedpart",
                                            "syntax": null,
                                          },
                                        ],
                                      },
                                    ],
                                    "kind": "echo",
                                    "shortForm": false,
                                  },
                                ],
                                "kind": "block",
                              },
                              "kind": "if",
                              "shortForm": false,
                              "test": Bin {
                                "kind": "bin",
                                "left": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "blah",
                                },
                                "right": Number {
                                  "kind": "number",
                                  "value": "100",
                                },
                                "type": "==",
                              },
                            },
                          ],
                          "kind": "block",
                        },
                        "increment": Array [
                          Post {
                            "kind": "post",
                            "type": "+",
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "blah",
                            },
                          },
                        ],
                        "init": Array [
                          Assign {
                            "kind": "assign",
                            "left": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "blah",
                            },
                            "operator": "=",
                            "right": Number {
                              "kind": "number",
                              "value": "0",
                            },
                          },
                        ],
                        "kind": "for",
                        "shortForm": false,
                        "test": Array [
                          Bin {
                            "kind": "bin",
                            "left": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "blah",
                            },
                            "right": Number {
                              "kind": "number",
                              "value": "200",
                            },
                            "type": "<",
                          },
                        ],
                      },
                      Break {
                        "kind": "break",
                        "level": null,
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "case",
                  "test": Number {
                    "kind": "number",
                    "value": "1",
                  },
                },
                Case {
                  "body": Block {
                    "children": Array [
                      Echo {
                        "expressions": Array [
                          String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"In branch 2\\\\n\\"",
                            "unicode": false,
                            "value": "In branch 2
",
                          },
                        ],
                        "kind": "echo",
                        "shortForm": false,
                      },
                      Break {
                        "kind": "break",
                        "level": null,
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "case",
                  "test": Number {
                    "kind": "number",
                    "value": "2",
                  },
                },
                Case {
                  "body": Block {
                    "children": Array [
                      Echo {
                        "expressions": Array [
                          String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"In branch \\\\$i\\\\n\\"",
                            "unicode": false,
                            "value": "In branch $i
",
                          },
                        ],
                        "kind": "echo",
                        "shortForm": false,
                      },
                      Break {
                        "kind": "break",
                        "level": null,
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "case",
                  "test": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "i",
                  },
                },
                Case {
                  "body": Block {
                    "children": Array [
                      Echo {
                        "expressions": Array [
                          String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"In branch 4\\\\n\\"",
                            "unicode": false,
                            "value": "In branch 4
",
                          },
                        ],
                        "kind": "echo",
                        "shortForm": false,
                      },
                      Break {
                        "kind": "break",
                        "level": null,
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "case",
                  "test": Number {
                    "kind": "number",
                    "value": "4",
                  },
                },
                Case {
                  "body": Block {
                    "children": Array [
                      Echo {
                        "expressions": Array [
                          String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"Hi, I'm default\\\\n\\"",
                            "unicode": false,
                            "value": "Hi, I'm default
",
                          },
                        ],
                        "kind": "echo",
                        "shortForm": false,
                      },
                      Break {
                        "kind": "break",
                        "level": null,
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "case",
                  "test": null,
                },
              ],
              "kind": "block",
            },
            "kind": "switch",
            "shortForm": false,
            "test": Number {
              "kind": "number",
              "value": "1",
            },
          },
        ],
        "kind": "block",
      },
      "increment": Array [
        Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "j",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "j",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "0",
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "j",
          },
          "right": Number {
            "kind": "number",
            "value": "10",
          },
          "type": "<",
        },
      ],
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
