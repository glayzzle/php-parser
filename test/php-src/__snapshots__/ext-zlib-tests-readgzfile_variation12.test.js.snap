// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test function readgzfile() by substituting argument 2 with int values. 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "filename",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Magic {
            "kind": "magic",
            "raw": "__DIR__",
            "value": "__DIR__",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"/004.txt.gz\\"",
            "unicode": false,
            "value": "/004.txt.gz",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "variation",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'int 0'",
                "unicode": false,
                "value": "int 0",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "0",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'int 1'",
                "unicode": false,
                "value": "int 1",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "1",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'int 12345'",
                "unicode": false,
                "value": "int 12345",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "12345",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'int -12345'",
                "unicode": false,
                "value": "int -12345",
              },
              "kind": "entry",
              "unpack": false,
              "value": Unary {
                "kind": "unary",
                "type": "-",
                "what": Number {
                  "kind": "number",
                  "value": "2345",
                },
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "filename",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "var",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "readgzfile",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "variation",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "var",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
