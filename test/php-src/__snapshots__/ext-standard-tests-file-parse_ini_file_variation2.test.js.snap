// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test parse_ini_file() function : variation: handling different boolean values 1`] = `
Program {
  "children": Array [
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"*** Testing parse_ini_file() : variation ***\\\\n\\"",
          "unicode": false,
          "value": "*** Testing parse_ini_file() : variation ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "output_file",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Magic {
            "kind": "magic",
            "raw": "__FILE__",
            "value": "__FILE__",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\".ini\\"",
            "unicode": false,
            "value": ".ini",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "iniFile",
        },
        "operator": "=",
        "right": Encapsed {
          "kind": "encapsed",
          "label": "FILE",
          "raw": "<<<FILE
[section1]
value1=on
value2=off
[section2]
value1=true
value2=false
[section3]
value1=yes
value2=no
[section4]
value1=null
value2=
[section5]
value1=\\"on\\"
value2=\\"off\\"
[section6]
value1=\\"true\\"
value2=\\"false\\"
[section7]
value1=\\"yes\\"
value2=\\"no\\"
[section8]
value1=\\"null\\"
value2=\\"\\"
FILE",
          "type": "heredoc",
          "value": Array [
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "[section1]
value1=on
value2=off
[section2]
value1=true
value2=false
[section3]
value1=yes
value2=no
[section4]
value1=null
value2=
[section5]
value1=\\"on\\"
value2=\\"off\\"
[section6]
value1=\\"true\\"
value2=\\"false\\"
[section7]
value1=\\"yes\\"
value2=\\"no\\"
[section8]
value1=\\"null\\"
value2=\\"\\"
",
                "unicode": false,
                "value": "[section1]
value1=on
value2=off
[section2]
value1=true
value2=false
[section3]
value1=yes
value2=no
[section4]
value1=null
value2=
[section5]
value1=\\"on\\"
value2=\\"off\\"
[section6]
value1=\\"true\\"
value2=\\"false\\"
[section7]
value1=\\"yes\\"
value2=\\"no\\"
[section8]
value1=\\"null\\"
value2=\\"\\"",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
          ],
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "output_file",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "iniFile",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "file_put_contents",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "output_file",
            },
            Boolean {
              "kind": "boolean",
              "raw": "true",
              "value": true,
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "parse_ini_file",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "a",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "output_file",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "unlink",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
