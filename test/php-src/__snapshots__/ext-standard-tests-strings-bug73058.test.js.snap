// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #73058 crypt broken when salt is 'too' long 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "pass",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'secret'",
          "unicode": false,
          "value": "secret",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "salt",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'$2y$07$usesomesillystringforsalt$'",
          "unicode": false,
          "value": "$2y$07$usesomesillystringforsalt$",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "pass",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "salt",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "crypt",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "salt",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'$2y$07$usesomesillystringforsaltzzzzzzzzzzzzz$'",
          "unicode": false,
          "value": "$2y$07$usesomesillystringforsaltzzzzzzzzzzzzz$",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "pass",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "salt",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "crypt",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "salt",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'$2y$07$usesomesillystringforx'",
          "unicode": false,
          "value": "$2y$07$usesomesillystringforx",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "pass",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "salt",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "crypt",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Inline {
      "kind": "inline",
      "raw": "
==OK==",
      "value": "==OK==",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
