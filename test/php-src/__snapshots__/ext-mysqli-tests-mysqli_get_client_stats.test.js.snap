// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests mysqli_get_client_stats() 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "field",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "current",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "expected",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": true,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "test_counter",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "desc",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\"",
            "unicode": false,
            "value": "",
          },
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Post {
              "kind": "post",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": If {
              "alternate": Block {
                "children": Array [
                  If {
                    "alternate": null,
                    "body": Block {
                      "children": Array [
                        ExpressionStatement {
                          "expression": Call {
                            "arguments": Array [
                              String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"[%03d] %s Expecting %s = %s/%s, got %s/%s\\\\n\\"",
                                "unicode": false,
                                "value": "[%03d] %s Expecting %s = %s/%s, got %s/%s
",
                              },
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "test_counter",
                              },
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "desc",
                              },
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "field",
                              },
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "expected",
                              },
                              Call {
                                "arguments": Array [
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "expected",
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "gettype",
                                  "resolution": "uqn",
                                },
                              },
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "current",
                              },
                              Call {
                                "arguments": Array [
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "current",
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "gettype",
                                  "resolution": "uqn",
                                },
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "printf",
                              "resolution": "uqn",
                            },
                          },
                          "kind": "expressionstatement",
                        },
                      ],
                      "kind": "block",
                    },
                    "kind": "if",
                    "shortForm": false,
                    "test": Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "current",
                      },
                      "right": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "expected",
                      },
                      "type": "!==",
                    },
                  },
                ],
                "kind": "block",
              },
              "body": Block {
                "children": Array [
                  If {
                    "alternate": null,
                    "body": Block {
                      "children": Array [
                        ExpressionStatement {
                          "expression": Call {
                            "arguments": Array [
                              String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"[%03d] %s Expecting %s = %s/%s, got %s/%s\\\\n\\"",
                                "unicode": false,
                                "value": "[%03d] %s Expecting %s = %s/%s, got %s/%s
",
                              },
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "test_counter",
                              },
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "desc",
                              },
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "field",
                              },
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "expected",
                              },
                              Call {
                                "arguments": Array [
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "expected",
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "gettype",
                                  "resolution": "uqn",
                                },
                              },
                              OffsetLookup {
                                "kind": "offsetlookup",
                                "offset": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "field",
                                },
                                "what": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "current",
                                },
                              },
                              Call {
                                "arguments": Array [
                                  OffsetLookup {
                                    "kind": "offsetlookup",
                                    "offset": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "field",
                                    },
                                    "what": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "current",
                                    },
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "gettype",
                                  "resolution": "uqn",
                                },
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "printf",
                              "resolution": "uqn",
                            },
                          },
                          "kind": "expressionstatement",
                        },
                      ],
                      "kind": "block",
                    },
                    "kind": "if",
                    "shortForm": false,
                    "test": Bin {
                      "kind": "bin",
                      "left": OffsetLookup {
                        "kind": "offsetlookup",
                        "offset": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "field",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "current",
                        },
                      },
                      "right": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "expected",
                      },
                      "type": "!==",
                    },
                  },
                ],
                "kind": "block",
              },
              "kind": "if",
              "shortForm": false,
              "test": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "current",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "is_array",
                  "resolution": "uqn",
                },
              },
            },
            "body": Block {
              "children": Array [
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"[%03d] %s Expecting %s = %s/%s, got %s/%s\\\\n\\"",
                              "unicode": false,
                              "value": "[%03d] %s Expecting %s = %s/%s, got %s/%s
",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "test_counter",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "desc",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "field",
                            },
                            OffsetLookup {
                              "kind": "offsetlookup",
                              "offset": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "field",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "expected",
                              },
                            },
                            Call {
                              "arguments": Array [
                                OffsetLookup {
                                  "kind": "offsetlookup",
                                  "offset": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "field",
                                  },
                                  "what": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "expected",
                                  },
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "gettype",
                                "resolution": "uqn",
                              },
                            },
                            OffsetLookup {
                              "kind": "offsetlookup",
                              "offset": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "field",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "current",
                              },
                            },
                            Call {
                              "arguments": Array [
                                OffsetLookup {
                                  "kind": "offsetlookup",
                                  "offset": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "field",
                                  },
                                  "what": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "current",
                                  },
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "gettype",
                                "resolution": "uqn",
                              },
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "printf",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "field",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "current",
                      },
                    },
                    "right": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "field",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "expected",
                      },
                    },
                    "type": "!==",
                  },
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "current",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "is_array",
                  "resolution": "uqn",
                },
              },
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "expected",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "is_array",
                  "resolution": "uqn",
                },
              },
              "type": "&&",
            },
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "mysqli_get_client_stats_assert_eq",
      },
      "nullable": false,
      "type": null,
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "field",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "current",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "expected",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": true,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "test_counter",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "desc",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\"",
            "unicode": false,
            "value": "",
          },
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Post {
              "kind": "post",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": Block {
              "children": Array [
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"[%03d] %s Expecting %s > %s/%s, got %s/%s\\\\n\\"",
                              "unicode": false,
                              "value": "[%03d] %s Expecting %s > %s/%s, got %s/%s
",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "test_counter",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "desc",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "field",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "expected",
                            },
                            Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "expected",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "gettype",
                                "resolution": "uqn",
                              },
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "current",
                            },
                            Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "current",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "gettype",
                                "resolution": "uqn",
                              },
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "printf",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "current",
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "expected",
                    },
                    "type": "<=",
                  },
                },
              ],
              "kind": "block",
            },
            "body": Block {
              "children": Array [
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"[%03d] %s Expecting %s > %s/%s, got %s/%s\\\\n\\"",
                              "unicode": false,
                              "value": "[%03d] %s Expecting %s > %s/%s, got %s/%s
",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "test_counter",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "desc",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "field",
                            },
                            OffsetLookup {
                              "kind": "offsetlookup",
                              "offset": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "field",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "expected",
                              },
                            },
                            Call {
                              "arguments": Array [
                                OffsetLookup {
                                  "kind": "offsetlookup",
                                  "offset": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "field",
                                  },
                                  "what": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "expected",
                                  },
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "gettype",
                                "resolution": "uqn",
                              },
                            },
                            OffsetLookup {
                              "kind": "offsetlookup",
                              "offset": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "field",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "current",
                              },
                            },
                            Call {
                              "arguments": Array [
                                OffsetLookup {
                                  "kind": "offsetlookup",
                                  "offset": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "field",
                                  },
                                  "what": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "current",
                                  },
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "gettype",
                                "resolution": "uqn",
                              },
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "printf",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "field",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "current",
                      },
                    },
                    "right": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "field",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "expected",
                      },
                    },
                    "type": "<=",
                  },
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "current",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "is_array",
                  "resolution": "uqn",
                },
              },
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "expected",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "is_array",
                  "resolution": "uqn",
                },
              },
              "type": "&&",
            },
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "mysqli_get_client_stats_assert_gt",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": true,
        "target": String {
          "isDoubleQuote": true,
          "kind": "string",
          "parenthesizedExpression": true,
          "raw": "\\"connect.inc\\"",
          "unicode": false,
          "value": "connect.inc",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[002] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
              "unicode": false,
              "value": "[002] Expecting array/any_non_empty, got %s/%s
",
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "gettype",
                "resolution": "uqn",
              },
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_get_client_stats",
                    "resolution": "uqn",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_array",
              "resolution": "uqn",
            },
          },
        },
        "right": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          "kind": "empty",
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"[003] Cannot connect to the server using host=%s, user=%s, passwd=***, dbname=%s, port=%s, socket=%s\\\\n\\"",
                  "unicode": false,
                  "value": "[003] Cannot connect to the server using host=%s, user=%s, passwd=***, dbname=%s, port=%s, socket=%s
",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "host",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "user",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "port",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "socket",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "printf",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Exit {
              "expression": Number {
                "kind": "number",
                "value": "1",
              },
              "kind": "exit",
              "useDie": false,
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          "operator": "=",
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "host",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "user",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "passwd",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "db",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "port",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "socket",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "my_mysqli_connect",
              "resolution": "uqn",
            },
          },
        },
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[004] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
              "unicode": false,
              "value": "[004] Expecting array/any_non_empty, got %s/%s
",
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "gettype",
                "resolution": "uqn",
              },
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "new_info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_get_client_stats",
                    "resolution": "uqn",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_array",
              "resolution": "uqn",
            },
          },
        },
        "right": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          "kind": "empty",
        },
        "type": "||",
      },
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"[005] Expecting the same number of entries in the arrays\\\\n\\"",
                  "unicode": false,
                  "value": "[005] Expecting the same number of entries in the arrays
",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "printf",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "count",
            "resolution": "uqn",
          },
        },
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "new_info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "count",
            "resolution": "uqn",
          },
        },
        "type": "!=",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "test_counter",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "6",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_sent'",
            "unicode": false,
            "value": "bytes_sent",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_gt",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received'",
            "unicode": false,
            "value": "bytes_received",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_gt",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'packets_sent'",
            "unicode": false,
            "value": "packets_sent",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_gt",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'packets_received'",
            "unicode": false,
            "value": "packets_received",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_gt",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'protocol_overhead_in'",
            "unicode": false,
            "value": "protocol_overhead_in",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_gt",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'protocol_overhead_out'",
            "unicode": false,
            "value": "protocol_overhead_out",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_gt",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'result_set_queries'",
            "unicode": false,
            "value": "result_set_queries",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'non_result_set_queries'",
            "unicode": false,
            "value": "non_result_set_queries",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'buffered_sets'",
            "unicode": false,
            "value": "buffered_sets",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'unbuffered_sets'",
            "unicode": false,
            "value": "unbuffered_sets",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'ps_buffered_sets'",
            "unicode": false,
            "value": "ps_buffered_sets",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'ps_unbuffered_sets'",
            "unicode": false,
            "value": "ps_unbuffered_sets",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_skipped_ps'",
            "unicode": false,
            "value": "rows_skipped_ps",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'copy_on_write_saved'",
            "unicode": false,
            "value": "copy_on_write_saved",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'copy_on_write_performed'",
            "unicode": false,
            "value": "copy_on_write_performed",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'command_buffer_too_small'",
            "unicode": false,
            "value": "command_buffer_too_small",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'connect_success'",
            "unicode": false,
            "value": "connect_success",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"1\\"",
            "unicode": false,
            "value": "1",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'connect_failure'",
            "unicode": false,
            "value": "connect_failure",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'connection_reused'",
            "unicode": false,
            "value": "connection_reused",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_normal'",
            "unicode": false,
            "value": "bytes_received_real_data_normal",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"0\\"",
            "unicode": false,
            "value": "0",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_ps'",
            "unicode": false,
            "value": "bytes_received_real_data_ps",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"0\\"",
            "unicode": false,
            "value": "0",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": true,
        "target": String {
          "isDoubleQuote": false,
          "kind": "string",
          "parenthesizedExpression": true,
          "raw": "'table.inc'",
          "unicode": false,
          "value": "table.inc",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "gettype",
                "resolution": "uqn",
              },
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_get_client_stats",
                    "resolution": "uqn",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_array",
              "resolution": "uqn",
            },
          },
        },
        "right": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          "kind": "empty",
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "expected",
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "info",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Testing buffered normal...\\\\n\\"",
          "unicode": false,
          "value": "Testing buffered normal...
",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] SELECT COUNT() FROM test failed, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] SELECT COUNT() FROM test failed, [%d] %s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "res",
          },
          "operator": "=",
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "link",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'SELECT COUNT(*) AS _num FROM test'",
                "unicode": false,
                "value": "SELECT COUNT(*) AS _num FROM test",
              },
              Name {
                "kind": "name",
                "name": "MYSQLI_STORE_RESULT",
                "resolution": "uqn",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_query",
              "resolution": "uqn",
            },
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_server_normal'",
            "unicode": false,
            "value": "rows_fetched_from_server_normal",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'rows_fetched_from_server_normal'",
                "unicode": false,
                "value": "rows_fetched_from_server_normal",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'buffered_sets'",
            "unicode": false,
            "value": "buffered_sets",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'buffered_sets'",
                "unicode": false,
                "value": "buffered_sets",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'result_set_queries'",
            "unicode": false,
            "value": "result_set_queries",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'result_set_queries'",
                "unicode": false,
                "value": "result_set_queries",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_buffered_from_client_normal'",
            "unicode": false,
            "value": "rows_buffered_from_client_normal",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'rows_buffered_from_client_normal'",
                "unicode": false,
                "value": "rows_buffered_from_client_normal",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "gettype",
                "resolution": "uqn",
              },
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_get_client_stats",
                    "resolution": "uqn",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_array",
              "resolution": "uqn",
            },
          },
        },
        "right": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          "kind": "empty",
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_sent'",
            "unicode": false,
            "value": "bytes_sent",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_gt",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received'",
            "unicode": false,
            "value": "bytes_received",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_gt",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_normal'",
            "unicode": false,
            "value": "bytes_received_real_data_normal",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"0\\"",
            "unicode": false,
            "value": "0",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_ps'",
            "unicode": false,
            "value": "bytes_received_real_data_ps",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"0\\"",
            "unicode": false,
            "value": "0",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_server_normal'",
            "unicode": false,
            "value": "rows_fetched_from_server_normal",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_client_normal_buffered'",
            "unicode": false,
            "value": "rows_fetched_from_client_normal_buffered",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'buffered_sets'",
            "unicode": false,
            "value": "buffered_sets",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'result_set_queries'",
            "unicode": false,
            "value": "result_set_queries",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_buffered_from_client_normal'",
            "unicode": false,
            "value": "rows_buffered_from_client_normal",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] fetch_assoc - SELECT COUNT() FROM test failed, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] fetch_assoc - SELECT COUNT() FROM test failed, [%d] %s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "row",
          },
          "operator": "=",
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "res",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_fetch_assoc",
              "resolution": "uqn",
            },
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_client_normal_buffered'",
            "unicode": false,
            "value": "rows_fetched_from_client_normal_buffered",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'rows_fetched_from_client_normal_buffered'",
                "unicode": false,
                "value": "rows_fetched_from_client_normal_buffered",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "gettype",
                "resolution": "uqn",
              },
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_get_client_stats",
                    "resolution": "uqn",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_array",
              "resolution": "uqn",
            },
          },
        },
        "right": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          "kind": "empty",
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_normal'",
            "unicode": false,
            "value": "bytes_received_real_data_normal",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_gt",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_normal'",
            "unicode": false,
            "value": "bytes_received_real_data_normal",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_normal'",
            "unicode": false,
            "value": "bytes_received_real_data_normal",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_ps'",
            "unicode": false,
            "value": "bytes_received_real_data_ps",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"0\\"",
            "unicode": false,
            "value": "0",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_server_normal'",
            "unicode": false,
            "value": "rows_fetched_from_server_normal",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_client_normal_buffered'",
            "unicode": false,
            "value": "rows_fetched_from_client_normal_buffered",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_buffered_from_client_normal'",
            "unicode": false,
            "value": "rows_buffered_from_client_normal",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "num_rows",
        },
        "operator": "=",
        "right": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'_num'",
            "unicode": false,
            "value": "_num",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "row",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "res",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_free_result",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Testing buffered normal... - SELECT id, label FROM test\\\\n\\"",
          "unicode": false,
          "value": "Testing buffered normal... - SELECT id, label FROM test
",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] SELECT id, label FROM test failed, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] SELECT id, label FROM test failed, [%d] %s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "res",
          },
          "operator": "=",
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "link",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'SELECT id, label FROM test'",
                "unicode": false,
                "value": "SELECT id, label FROM test",
              },
              Name {
                "kind": "name",
                "name": "MYSQLI_STORE_RESULT",
                "resolution": "uqn",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_query",
              "resolution": "uqn",
            },
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "res",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_num_rows",
                "resolution": "uqn",
              },
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "num_rows",
            },
            "type": "==",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "assert",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "gettype",
                "resolution": "uqn",
              },
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_get_client_stats",
                    "resolution": "uqn",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_array",
              "resolution": "uqn",
            },
          },
        },
        "right": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          "kind": "empty",
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_server_normal'",
            "unicode": false,
            "value": "rows_fetched_from_server_normal",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'rows_fetched_from_server_normal'",
                "unicode": false,
                "value": "rows_fetched_from_server_normal",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "num_rows",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_buffered_from_client_normal'",
            "unicode": false,
            "value": "rows_buffered_from_client_normal",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'rows_buffered_from_client_normal'",
                "unicode": false,
                "value": "rows_buffered_from_client_normal",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "num_rows",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'buffered_sets'",
            "unicode": false,
            "value": "buffered_sets",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'buffered_sets'",
                "unicode": false,
                "value": "buffered_sets",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'result_set_queries'",
            "unicode": false,
            "value": "result_set_queries",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'result_set_queries'",
                "unicode": false,
                "value": "result_set_queries",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_normal'",
            "unicode": false,
            "value": "bytes_received_real_data_normal",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_server_normal'",
            "unicode": false,
            "value": "rows_fetched_from_server_normal",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_client_normal_buffered'",
            "unicode": false,
            "value": "rows_fetched_from_client_normal_buffered",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'buffered_sets'",
            "unicode": false,
            "value": "buffered_sets",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'result_set_queries'",
            "unicode": false,
            "value": "result_set_queries",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_buffered_from_client_normal'",
            "unicode": false,
            "value": "rows_buffered_from_client_normal",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_buffered_from_client_normal'",
            "unicode": false,
            "value": "rows_buffered_from_client_normal",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "res",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_free_result",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "gettype",
                "resolution": "uqn",
              },
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_get_client_stats",
                    "resolution": "uqn",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_array",
              "resolution": "uqn",
            },
          },
        },
        "right": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          "kind": "empty",
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_normal'",
            "unicode": false,
            "value": "bytes_received_real_data_normal",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_server_normal'",
            "unicode": false,
            "value": "rows_fetched_from_server_normal",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_client_normal_buffered'",
            "unicode": false,
            "value": "rows_fetched_from_client_normal_buffered",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Testing unbuffered normal...\\\\n\\"",
          "unicode": false,
          "value": "Testing unbuffered normal...
",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] SELECT id, label FROM test failed, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] SELECT id, label FROM test failed, [%d] %s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "res",
          },
          "operator": "=",
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "link",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'SELECT id, label FROM test'",
                "unicode": false,
                "value": "SELECT id, label FROM test",
              },
              Name {
                "kind": "name",
                "name": "MYSQLI_USE_RESULT",
                "resolution": "uqn",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_query",
              "resolution": "uqn",
            },
          },
        },
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "gettype",
                "resolution": "uqn",
              },
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_get_client_stats",
                    "resolution": "uqn",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_array",
              "resolution": "uqn",
            },
          },
        },
        "right": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          "kind": "empty",
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_server_normal'",
            "unicode": false,
            "value": "rows_fetched_from_server_normal",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_client_normal_unbuffered'",
            "unicode": false,
            "value": "rows_fetched_from_client_normal_unbuffered",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_normal'",
            "unicode": false,
            "value": "bytes_received_real_data_normal",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    While {
      "body": null,
      "kind": "while",
      "shortForm": false,
      "test": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "row",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "res",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_fetch_assoc",
            "resolution": "uqn",
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "res",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_free_result",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_server_normal'",
            "unicode": false,
            "value": "rows_fetched_from_server_normal",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'rows_fetched_from_server_normal'",
                "unicode": false,
                "value": "rows_fetched_from_server_normal",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "num_rows",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_client_normal_unbuffered'",
            "unicode": false,
            "value": "rows_fetched_from_client_normal_unbuffered",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'rows_fetched_from_client_normal_unbuffered'",
                "unicode": false,
                "value": "rows_fetched_from_client_normal_unbuffered",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "num_rows",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'unbuffered_sets'",
            "unicode": false,
            "value": "unbuffered_sets",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'unbuffered_sets'",
                "unicode": false,
                "value": "unbuffered_sets",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'result_set_queries'",
            "unicode": false,
            "value": "result_set_queries",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'result_set_queries'",
                "unicode": false,
                "value": "result_set_queries",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "gettype",
                "resolution": "uqn",
              },
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_get_client_stats",
                    "resolution": "uqn",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_array",
              "resolution": "uqn",
            },
          },
        },
        "right": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          "kind": "empty",
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_normal'",
            "unicode": false,
            "value": "bytes_received_real_data_normal",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_gt",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_normal'",
            "unicode": false,
            "value": "bytes_received_real_data_normal",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_normal'",
            "unicode": false,
            "value": "bytes_received_real_data_normal",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_server_normal'",
            "unicode": false,
            "value": "rows_fetched_from_server_normal",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_client_normal_unbuffered'",
            "unicode": false,
            "value": "rows_fetched_from_client_normal_unbuffered",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'unbuffered_sets'",
            "unicode": false,
            "value": "unbuffered_sets",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'result_set_queries'",
            "unicode": false,
            "value": "result_set_queries",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Testing unbuffered normal... - SELECT id, label FROM test, not all fetched\\\\n\\"",
          "unicode": false,
          "value": "Testing unbuffered normal... - SELECT id, label FROM test, not all fetched
",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] SELECT id, label FROM test failed, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] SELECT id, label FROM test failed, [%d] %s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "res",
          },
          "operator": "=",
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "link",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'SELECT id, label FROM test'",
                "unicode": false,
                "value": "SELECT id, label FROM test",
              },
              Name {
                "kind": "name",
                "name": "MYSQLI_USE_RESULT",
                "resolution": "uqn",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_query",
              "resolution": "uqn",
            },
          },
        },
      },
    },
    For {
      "body": ExpressionStatement {
        "expression": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "row",
          },
          "operator": "=",
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "res",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_fetch_assoc",
              "resolution": "uqn",
            },
          },
        },
        "kind": "expressionstatement",
      },
      "increment": Array [
        Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "0",
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "right": Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "num_rows",
            },
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "-",
          },
          "type": "<",
        },
      ],
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_server_normal'",
            "unicode": false,
            "value": "rows_fetched_from_server_normal",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'rows_fetched_from_server_normal'",
                  "unicode": false,
                  "value": "rows_fetched_from_server_normal",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "expected",
                },
              },
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "num_rows",
              },
              "type": "+",
            },
            "parenthesizedExpression": true,
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "-",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_client_normal_unbuffered'",
            "unicode": false,
            "value": "rows_fetched_from_client_normal_unbuffered",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'rows_fetched_from_client_normal_unbuffered'",
                  "unicode": false,
                  "value": "rows_fetched_from_client_normal_unbuffered",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "expected",
                },
              },
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "num_rows",
              },
              "type": "+",
            },
            "parenthesizedExpression": true,
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "-",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'unbuffered_sets'",
            "unicode": false,
            "value": "unbuffered_sets",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'unbuffered_sets'",
                "unicode": false,
                "value": "unbuffered_sets",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'result_set_queries'",
            "unicode": false,
            "value": "result_set_queries",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'result_set_queries'",
                "unicode": false,
                "value": "result_set_queries",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "gettype",
                "resolution": "uqn",
              },
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_get_client_stats",
                    "resolution": "uqn",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_array",
              "resolution": "uqn",
            },
          },
        },
        "right": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          "kind": "empty",
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_normal'",
            "unicode": false,
            "value": "bytes_received_real_data_normal",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_gt",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_normal'",
            "unicode": false,
            "value": "bytes_received_real_data_normal",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_normal'",
            "unicode": false,
            "value": "bytes_received_real_data_normal",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_server_normal'",
            "unicode": false,
            "value": "rows_fetched_from_server_normal",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_client_normal_unbuffered'",
            "unicode": false,
            "value": "rows_fetched_from_client_normal_unbuffered",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'unbuffered_sets'",
            "unicode": false,
            "value": "unbuffered_sets",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'result_set_queries'",
            "unicode": false,
            "value": "result_set_queries",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Testing if implicit fetching and cleaning happens...\\\\n\\"",
          "unicode": false,
          "value": "Testing if implicit fetching and cleaning happens...
",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "res",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_free_result",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_server_normal'",
            "unicode": false,
            "value": "rows_fetched_from_server_normal",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'rows_fetched_from_server_normal'",
                "unicode": false,
                "value": "rows_fetched_from_server_normal",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_client_normal_unbuffered'",
            "unicode": false,
            "value": "rows_fetched_from_client_normal_unbuffered",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'rows_fetched_from_client_normal_unbuffered'",
                "unicode": false,
                "value": "rows_fetched_from_client_normal_unbuffered",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_skipped_normal'",
            "unicode": false,
            "value": "rows_skipped_normal",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'rows_skipped_normal'",
                "unicode": false,
                "value": "rows_skipped_normal",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "info",
              },
            },
            "parenthesizedExpression": true,
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'flushed_normal_sets'",
            "unicode": false,
            "value": "flushed_normal_sets",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'flushed_normal_sets'",
                "unicode": false,
                "value": "flushed_normal_sets",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "gettype",
                "resolution": "uqn",
              },
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_get_client_stats",
                    "resolution": "uqn",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_array",
              "resolution": "uqn",
            },
          },
        },
        "right": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          "kind": "empty",
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_normal'",
            "unicode": false,
            "value": "bytes_received_real_data_normal",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_server_normal'",
            "unicode": false,
            "value": "rows_fetched_from_server_normal",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_client_normal_unbuffered'",
            "unicode": false,
            "value": "rows_fetched_from_client_normal_unbuffered",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_skipped_normal'",
            "unicode": false,
            "value": "rows_skipped_normal",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'flushed_normal_sets'",
            "unicode": false,
            "value": "flushed_normal_sets",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Testing buffered Prepared Statements...\\\\n\\"",
          "unicode": false,
          "value": "Testing buffered Prepared Statements...
",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] stmt_init() failed, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] stmt_init() failed, [%d] %s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "stmt",
          },
          "operator": "=",
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "link",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_stmt_init",
              "resolution": "uqn",
            },
          },
        },
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] prepare/execute failed, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] prepare/execute failed, [%d] %s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "stmt",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'SELECT id, label FROM test'",
                "unicode": false,
                "value": "SELECT id, label FROM test",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_stmt_prepare",
              "resolution": "uqn",
            },
          },
        },
        "right": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "stmt",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_stmt_execute",
              "resolution": "uqn",
            },
          },
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_server_ps'",
            "unicode": false,
            "value": "rows_fetched_from_server_ps",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_client_ps_buffered'",
            "unicode": false,
            "value": "rows_fetched_from_client_ps_buffered",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] store_result failed, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] store_result failed, [%d] %s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "stmt",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_stmt_store_result",
            "resolution": "uqn",
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "stmt",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_stmt_free_result",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_ps'",
            "unicode": false,
            "value": "bytes_received_real_data_ps",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"0\\"",
            "unicode": false,
            "value": "0",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_normal'",
            "unicode": false,
            "value": "bytes_received_real_data_normal",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_server_ps'",
            "unicode": false,
            "value": "rows_fetched_from_server_ps",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'rows_fetched_from_server_ps'",
                "unicode": false,
                "value": "rows_fetched_from_server_ps",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "num_rows",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'result_set_queries'",
            "unicode": false,
            "value": "result_set_queries",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'result_set_queries'",
                "unicode": false,
                "value": "result_set_queries",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'ps_buffered_sets'",
            "unicode": false,
            "value": "ps_buffered_sets",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'ps_buffered_sets'",
                "unicode": false,
                "value": "ps_buffered_sets",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_buffered_from_client_ps'",
            "unicode": false,
            "value": "rows_buffered_from_client_ps",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'rows_buffered_from_client_ps'",
                "unicode": false,
                "value": "rows_buffered_from_client_ps",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "num_rows",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "gettype",
                "resolution": "uqn",
              },
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_get_client_stats",
                    "resolution": "uqn",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_array",
              "resolution": "uqn",
            },
          },
        },
        "right": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          "kind": "empty",
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_server_ps'",
            "unicode": false,
            "value": "rows_fetched_from_server_ps",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_client_ps_buffered'",
            "unicode": false,
            "value": "rows_fetched_from_client_ps_buffered",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'result_set_queries'",
            "unicode": false,
            "value": "result_set_queries",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'ps_buffered_sets'",
            "unicode": false,
            "value": "ps_buffered_sets",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_buffered_from_client_ps'",
            "unicode": false,
            "value": "rows_buffered_from_client_ps",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_ps'",
            "unicode": false,
            "value": "bytes_received_real_data_ps",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"0\\"",
            "unicode": false,
            "value": "0",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Testing buffered Prepared Statements... - fetching all\\\\n\\"",
          "unicode": false,
          "value": "Testing buffered Prepared Statements... - fetching all
",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] prepare/execute failed, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] prepare/execute failed, [%d] %s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "stmt",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'SELECT id, label FROM test'",
                "unicode": false,
                "value": "SELECT id, label FROM test",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_stmt_prepare",
              "resolution": "uqn",
            },
          },
        },
        "right": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "stmt",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_stmt_execute",
              "resolution": "uqn",
            },
          },
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "id",
        },
        "operator": "=",
        "right": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "label",
          },
          "operator": "=",
          "right": NullKeyword {
            "kind": "nullkeyword",
            "raw": "null",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] bind_result failed, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] bind_result failed, [%d] %s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "stmt",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "id",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "label",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_stmt_bind_result",
            "resolution": "uqn",
          },
        },
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] store_result failed, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] store_result failed, [%d] %s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "stmt",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_stmt_store_result",
            "resolution": "uqn",
          },
        },
      },
    },
    While {
      "body": null,
      "kind": "while",
      "shortForm": false,
      "test": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "stmt",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_stmt_fetch",
          "resolution": "uqn",
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_server_ps'",
            "unicode": false,
            "value": "rows_fetched_from_server_ps",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'rows_fetched_from_server_ps'",
                "unicode": false,
                "value": "rows_fetched_from_server_ps",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "num_rows",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_client_ps_buffered'",
            "unicode": false,
            "value": "rows_fetched_from_client_ps_buffered",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'rows_fetched_from_client_ps_buffered'",
                "unicode": false,
                "value": "rows_fetched_from_client_ps_buffered",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "num_rows",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'result_set_queries'",
            "unicode": false,
            "value": "result_set_queries",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'result_set_queries'",
                "unicode": false,
                "value": "result_set_queries",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'ps_buffered_sets'",
            "unicode": false,
            "value": "ps_buffered_sets",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'ps_buffered_sets'",
                "unicode": false,
                "value": "ps_buffered_sets",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_buffered_from_client_ps'",
            "unicode": false,
            "value": "rows_buffered_from_client_ps",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'rows_buffered_from_client_ps'",
                "unicode": false,
                "value": "rows_buffered_from_client_ps",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "num_rows",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "gettype",
                "resolution": "uqn",
              },
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_get_client_stats",
                    "resolution": "uqn",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_array",
              "resolution": "uqn",
            },
          },
        },
        "right": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          "kind": "empty",
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_ps'",
            "unicode": false,
            "value": "bytes_received_real_data_ps",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_gt",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_ps'",
            "unicode": false,
            "value": "bytes_received_real_data_ps",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_ps'",
            "unicode": false,
            "value": "bytes_received_real_data_ps",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_server_ps'",
            "unicode": false,
            "value": "rows_fetched_from_server_ps",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_client_ps_buffered'",
            "unicode": false,
            "value": "rows_fetched_from_client_ps_buffered",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'result_set_queries'",
            "unicode": false,
            "value": "result_set_queries",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'ps_buffered_sets'",
            "unicode": false,
            "value": "ps_buffered_sets",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_buffered_from_client_ps'",
            "unicode": false,
            "value": "rows_buffered_from_client_ps",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "stmt",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_stmt_free_result",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Testing buffered Prepared Statements... - fetching all but one\\\\n\\"",
          "unicode": false,
          "value": "Testing buffered Prepared Statements... - fetching all but one
",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] prepare/execute failed, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] prepare/execute failed, [%d] %s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "stmt",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'SELECT id, label FROM test'",
                "unicode": false,
                "value": "SELECT id, label FROM test",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_stmt_prepare",
              "resolution": "uqn",
            },
          },
        },
        "right": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "stmt",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_stmt_execute",
              "resolution": "uqn",
            },
          },
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "id",
        },
        "operator": "=",
        "right": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "label",
          },
          "operator": "=",
          "right": NullKeyword {
            "kind": "nullkeyword",
            "raw": "null",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] bind_result failed, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] bind_result failed, [%d] %s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "stmt",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "id",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "label",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_stmt_bind_result",
            "resolution": "uqn",
          },
        },
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] store_result failed, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] store_result failed, [%d] %s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "stmt",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_stmt_store_result",
            "resolution": "uqn",
          },
        },
      },
    },
    For {
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "stmt",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_stmt_fetch",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "increment": Array [
        Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "0",
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "right": Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "num_rows",
            },
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "-",
          },
          "type": "<",
        },
      ],
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_server_ps'",
            "unicode": false,
            "value": "rows_fetched_from_server_ps",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'rows_fetched_from_server_ps'",
                "unicode": false,
                "value": "rows_fetched_from_server_ps",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "num_rows",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_client_ps_buffered'",
            "unicode": false,
            "value": "rows_fetched_from_client_ps_buffered",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'rows_fetched_from_client_ps_buffered'",
                  "unicode": false,
                  "value": "rows_fetched_from_client_ps_buffered",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "expected",
                },
              },
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "num_rows",
              },
              "type": "+",
            },
            "parenthesizedExpression": true,
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "-",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'result_set_queries'",
            "unicode": false,
            "value": "result_set_queries",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'result_set_queries'",
                "unicode": false,
                "value": "result_set_queries",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'ps_buffered_sets'",
            "unicode": false,
            "value": "ps_buffered_sets",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'ps_buffered_sets'",
                "unicode": false,
                "value": "ps_buffered_sets",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_buffered_from_client_ps'",
            "unicode": false,
            "value": "rows_buffered_from_client_ps",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'rows_buffered_from_client_ps'",
                "unicode": false,
                "value": "rows_buffered_from_client_ps",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "num_rows",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "gettype",
                "resolution": "uqn",
              },
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_get_client_stats",
                    "resolution": "uqn",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_array",
              "resolution": "uqn",
            },
          },
        },
        "right": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          "kind": "empty",
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_ps'",
            "unicode": false,
            "value": "bytes_received_real_data_ps",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_gt",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_ps'",
            "unicode": false,
            "value": "bytes_received_real_data_ps",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_ps'",
            "unicode": false,
            "value": "bytes_received_real_data_ps",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_server_ps'",
            "unicode": false,
            "value": "rows_fetched_from_server_ps",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_client_ps_buffered'",
            "unicode": false,
            "value": "rows_fetched_from_client_ps_buffered",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'result_set_queries'",
            "unicode": false,
            "value": "result_set_queries",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'ps_buffered_sets'",
            "unicode": false,
            "value": "ps_buffered_sets",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_buffered_from_client_ps'",
            "unicode": false,
            "value": "rows_buffered_from_client_ps",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_skipped_ps'",
            "unicode": false,
            "value": "rows_skipped_ps",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_skipped_ps'",
            "unicode": false,
            "value": "rows_skipped_ps",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "stmt",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_stmt_free_result",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "gettype",
                "resolution": "uqn",
              },
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_get_client_stats",
                    "resolution": "uqn",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_array",
              "resolution": "uqn",
            },
          },
        },
        "right": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          "kind": "empty",
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_skipped_ps'",
            "unicode": false,
            "value": "rows_skipped_ps",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Testing unbuffered Prepared Statements... - fetching all\\\\n\\"",
          "unicode": false,
          "value": "Testing unbuffered Prepared Statements... - fetching all
",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] prepare/execute failed, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] prepare/execute failed, [%d] %s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "stmt",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'SELECT id, label FROM test'",
                "unicode": false,
                "value": "SELECT id, label FROM test",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_stmt_prepare",
              "resolution": "uqn",
            },
          },
        },
        "right": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "stmt",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_stmt_execute",
              "resolution": "uqn",
            },
          },
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "id",
        },
        "operator": "=",
        "right": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "label",
          },
          "operator": "=",
          "right": NullKeyword {
            "kind": "nullkeyword",
            "raw": "null",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] bind_result failed, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] bind_result failed, [%d] %s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "stmt",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "id",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "label",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_stmt_bind_result",
            "resolution": "uqn",
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "i",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "0",
        },
      },
      "kind": "expressionstatement",
    },
    While {
      "body": ExpressionStatement {
        "expression": Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "while",
      "shortForm": false,
      "test": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "stmt",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_stmt_fetch",
          "resolution": "uqn",
        },
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Assign {
            "kind": "assign",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "num_rows",
            },
            "operator": "=",
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "i",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "assert",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_server_ps'",
            "unicode": false,
            "value": "rows_fetched_from_server_ps",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'rows_fetched_from_server_ps'",
                "unicode": false,
                "value": "rows_fetched_from_server_ps",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "num_rows",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_client_ps_unbuffered'",
            "unicode": false,
            "value": "rows_fetched_from_client_ps_unbuffered",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'rows_fetched_from_client_ps_unbuffered'",
                "unicode": false,
                "value": "rows_fetched_from_client_ps_unbuffered",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "num_rows",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'result_set_queries'",
            "unicode": false,
            "value": "result_set_queries",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'result_set_queries'",
                "unicode": false,
                "value": "result_set_queries",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'ps_unbuffered_sets'",
            "unicode": false,
            "value": "ps_unbuffered_sets",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'ps_unbuffered_sets'",
                "unicode": false,
                "value": "ps_unbuffered_sets",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "gettype",
                "resolution": "uqn",
              },
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_get_client_stats",
                    "resolution": "uqn",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_array",
              "resolution": "uqn",
            },
          },
        },
        "right": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          "kind": "empty",
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_ps'",
            "unicode": false,
            "value": "bytes_received_real_data_ps",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_gt",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_ps'",
            "unicode": false,
            "value": "bytes_received_real_data_ps",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_ps'",
            "unicode": false,
            "value": "bytes_received_real_data_ps",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_server_ps'",
            "unicode": false,
            "value": "rows_fetched_from_server_ps",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_client_ps_unbuffered'",
            "unicode": false,
            "value": "rows_fetched_from_client_ps_unbuffered",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'result_set_queries'",
            "unicode": false,
            "value": "result_set_queries",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'ps_unbuffered_sets'",
            "unicode": false,
            "value": "ps_unbuffered_sets",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_buffered_from_client_ps'",
            "unicode": false,
            "value": "rows_buffered_from_client_ps",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "stmt",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_stmt_free_result",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Testing unbuffered Prepared Statements... - fetching all but one\\\\n\\"",
          "unicode": false,
          "value": "Testing unbuffered Prepared Statements... - fetching all but one
",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] prepare/execute failed, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] prepare/execute failed, [%d] %s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "stmt",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'SELECT id, label FROM test'",
                "unicode": false,
                "value": "SELECT id, label FROM test",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_stmt_prepare",
              "resolution": "uqn",
            },
          },
        },
        "right": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "stmt",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_stmt_execute",
              "resolution": "uqn",
            },
          },
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "id",
        },
        "operator": "=",
        "right": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "label",
          },
          "operator": "=",
          "right": NullKeyword {
            "kind": "nullkeyword",
            "raw": "null",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] bind_result failed, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] bind_result failed, [%d] %s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "stmt",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "id",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "label",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_stmt_bind_result",
            "resolution": "uqn",
          },
        },
      },
    },
    For {
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "stmt",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_stmt_fetch",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "increment": Array [
        Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "0",
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "right": Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "num_rows",
            },
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "-",
          },
          "type": "<",
        },
      ],
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_server_ps'",
            "unicode": false,
            "value": "rows_fetched_from_server_ps",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'rows_fetched_from_server_ps'",
                  "unicode": false,
                  "value": "rows_fetched_from_server_ps",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "expected",
                },
              },
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "num_rows",
              },
              "type": "+",
            },
            "parenthesizedExpression": true,
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "-",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_client_ps_unbuffered'",
            "unicode": false,
            "value": "rows_fetched_from_client_ps_unbuffered",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'rows_fetched_from_client_ps_unbuffered'",
                  "unicode": false,
                  "value": "rows_fetched_from_client_ps_unbuffered",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "expected",
                },
              },
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "num_rows",
              },
              "type": "+",
            },
            "parenthesizedExpression": true,
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "-",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'result_set_queries'",
            "unicode": false,
            "value": "result_set_queries",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'result_set_queries'",
                "unicode": false,
                "value": "result_set_queries",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'ps_unbuffered_sets'",
            "unicode": false,
            "value": "ps_unbuffered_sets",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'ps_unbuffered_sets'",
                "unicode": false,
                "value": "ps_unbuffered_sets",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "gettype",
                "resolution": "uqn",
              },
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_get_client_stats",
                    "resolution": "uqn",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_array",
              "resolution": "uqn",
            },
          },
        },
        "right": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          "kind": "empty",
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_ps'",
            "unicode": false,
            "value": "bytes_received_real_data_ps",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_gt",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_ps'",
            "unicode": false,
            "value": "bytes_received_real_data_ps",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_ps'",
            "unicode": false,
            "value": "bytes_received_real_data_ps",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_server_ps'",
            "unicode": false,
            "value": "rows_fetched_from_server_ps",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_client_ps_unbuffered'",
            "unicode": false,
            "value": "rows_fetched_from_client_ps_unbuffered",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'result_set_queries'",
            "unicode": false,
            "value": "result_set_queries",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'ps_unbuffered_sets'",
            "unicode": false,
            "value": "ps_unbuffered_sets",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_buffered_from_client_ps'",
            "unicode": false,
            "value": "rows_buffered_from_client_ps",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "stmt",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_stmt_free_result",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_skipped_ps'",
            "unicode": false,
            "value": "rows_skipped_ps",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'rows_skipped_ps'",
                "unicode": false,
                "value": "rows_skipped_ps",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'flushed_ps_sets'",
            "unicode": false,
            "value": "flushed_ps_sets",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'flushed_ps_sets'",
                "unicode": false,
                "value": "flushed_ps_sets",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_server_ps'",
            "unicode": false,
            "value": "rows_fetched_from_server_ps",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": Cast {
          "expr": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'rows_fetched_from_server_ps'",
                "unicode": false,
                "value": "rows_fetched_from_server_ps",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected",
              },
            },
            "parenthesizedExpression": true,
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "+",
          },
          "kind": "cast",
          "raw": "(string)",
          "type": "string",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "gettype",
                "resolution": "uqn",
              },
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_get_client_stats",
                    "resolution": "uqn",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_array",
              "resolution": "uqn",
            },
          },
        },
        "right": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          "kind": "empty",
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_ps'",
            "unicode": false,
            "value": "bytes_received_real_data_ps",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_skipped_ps'",
            "unicode": false,
            "value": "rows_skipped_ps",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'flushed_ps_sets'",
            "unicode": false,
            "value": "flushed_ps_sets",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_server_ps'",
            "unicode": false,
            "value": "rows_fetched_from_server_ps",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"... done with fetch statistics\\\\n\\"",
          "unicode": false,
          "value": "... done with fetch statistics
",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "gettype",
                "resolution": "uqn",
              },
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_get_client_stats",
                    "resolution": "uqn",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_array",
              "resolution": "uqn",
            },
          },
        },
        "right": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          "kind": "empty",
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_normal'",
            "unicode": false,
            "value": "bytes_received_real_data_normal",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_ps'",
            "unicode": false,
            "value": "bytes_received_real_data_ps",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "gettype",
                "resolution": "uqn",
              },
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_get_client_stats",
                    "resolution": "uqn",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_array",
              "resolution": "uqn",
            },
          },
        },
        "right": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          "kind": "empty",
        },
        "type": "||",
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] SELECT failed, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] SELECT failed, [%d] %s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "res",
          },
          "operator": "=",
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "link",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"SELECT id, label FROM test\\"",
                "unicode": false,
                "value": "SELECT id, label FROM test",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_query",
              "resolution": "uqn",
            },
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "rows",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "0",
        },
      },
      "kind": "expressionstatement",
    },
    While {
      "body": ExpressionStatement {
        "expression": Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "rows",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "while",
      "shortForm": false,
      "test": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "row",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "res",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_fetch_assoc",
            "resolution": "uqn",
          },
        },
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Expecting at least one result, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Expecting at least one result, [%d] %s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Number {
          "kind": "number",
          "value": "0",
        },
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "rows",
        },
        "type": "==",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "res",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_free_result",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "gettype",
                "resolution": "uqn",
              },
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "new_info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_get_client_stats",
                    "resolution": "uqn",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_array",
              "resolution": "uqn",
            },
          },
        },
        "right": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          "kind": "empty",
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'result_set_queries'",
            "unicode": false,
            "value": "result_set_queries",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          Cast {
            "expr": Bin {
              "kind": "bin",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'result_set_queries'",
                  "unicode": false,
                  "value": "result_set_queries",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
              },
              "parenthesizedExpression": true,
              "right": Number {
                "kind": "number",
                "value": "1",
              },
              "type": "+",
            },
            "kind": "cast",
            "raw": "(string)",
            "type": "string",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "info",
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "new_info",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_normal'",
            "unicode": false,
            "value": "bytes_received_real_data_normal",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_gt",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_normal'",
            "unicode": false,
            "value": "bytes_received_real_data_normal",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_normal'",
            "unicode": false,
            "value": "bytes_received_real_data_normal",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] DROP TABLE failed, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] DROP TABLE failed, [%d] %s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "link",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"DROP TABLE IF EXISTS non_result_set_queries_test\\"",
              "unicode": false,
              "value": "DROP TABLE IF EXISTS non_result_set_queries_test",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_query",
            "resolution": "uqn",
          },
        },
      },
    },
    If {
      "alternate": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
                    "unicode": false,
                    "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
                  },
                  Pre {
                    "kind": "pre",
                    "type": "+",
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "test_counter",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "new_info",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "gettype",
                      "resolution": "uqn",
                    },
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "new_info",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Unary {
                "kind": "unary",
                "type": "!",
                "what": Call {
                  "arguments": Array [
                    Assign {
                      "kind": "assign",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "new_info",
                      },
                      "operator": "=",
                      "right": Call {
                        "arguments": Array [],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_get_client_stats",
                          "resolution": "uqn",
                        },
                      },
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "is_array",
                    "resolution": "uqn",
                  },
                },
              },
              "right": Empty {
                "expression": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
                "kind": "empty",
              },
              "type": "||",
            },
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'non_result_set_queries'",
                  "unicode": false,
                  "value": "non_result_set_queries",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
                Cast {
                  "expr": Bin {
                    "kind": "bin",
                    "left": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'non_result_set_queries'",
                        "unicode": false,
                        "value": "non_result_set_queries",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "info",
                      },
                    },
                    "parenthesizedExpression": true,
                    "right": Number {
                      "kind": "number",
                      "value": "2",
                    },
                    "type": "+",
                  },
                  "kind": "cast",
                  "raw": "(string)",
                  "type": "string",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "test_counter",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'CREATE/DROP TABLE'",
                  "unicode": false,
                  "value": "CREATE/DROP TABLE",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_get_client_stats_assert_eq",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"[%03d] CREATE TABLE failed, [%d] %s\\\\n\\"",
                  "unicode": false,
                  "value": "[%03d] CREATE TABLE failed, [%d] %s
",
                },
                Pre {
                  "kind": "pre",
                  "type": "+",
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "test_counter",
                  },
                },
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "link",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_errno",
                    "resolution": "uqn",
                  },
                },
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "link",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_error",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "printf",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "link",
            },
            Bin {
              "kind": "bin",
              "left": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"CREATE TABLE non_result_set_queries_test(id INT) ENGINE = \\"",
                "unicode": false,
                "value": "CREATE TABLE non_result_set_queries_test(id INT) ENGINE = ",
              },
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "engine",
              },
              "type": ".",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_query",
            "resolution": "uqn",
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "info",
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "new_info",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
                    "unicode": false,
                    "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
                  },
                  Pre {
                    "kind": "pre",
                    "type": "+",
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "test_counter",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "new_info",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "gettype",
                      "resolution": "uqn",
                    },
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "new_info",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Unary {
                "kind": "unary",
                "type": "!",
                "what": Call {
                  "arguments": Array [
                    Assign {
                      "kind": "assign",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "new_info",
                      },
                      "operator": "=",
                      "right": Call {
                        "arguments": Array [],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_get_client_stats",
                          "resolution": "uqn",
                        },
                      },
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "is_array",
                    "resolution": "uqn",
                  },
                },
              },
              "right": Empty {
                "expression": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
                "kind": "empty",
              },
              "type": "||",
            },
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'non_result_set_queries'",
                  "unicode": false,
                  "value": "non_result_set_queries",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
                Cast {
                  "expr": Bin {
                    "kind": "bin",
                    "left": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'non_result_set_queries'",
                        "unicode": false,
                        "value": "non_result_set_queries",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "info",
                      },
                    },
                    "parenthesizedExpression": true,
                    "right": Number {
                      "kind": "number",
                      "value": "1",
                    },
                    "type": "+",
                  },
                  "kind": "cast",
                  "raw": "(string)",
                  "type": "string",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "test_counter",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'ALTER TABLE'",
                  "unicode": false,
                  "value": "ALTER TABLE",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_get_client_stats_assert_eq",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"[%03d] ALTER TABLE failed, [%d] %s\\\\n\\"",
                  "unicode": false,
                  "value": "[%03d] ALTER TABLE failed, [%d] %s
",
                },
                Pre {
                  "kind": "pre",
                  "type": "+",
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "test_counter",
                  },
                },
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "link",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_errno",
                    "resolution": "uqn",
                  },
                },
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "link",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_error",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "printf",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "link",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"ALTER TABLE non_result_set_queries_test ADD label CHAR(1)\\"",
              "unicode": false,
              "value": "ALTER TABLE non_result_set_queries_test ADD label CHAR(1)",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_query",
            "resolution": "uqn",
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "info",
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "new_info",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[%03d] DROP INDEX failed, [%d] %s\\\\n\\"",
                    "unicode": false,
                    "value": "[%03d] DROP INDEX failed, [%d] %s
",
                  },
                  Pre {
                    "kind": "pre",
                    "type": "+",
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "test_counter",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "link",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_errno",
                      "resolution": "uqn",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "link",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_error",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "link",
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"DROP INDEX idx_1 ON non_result_set_queries_test\\"",
                    "unicode": false,
                    "value": "DROP INDEX idx_1 ON non_result_set_queries_test",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_query",
                  "resolution": "uqn",
                },
              },
            },
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
                    "unicode": false,
                    "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
                  },
                  Pre {
                    "kind": "pre",
                    "type": "+",
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "test_counter",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "new_info",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "gettype",
                      "resolution": "uqn",
                    },
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "new_info",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Unary {
                "kind": "unary",
                "type": "!",
                "what": Call {
                  "arguments": Array [
                    Assign {
                      "kind": "assign",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "new_info",
                      },
                      "operator": "=",
                      "right": Call {
                        "arguments": Array [],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_get_client_stats",
                          "resolution": "uqn",
                        },
                      },
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "is_array",
                    "resolution": "uqn",
                  },
                },
              },
              "right": Empty {
                "expression": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
                "kind": "empty",
              },
              "type": "||",
            },
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'non_result_set_queries'",
                  "unicode": false,
                  "value": "non_result_set_queries",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
                Cast {
                  "expr": Bin {
                    "kind": "bin",
                    "left": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'non_result_set_queries'",
                        "unicode": false,
                        "value": "non_result_set_queries",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "info",
                      },
                    },
                    "parenthesizedExpression": true,
                    "right": Number {
                      "kind": "number",
                      "value": "2",
                    },
                    "type": "+",
                  },
                  "kind": "cast",
                  "raw": "(string)",
                  "type": "string",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "test_counter",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'DROP INDEX'",
                  "unicode": false,
                  "value": "DROP INDEX",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_get_client_stats_assert_eq",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"[%03d] CREATE INDEX failed, [%d] %s\\\\n\\"",
                  "unicode": false,
                  "value": "[%03d] CREATE INDEX failed, [%d] %s
",
                },
                Pre {
                  "kind": "pre",
                  "type": "+",
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "test_counter",
                  },
                },
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "link",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_errno",
                    "resolution": "uqn",
                  },
                },
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "link",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_error",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "printf",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "link",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"CREATE INDEX idx_1 ON non_result_set_queries_test(id)\\"",
              "unicode": false,
              "value": "CREATE INDEX idx_1 ON non_result_set_queries_test(id)",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_query",
            "resolution": "uqn",
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "info",
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "new_info",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Cleanup, DROP TABLE client_stats_test failed, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Cleanup, DROP TABLE client_stats_test failed, [%d] %s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "link",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"DROP TABLE IF EXISTS client_stats_test\\"",
              "unicode": false,
              "value": "DROP TABLE IF EXISTS client_stats_test",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_query",
            "resolution": "uqn",
          },
        },
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "gettype",
                "resolution": "uqn",
              },
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "new_info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_get_client_stats",
                    "resolution": "uqn",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_array",
              "resolution": "uqn",
            },
          },
        },
        "right": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          "kind": "empty",
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "info",
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "new_info",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
                    "unicode": false,
                    "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
                  },
                  Pre {
                    "kind": "pre",
                    "type": "+",
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "test_counter",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "new_info",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "gettype",
                      "resolution": "uqn",
                    },
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "new_info",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Unary {
                "kind": "unary",
                "type": "!",
                "what": Call {
                  "arguments": Array [
                    Assign {
                      "kind": "assign",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "new_info",
                      },
                      "operator": "=",
                      "right": Call {
                        "arguments": Array [],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_get_client_stats",
                          "resolution": "uqn",
                        },
                      },
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "is_array",
                    "resolution": "uqn",
                  },
                },
              },
              "right": Empty {
                "expression": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
                "kind": "empty",
              },
              "type": "||",
            },
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'non_result_set_queries'",
                  "unicode": false,
                  "value": "non_result_set_queries",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
                Cast {
                  "expr": Bin {
                    "kind": "bin",
                    "left": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'non_result_set_queries'",
                        "unicode": false,
                        "value": "non_result_set_queries",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "info",
                      },
                    },
                    "parenthesizedExpression": true,
                    "right": Number {
                      "kind": "number",
                      "value": "1",
                    },
                    "type": "+",
                  },
                  "kind": "cast",
                  "raw": "(string)",
                  "type": "string",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "test_counter",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'RENAME TABLE'",
                  "unicode": false,
                  "value": "RENAME TABLE",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_get_client_stats_assert_eq",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"[%03d] RENAME TABLE failed, [%d] %s\\\\n\\"",
                  "unicode": false,
                  "value": "[%03d] RENAME TABLE failed, [%d] %s
",
                },
                Pre {
                  "kind": "pre",
                  "type": "+",
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "test_counter",
                  },
                },
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "link",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_errno",
                    "resolution": "uqn",
                  },
                },
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "link",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_error",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "printf",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "link",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"RENAME TABLE non_result_set_queries_test TO client_stats_test\\"",
              "unicode": false,
              "value": "RENAME TABLE non_result_set_queries_test TO client_stats_test",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_query",
            "resolution": "uqn",
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "info",
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "new_info",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Cleanup, DROP TABLE failed, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Cleanup, DROP TABLE failed, [%d] %s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "link",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"DROP TABLE IF EXISTS non_result_set_queries_test\\"",
              "unicode": false,
              "value": "DROP TABLE IF EXISTS non_result_set_queries_test",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_query",
            "resolution": "uqn",
          },
        },
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Cleanup, DROP TABLE failed, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Cleanup, DROP TABLE failed, [%d] %s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "link",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"DROP TABLE IF EXISTS client_stats_test\\"",
              "unicode": false,
              "value": "DROP TABLE IF EXISTS client_stats_test",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_query",
            "resolution": "uqn",
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"DROP DATABASE IF EXISTS mysqli_get_client_stats\\"",
            "unicode": false,
            "value": "DROP DATABASE IF EXISTS mysqli_get_client_stats",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_query",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "gettype",
                "resolution": "uqn",
              },
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "new_info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_get_client_stats",
                    "resolution": "uqn",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_array",
              "resolution": "uqn",
            },
          },
        },
        "right": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          "kind": "empty",
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "info",
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "new_info",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
                    "unicode": false,
                    "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
                  },
                  Pre {
                    "kind": "pre",
                    "type": "+",
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "test_counter",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "new_info",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "gettype",
                      "resolution": "uqn",
                    },
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "new_info",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Unary {
                "kind": "unary",
                "type": "!",
                "what": Call {
                  "arguments": Array [
                    Assign {
                      "kind": "assign",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "new_info",
                      },
                      "operator": "=",
                      "right": Call {
                        "arguments": Array [],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_get_client_stats",
                          "resolution": "uqn",
                        },
                      },
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "is_array",
                    "resolution": "uqn",
                  },
                },
              },
              "right": Empty {
                "expression": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
                "kind": "empty",
              },
              "type": "||",
            },
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'non_result_set_queries'",
                  "unicode": false,
                  "value": "non_result_set_queries",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
                Cast {
                  "expr": Bin {
                    "kind": "bin",
                    "left": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'non_result_set_queries'",
                        "unicode": false,
                        "value": "non_result_set_queries",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "info",
                      },
                    },
                    "parenthesizedExpression": true,
                    "right": Number {
                      "kind": "number",
                      "value": "1",
                    },
                    "type": "+",
                  },
                  "kind": "cast",
                  "raw": "(string)",
                  "type": "string",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "test_counter",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'CREATE DATABASE'",
                  "unicode": false,
                  "value": "CREATE DATABASE",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_get_client_stats_assert_eq",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "info",
              },
              "operator": "=",
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "new_info",
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[%03d] ALTER DATABASE failed, [%d] %s\\\\n\\"",
                    "unicode": false,
                    "value": "[%03d] ALTER DATABASE failed, [%d] %s
",
                  },
                  Pre {
                    "kind": "pre",
                    "type": "+",
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "test_counter",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "link",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_errno",
                      "resolution": "uqn",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "link",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_error",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "link",
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"ALTER DATABASE DEFAULT CHARACTER SET latin1\\"",
                    "unicode": false,
                    "value": "ALTER DATABASE DEFAULT CHARACTER SET latin1",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_query",
                  "resolution": "uqn",
                },
              },
            },
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
                    "unicode": false,
                    "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
                  },
                  Pre {
                    "kind": "pre",
                    "type": "+",
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "test_counter",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "new_info",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "gettype",
                      "resolution": "uqn",
                    },
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "new_info",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Unary {
                "kind": "unary",
                "type": "!",
                "what": Call {
                  "arguments": Array [
                    Assign {
                      "kind": "assign",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "new_info",
                      },
                      "operator": "=",
                      "right": Call {
                        "arguments": Array [],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_get_client_stats",
                          "resolution": "uqn",
                        },
                      },
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "is_array",
                    "resolution": "uqn",
                  },
                },
              },
              "right": Empty {
                "expression": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
                "kind": "empty",
              },
              "type": "||",
            },
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'non_result_set_queries'",
                  "unicode": false,
                  "value": "non_result_set_queries",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
                Cast {
                  "expr": Bin {
                    "kind": "bin",
                    "left": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'non_result_set_queries'",
                        "unicode": false,
                        "value": "non_result_set_queries",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "info",
                      },
                    },
                    "parenthesizedExpression": true,
                    "right": Number {
                      "kind": "number",
                      "value": "1",
                    },
                    "type": "+",
                  },
                  "kind": "cast",
                  "raw": "(string)",
                  "type": "string",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "test_counter",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'CREATE DATABASE'",
                  "unicode": false,
                  "value": "CREATE DATABASE",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_get_client_stats_assert_eq",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "info",
              },
              "operator": "=",
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "new_info",
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[%03d] CREATE DATABASE failed, [%d] %s\\\\n\\"",
                    "unicode": false,
                    "value": "[%03d] CREATE DATABASE failed, [%d] %s
",
                  },
                  Pre {
                    "kind": "pre",
                    "type": "+",
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "test_counter",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "link",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_errno",
                      "resolution": "uqn",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "link",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_error",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "link",
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"CREATE DATABASE mysqli_get_client_stats_\\"",
                    "unicode": false,
                    "value": "CREATE DATABASE mysqli_get_client_stats_",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_query",
                  "resolution": "uqn",
                },
              },
            },
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
                    "unicode": false,
                    "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
                  },
                  Pre {
                    "kind": "pre",
                    "type": "+",
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "test_counter",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "new_info",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "gettype",
                      "resolution": "uqn",
                    },
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "new_info",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Unary {
                "kind": "unary",
                "type": "!",
                "what": Call {
                  "arguments": Array [
                    Assign {
                      "kind": "assign",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "new_info",
                      },
                      "operator": "=",
                      "right": Call {
                        "arguments": Array [],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_get_client_stats",
                          "resolution": "uqn",
                        },
                      },
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "is_array",
                    "resolution": "uqn",
                  },
                },
              },
              "right": Empty {
                "expression": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
                "kind": "empty",
              },
              "type": "||",
            },
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "info",
              },
              "operator": "=",
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "new_info",
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[%03d] DROP DATABASE failed, [%d] %s\\\\n\\"",
                    "unicode": false,
                    "value": "[%03d] DROP DATABASE failed, [%d] %s
",
                  },
                  Pre {
                    "kind": "pre",
                    "type": "+",
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "test_counter",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "link",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_errno",
                      "resolution": "uqn",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "link",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_error",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "link",
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"DROP DATABASE mysqli_get_client_stats_\\"",
                    "unicode": false,
                    "value": "DROP DATABASE mysqli_get_client_stats_",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_query",
                  "resolution": "uqn",
                },
              },
            },
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
                    "unicode": false,
                    "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
                  },
                  Pre {
                    "kind": "pre",
                    "type": "+",
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "test_counter",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "new_info",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "gettype",
                      "resolution": "uqn",
                    },
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "new_info",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Unary {
                "kind": "unary",
                "type": "!",
                "what": Call {
                  "arguments": Array [
                    Assign {
                      "kind": "assign",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "new_info",
                      },
                      "operator": "=",
                      "right": Call {
                        "arguments": Array [],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_get_client_stats",
                          "resolution": "uqn",
                        },
                      },
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "is_array",
                    "resolution": "uqn",
                  },
                },
              },
              "right": Empty {
                "expression": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
                "kind": "empty",
              },
              "type": "||",
            },
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'non_result_set_queries'",
                  "unicode": false,
                  "value": "non_result_set_queries",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
                Cast {
                  "expr": Bin {
                    "kind": "bin",
                    "left": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'non_result_set_queries'",
                        "unicode": false,
                        "value": "non_result_set_queries",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "info",
                      },
                    },
                    "parenthesizedExpression": true,
                    "right": Number {
                      "kind": "number",
                      "value": "1",
                    },
                    "type": "+",
                  },
                  "kind": "cast",
                  "raw": "(string)",
                  "type": "string",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "test_counter",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'DROP DATABASE'",
                  "unicode": false,
                  "value": "DROP DATABASE",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_get_client_stats_assert_eq",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "info",
              },
              "operator": "=",
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "new_info",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"CREATE DATABASE mysqli_get_client_stats\\"",
            "unicode": false,
            "value": "CREATE DATABASE mysqli_get_client_stats",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_query",
          "resolution": "uqn",
        },
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"DROP SERVER IF EXISTS myself\\"",
            "unicode": false,
            "value": "DROP SERVER IF EXISTS myself",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_query",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "gettype",
                "resolution": "uqn",
              },
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "new_info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_get_client_stats",
                    "resolution": "uqn",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_array",
              "resolution": "uqn",
            },
          },
        },
        "right": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          "kind": "empty",
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "info",
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "new_info",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "sql",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"CREATE SERVER myself FOREIGN DATA WRAPPER mysql OPTIONS (user '%s', password '%s', database '%s')\\"",
              "unicode": false,
              "value": "CREATE SERVER myself FOREIGN DATA WRAPPER mysql OPTIONS (user '%s', password '%s', database '%s')",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "user",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "passwd",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sprintf",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
                    "unicode": false,
                    "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
                  },
                  Pre {
                    "kind": "pre",
                    "type": "+",
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "test_counter",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "new_info",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "gettype",
                      "resolution": "uqn",
                    },
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "new_info",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Unary {
                "kind": "unary",
                "type": "!",
                "what": Call {
                  "arguments": Array [
                    Assign {
                      "kind": "assign",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "new_info",
                      },
                      "operator": "=",
                      "right": Call {
                        "arguments": Array [],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_get_client_stats",
                          "resolution": "uqn",
                        },
                      },
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "is_array",
                    "resolution": "uqn",
                  },
                },
              },
              "right": Empty {
                "expression": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
                "kind": "empty",
              },
              "type": "||",
            },
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'non_result_set_queries'",
                  "unicode": false,
                  "value": "non_result_set_queries",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
                Cast {
                  "expr": Bin {
                    "kind": "bin",
                    "left": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'non_result_set_queries'",
                        "unicode": false,
                        "value": "non_result_set_queries",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "info",
                      },
                    },
                    "parenthesizedExpression": true,
                    "right": Number {
                      "kind": "number",
                      "value": "1",
                    },
                    "type": "+",
                  },
                  "kind": "cast",
                  "raw": "(string)",
                  "type": "string",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "test_counter",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'CREATE SERVER'",
                  "unicode": false,
                  "value": "CREATE SERVER",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_get_client_stats_assert_eq",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "info",
              },
              "operator": "=",
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "new_info",
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[%03d] ALTER SERVER failed, [%d] %s\\\\n\\"",
                    "unicode": false,
                    "value": "[%03d] ALTER SERVER failed, [%d] %s
",
                  },
                  Pre {
                    "kind": "pre",
                    "type": "+",
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "test_counter",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "link",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_errno",
                      "resolution": "uqn",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "link",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_error",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "link",
                  },
                  Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"ALTER SERVER myself OPTIONS(user '%s_')\\"",
                        "unicode": false,
                        "value": "ALTER SERVER myself OPTIONS(user '%s_')",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "user",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "sprintf",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_query",
                  "resolution": "uqn",
                },
              },
            },
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
                    "unicode": false,
                    "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
                  },
                  Pre {
                    "kind": "pre",
                    "type": "+",
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "test_counter",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "new_info",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "gettype",
                      "resolution": "uqn",
                    },
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "new_info",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Unary {
                "kind": "unary",
                "type": "!",
                "what": Call {
                  "arguments": Array [
                    Assign {
                      "kind": "assign",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "new_info",
                      },
                      "operator": "=",
                      "right": Call {
                        "arguments": Array [],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_get_client_stats",
                          "resolution": "uqn",
                        },
                      },
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "is_array",
                    "resolution": "uqn",
                  },
                },
              },
              "right": Empty {
                "expression": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
                "kind": "empty",
              },
              "type": "||",
            },
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'non_result_set_queries'",
                  "unicode": false,
                  "value": "non_result_set_queries",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
                Cast {
                  "expr": Bin {
                    "kind": "bin",
                    "left": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'non_result_set_queries'",
                        "unicode": false,
                        "value": "non_result_set_queries",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "info",
                      },
                    },
                    "parenthesizedExpression": true,
                    "right": Number {
                      "kind": "number",
                      "value": "1",
                    },
                    "type": "+",
                  },
                  "kind": "cast",
                  "raw": "(string)",
                  "type": "string",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "test_counter",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'ALTER SERVER'",
                  "unicode": false,
                  "value": "ALTER SERVER",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_get_client_stats_assert_eq",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "info",
              },
              "operator": "=",
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "new_info",
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[%03d] DROP SERVER failed, [%d] %s\\\\n\\"",
                    "unicode": false,
                    "value": "[%03d] DROP SERVER failed, [%d] %s
",
                  },
                  Pre {
                    "kind": "pre",
                    "type": "+",
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "test_counter",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "link",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_errno",
                      "resolution": "uqn",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "link",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_error",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "link",
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"DROP SERVER myself\\"",
                    "unicode": false,
                    "value": "DROP SERVER myself",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_query",
                  "resolution": "uqn",
                },
              },
            },
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
                    "unicode": false,
                    "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
                  },
                  Pre {
                    "kind": "pre",
                    "type": "+",
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "test_counter",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "new_info",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "gettype",
                      "resolution": "uqn",
                    },
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "new_info",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Unary {
                "kind": "unary",
                "type": "!",
                "what": Call {
                  "arguments": Array [
                    Assign {
                      "kind": "assign",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "new_info",
                      },
                      "operator": "=",
                      "right": Call {
                        "arguments": Array [],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_get_client_stats",
                          "resolution": "uqn",
                        },
                      },
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "is_array",
                    "resolution": "uqn",
                  },
                },
              },
              "right": Empty {
                "expression": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
                "kind": "empty",
              },
              "type": "||",
            },
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'non_result_set_queries'",
                  "unicode": false,
                  "value": "non_result_set_queries",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
                Cast {
                  "expr": Bin {
                    "kind": "bin",
                    "left": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'non_result_set_queries'",
                        "unicode": false,
                        "value": "non_result_set_queries",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "info",
                      },
                    },
                    "parenthesizedExpression": true,
                    "right": Number {
                      "kind": "number",
                      "value": "1",
                    },
                    "type": "+",
                  },
                  "kind": "cast",
                  "raw": "(string)",
                  "type": "string",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "test_counter",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'DROP SERVER'",
                  "unicode": false,
                  "value": "DROP SERVER",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_get_client_stats_assert_eq",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "info",
              },
              "operator": "=",
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "new_info",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "sql",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_query",
          "resolution": "uqn",
        },
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_normal'",
            "unicode": false,
            "value": "bytes_received_real_data_normal",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_ps'",
            "unicode": false,
            "value": "bytes_received_real_data_ps",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "gettype",
                "resolution": "uqn",
              },
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "new_info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_get_client_stats",
                    "resolution": "uqn",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_array",
              "resolution": "uqn",
            },
          },
        },
        "right": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          "kind": "empty",
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "info",
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "new_info",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] INSERT failed, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] INSERT failed, [%d] %s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "link",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"INSERT INTO test(id) VALUES (100)\\"",
              "unicode": false,
              "value": "INSERT INTO test(id) VALUES (100)",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_query",
            "resolution": "uqn",
          },
        },
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "gettype",
                "resolution": "uqn",
              },
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "new_info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_get_client_stats",
                    "resolution": "uqn",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_array",
              "resolution": "uqn",
            },
          },
        },
        "right": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          "kind": "empty",
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'non_result_set_queries'",
            "unicode": false,
            "value": "non_result_set_queries",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          Cast {
            "expr": Bin {
              "kind": "bin",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'non_result_set_queries'",
                  "unicode": false,
                  "value": "non_result_set_queries",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
              },
              "parenthesizedExpression": true,
              "right": Number {
                "kind": "number",
                "value": "1",
              },
              "type": "+",
            },
            "kind": "cast",
            "raw": "(string)",
            "type": "string",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'INSERT'",
            "unicode": false,
            "value": "INSERT",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "info",
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "new_info",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] UPDATE failed, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] UPDATE failed, [%d] %s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "link",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"UPDATE test SET label ='z' WHERE id = 100\\"",
              "unicode": false,
              "value": "UPDATE test SET label ='z' WHERE id = 100",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_query",
            "resolution": "uqn",
          },
        },
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "gettype",
                "resolution": "uqn",
              },
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "new_info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_get_client_stats",
                    "resolution": "uqn",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_array",
              "resolution": "uqn",
            },
          },
        },
        "right": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          "kind": "empty",
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'non_result_set_queries'",
            "unicode": false,
            "value": "non_result_set_queries",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          Cast {
            "expr": Bin {
              "kind": "bin",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'non_result_set_queries'",
                  "unicode": false,
                  "value": "non_result_set_queries",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
              },
              "parenthesizedExpression": true,
              "right": Number {
                "kind": "number",
                "value": "1",
              },
              "type": "+",
            },
            "kind": "cast",
            "raw": "(string)",
            "type": "string",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'UPDATE'",
            "unicode": false,
            "value": "UPDATE",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "info",
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "new_info",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] INSERT failed, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] INSERT failed, [%d] %s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "link",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"REPLACE INTO test(id, label) VALUES (100, 'b')\\"",
              "unicode": false,
              "value": "REPLACE INTO test(id, label) VALUES (100, 'b')",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_query",
            "resolution": "uqn",
          },
        },
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "gettype",
                "resolution": "uqn",
              },
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "new_info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_get_client_stats",
                    "resolution": "uqn",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_array",
              "resolution": "uqn",
            },
          },
        },
        "right": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          "kind": "empty",
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'non_result_set_queries'",
            "unicode": false,
            "value": "non_result_set_queries",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          Cast {
            "expr": Bin {
              "kind": "bin",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'non_result_set_queries'",
                  "unicode": false,
                  "value": "non_result_set_queries",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
              },
              "parenthesizedExpression": true,
              "right": Number {
                "kind": "number",
                "value": "1",
              },
              "type": "+",
            },
            "kind": "cast",
            "raw": "(string)",
            "type": "string",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'REPLACE'",
            "unicode": false,
            "value": "REPLACE",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "info",
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "new_info",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] SELECT@dml failed, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] SELECT@dml failed, [%d] %s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "res",
          },
          "operator": "=",
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "link",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"SELECT id, label FROM test WHERE id = 100\\"",
                "unicode": false,
                "value": "SELECT id, label FROM test WHERE id = 100",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_query",
              "resolution": "uqn",
            },
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "res",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_free_result",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "gettype",
                "resolution": "uqn",
              },
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "new_info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_get_client_stats",
                    "resolution": "uqn",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_array",
              "resolution": "uqn",
            },
          },
        },
        "right": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          "kind": "empty",
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'non_result_set_queries'",
            "unicode": false,
            "value": "non_result_set_queries",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'SELECT@dml'",
            "unicode": false,
            "value": "SELECT@dml",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "info",
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "new_info",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] DELETE failed, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] DELETE failed, [%d] %s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "link",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"DELETE FROM test WHERE id = 100\\"",
              "unicode": false,
              "value": "DELETE FROM test WHERE id = 100",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_query",
            "resolution": "uqn",
          },
        },
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "gettype",
                "resolution": "uqn",
              },
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "new_info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_get_client_stats",
                    "resolution": "uqn",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_array",
              "resolution": "uqn",
            },
          },
        },
        "right": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          "kind": "empty",
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'non_result_set_queries'",
            "unicode": false,
            "value": "non_result_set_queries",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          Cast {
            "expr": Bin {
              "kind": "bin",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'non_result_set_queries'",
                  "unicode": false,
                  "value": "non_result_set_queries",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
              },
              "parenthesizedExpression": true,
              "right": Number {
                "kind": "number",
                "value": "1",
              },
              "type": "+",
            },
            "kind": "cast",
            "raw": "(string)",
            "type": "string",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'DELETE'",
            "unicode": false,
            "value": "DELETE",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "info",
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "new_info",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] TRUNCATE failed, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] TRUNCATE failed, [%d] %s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "res",
          },
          "operator": "=",
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "link",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"TRUNCATE TABLE test\\"",
                "unicode": false,
                "value": "TRUNCATE TABLE test",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_query",
              "resolution": "uqn",
            },
          },
        },
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "gettype",
                "resolution": "uqn",
              },
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "new_info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_get_client_stats",
                    "resolution": "uqn",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_array",
              "resolution": "uqn",
            },
          },
        },
        "right": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          "kind": "empty",
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'non_result_set_queries'",
            "unicode": false,
            "value": "non_result_set_queries",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          Cast {
            "expr": Bin {
              "kind": "bin",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'non_result_set_queries'",
                  "unicode": false,
                  "value": "non_result_set_queries",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
              },
              "parenthesizedExpression": true,
              "right": Number {
                "kind": "number",
                "value": "1",
              },
              "type": "+",
            },
            "kind": "cast",
            "raw": "(string)",
            "type": "string",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'TRUNCATE'",
            "unicode": false,
            "value": "TRUNCATE",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "info",
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "new_info",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "file",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "sys_get_temp_dir",
                "resolution": "uqn",
              },
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'mysqli_test'",
              "unicode": false,
              "value": "mysqli_test",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "tempnam",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Silent {
              "expr": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "fp",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'1;\\"a\\"'",
                    "unicode": false,
                    "value": "1;\\"a\\"",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "fwrite",
                  "resolution": "uqn",
                },
              },
              "kind": "silent",
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "fp",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "fclose",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "file",
                },
                Number {
                  "kind": "number",
                  "value": "0644",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "chmod",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "sql",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'LOAD DATA LOCAL INFILE \\"%s\\" INTO TABLE test'",
                    "unicode": false,
                    "value": "LOAD DATA LOCAL INFILE \\"%s\\" INTO TABLE test",
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "link",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "file",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_real_escape_string",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "sprintf",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                If {
                  "alternate": null,
                  "body": ExpressionStatement {
                    "expression": Call {
                      "arguments": Array [
                        String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
                          "unicode": false,
                          "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
                        },
                        Pre {
                          "kind": "pre",
                          "type": "+",
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "test_counter",
                          },
                        },
                        Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "new_info",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "gettype",
                            "resolution": "uqn",
                          },
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "new_info",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "printf",
                        "resolution": "uqn",
                      },
                    },
                    "kind": "expressionstatement",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Unary {
                      "kind": "unary",
                      "type": "!",
                      "what": Call {
                        "arguments": Array [
                          Assign {
                            "kind": "assign",
                            "left": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "new_info",
                            },
                            "operator": "=",
                            "right": Call {
                              "arguments": Array [],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "mysqli_get_client_stats",
                                "resolution": "uqn",
                              },
                            },
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "is_array",
                          "resolution": "uqn",
                        },
                      },
                    },
                    "right": Empty {
                      "expression": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "new_info",
                      },
                      "kind": "empty",
                    },
                    "type": "||",
                  },
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'non_result_set_queries'",
                        "unicode": false,
                        "value": "non_result_set_queries",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "new_info",
                      },
                      Cast {
                        "expr": Bin {
                          "kind": "bin",
                          "left": OffsetLookup {
                            "kind": "offsetlookup",
                            "offset": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "'non_result_set_queries'",
                              "unicode": false,
                              "value": "non_result_set_queries",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "info",
                            },
                          },
                          "parenthesizedExpression": true,
                          "right": Number {
                            "kind": "number",
                            "value": "1",
                          },
                          "type": "+",
                        },
                        "kind": "cast",
                        "raw": "(string)",
                        "type": "string",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "test_counter",
                      },
                      String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'LOAD DATA LOCAL'",
                        "unicode": false,
                        "value": "LOAD DATA LOCAL",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_get_client_stats_assert_eq",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "info",
                    },
                    "operator": "=",
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "new_info",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "sql",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_query",
                "resolution": "uqn",
              },
            },
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "file",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "unlink",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "fp",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "file",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'w'",
              "unicode": false,
              "value": "w",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "fopen",
            "resolution": "uqn",
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_normal'",
            "unicode": false,
            "value": "bytes_received_real_data_normal",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_ps'",
            "unicode": false,
            "value": "bytes_received_real_data_ps",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"DELETE FROM test\\"",
            "unicode": false,
            "value": "DELETE FROM test",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_query",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Cannot insert new records, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Cannot insert new records, [%d] %s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "link",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"INSERT INTO test(id, label) VALUES (1, 'a'), (2, 'b')\\"",
              "unicode": false,
              "value": "INSERT INTO test(id, label) VALUES (1, 'a'), (2, 'b')",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_query",
            "resolution": "uqn",
          },
        },
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Cannot SELECT with mysqli_real_query(), [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Cannot SELECT with mysqli_real_query(), [%d] %s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "res",
          },
          "operator": "=",
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "link",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"SELECT id, label FROM test ORDER BY id\\"",
                "unicode": false,
                "value": "SELECT id, label FROM test ORDER BY id",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_real_query",
              "resolution": "uqn",
            },
          },
        },
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] mysqli_use_result() failed, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] mysqli_use_result() failed, [%d] %s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "res",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "link",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_use_result",
                  "resolution": "uqn",
                },
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "is_object",
            "resolution": "uqn",
          },
        },
      },
    },
    While {
      "body": null,
      "kind": "while",
      "shortForm": false,
      "test": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "row",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "res",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_fetch_assoc",
            "resolution": "uqn",
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "res",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_free_result",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "gettype",
                "resolution": "uqn",
              },
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "new_info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_get_client_stats",
                    "resolution": "uqn",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_array",
              "resolution": "uqn",
            },
          },
        },
        "right": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          "kind": "empty",
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'unbuffered_sets'",
            "unicode": false,
            "value": "unbuffered_sets",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          Cast {
            "expr": Bin {
              "kind": "bin",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'unbuffered_sets'",
                  "unicode": false,
                  "value": "unbuffered_sets",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
              },
              "parenthesizedExpression": true,
              "right": Number {
                "kind": "number",
                "value": "1",
              },
              "type": "+",
            },
            "kind": "cast",
            "raw": "(string)",
            "type": "string",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'mysqli_use_result()'",
            "unicode": false,
            "value": "mysqli_use_result()",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "info",
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "new_info",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Cannot SELECT with mysqli_real_query() II, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Cannot SELECT with mysqli_real_query() II, [%d] %s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "res",
          },
          "operator": "=",
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "link",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"SELECT id, label FROM test ORDER BY id\\"",
                "unicode": false,
                "value": "SELECT id, label FROM test ORDER BY id",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_real_query",
              "resolution": "uqn",
            },
          },
        },
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] mysqli_use_result() failed, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] mysqli_use_result() failed, [%d] %s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "res",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "link",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_store_result",
                  "resolution": "uqn",
                },
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "is_object",
            "resolution": "uqn",
          },
        },
      },
    },
    While {
      "body": null,
      "kind": "while",
      "shortForm": false,
      "test": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "row",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "res",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_fetch_assoc",
            "resolution": "uqn",
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "res",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_free_result",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[%03d] Expecting array/any_non_empty, got %s/%s\\\\n\\"",
              "unicode": false,
              "value": "[%03d] Expecting array/any_non_empty, got %s/%s
",
            },
            Pre {
              "kind": "pre",
              "type": "+",
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_counter",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "gettype",
                "resolution": "uqn",
              },
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "new_info",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_info",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_get_client_stats",
                    "resolution": "uqn",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_array",
              "resolution": "uqn",
            },
          },
        },
        "right": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          "kind": "empty",
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'buffered_sets'",
            "unicode": false,
            "value": "buffered_sets",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "new_info",
          },
          Cast {
            "expr": Bin {
              "kind": "bin",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'buffered_sets'",
                  "unicode": false,
                  "value": "buffered_sets",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "info",
                },
              },
              "parenthesizedExpression": true,
              "right": Number {
                "kind": "number",
                "value": "1",
              },
              "type": "+",
            },
            "kind": "cast",
            "raw": "(string)",
            "type": "string",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'mysqli_use_result()'",
            "unicode": false,
            "value": "mysqli_use_result()",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "info",
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "new_info",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_close",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_normal'",
            "unicode": false,
            "value": "bytes_received_real_data_normal",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_gt",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_normal'",
            "unicode": false,
            "value": "bytes_received_real_data_normal",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
        },
        "operator": "=",
        "right": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_normal'",
            "unicode": false,
            "value": "bytes_received_real_data_normal",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bytes_received_real_data_ps'",
            "unicode": false,
            "value": "bytes_received_real_data_ps",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "info",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "test_counter",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_get_client_stats_assert_eq",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"done!\\"",
          "unicode": false,
          "value": "done!",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
