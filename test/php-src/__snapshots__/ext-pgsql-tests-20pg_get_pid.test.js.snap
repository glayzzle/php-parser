// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests PostgreSQL pg_get_pid() functions 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": false,
        "target": String {
          "isDoubleQuote": false,
          "kind": "string",
          "parenthesizedExpression": true,
          "raw": "'config.inc'",
          "unicode": false,
          "value": "config.inc",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "db",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "conn_str",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "pg_connect",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "pid",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "pg_get_pid",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": RetIf {
        "falseExpr": Print {
          "expression": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'NG'",
            "unicode": false,
            "value": "NG",
          },
          "kind": "print",
        },
        "kind": "retif",
        "test": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "pid",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "is_integer",
            "resolution": "uqn",
          },
        },
        "trueExpr": Print {
          "expression": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'OK'",
            "unicode": false,
            "value": "OK",
          },
          "kind": "print",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
