// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test is_countable() function 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              New {
                "arguments": Array [],
                "kind": "new",
                "what": Class {
                  "attrGroups": Array [],
                  "body": Array [],
                  "extends": Name {
                    "kind": "name",
                    "name": "ArrayIterator",
                    "resolution": "uqn",
                  },
                  "implements": null,
                  "isAbstract": false,
                  "isAnonymous": true,
                  "isFinal": false,
                  "kind": "class",
                  "name": null,
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_countable",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Cast {
                "expr": New {
                  "arguments": Array [],
                  "kind": "new",
                  "what": Name {
                    "kind": "name",
                    "name": "stdClass",
                    "resolution": "uqn",
                  },
                },
                "kind": "cast",
                "raw": "(array)",
                "type": "array",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_countable",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              New {
                "arguments": Array [],
                "kind": "new",
                "what": Class {
                  "attrGroups": Array [],
                  "body": Array [
                    Method {
                      "arguments": Array [],
                      "attrGroups": Array [],
                      "body": Block {
                        "children": Array [
                          Return {
                            "expr": Call {
                              "arguments": Array [
                                Number {
                                  "kind": "number",
                                  "value": "1",
                                },
                                String {
                                  "isDoubleQuote": false,
                                  "kind": "string",
                                  "raw": "'foo'",
                                  "unicode": false,
                                  "value": "foo",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "count",
                                "resolution": "uqn",
                              },
                            },
                            "kind": "return",
                          },
                        ],
                        "kind": "block",
                      },
                      "byref": false,
                      "isAbstract": false,
                      "isFinal": false,
                      "isStatic": false,
                      "kind": "method",
                      "name": Identifier {
                        "kind": "identifier",
                        "name": "count",
                      },
                      "nullable": false,
                      "type": TypeReference {
                        "kind": "typereference",
                        "name": "int",
                        "raw": "int",
                      },
                      "visibility": "public",
                    },
                  ],
                  "extends": null,
                  "implements": Array [
                    Name {
                      "kind": "name",
                      "name": "Countable",
                      "resolution": "uqn",
                    },
                  ],
                  "isAbstract": false,
                  "isAnonymous": true,
                  "isFinal": false,
                  "kind": "class",
                  "name": null,
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_countable",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
