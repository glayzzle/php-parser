// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #53437 (Crash when using unserialized DatePeriod instance), variation 1 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "dp",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            New {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'2010-01-01 UTC'",
                  "unicode": false,
                  "value": "2010-01-01 UTC",
                },
              ],
              "kind": "new",
              "what": Name {
                "kind": "name",
                "name": "DateTime",
                "resolution": "uqn",
              },
            },
            New {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'P1D'",
                  "unicode": false,
                  "value": "P1D",
                },
              ],
              "kind": "new",
              "what": Name {
                "kind": "name",
                "name": "DateInterval",
                "resolution": "uqn",
              },
            },
            Number {
              "kind": "number",
              "value": "2",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "DatePeriod",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Original:\\\\r\\\\n\\"",
          "unicode": false,
          "value": "Original:
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Foreach {
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              Bin {
                "kind": "bin",
                "left": Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'Y-m-d H:i:s'",
                      "unicode": false,
                      "value": "Y-m-d H:i:s",
                    },
                  ],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "format",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "dt",
                    },
                  },
                },
                "right": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"\\\\r\\\\n\\"",
                  "unicode": false,
                  "value": "
",
                },
                "type": ".",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "dp",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "dt",
      },
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\r\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "dp",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "ser",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "dp",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "serialize",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "dpu",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "ser",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "unserialize",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "dpu",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Unserialized:\\\\r\\\\n\\"",
          "unicode": false,
          "value": "Unserialized:
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Foreach {
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              Bin {
                "kind": "bin",
                "left": Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'Y-m-d H:i:s'",
                      "unicode": false,
                      "value": "Y-m-d H:i:s",
                    },
                  ],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "format",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "dt",
                    },
                  },
                },
                "right": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"\\\\r\\\\n\\"",
                  "unicode": false,
                  "value": "
",
                },
                "type": ".",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "dpu",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "dt",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
