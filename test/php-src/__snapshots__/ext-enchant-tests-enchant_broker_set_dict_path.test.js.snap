// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests proto bool enchant_broker_set_dict_path(resource broker, int dict_type, string value) function
proto string enchant_broker_get_dict_path(resource broker, int dict_type) function 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "broker",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "enchant_broker_init",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "backEndDictType1",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"MYSPELL\\"",
          "unicode": false,
          "value": "MYSPELL",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "backEndDictType2",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"ISPELL\\"",
          "unicode": false,
          "value": "ISPELL",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "dictTypeValue1",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "1",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "dictTypeValue2",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "2",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "parenthesizedExpression": true,
                "raw": "\\"broker is not a resource; failed; \\\\n\\"",
                "unicode": false,
                "value": "broker is not a resource; failed; 
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "parenthesizedExpression": true,
                "raw": "\\"OK\\\\n\\"",
                "unicode": false,
                "value": "OK
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          If {
            "alternate": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    Encapsed {
                      "kind": "encapsed",
                      "parenthesizedExpression": true,
                      "raw": "\\"broker set dict path {$backEndDictType1} has failed \\\\n\\"",
                      "type": "string",
                      "value": Array [
                        EncapsedPart {
                          "curly": false,
                          "expression": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "broker set dict path ",
                            "unicode": false,
                            "value": "broker set dict path ",
                          },
                          "kind": "encapsedpart",
                          "syntax": null,
                        },
                        EncapsedPart {
                          "curly": false,
                          "expression": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "backEndDictType1",
                          },
                          "kind": "encapsedpart",
                          "syntax": "complex",
                        },
                        EncapsedPart {
                          "curly": false,
                          "expression": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": " has failed \\\\n",
                            "unicode": false,
                            "value": " has failed ",
                          },
                          "kind": "encapsedpart",
                          "syntax": null,
                        },
                      ],
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
              ],
              "kind": "block",
            },
            "body": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "parenthesizedExpression": true,
                      "raw": "\\"OK\\\\n\\"",
                      "unicode": false,
                      "value": "OK
",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
                If {
                  "alternate": Block {
                    "children": Array [
                      Echo {
                        "expressions": Array [
                          Encapsed {
                            "kind": "encapsed",
                            "parenthesizedExpression": true,
                            "raw": "\\"broker set dict path {$backEndDictType2} has failed \\\\n\\"",
                            "type": "string",
                            "value": Array [
                              EncapsedPart {
                                "curly": false,
                                "expression": String {
                                  "isDoubleQuote": false,
                                  "kind": "string",
                                  "raw": "broker set dict path ",
                                  "unicode": false,
                                  "value": "broker set dict path ",
                                },
                                "kind": "encapsedpart",
                                "syntax": null,
                              },
                              EncapsedPart {
                                "curly": false,
                                "expression": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "backEndDictType2",
                                },
                                "kind": "encapsedpart",
                                "syntax": "complex",
                              },
                              EncapsedPart {
                                "curly": false,
                                "expression": String {
                                  "isDoubleQuote": false,
                                  "kind": "string",
                                  "raw": " has failed \\\\n",
                                  "unicode": false,
                                  "value": " has failed ",
                                },
                                "kind": "encapsedpart",
                                "syntax": null,
                              },
                            ],
                          },
                        ],
                        "kind": "echo",
                        "shortForm": false,
                      },
                    ],
                    "kind": "block",
                  },
                  "body": Block {
                    "children": Array [
                      Echo {
                        "expressions": Array [
                          String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "parenthesizedExpression": true,
                            "raw": "\\"OK\\\\n\\"",
                            "unicode": false,
                            "value": "OK
",
                          },
                        ],
                        "kind": "echo",
                        "shortForm": false,
                      },
                      If {
                        "alternate": Block {
                          "children": Array [
                            Echo {
                              "expressions": Array [
                                String {
                                  "isDoubleQuote": true,
                                  "kind": "string",
                                  "parenthesizedExpression": true,
                                  "raw": "\\"broker get dict path has failed \\\\n\\"",
                                  "unicode": false,
                                  "value": "broker get dict path has failed 
",
                                },
                              ],
                              "kind": "echo",
                              "shortForm": false,
                            },
                          ],
                          "kind": "block",
                        },
                        "body": Block {
                          "children": Array [
                            Echo {
                              "expressions": Array [
                                String {
                                  "isDoubleQuote": true,
                                  "kind": "string",
                                  "parenthesizedExpression": true,
                                  "raw": "\\"OK\\\\n\\"",
                                  "unicode": false,
                                  "value": "OK
",
                                },
                              ],
                              "kind": "echo",
                              "shortForm": false,
                            },
                          ],
                          "kind": "block",
                        },
                        "kind": "if",
                        "shortForm": false,
                        "test": Bin {
                          "kind": "bin",
                          "left": Bin {
                            "kind": "bin",
                            "left": Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "broker",
                                },
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "dictTypeValue1",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "enchant_broker_get_dict_path",
                                "resolution": "uqn",
                              },
                            },
                            "parenthesizedExpression": true,
                            "right": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "backEndDictType1",
                            },
                            "type": "==",
                          },
                          "right": Bin {
                            "kind": "bin",
                            "left": Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "broker",
                                },
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "dictTypeValue2",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "enchant_broker_get_dict_path",
                                "resolution": "uqn",
                              },
                            },
                            "parenthesizedExpression": true,
                            "right": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "backEndDictType2",
                            },
                            "type": "==",
                          },
                          "type": "&&",
                        },
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "broker",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "dictTypeValue2",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "backEndDictType2",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "enchant_broker_set_dict_path",
                      "resolution": "uqn",
                    },
                  },
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "broker",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "dictTypeValue1",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "backEndDictType1",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "enchant_broker_set_dict_path",
                "resolution": "uqn",
              },
            },
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "broker",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "is_object",
          "resolution": "uqn",
        },
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
