// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests intl_get_error_code() 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Name {
            "kind": "name",
            "name": "E_ERROR",
            "resolution": "uqn",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "error_reporting",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "check_code",
              },
              "operator": "=",
              "right": Bin {
                "kind": "bin",
                "left": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "intl_get_error_code",
                    "resolution": "uqn",
                  },
                },
                "parenthesizedExpression": true,
                "right": Number {
                  "kind": "number",
                  "value": "0",
                },
                "type": "!=",
              },
            },
            "kind": "expressionstatement",
          },
          Echo {
            "expressions": Array [
              Bin {
                "kind": "bin",
                "left": RetIf {
                  "falseExpr": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"failed\\"",
                    "unicode": false,
                    "value": "failed",
                  },
                  "kind": "retif",
                  "parenthesizedExpression": true,
                  "test": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "check_code",
                  },
                  "trueExpr": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"ok\\"",
                    "unicode": false,
                    "value": "ok",
                  },
                },
                "right": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"\\\\n\\"",
                  "unicode": false,
                  "value": "
",
                },
                "type": ".",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "body": Echo {
        "expressions": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"failed\\\\n\\"",
            "unicode": false,
            "value": "failed
",
          },
        ],
        "kind": "echo",
        "shortForm": false,
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Call {
          "arguments": Array [
            New {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'en_US'",
                  "unicode": false,
                  "value": "en_US",
                },
              ],
              "kind": "new",
              "what": Name {
                "kind": "name",
                "name": "Collator",
                "resolution": "uqn",
              },
            },
            Unary {
              "kind": "unary",
              "type": "-",
              "what": Number {
                "kind": "number",
                "value": "1",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "collator_get_locale",
            "resolution": "uqn",
          },
        },
        "right": Boolean {
          "kind": "boolean",
          "raw": "false",
          "value": false,
        },
        "type": "!==",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
