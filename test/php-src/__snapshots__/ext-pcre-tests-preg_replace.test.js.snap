// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests preg_replace() 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'{{\\\\D+}}'",
                "unicode": false,
                "value": "{{\\\\D+}}",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'x'",
                "unicode": false,
                "value": "x",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'{abcd}'",
                "unicode": false,
                "value": "{abcd}",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "preg_replace",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'{{\\\\D+}}'",
                "unicode": false,
                "value": "{{\\\\D+}}",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'ddd'",
                "unicode": false,
                "value": "ddd",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'abcd'",
                "unicode": false,
                "value": "abcd",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "preg_replace",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/(ab)(c)(d)(e)(f)(g)(h)(i)(j)(k)/'",
                "unicode": false,
                "value": "/(ab)(c)(d)(e)(f)(g)(h)(i)(j)(k)/",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'a\${1}2$103'",
                "unicode": false,
                "value": "a\${1}2$103",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'zabcdefghijkl'",
                "unicode": false,
                "value": "zabcdefghijkl",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "preg_replace",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
