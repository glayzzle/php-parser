// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests mb_strpos() 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'include_path'",
            "unicode": false,
            "value": "include_path",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'.'",
            "unicode": false,
            "value": ".",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "ini_set",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": false,
        "target": String {
          "isDoubleQuote": false,
          "kind": "string",
          "parenthesizedExpression": true,
          "raw": "'common.inc'",
          "unicode": false,
          "value": "common.inc",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "euc_jp",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'0123����ʸ��������ܸ�Ǥ���EUC-JP��ȤäƤ��ޤ���0123���ܸ�����ݽ�����'",
          "unicode": false,
          "value": "0123����ʸ��������ܸ�Ǥ���EUC-JP��ȤäƤ��ޤ���0123���ܸ�����ݽ�����",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "slen",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "euc_jp",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'EUC-JP'",
              "unicode": false,
              "value": "EUC-JP",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_strlen",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Encapsed {
          "kind": "encapsed",
          "raw": "\\"String len: $slen\\\\n\\"",
          "type": "string",
          "value": Array [
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "String len: ",
                "unicode": false,
                "value": "String len: ",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
            EncapsedPart {
              "curly": false,
              "expression": Variable {
                "curly": false,
                "kind": "variable",
                "name": "slen",
              },
              "kind": "encapsedpart",
              "syntax": "simple",
            },
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "\\\\n",
                "unicode": false,
                "value": "",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
          ],
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Bin {
        "kind": "bin",
        "left": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'UTF-8'",
              "unicode": false,
              "value": "UTF-8",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_internal_encoding",
            "resolution": "uqn",
          },
        },
        "right": Print {
          "expression": String {
            "isDoubleQuote": true,
            "kind": "string",
            "parenthesizedExpression": true,
            "raw": "\\"mb_internal_encoding() failed\\\\n\\"",
            "unicode": false,
            "value": "mb_internal_encoding() failed
",
          },
          "kind": "print",
        },
        "type": "or",
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"== POSITIVE OFFSET ==\\\\n\\"",
          "unicode": false,
          "value": "== POSITIVE OFFSET ==
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "euc_jp",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'���ܸ�'",
                "unicode": false,
                "value": "���ܸ�",
              },
              Number {
                "kind": "number",
                "value": "0",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'EUC-JP'",
                "unicode": false,
                "value": "EUC-JP",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_strpos",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "euc_jp",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'0'",
                "unicode": false,
                "value": "0",
              },
              Number {
                "kind": "number",
                "value": "0",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'EUC-JP'",
                "unicode": false,
                "value": "EUC-JP",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_strpos",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "euc_jp",
              },
              Number {
                "kind": "number",
                "value": "3",
              },
              Number {
                "kind": "number",
                "value": "0",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'EUC-JP'",
                "unicode": false,
                "value": "EUC-JP",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_strpos",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "euc_jp",
              },
              Number {
                "kind": "number",
                "value": "0",
              },
              Number {
                "kind": "number",
                "value": "0",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'EUC-JP'",
                "unicode": false,
                "value": "EUC-JP",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_strpos",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "euc_jp",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'���ܸ�'",
                "unicode": false,
                "value": "���ܸ�",
              },
              Number {
                "kind": "number",
                "value": "15",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'EUC-JP'",
                "unicode": false,
                "value": "EUC-JP",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_strpos",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "euc_jp",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'0'",
                "unicode": false,
                "value": "0",
              },
              Number {
                "kind": "number",
                "value": "15",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'EUC-JP'",
                "unicode": false,
                "value": "EUC-JP",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_strpos",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "euc_jp",
              },
              Number {
                "kind": "number",
                "value": "3",
              },
              Number {
                "kind": "number",
                "value": "15",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'EUC-JP'",
                "unicode": false,
                "value": "EUC-JP",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_strpos",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "euc_jp",
              },
              Number {
                "kind": "number",
                "value": "0",
              },
              Number {
                "kind": "number",
                "value": "15",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'EUC-JP'",
                "unicode": false,
                "value": "EUC-JP",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_strpos",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"== NEGATIVE OFFSET ==\\\\n\\"",
          "unicode": false,
          "value": "== NEGATIVE OFFSET ==
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "euc_jp",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'���ܸ�'",
                "unicode": false,
                "value": "���ܸ�",
              },
              Unary {
                "kind": "unary",
                "type": "-",
                "what": Number {
                  "kind": "number",
                  "value": "15",
                },
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'EUC-JP'",
                "unicode": false,
                "value": "EUC-JP",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_strpos",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "euc_jp",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'0'",
                "unicode": false,
                "value": "0",
              },
              Unary {
                "kind": "unary",
                "type": "-",
                "what": Number {
                  "kind": "number",
                  "value": "15",
                },
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'EUC-JP'",
                "unicode": false,
                "value": "EUC-JP",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_strpos",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "euc_jp",
              },
              Number {
                "kind": "number",
                "value": "3",
              },
              Unary {
                "kind": "unary",
                "type": "-",
                "what": Number {
                  "kind": "number",
                  "value": "15",
                },
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'EUC-JP'",
                "unicode": false,
                "value": "EUC-JP",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_strpos",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "euc_jp",
              },
              Number {
                "kind": "number",
                "value": "0",
              },
              Unary {
                "kind": "unary",
                "type": "-",
                "what": Number {
                  "kind": "number",
                  "value": "15",
                },
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'EUC-JP'",
                "unicode": false,
                "value": "EUC-JP",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_strpos",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "euc_jp",
              },
              Number {
                "kind": "number",
                "value": "0",
              },
              Unary {
                "kind": "unary",
                "type": "-",
                "what": Number {
                  "kind": "number",
                  "value": "43",
                },
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'EUC-JP'",
                "unicode": false,
                "value": "EUC-JP",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_strpos",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"== NON-EXISTENT ==\\\\n\\"",
          "unicode": false,
          "value": "== NON-EXISTENT ==
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "r",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "euc_jp",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'�ڹ��'",
              "unicode": false,
              "value": "�ڹ��",
            },
            Number {
              "kind": "number",
              "value": "0",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'EUC-JP'",
              "unicode": false,
              "value": "EUC-JP",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_strpos",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": RetIf {
        "falseExpr": Print {
          "expression": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"NG_STR\\\\n\\"",
            "unicode": false,
            "value": "NG_STR
",
          },
          "kind": "print",
        },
        "kind": "retif",
        "test": Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "r",
          },
          "parenthesizedExpression": true,
          "right": Boolean {
            "kind": "boolean",
            "raw": "FALSE",
            "value": false,
          },
          "type": "===",
        },
        "trueExpr": Print {
          "expression": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"OK_STR\\\\n\\"",
            "unicode": false,
            "value": "OK_STR
",
          },
          "kind": "print",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "r",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "euc_jp",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"\\\\n\\"",
              "unicode": false,
              "value": "
",
            },
            Number {
              "kind": "number",
              "value": "0",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'EUC-JP'",
              "unicode": false,
              "value": "EUC-JP",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_strpos",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": RetIf {
        "falseExpr": Print {
          "expression": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"NG_NEWLINE\\\\n\\"",
            "unicode": false,
            "value": "NG_NEWLINE
",
          },
          "kind": "print",
        },
        "kind": "retif",
        "test": Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "r",
          },
          "parenthesizedExpression": true,
          "right": Boolean {
            "kind": "boolean",
            "raw": "FALSE",
            "value": false,
          },
          "type": "===",
        },
        "trueExpr": Print {
          "expression": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"OK_NEWLINE\\\\n\\"",
            "unicode": false,
            "value": "OK_NEWLINE
",
          },
          "kind": "print",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"== NO ENCODING PARAMETER ==\\\\n\\"",
          "unicode": false,
          "value": "== NO ENCODING PARAMETER ==
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Bin {
        "kind": "bin",
        "left": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'EUC-JP'",
              "unicode": false,
              "value": "EUC-JP",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_internal_encoding",
            "resolution": "uqn",
          },
        },
        "right": Print {
          "expression": String {
            "isDoubleQuote": true,
            "kind": "string",
            "parenthesizedExpression": true,
            "raw": "\\"mb_internal_encoding() failed\\\\n\\"",
            "unicode": false,
            "value": "mb_internal_encoding() failed
",
          },
          "kind": "print",
        },
        "type": "or",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "euc_jp",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'���ܸ�'",
                "unicode": false,
                "value": "���ܸ�",
              },
              Number {
                "kind": "number",
                "value": "0",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_strpos",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "euc_jp",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'0'",
                "unicode": false,
                "value": "0",
              },
              Number {
                "kind": "number",
                "value": "0",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_strpos",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "euc_jp",
              },
              Number {
                "kind": "number",
                "value": "3",
              },
              Number {
                "kind": "number",
                "value": "0",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_strpos",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "euc_jp",
              },
              Number {
                "kind": "number",
                "value": "0",
              },
              Number {
                "kind": "number",
                "value": "0",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_strpos",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "r",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "euc_jp",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'�ڹ��'",
              "unicode": false,
              "value": "�ڹ��",
            },
            Number {
              "kind": "number",
              "value": "0",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_strpos",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": RetIf {
        "falseExpr": Print {
          "expression": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"NG_STR\\\\n\\"",
            "unicode": false,
            "value": "NG_STR
",
          },
          "kind": "print",
        },
        "kind": "retif",
        "test": Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "r",
          },
          "parenthesizedExpression": true,
          "right": Boolean {
            "kind": "boolean",
            "raw": "FALSE",
            "value": false,
          },
          "type": "===",
        },
        "trueExpr": Print {
          "expression": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"OK_STR\\\\n\\"",
            "unicode": false,
            "value": "OK_STR
",
          },
          "kind": "print",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "r",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "euc_jp",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"\\\\n\\"",
              "unicode": false,
              "value": "
",
            },
            Number {
              "kind": "number",
              "value": "0",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_strpos",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": RetIf {
        "falseExpr": Print {
          "expression": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"NG_NEWLINE\\\\n\\"",
            "unicode": false,
            "value": "NG_NEWLINE
",
          },
          "kind": "print",
        },
        "kind": "retif",
        "test": Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "r",
          },
          "parenthesizedExpression": true,
          "right": Boolean {
            "kind": "boolean",
            "raw": "FALSE",
            "value": false,
          },
          "type": "===",
        },
        "trueExpr": Print {
          "expression": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"OK_NEWLINE\\\\n\\"",
            "unicode": false,
            "value": "OK_NEWLINE
",
          },
          "kind": "print",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"== NO OFFSET AND ENCODING PARAMETER ==\\\\n\\"",
          "unicode": false,
          "value": "== NO OFFSET AND ENCODING PARAMETER ==
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Bin {
        "kind": "bin",
        "left": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'EUC-JP'",
              "unicode": false,
              "value": "EUC-JP",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_internal_encoding",
            "resolution": "uqn",
          },
        },
        "right": Print {
          "expression": String {
            "isDoubleQuote": true,
            "kind": "string",
            "parenthesizedExpression": true,
            "raw": "\\"mb_internal_encoding() failed\\\\n\\"",
            "unicode": false,
            "value": "mb_internal_encoding() failed
",
          },
          "kind": "print",
        },
        "type": "or",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "euc_jp",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'���ܸ�'",
                "unicode": false,
                "value": "���ܸ�",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_strpos",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "euc_jp",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'0'",
                "unicode": false,
                "value": "0",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_strpos",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "euc_jp",
              },
              Number {
                "kind": "number",
                "value": "3",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_strpos",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "euc_jp",
              },
              Number {
                "kind": "number",
                "value": "0",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_strpos",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "r",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "euc_jp",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'�ڹ��'",
              "unicode": false,
              "value": "�ڹ��",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_strpos",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": RetIf {
        "falseExpr": Print {
          "expression": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"NG_STR\\\\n\\"",
            "unicode": false,
            "value": "NG_STR
",
          },
          "kind": "print",
        },
        "kind": "retif",
        "test": Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "r",
          },
          "parenthesizedExpression": true,
          "right": Boolean {
            "kind": "boolean",
            "raw": "FALSE",
            "value": false,
          },
          "type": "===",
        },
        "trueExpr": Print {
          "expression": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"OK_STR\\\\n\\"",
            "unicode": false,
            "value": "OK_STR
",
          },
          "kind": "print",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "r",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "euc_jp",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"\\\\n\\"",
              "unicode": false,
              "value": "
",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_strpos",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": RetIf {
        "falseExpr": Print {
          "expression": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"NG_NEWLINE\\\\n\\"",
            "unicode": false,
            "value": "NG_NEWLINE
",
          },
          "kind": "print",
        },
        "kind": "retif",
        "test": Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "r",
          },
          "parenthesizedExpression": true,
          "right": Boolean {
            "kind": "boolean",
            "raw": "FALSE",
            "value": false,
          },
          "type": "===",
        },
        "trueExpr": Print {
          "expression": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"OK_NEWLINE\\\\n\\"",
            "unicode": false,
            "value": "OK_NEWLINE
",
          },
          "kind": "print",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
