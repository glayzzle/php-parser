// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test preg_split() function : basic functionality 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "string",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'this is a_list: value1, Test__, string; Hello, world!_(parentheses)'",
          "unicode": false,
          "value": "this is a_list: value1, Test__, string; Hello, world!_(parentheses)",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/[:,;\\\\(\\\\)]/'",
                "unicode": false,
                "value": "/[:,;\\\\(\\\\)]/",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "string",
              },
              Unary {
                "kind": "unary",
                "type": "-",
                "what": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
              Name {
                "kind": "name",
                "name": "PREG_SPLIT_NO_EMPTY",
                "resolution": "uqn",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "preg_split",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/:\\\\s*(\\\\w*,*\\\\s*)+;/'",
                "unicode": false,
                "value": "/:\\\\s*(\\\\w*,*\\\\s*)+;/",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "string",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "preg_split",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/(\\\\(|\\\\))/'",
                "unicode": false,
                "value": "/(\\\\(|\\\\))/",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "string",
              },
              Unary {
                "kind": "unary",
                "type": "-",
                "what": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
              Bin {
                "kind": "bin",
                "left": Name {
                  "kind": "name",
                  "name": "PREG_SPLIT_DELIM_CAPTURE",
                  "resolution": "uqn",
                },
                "right": Name {
                  "kind": "name",
                  "name": "PREG_SPLIT_NO_EMPTY",
                  "resolution": "uqn",
                },
                "type": "|",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "preg_split",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/NAME/i'",
                "unicode": false,
                "value": "/NAME/i",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "string",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "preg_split",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/\\\\w/'",
                "unicode": false,
                "value": "/\\\\w/",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "string",
              },
              Unary {
                "kind": "unary",
                "type": "-",
                "what": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
              Name {
                "kind": "name",
                "name": "PREG_SPLIT_NO_EMPTY",
                "resolution": "uqn",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "preg_split",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
