// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Phar: verify stub of specific length does not break __HALT_COMPILER(); scanning in php 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "phar",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Magic {
            "kind": "magic",
            "raw": "__DIR__",
            "value": "__DIR__",
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'/files/stuboflength1041.phar'",
            "unicode": false,
            "value": "/files/stuboflength1041.phar",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "getFileName",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "item",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": New {
        "arguments": Array [
          New {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "phar",
              },
              namedargument {
                "kind": "namedargument",
                "name": "alias",
                "value": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'stuboflength1041.phar'",
                  "unicode": false,
                  "value": "stuboflength1041.phar",
                },
              },
            ],
            "kind": "new",
            "what": Name {
              "kind": "name",
              "name": "Phar",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "new",
        "what": Name {
          "kind": "name",
          "name": "RecursiveIteratorIterator",
          "resolution": "uqn",
        },
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "item",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
