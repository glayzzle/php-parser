// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test filesize() function: usage variations - size of files 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "file_path",
        },
        "operator": "=",
        "right": Magic {
          "kind": "magic",
          "raw": "__DIR__",
          "value": "__DIR__",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": true,
        "target": Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "file_path",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"/file.inc\\"",
            "unicode": false,
            "value": "/file.inc",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"*** Testing filesize(): usage variations ***\\\\n\\"",
          "unicode": false,
          "value": "*** Testing filesize(): usage variations ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"*** Checking filesize() with different size of files ***\\\\n\\"",
          "unicode": false,
          "value": "*** Checking filesize() with different size of files ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    For {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "file_path",
                },
                Number {
                  "kind": "number",
                  "value": "1",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"numeric\\"",
                  "unicode": false,
                  "value": "numeric",
                },
                Number {
                  "kind": "number",
                  "value": "0755",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "size",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"w\\"",
                  "unicode": false,
                  "value": "w",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"filesize_variation\\"",
                  "unicode": false,
                  "value": "filesize_variation",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "create_files",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [
                    Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "file_path",
                      },
                      "right": String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"/filesize_variation1.tmp\\"",
                        "unicode": false,
                        "value": "/filesize_variation1.tmp",
                      },
                      "type": ".",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "filesize",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "clearstatcache",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "file_path",
                },
                Number {
                  "kind": "number",
                  "value": "1",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"filesize_variation\\"",
                  "unicode": false,
                  "value": "filesize_variation",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "delete_files",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "increment": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "size",
          },
          "operator": "=",
          "right": Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "size",
            },
            "right": Number {
              "kind": "number",
              "value": "1000",
            },
            "type": "+",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "size",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "1",
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "size",
          },
          "right": Number {
            "kind": "number",
            "value": "10000",
          },
          "type": "<",
        },
      ],
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Done\\\\n\\"",
          "unicode": false,
          "value": "Done
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
