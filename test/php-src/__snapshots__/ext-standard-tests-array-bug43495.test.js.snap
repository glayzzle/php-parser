// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #43495 (array_merge_recursive() crashes with recursive arrays) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"key1\\"",
                "unicode": false,
                "value": "key1",
              },
              "kind": "entry",
              "unpack": false,
              "value": Array {
                "items": Array [
                  Entry {
                    "byRef": false,
                    "key": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"key2\\"",
                      "unicode": false,
                      "value": "key2",
                    },
                    "kind": "entry",
                    "unpack": false,
                    "value": Array {
                      "items": Array [],
                      "kind": "array",
                      "shortForm": false,
                    },
                  },
                ],
                "kind": "array",
                "shortForm": false,
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": AssignRef {
        "kind": "assignref",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"key3\\"",
            "unicode": false,
            "value": "key3",
          },
          "what": OffsetLookup {
            "kind": "offsetlookup",
            "offset": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"key2\\"",
              "unicode": false,
              "value": "key2",
            },
            "what": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"key1\\"",
                "unicode": false,
                "value": "key1",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "a",
              },
            },
          },
        },
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "b",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"key1\\"",
                "unicode": false,
                "value": "key1",
              },
              "kind": "entry",
              "unpack": false,
              "value": Array {
                "items": Array [
                  Entry {
                    "byRef": false,
                    "key": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"key2\\"",
                      "unicode": false,
                      "value": "key2",
                    },
                    "kind": "entry",
                    "unpack": false,
                    "value": Array {
                      "items": Array [],
                      "kind": "array",
                      "shortForm": false,
                    },
                  },
                ],
                "kind": "array",
                "shortForm": false,
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": AssignRef {
        "kind": "assignref",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"key3\\"",
            "unicode": false,
            "value": "key3",
          },
          "what": OffsetLookup {
            "kind": "offsetlookup",
            "offset": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"key2\\"",
              "unicode": false,
              "value": "key2",
            },
            "what": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"key1\\"",
                "unicode": false,
                "value": "key1",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "b",
              },
            },
          },
        },
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "b",
        },
      },
      "kind": "expressionstatement",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "a",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "b",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "array_merge_recursive",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getMessage",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "e",
                        },
                      },
                    },
                    "right": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"\\\\n\\"",
                      "unicode": false,
                      "value": "
",
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "\\\\Error",
              "resolution": "fqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"key3\\"",
            "unicode": false,
            "value": "key3",
          },
          "what": OffsetLookup {
            "kind": "offsetlookup",
            "offset": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"key2\\"",
              "unicode": false,
              "value": "key2",
            },
            "what": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"key1\\"",
                "unicode": false,
                "value": "key1",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "a",
              },
            },
          },
        },
        "operator": "=",
        "right": NullKeyword {
          "kind": "nullkeyword",
          "raw": "null",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"key3\\"",
            "unicode": false,
            "value": "key3",
          },
          "what": OffsetLookup {
            "kind": "offsetlookup",
            "offset": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"key2\\"",
              "unicode": false,
              "value": "key2",
            },
            "what": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"key1\\"",
                "unicode": false,
                "value": "key1",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "b",
              },
            },
          },
        },
        "operator": "=",
        "right": NullKeyword {
          "kind": "nullkeyword",
          "raw": "null",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
