// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Extensive test for date_diff(). 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "ok",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "0",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'COUNT'",
            "unicode": false,
            "value": "COUNT",
          },
          Number {
            "kind": "number",
            "value": "120",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "define",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "d0",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'2009-11-20'",
              "unicode": false,
              "value": "2009-11-20",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "DateTime",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    For {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "d",
              },
              "operator": "=",
              "right": Clone {
                "kind": "clone",
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "d0",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "dates",
                },
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  New {
                    "arguments": Array [
                      Encapsed {
                        "kind": "encapsed",
                        "raw": "\\"P{$i}D\\" ",
                        "type": "string",
                        "value": Array [
                          EncapsedPart {
                            "curly": false,
                            "expression": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "P",
                              "unicode": false,
                              "value": "P",
                            },
                            "kind": "encapsedpart",
                            "syntax": null,
                          },
                          EncapsedPart {
                            "curly": false,
                            "expression": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "i",
                            },
                            "kind": "encapsedpart",
                            "syntax": "complex",
                          },
                          EncapsedPart {
                            "curly": false,
                            "expression": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "D",
                              "unicode": false,
                              "value": "D",
                            },
                            "kind": "encapsedpart",
                            "syntax": null,
                          },
                        ],
                      },
                    ],
                    "kind": "new",
                    "what": Name {
                      "kind": "name",
                      "name": "DateInterval",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "add",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "d",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "increment": Array [
        Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "0",
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "right": Bin {
            "kind": "bin",
            "left": Name {
              "kind": "name",
              "name": "COUNT",
              "resolution": "uqn",
            },
            "right": Number {
              "kind": "number",
              "value": "12",
            },
            "type": "*",
          },
          "type": "<",
        },
      ],
    },
    For {
      "body": Block {
        "children": Array [
          For {
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "diff",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        OffsetLookup {
                          "kind": "offsetlookup",
                          "offset": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "i",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "dates",
                          },
                        },
                        OffsetLookup {
                          "kind": "offsetlookup",
                          "offset": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "j",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "dates",
                          },
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "date_diff",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "current",
                    },
                    "operator": "=",
                    "right": Clone {
                      "kind": "clone",
                      "what": OffsetLookup {
                        "kind": "offsetlookup",
                        "offset": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "i",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "dates",
                        },
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "int",
                    },
                    "operator": "=",
                    "right": New {
                      "arguments": Array [
                        Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "'P%yY%mM%dD'",
                              "unicode": false,
                              "value": "P%yY%mM%dD",
                            },
                          ],
                          "kind": "call",
                          "what": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "format",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "diff",
                            },
                          },
                        },
                      ],
                      "kind": "new",
                      "what": Name {
                        "kind": "name",
                        "name": "DateInterval",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                If {
                  "alternate": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "int",
                            },
                          ],
                          "kind": "call",
                          "what": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "add",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "current",
                            },
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "int",
                            },
                          ],
                          "kind": "call",
                          "what": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "sub",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "current",
                            },
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "current",
                    },
                    "right": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "j",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "dates",
                      },
                    },
                    "type": ">",
                  },
                },
                If {
                  "alternate": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Post {
                          "kind": "post",
                          "type": "+",
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "ok",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "body": Block {
                    "children": Array [
                      Echo {
                        "expressions": Array [
                          String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"FAIL: \\"",
                            "unicode": false,
                            "value": "FAIL: ",
                          },
                          Call {
                            "arguments": Array [
                              String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'Y-m-d'",
                                "unicode": false,
                                "value": "Y-m-d",
                              },
                            ],
                            "kind": "call",
                            "what": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "format",
                              },
                              "what": OffsetLookup {
                                "kind": "offsetlookup",
                                "offset": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "i",
                                },
                                "what": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "dates",
                                },
                              },
                            },
                          },
                          String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\" + \\"",
                            "unicode": false,
                            "value": " + ",
                          },
                          Call {
                            "arguments": Array [
                              String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'%y-%m-%d'",
                                "unicode": false,
                                "value": "%y-%m-%d",
                              },
                            ],
                            "kind": "call",
                            "what": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "format",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "int",
                              },
                            },
                          },
                          String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\" = \\"",
                            "unicode": false,
                            "value": " = ",
                          },
                          Call {
                            "arguments": Array [
                              String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'Y-m-d'",
                                "unicode": false,
                                "value": "Y-m-d",
                              },
                            ],
                            "kind": "call",
                            "what": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "format",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "current",
                              },
                            },
                          },
                          String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\" (\\"",
                            "unicode": false,
                            "value": " (",
                          },
                          Call {
                            "arguments": Array [
                              String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'Y-m-d'",
                                "unicode": false,
                                "value": "Y-m-d",
                              },
                            ],
                            "kind": "call",
                            "what": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "format",
                              },
                              "what": OffsetLookup {
                                "kind": "offsetlookup",
                                "offset": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "j",
                                },
                                "what": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "dates",
                                },
                              },
                            },
                          },
                          String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\")\\\\n\\"",
                            "unicode": false,
                            "value": ")
",
                          },
                        ],
                        "kind": "echo",
                        "shortForm": false,
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "current",
                    },
                    "right": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "j",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "dates",
                      },
                    },
                    "type": "!=",
                  },
                },
              ],
              "kind": "block",
            },
            "increment": Array [
              Post {
                "kind": "post",
                "type": "+",
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "j",
                },
              },
            ],
            "init": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "j",
                },
                "operator": "=",
                "right": Number {
                  "kind": "number",
                  "value": "0",
                },
              },
            ],
            "kind": "for",
            "shortForm": false,
            "test": Array [
              Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "j",
                },
                "right": Bin {
                  "kind": "bin",
                  "left": Name {
                    "kind": "name",
                    "name": "COUNT",
                    "resolution": "uqn",
                  },
                  "right": Number {
                    "kind": "number",
                    "value": "12",
                  },
                  "type": "*",
                },
                "type": "<",
              },
            ],
          },
        ],
        "kind": "block",
      },
      "increment": Array [
        Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "0",
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "right": Name {
            "kind": "name",
            "name": "COUNT",
            "resolution": "uqn",
          },
          "type": "<",
        },
      ],
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "ok",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
