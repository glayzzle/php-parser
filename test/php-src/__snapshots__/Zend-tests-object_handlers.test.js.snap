// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Magic object handlers segfaults and memory errors 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "x",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          Return {
            "expr": Variable {
              "curly": false,
              "kind": "variable",
              "name": "x",
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "f",
      },
      "nullable": false,
      "type": null,
    },
    Class {
      "attrGroups": Array [],
      "body": Array [
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "property",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"y\\"",
                      "unicode": false,
                      "value": "y",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "GLOBALS",
                    },
                  },
                  "operator": "=",
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "property",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "__get",
          },
          "nullable": false,
          "type": null,
          "visibility": "",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "property",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "value",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"y\\"",
                      "unicode": false,
                      "value": "y",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "GLOBALS",
                    },
                  },
                  "operator": "=",
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "property",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "__set",
          },
          "nullable": false,
          "type": null,
          "visibility": "",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "func",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "args",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"y\\"",
                      "unicode": false,
                      "value": "y",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "GLOBALS",
                    },
                  },
                  "operator": "=",
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "func",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "__call",
          },
          "nullable": false,
          "type": null,
          "visibility": "",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "func",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "args",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"y\\"",
                      "unicode": false,
                      "value": "y",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "GLOBALS",
                    },
                  },
                  "operator": "=",
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "func",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": true,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "__callStatic",
          },
          "nullable": false,
          "type": null,
          "visibility": "",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "index",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"y\\"",
                      "unicode": false,
                      "value": "y",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "GLOBALS",
                    },
                  },
                  "operator": "=",
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "index",
                  },
                },
                "kind": "expressionstatement",
              },
              Return {
                "expr": NullKeyword {
                  "kind": "nullkeyword",
                  "raw": "null",
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "offsetGet",
          },
          "nullable": false,
          "type": Name {
            "kind": "name",
            "name": "mixed",
            "resolution": "uqn",
          },
          "visibility": "",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "index",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "newval",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"y\\"",
                      "unicode": false,
                      "value": "y",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "GLOBALS",
                    },
                  },
                  "operator": "=",
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "index",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "offsetSet",
          },
          "nullable": false,
          "type": TypeReference {
            "kind": "typereference",
            "name": "void",
            "raw": "void",
          },
          "visibility": "",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "index",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"y\\"",
                      "unicode": false,
                      "value": "y",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "GLOBALS",
                    },
                  },
                  "operator": "=",
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "index",
                  },
                },
                "kind": "expressionstatement",
              },
              Return {
                "expr": Boolean {
                  "kind": "boolean",
                  "raw": "true",
                  "value": true,
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "offsetExists",
          },
          "nullable": false,
          "type": TypeReference {
            "kind": "typereference",
            "name": "bool",
            "raw": "bool",
          },
          "visibility": "",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "index",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"y\\"",
                      "unicode": false,
                      "value": "y",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "GLOBALS",
                    },
                  },
                  "operator": "=",
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "index",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "offsetUnset",
          },
          "nullable": false,
          "type": TypeReference {
            "kind": "typereference",
            "name": "void",
            "raw": "void",
          },
          "visibility": "",
        },
      ],
      "extends": null,
      "implements": Array [
        Name {
          "kind": "name",
          "name": "ArrayAccess",
          "resolution": "uqn",
        },
      ],
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "foo",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "x",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "foo",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        "operator": "=",
        "right": NullKeyword {
          "kind": "nullkeyword",
          "raw": "null",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "z",
        },
        "operator": "=",
        "right": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "const_get",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "x",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "const_set",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "x",
          },
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "1",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "const_call",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "x",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": StaticLookup {
          "kind": "staticlookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "const_callstatic",
          },
          "what": Name {
            "kind": "name",
            "name": "foo",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "z",
        },
        "operator": "=",
        "right": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"const_dim_get\\"",
            "unicode": false,
            "value": "const_dim_get",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "x",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"const_dim_set\\"",
            "unicode": false,
            "value": "const_dim_set",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "x",
          },
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "1",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Isset {
        "kind": "isset",
        "variables": Array [
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"const_dim_isset\\"",
              "unicode": false,
              "value": "const_dim_isset",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "x",
            },
          },
        ],
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Unset {
      "kind": "unset",
      "variables": Array [
        OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"const_dim_unset\\"",
            "unicode": false,
            "value": "const_dim_unset",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "x",
          },
        },
      ],
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "z",
        },
        "operator": "=",
        "right": PropertyLookup {
          "kind": "propertylookup",
          "offset": EncapsedPart {
            "curly": false,
            "expression": Number {
              "kind": "number",
              "value": "1",
            },
            "kind": "encapsedpart",
            "syntax": "complex",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "x",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": PropertyLookup {
          "kind": "propertylookup",
          "offset": EncapsedPart {
            "curly": false,
            "expression": Number {
              "kind": "number",
              "value": "2",
            },
            "kind": "encapsedpart",
            "syntax": "complex",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "x",
          },
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "1",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "c",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"tmp\\"",
          "unicode": false,
          "value": "tmp",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "z",
        },
        "operator": "=",
        "right": PropertyLookup {
          "kind": "propertylookup",
          "offset": EncapsedPart {
            "curly": false,
            "expression": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "c",
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"_get\\"",
                "unicode": false,
                "value": "_get",
              },
              "type": ".",
            },
            "kind": "encapsedpart",
            "syntax": "complex",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "x",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": PropertyLookup {
          "kind": "propertylookup",
          "offset": EncapsedPart {
            "curly": false,
            "expression": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "c",
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"_set\\"",
                "unicode": false,
                "value": "_set",
              },
              "type": ".",
            },
            "kind": "encapsedpart",
            "syntax": "complex",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "x",
          },
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "1",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": EncapsedPart {
            "curly": false,
            "expression": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "c",
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"_call\\"",
                "unicode": false,
                "value": "_call",
              },
              "type": ".",
            },
            "kind": "encapsedpart",
            "syntax": "complex",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "x",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "z",
        },
        "operator": "=",
        "right": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "c",
            },
            "right": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"_dim_get\\"",
              "unicode": false,
              "value": "_dim_get",
            },
            "type": ".",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "x",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "c",
            },
            "right": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"_dim_set\\"",
              "unicode": false,
              "value": "_dim_set",
            },
            "type": ".",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "x",
          },
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "1",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Isset {
        "kind": "isset",
        "variables": Array [
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "c",
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"_dim_isset\\"",
                "unicode": false,
                "value": "_dim_isset",
              },
              "type": ".",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "x",
            },
          },
        ],
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Unset {
      "kind": "unset",
      "variables": Array [
        OffsetLookup {
          "kind": "offsetlookup",
          "offset": Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "c",
            },
            "right": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"_dim_unset\\"",
              "unicode": false,
              "value": "_dim_unset",
            },
            "type": ".",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "x",
          },
        },
      ],
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "c",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "0",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "z",
        },
        "operator": "=",
        "right": PropertyLookup {
          "kind": "propertylookup",
          "offset": EncapsedPart {
            "curly": false,
            "expression": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "c",
              },
              "right": Number {
                "kind": "number",
                "value": "3",
              },
              "type": "+",
            },
            "kind": "encapsedpart",
            "syntax": "complex",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "x",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": PropertyLookup {
          "kind": "propertylookup",
          "offset": EncapsedPart {
            "curly": false,
            "expression": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "c",
              },
              "right": Number {
                "kind": "number",
                "value": "4",
              },
              "type": "+",
            },
            "kind": "encapsedpart",
            "syntax": "complex",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "x",
          },
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "1",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "c",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"cv_get\\"",
          "unicode": false,
          "value": "cv_get",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "z",
        },
        "operator": "=",
        "right": PropertyLookup {
          "kind": "propertylookup",
          "offset": EncapsedPart {
            "curly": false,
            "expression": Variable {
              "curly": false,
              "kind": "variable",
              "name": "c",
            },
            "kind": "encapsedpart",
            "syntax": "complex",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "x",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "c",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"cv_set\\"",
          "unicode": false,
          "value": "cv_set",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": PropertyLookup {
          "kind": "propertylookup",
          "offset": EncapsedPart {
            "curly": false,
            "expression": Variable {
              "curly": false,
              "kind": "variable",
              "name": "c",
            },
            "kind": "encapsedpart",
            "syntax": "complex",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "x",
          },
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "1",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "c",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"cv_call\\"",
          "unicode": false,
          "value": "cv_call",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": EncapsedPart {
            "curly": false,
            "expression": Variable {
              "curly": false,
              "kind": "variable",
              "name": "c",
            },
            "kind": "encapsedpart",
            "syntax": "complex",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "x",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "c",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"cv_dim_get\\"",
          "unicode": false,
          "value": "cv_dim_get",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "z",
        },
        "operator": "=",
        "right": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Variable {
            "curly": false,
            "kind": "variable",
            "name": "c",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "x",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "c",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"cv_dim_set\\"",
          "unicode": false,
          "value": "cv_dim_set",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Variable {
            "curly": false,
            "kind": "variable",
            "name": "c",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "x",
          },
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "1",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "c",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"cv_dim_isset\\"",
          "unicode": false,
          "value": "cv_dim_isset",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Isset {
        "kind": "isset",
        "variables": Array [
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": Variable {
              "curly": false,
              "kind": "variable",
              "name": "c",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "x",
            },
          },
        ],
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "c",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"cv_dim_unset\\"",
          "unicode": false,
          "value": "cv_dim_unset",
        },
      },
      "kind": "expressionstatement",
    },
    Unset {
      "kind": "unset",
      "variables": Array [
        OffsetLookup {
          "kind": "offsetlookup",
          "offset": Variable {
            "curly": false,
            "kind": "variable",
            "name": "c",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "x",
          },
        },
      ],
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "c",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "5",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "z",
        },
        "operator": "=",
        "right": PropertyLookup {
          "kind": "propertylookup",
          "offset": EncapsedPart {
            "curly": false,
            "expression": Variable {
              "curly": false,
              "kind": "variable",
              "name": "c",
            },
            "kind": "encapsedpart",
            "syntax": "complex",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "x",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "c",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "6",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": PropertyLookup {
          "kind": "propertylookup",
          "offset": EncapsedPart {
            "curly": false,
            "expression": Variable {
              "curly": false,
              "kind": "variable",
              "name": "c",
            },
            "kind": "encapsedpart",
            "syntax": "complex",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "x",
          },
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "1",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "z",
        },
        "operator": "=",
        "right": PropertyLookup {
          "kind": "propertylookup",
          "offset": EncapsedPart {
            "curly": false,
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"var_get\\"",
                  "unicode": false,
                  "value": "var_get",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "f",
                "resolution": "uqn",
              },
            },
            "kind": "encapsedpart",
            "syntax": "complex",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "x",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": PropertyLookup {
          "kind": "propertylookup",
          "offset": EncapsedPart {
            "curly": false,
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"var_set\\"",
                  "unicode": false,
                  "value": "var_set",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "f",
                "resolution": "uqn",
              },
            },
            "kind": "encapsedpart",
            "syntax": "complex",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "x",
          },
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "1",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": EncapsedPart {
            "curly": false,
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"var_call\\"",
                  "unicode": false,
                  "value": "var_call",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "f",
                "resolution": "uqn",
              },
            },
            "kind": "encapsedpart",
            "syntax": "complex",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "x",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "z",
        },
        "operator": "=",
        "right": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"var_dim_get\\"",
                "unicode": false,
                "value": "var_dim_get",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "f",
              "resolution": "uqn",
            },
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "x",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"var_dim_set\\"",
                "unicode": false,
                "value": "var_dim_set",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "f",
              "resolution": "uqn",
            },
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "x",
          },
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "1",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Isset {
        "kind": "isset",
        "variables": Array [
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"var_dim_isset\\"",
                  "unicode": false,
                  "value": "var_dim_isset",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "f",
                "resolution": "uqn",
              },
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "x",
            },
          },
        ],
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Unset {
      "kind": "unset",
      "variables": Array [
        OffsetLookup {
          "kind": "offsetlookup",
          "offset": Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"var_dim_unset\\"",
                "unicode": false,
                "value": "var_dim_unset",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "f",
              "resolution": "uqn",
            },
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "x",
          },
        },
      ],
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "z",
        },
        "operator": "=",
        "right": PropertyLookup {
          "kind": "propertylookup",
          "offset": EncapsedPart {
            "curly": false,
            "expression": Call {
              "arguments": Array [
                Number {
                  "kind": "number",
                  "value": "7",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "f",
                "resolution": "uqn",
              },
            },
            "kind": "encapsedpart",
            "syntax": "complex",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "x",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": PropertyLookup {
          "kind": "propertylookup",
          "offset": EncapsedPart {
            "curly": false,
            "expression": Call {
              "arguments": Array [
                Number {
                  "kind": "number",
                  "value": "8",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "f",
                "resolution": "uqn",
              },
            },
            "kind": "encapsedpart",
            "syntax": "complex",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "x",
          },
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "1",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "y",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
