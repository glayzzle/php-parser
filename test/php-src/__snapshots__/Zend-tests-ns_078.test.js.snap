// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests 002: Import - different syntaxes 1`] = `
Program {
  "children": Array [
    Namespace {
      "children": Array [
        Class {
          "attrGroups": Array [],
          "body": Array [
            Method {
              "arguments": Array [],
              "attrGroups": Array [],
              "body": Block {
                "children": Array [
                  Echo {
                    "expressions": Array [
                      Magic {
                        "kind": "magic",
                        "raw": "__CLASS__",
                        "value": "__CLASS__",
                      },
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"\\\\n\\"",
                        "unicode": false,
                        "value": "
",
                      },
                    ],
                    "kind": "echo",
                    "shortForm": false,
                  },
                ],
                "kind": "block",
              },
              "byref": false,
              "isAbstract": false,
              "isFinal": false,
              "isStatic": true,
              "kind": "method",
              "name": Identifier {
                "kind": "identifier",
                "name": "bar",
              },
              "nullable": false,
              "type": null,
              "visibility": "",
            },
          ],
          "extends": null,
          "implements": null,
          "isAbstract": false,
          "isAnonymous": false,
          "isFinal": false,
          "kind": "class",
          "name": Identifier {
            "kind": "identifier",
            "name": "Foo",
          },
        },
        Class {
          "attrGroups": Array [],
          "body": Array [
            Method {
              "arguments": Array [],
              "attrGroups": Array [],
              "body": Block {
                "children": Array [
                  Echo {
                    "expressions": Array [
                      Magic {
                        "kind": "magic",
                        "raw": "__CLASS__",
                        "value": "__CLASS__",
                      },
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"\\\\n\\"",
                        "unicode": false,
                        "value": "
",
                      },
                    ],
                    "kind": "echo",
                    "shortForm": false,
                  },
                ],
                "kind": "block",
              },
              "byref": false,
              "isAbstract": false,
              "isFinal": false,
              "isStatic": true,
              "kind": "method",
              "name": Identifier {
                "kind": "identifier",
                "name": "bar",
              },
              "nullable": false,
              "type": null,
              "visibility": "",
            },
          ],
          "extends": null,
          "implements": null,
          "isAbstract": false,
          "isAnonymous": false,
          "isFinal": false,
          "kind": "class",
          "name": Identifier {
            "kind": "identifier",
            "name": "Foo2",
          },
        },
        Namespace {
          "children": Array [
            UseGroup {
              "items": Array [
                UseItem {
                  "alias": null,
                  "kind": "useitem",
                  "name": "test\\\\ns1\\\\Foo",
                  "type": null,
                },
              ],
              "kind": "usegroup",
              "name": null,
              "type": null,
            },
            UseGroup {
              "items": Array [
                UseItem {
                  "alias": Identifier {
                    "kind": "identifier",
                    "name": "Bar",
                  },
                  "kind": "useitem",
                  "name": "test\\\\ns1\\\\Foo",
                  "type": null,
                },
              ],
              "kind": "usegroup",
              "name": null,
              "type": null,
            },
            UseGroup {
              "items": Array [
                UseItem {
                  "alias": null,
                  "kind": "useitem",
                  "name": "\\\\test\\\\ns1\\\\Foo2",
                  "type": null,
                },
              ],
              "kind": "usegroup",
              "name": null,
              "type": null,
            },
            UseGroup {
              "items": Array [
                UseItem {
                  "alias": Identifier {
                    "kind": "identifier",
                    "name": "Bar2",
                  },
                  "kind": "useitem",
                  "name": "\\\\test\\\\ns1\\\\Foo2",
                  "type": null,
                },
              ],
              "kind": "usegroup",
              "name": null,
              "type": null,
            },
            ExpressionStatement {
              "expression": Call {
                "arguments": Array [],
                "kind": "call",
                "what": StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "bar",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "Foo",
                    "resolution": "uqn",
                  },
                },
              },
              "kind": "expressionstatement",
            },
            ExpressionStatement {
              "expression": Call {
                "arguments": Array [],
                "kind": "call",
                "what": StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "bar",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "Bar",
                    "resolution": "uqn",
                  },
                },
              },
              "kind": "expressionstatement",
            },
            ExpressionStatement {
              "expression": Call {
                "arguments": Array [],
                "kind": "call",
                "what": StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "bar",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "Foo2",
                    "resolution": "uqn",
                  },
                },
              },
              "kind": "expressionstatement",
            },
            ExpressionStatement {
              "expression": Call {
                "arguments": Array [],
                "kind": "call",
                "what": StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "bar",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "Bar2",
                    "resolution": "uqn",
                  },
                },
              },
              "kind": "expressionstatement",
            },
          ],
          "kind": "namespace",
          "name": "xyz",
          "withBrackets": false,
        },
      ],
      "kind": "namespace",
      "name": "test\\\\ns1",
      "withBrackets": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
