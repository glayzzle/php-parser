// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Testing imagecolordeallocate() of GD library with Out of range integers (Above) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": true,
        "target": Bin {
          "kind": "bin",
          "left": Magic {
            "kind": "magic",
            "raw": "__DIR__",
            "value": "__DIR__",
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'/func.inc'",
            "unicode": false,
            "value": "/func.inc",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "image",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Number {
              "kind": "number",
              "value": "180",
            },
            Number {
              "kind": "number",
              "value": "30",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "imagecreate",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "white",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "image",
            },
            Number {
              "kind": "number",
              "value": "255",
            },
            Number {
              "kind": "number",
              "value": "255",
            },
            Number {
              "kind": "number",
              "value": "255",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "imagecolorallocate",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "totalColors",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "image",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "imagecolorstotal",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Closure {
            "arguments": Array [],
            "attrGroups": Array [],
            "body": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "image",
                },
                Bin {
                  "kind": "bin",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "totalColors",
                  },
                  "right": Number {
                    "kind": "number",
                    "value": "100",
                  },
                  "type": "+",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagecolordeallocate",
                "resolution": "uqn",
              },
            },
            "byref": false,
            "isStatic": false,
            "kind": "arrowfunc",
            "nullable": false,
            "type": null,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "trycatch_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
