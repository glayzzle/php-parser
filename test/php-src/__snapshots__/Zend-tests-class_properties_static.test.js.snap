// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Static Class Property Expressions 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [],
      "body": Array [
        PropertyStatement {
          "isStatic": false,
          "kind": "propertystatement",
          "properties": Array [
            Property {
              "attrGroups": Array [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "b1",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": Bin {
                "kind": "bin",
                "left": Number {
                  "kind": "number",
                  "value": "1",
                },
                "right": Number {
                  "kind": "number",
                  "value": "1",
                },
                "type": "+",
              },
            },
          ],
          "visibility": "public",
        },
        PropertyStatement {
          "isStatic": false,
          "kind": "propertystatement",
          "properties": Array [
            Property {
              "attrGroups": Array [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "b2",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": Bin {
                "kind": "bin",
                "left": Number {
                  "kind": "number",
                  "value": "1",
                },
                "right": Number {
                  "kind": "number",
                  "value": "2",
                },
                "type": "<<",
              },
            },
          ],
          "visibility": "public",
        },
        PropertyStatement {
          "isStatic": false,
          "kind": "propertystatement",
          "properties": Array [
            Property {
              "attrGroups": Array [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "b3",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"foo \\"",
                    "unicode": false,
                    "value": "foo ",
                  },
                  "right": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\" bar \\"",
                    "unicode": false,
                    "value": " bar ",
                  },
                  "type": ".",
                },
                "right": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\" baz\\"",
                  "unicode": false,
                  "value": " baz",
                },
                "type": ".",
              },
            },
          ],
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "Foo",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "f",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "Foo",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "b1",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "f",
            },
          },
          PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "b2",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "f",
            },
          },
          PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "b3",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "f",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
