// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #75170: mt_rand() bias on 64-bit machines 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "1234567890",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mt_srand",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "total",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "10000",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "max",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "0x66666666",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Number {
            "kind": "number",
            "value": "0",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "halves",
          },
        },
        "operator": "=",
        "right": Assign {
          "kind": "assign",
          "left": OffsetLookup {
            "kind": "offsetlookup",
            "offset": Number {
              "kind": "number",
              "value": "1",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "halves",
            },
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "0",
          },
        },
      },
      "kind": "expressionstatement",
    },
    For {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Post {
              "kind": "post",
              "type": "+",
              "what": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Bin {
                  "kind": "bin",
                  "left": Bin {
                    "kind": "bin",
                    "left": Call {
                      "arguments": Array [
                        Number {
                          "kind": "number",
                          "value": "0",
                        },
                        Bin {
                          "kind": "bin",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "max",
                          },
                          "right": Number {
                            "kind": "number",
                            "value": "1",
                          },
                          "type": "-",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "mt_rand",
                        "resolution": "uqn",
                      },
                    },
                    "parenthesizedExpression": true,
                    "right": Number {
                      "kind": "number",
                      "value": "1",
                    },
                    "type": ">>",
                  },
                  "right": Number {
                    "kind": "number",
                    "value": "1",
                  },
                  "type": "&",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "halves",
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "increment": Array [
        Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "0",
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "right": Variable {
            "curly": false,
            "kind": "variable",
            "name": "total",
          },
          "type": "<",
        },
      ],
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"%.1f%% vs. %.1f%%\\\\n\\"",
            "unicode": false,
            "value": "%.1f%% vs. %.1f%%
",
          },
          Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": Number {
                "kind": "number",
                "value": "100.",
              },
              "right": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "0",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "halves",
                },
              },
              "type": "*",
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "total",
            },
            "type": "/",
          },
          Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": Number {
                "kind": "number",
                "value": "100.",
              },
              "right": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "1",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "halves",
                },
              },
              "type": "*",
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "total",
            },
            "type": "/",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "1234567890",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mt_srand",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "total",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "10000",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "max",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "0x66666666",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Number {
            "kind": "number",
            "value": "0",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "halves",
          },
        },
        "operator": "=",
        "right": Assign {
          "kind": "assign",
          "left": OffsetLookup {
            "kind": "offsetlookup",
            "offset": Number {
              "kind": "number",
              "value": "1",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "halves",
            },
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "0",
          },
        },
      },
      "kind": "expressionstatement",
    },
    For {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Post {
              "kind": "post",
              "type": "+",
              "what": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Cast {
                  "expr": Bin {
                    "kind": "bin",
                    "left": Call {
                      "arguments": Array [
                        Number {
                          "kind": "number",
                          "value": "0",
                        },
                        Bin {
                          "kind": "bin",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "max",
                          },
                          "right": Number {
                            "kind": "number",
                            "value": "1",
                          },
                          "type": "-",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "mt_rand",
                        "resolution": "uqn",
                      },
                    },
                    "parenthesizedExpression": true,
                    "right": Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "max",
                      },
                      "parenthesizedExpression": true,
                      "right": Number {
                        "kind": "number",
                        "value": "2",
                      },
                      "type": "/",
                    },
                    "type": "/",
                  },
                  "kind": "cast",
                  "raw": "(int)",
                  "type": "int",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "halves",
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "increment": Array [
        Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "0",
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "right": Variable {
            "curly": false,
            "kind": "variable",
            "name": "total",
          },
          "type": "<",
        },
      ],
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"%.1f%% vs. %.1f%%\\\\n\\"",
            "unicode": false,
            "value": "%.1f%% vs. %.1f%%
",
          },
          Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": Number {
                "kind": "number",
                "value": "100.",
              },
              "right": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "0",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "halves",
                },
              },
              "type": "*",
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "total",
            },
            "type": "/",
          },
          Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": Number {
                "kind": "number",
                "value": "100.",
              },
              "right": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "1",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "halves",
                },
              },
              "type": "*",
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "total",
            },
            "type": "/",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
