// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests COM: mapping a safearray 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Name {
            "kind": "name",
            "name": "E_ALL",
            "resolution": "uqn",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "error_reporting",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "v",
              },
              "operator": "=",
              "right": New {
                "arguments": Array [
                  Array {
                    "items": Array [
                      Entry {
                        "byRef": false,
                        "key": null,
                        "kind": "entry",
                        "unpack": false,
                        "value": String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"123\\"",
                          "unicode": false,
                          "value": "123",
                        },
                      },
                      Entry {
                        "byRef": false,
                        "key": null,
                        "kind": "entry",
                        "unpack": false,
                        "value": String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"456\\"",
                          "unicode": false,
                          "value": "456",
                        },
                      },
                      Entry {
                        "byRef": false,
                        "key": null,
                        "kind": "entry",
                        "unpack": false,
                        "value": String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"789\\"",
                          "unicode": false,
                          "value": "789",
                        },
                      },
                    ],
                    "kind": "array",
                    "shortForm": false,
                  },
                ],
                "kind": "new",
                "what": Name {
                  "kind": "name",
                  "name": "VARIANT",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "v",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Print {
              "expression": Bin {
                "kind": "bin",
                "left": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": Number {
                    "kind": "number",
                    "value": "0",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "v",
                  },
                },
                "right": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"\\\\n\\"",
                  "unicode": false,
                  "value": "
",
                },
                "type": ".",
              },
              "kind": "print",
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Print {
              "expression": Bin {
                "kind": "bin",
                "left": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": Number {
                    "kind": "number",
                    "value": "1",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "v",
                  },
                },
                "right": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"\\\\n\\"",
                  "unicode": false,
                  "value": "
",
                },
                "type": ".",
              },
              "kind": "print",
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Print {
              "expression": Bin {
                "kind": "bin",
                "left": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": Number {
                    "kind": "number",
                    "value": "2",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "v",
                  },
                },
                "right": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"\\\\n\\"",
                  "unicode": false,
                  "value": "
",
                },
                "type": ".",
              },
              "kind": "print",
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "1",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "v",
                },
              },
              "operator": "=",
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"hello\\"",
                "unicode": false,
                "value": "hello",
              },
            },
            "kind": "expressionstatement",
          },
          Foreach {
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "item",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "key": null,
            "kind": "foreach",
            "shortForm": false,
            "source": Variable {
              "curly": false,
              "kind": "variable",
              "name": "v",
            },
            "value": Variable {
              "curly": false,
              "kind": "variable",
              "name": "item",
            },
          },
          Try {
            "always": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": Number {
                        "kind": "number",
                        "value": "3",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "v",
                      },
                    },
                    "operator": "=",
                    "right": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"shouldn't work\\"",
                      "unicode": false,
                      "value": "shouldn't work",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "catches": Array [
              Catch {
                "body": Block {
                  "children": Array [
                    If {
                      "alternate": null,
                      "body": Block {
                        "children": Array [
                          Throw {
                            "kind": "throw",
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "e",
                            },
                          },
                        ],
                        "kind": "block",
                      },
                      "kind": "if",
                      "shortForm": false,
                      "test": Bin {
                        "kind": "bin",
                        "left": Call {
                          "arguments": Array [],
                          "kind": "call",
                          "what": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "getCode",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "e",
                            },
                          },
                        },
                        "right": Name {
                          "kind": "name",
                          "name": "DISP_E_BADINDEX",
                          "resolution": "uqn",
                        },
                        "type": "!=",
                      },
                    },
                    Echo {
                      "expressions": Array [
                        String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"Got BADINDEX exception OK!\\\\n\\"",
                          "unicode": false,
                          "value": "Got BADINDEX exception OK!
",
                        },
                      ],
                      "kind": "echo",
                      "shortForm": false,
                    },
                  ],
                  "kind": "block",
                },
                "kind": "catch",
                "variable": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "e",
                },
                "what": Array [
                  Name {
                    "kind": "name",
                    "name": "com_exception",
                    "resolution": "uqn",
                  },
                ],
              },
            ],
            "kind": "try",
          },
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"OK!\\"",
                "unicode": false,
                "value": "OK!",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Print {
                  "expression": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "e",
                  },
                  "kind": "print",
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "Exception",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
