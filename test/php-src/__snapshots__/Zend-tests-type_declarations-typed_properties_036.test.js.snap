// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test uninitialized typed properties normal foreach must not be yielded 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "foo",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Class {
            "attrGroups": Array [],
            "body": Array [
              PropertyStatement {
                "isStatic": false,
                "kind": "propertystatement",
                "properties": Array [
                  Property {
                    "attrGroups": Array [],
                    "kind": "property",
                    "name": Identifier {
                      "kind": "identifier",
                      "name": "bar",
                    },
                    "nullable": false,
                    "readonly": false,
                    "type": TypeReference {
                      "kind": "typereference",
                      "name": "int",
                      "raw": "int",
                    },
                    "value": Number {
                      "kind": "number",
                      "value": "10",
                    },
                  },
                  Property {
                    "attrGroups": Array [],
                    "kind": "property",
                    "name": Identifier {
                      "kind": "identifier",
                      "name": "qux",
                    },
                    "nullable": false,
                    "readonly": false,
                    "type": null,
                    "value": null,
                  },
                ],
                "visibility": "public",
              },
            ],
            "extends": null,
            "implements": null,
            "isAbstract": false,
            "isAnonymous": true,
            "isFinal": false,
            "kind": "class",
            "name": null,
          },
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "key",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "bar",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "key": Variable {
        "curly": false,
        "kind": "variable",
        "name": "key",
      },
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "foo",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "bar",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
