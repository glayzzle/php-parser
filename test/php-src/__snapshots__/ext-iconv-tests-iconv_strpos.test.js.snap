// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests iconv_strpos() 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "haystk",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "needle",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "offset",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "to_charset",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "from_charset",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "haystk",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "from_charset",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "to_charset",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "haystk",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "iconv",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "from_charset",
              },
              "right": Boolean {
                "kind": "boolean",
                "raw": "false",
                "value": false,
              },
              "type": "!==",
            },
          },
          Try {
            "always": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "haystk",
                          },
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "needle",
                          },
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "offset",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "strpos",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "catches": Array [
              Catch {
                "body": Block {
                  "children": Array [
                    Echo {
                      "expressions": Array [
                        Bin {
                          "kind": "bin",
                          "left": Call {
                            "arguments": Array [],
                            "kind": "call",
                            "what": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "getMessage",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "exception",
                              },
                            },
                          },
                          "right": String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"\\\\n\\"",
                            "unicode": false,
                            "value": "
",
                          },
                          "type": ".",
                        },
                      ],
                      "kind": "echo",
                      "shortForm": false,
                    },
                  ],
                  "kind": "block",
                },
                "kind": "catch",
                "variable": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "exception",
                },
                "what": Array [
                  Name {
                    "kind": "name",
                    "name": "ValueError",
                    "resolution": "uqn",
                  },
                ],
              },
            ],
            "kind": "try",
          },
          Try {
            "always": null,
            "body": Block {
              "children": Array [
                If {
                  "alternate": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "haystk",
                                },
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "needle",
                                },
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "offset",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "iconv_strpos",
                                "resolution": "uqn",
                              },
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "var_dump",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "haystk",
                                },
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "needle",
                                },
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "offset",
                                },
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "to_charset",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "iconv_strpos",
                                "resolution": "uqn",
                              },
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "var_dump",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "to_charset",
                    },
                    "right": Boolean {
                      "kind": "boolean",
                      "raw": "false",
                      "value": false,
                    },
                    "type": "!==",
                  },
                },
              ],
              "kind": "block",
            },
            "catches": Array [
              Catch {
                "body": Block {
                  "children": Array [
                    Echo {
                      "expressions": Array [
                        Bin {
                          "kind": "bin",
                          "left": Call {
                            "arguments": Array [],
                            "kind": "call",
                            "what": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "getMessage",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "exception",
                              },
                            },
                          },
                          "right": String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"\\\\n\\"",
                            "unicode": false,
                            "value": "
",
                          },
                          "type": ".",
                        },
                      ],
                      "kind": "echo",
                      "shortForm": false,
                    },
                  ],
                  "kind": "block",
                },
                "kind": "catch",
                "variable": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "exception",
                },
                "what": Array [
                  Name {
                    "kind": "name",
                    "name": "ValueError",
                    "resolution": "uqn",
                  },
                ],
              },
            ],
            "kind": "try",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "foo",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"abecdbcdabef\\"",
            "unicode": false,
            "value": "abecdbcdabef",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"bcd\\"",
            "unicode": false,
            "value": "bcd",
          },
          Unary {
            "kind": "unary",
            "type": "-",
            "what": Number {
              "kind": "number",
              "value": "1",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "foo",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"abecdbcdabef\\"",
            "unicode": false,
            "value": "abecdbcdabef",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"bcd\\"",
            "unicode": false,
            "value": "bcd",
          },
          Unary {
            "kind": "unary",
            "type": "-",
            "what": Number {
              "kind": "number",
              "value": "7",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "foo",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"abecdbcdabef\\"",
            "unicode": false,
            "value": "abecdbcdabef",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"bcd\\"",
            "unicode": false,
            "value": "bcd",
          },
          Number {
            "kind": "number",
            "value": "12",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "foo",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"abecdbcdabef\\"",
            "unicode": false,
            "value": "abecdbcdabef",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"bcd\\"",
            "unicode": false,
            "value": "bcd",
          },
          Number {
            "kind": "number",
            "value": "100000",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "foo",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"abcabcabcdabcababcdabc\\"",
            "unicode": false,
            "value": "abcabcabcdabcababcdabc",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"bcd\\"",
            "unicode": false,
            "value": "bcd",
          },
          Number {
            "kind": "number",
            "value": "0",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "foo",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"abcabcabcdabcababcdabc\\"",
            "unicode": false,
            "value": "abcabcabcdabcababcdabc",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"bcd\\"",
            "unicode": false,
            "value": "bcd",
          },
          Number {
            "kind": "number",
            "value": "10",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "foo",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"abcab\\"",
                    "unicode": false,
                    "value": "abcab",
                  },
                  Number {
                    "kind": "number",
                    "value": "60",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "str_repeat",
                  "resolution": "uqn",
                },
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"abcdb\\"",
                "unicode": false,
                "value": "abcdb",
              },
              "type": ".",
            },
            "right": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"adabc\\"",
                  "unicode": false,
                  "value": "adabc",
                },
                Number {
                  "kind": "number",
                  "value": "60",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "str_repeat",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"abcd\\"",
            "unicode": false,
            "value": "abcd",
          },
          Number {
            "kind": "number",
            "value": "0",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "foo",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"����������\\"",
                    "unicode": false,
                    "value": "����������",
                  },
                  Number {
                    "kind": "number",
                    "value": "30",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "str_repeat",
                  "resolution": "uqn",
                },
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"����������\\"",
                "unicode": false,
                "value": "����������",
              },
              "type": ".",
            },
            "right": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"����������\\"",
                  "unicode": false,
                  "value": "����������",
                },
                Number {
                  "kind": "number",
                  "value": "30",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "str_repeat",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"����\\"",
            "unicode": false,
            "value": "����",
          },
          Number {
            "kind": "number",
            "value": "0",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"EUC-JP\\"",
            "unicode": false,
            "value": "EUC-JP",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "foo",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "str",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"����������\\"",
                  "unicode": false,
                  "value": "����������",
                },
                Number {
                  "kind": "number",
                  "value": "60",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "str_repeat",
                "resolution": "uqn",
              },
            },
            "right": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'$'",
              "unicode": false,
              "value": "$",
            },
            "type": ".",
          },
          "right": Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"����������\\"",
                "unicode": false,
                "value": "����������",
              },
              Number {
                "kind": "number",
                "value": "60",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "str_repeat",
              "resolution": "uqn",
            },
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "str",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'$'",
            "unicode": false,
            "value": "$",
          },
          Number {
            "kind": "number",
            "value": "0",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"ISO-2022-JP\\"",
            "unicode": false,
            "value": "ISO-2022-JP",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"EUC-JP\\"",
            "unicode": false,
            "value": "EUC-JP",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "foo",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"string\\"",
                "unicode": false,
                "value": "string",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\"",
                "unicode": false,
                "value": "",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "iconv_strpos",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\"",
                "unicode": false,
                "value": "",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"string\\"",
                "unicode": false,
                "value": "string",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "iconv_strpos",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
