// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #79358: JIT miscompile in composer 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "x",
          },
          "nullable": false,
          "readonly": false,
          "type": TypeReference {
            "kind": "typereference",
            "name": "int",
            "raw": "int",
          },
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          Return {
            "expr": Bin {
              "kind": "bin",
              "left": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "x",
                  },
                  "right": Number {
                    "kind": "number",
                    "value": "0xdead",
                  },
                  "type": ">",
                },
                "parenthesizedExpression": true,
                "right": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "unimportant",
                    "resolution": "uqn",
                  },
                },
                "type": "&&",
              },
              "right": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "x",
                  },
                  "right": Number {
                    "kind": "number",
                    "value": "0xbeef",
                  },
                  "type": "<",
                },
                "parenthesizedExpression": true,
                "right": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "unimportant",
                    "resolution": "uqn",
                  },
                },
                "type": "&&",
              },
              "type": "||",
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "test",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Number {
                "kind": "number",
                "value": "0xcccc",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "test",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
