// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test file_get_contents() and file_put_contents() functions : usage variations - all arguments 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "file_path",
        },
        "operator": "=",
        "right": Magic {
          "kind": "magic",
          "raw": "__DIR__",
          "value": "__DIR__",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": false,
        "target": Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "file_path",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"/file.inc\\"",
            "unicode": false,
            "value": "/file.inc",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"*** Testing with variations in the arguments values ***\\\\n\\"",
          "unicode": false,
          "value": "*** Testing with variations in the arguments values ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "buffer_types",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"text\\"",
                "unicode": false,
                "value": "text",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"numeric\\"",
                "unicode": false,
                "value": "numeric",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"text_with_new_line\\"",
                "unicode": false,
                "value": "text_with_new_line",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"alphanumeric\\"",
                "unicode": false,
                "value": "alphanumeric",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "buffer",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "type",
                },
                Number {
                  "kind": "number",
                  "value": "100",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "fill_buffer",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Bin {
                  "kind": "bin",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "file_path",
                  },
                  "right": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"/file_put_contents_variation1.tmp\\"",
                    "unicode": false,
                    "value": "/file_put_contents_variation1.tmp",
                  },
                  "type": ".",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "buffer",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "file_put_contents",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [
                    Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "file_path",
                      },
                      "right": String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"/file_put_contents_variation1.tmp\\"",
                        "unicode": false,
                        "value": "/file_put_contents_variation1.tmp",
                      },
                      "type": ".",
                    },
                    Number {
                      "kind": "number",
                      "value": "0",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "file_get_contents",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [
                    Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "file_path",
                      },
                      "right": String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"/file_put_contents_variation1.tmp\\"",
                        "unicode": false,
                        "value": "/file_put_contents_variation1.tmp",
                      },
                      "type": ".",
                    },
                    Number {
                      "kind": "number",
                      "value": "1",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "file_get_contents",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [
                    Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "file_path",
                      },
                      "right": String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"/file_put_contents_variation1.tmp\\"",
                        "unicode": false,
                        "value": "/file_put_contents_variation1.tmp",
                      },
                      "type": ".",
                    },
                    Number {
                      "kind": "number",
                      "value": "0",
                    },
                    NullKeyword {
                      "kind": "nullkeyword",
                      "raw": "NULL",
                    },
                    Number {
                      "kind": "number",
                      "value": "5",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "file_get_contents",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [
                    Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "file_path",
                      },
                      "right": String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"/file_put_contents_variation1.tmp\\"",
                        "unicode": false,
                        "value": "/file_put_contents_variation1.tmp",
                      },
                      "type": ".",
                    },
                    Number {
                      "kind": "number",
                      "value": "1",
                    },
                    NullKeyword {
                      "kind": "nullkeyword",
                      "raw": "NULL",
                    },
                    Number {
                      "kind": "number",
                      "value": "5",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "file_get_contents",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [
                    Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "file_path",
                      },
                      "right": String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"/file_put_contents_variation1.tmp\\"",
                        "unicode": false,
                        "value": "/file_put_contents_variation1.tmp",
                      },
                      "type": ".",
                    },
                    Number {
                      "kind": "number",
                      "value": "0",
                    },
                    NullKeyword {
                      "kind": "nullkeyword",
                      "raw": "NULL",
                    },
                    Number {
                      "kind": "number",
                      "value": "5",
                    },
                    Number {
                      "kind": "number",
                      "value": "20",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "file_get_contents",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [
                    Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "file_path",
                      },
                      "right": String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"/file_put_contents_variation1.tmp\\"",
                        "unicode": false,
                        "value": "/file_put_contents_variation1.tmp",
                      },
                      "type": ".",
                    },
                    Number {
                      "kind": "number",
                      "value": "1",
                    },
                    NullKeyword {
                      "kind": "nullkeyword",
                      "raw": "NULL",
                    },
                    Number {
                      "kind": "number",
                      "value": "5",
                    },
                    Number {
                      "kind": "number",
                      "value": "20",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "file_get_contents",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "buffer_types",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "type",
      },
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"--- Done ---\\"",
          "unicode": false,
          "value": "--- Done ---",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
