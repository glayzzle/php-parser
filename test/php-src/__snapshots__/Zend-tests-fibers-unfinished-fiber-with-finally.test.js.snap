// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test unfinished fiber with finally block 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "fiber",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            Closure {
              "arguments": Array [],
              "attrGroups": Array [],
              "body": Block {
                "children": Array [
                  Try {
                    "always": Block {
                      "children": Array [
                        Echo {
                          "expressions": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"finally\\\\n\\"",
                              "unicode": false,
                              "value": "finally
",
                            },
                          ],
                          "kind": "echo",
                          "shortForm": false,
                        },
                      ],
                      "kind": "block",
                    },
                    "body": Block {
                      "children": Array [
                        Echo {
                          "expressions": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"fiber\\\\n\\"",
                              "unicode": false,
                              "value": "fiber
",
                            },
                          ],
                          "kind": "echo",
                          "shortForm": false,
                        },
                        Echo {
                          "expressions": Array [
                            Call {
                              "arguments": Array [],
                              "kind": "call",
                              "what": StaticLookup {
                                "kind": "staticlookup",
                                "offset": Identifier {
                                  "kind": "identifier",
                                  "name": "suspend",
                                },
                                "what": Name {
                                  "kind": "name",
                                  "name": "Fiber",
                                  "resolution": "uqn",
                                },
                              },
                            },
                          ],
                          "kind": "echo",
                          "shortForm": false,
                        },
                        Echo {
                          "expressions": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"after suspend\\\\n\\"",
                              "unicode": false,
                              "value": "after suspend
",
                            },
                          ],
                          "kind": "echo",
                          "shortForm": false,
                        },
                      ],
                      "kind": "block",
                    },
                    "catches": Array [
                      Catch {
                        "body": Block {
                          "children": Array [
                            Echo {
                              "expressions": Array [
                                String {
                                  "isDoubleQuote": true,
                                  "kind": "string",
                                  "raw": "\\"exit exception caught!\\\\n\\"",
                                  "unicode": false,
                                  "value": "exit exception caught!
",
                                },
                              ],
                              "kind": "echo",
                              "shortForm": false,
                            },
                          ],
                          "kind": "block",
                        },
                        "kind": "catch",
                        "variable": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "exception",
                        },
                        "what": Array [
                          Name {
                            "kind": "name",
                            "name": "Throwable",
                            "resolution": "uqn",
                          },
                        ],
                      },
                    ],
                    "kind": "try",
                  },
                  Echo {
                    "expressions": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"end of fiber should not be reached\\\\n\\"",
                        "unicode": false,
                        "value": "end of fiber should not be reached
",
                      },
                    ],
                    "kind": "echo",
                    "shortForm": false,
                  },
                ],
                "kind": "block",
              },
              "byref": false,
              "isStatic": false,
              "kind": "closure",
              "nullable": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "void",
                "raw": "void",
              },
              "uses": Array [],
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "Fiber",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "start",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "fiber",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Unset {
      "kind": "unset",
      "variables": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "fiber",
        },
      ],
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"done\\\\n\\"",
          "unicode": false,
          "value": "done
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
