// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests use const and use function with the same alias 1`] = `
Program {
  "children": Array [
    Namespace {
      "children": Array [
        ConstantStatement {
          "constants": Array [
            Constant {
              "kind": "constant",
              "name": Identifier {
                "kind": "identifier",
                "name": "foo",
              },
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'foo.const'",
                "unicode": false,
                "value": "foo.const",
              },
            },
          ],
          "kind": "constantstatement",
        },
        _Function {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Return {
                "expr": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'foo.function'",
                  "unicode": false,
                  "value": "foo.function",
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "kind": "function",
          "name": Identifier {
            "kind": "identifier",
            "name": "foo",
          },
          "nullable": false,
          "type": null,
        },
      ],
      "kind": "namespace",
      "name": Array [
        "",
      ],
      "withBrackets": true,
    },
    Namespace {
      "children": Array [
        UseGroup {
          "items": Array [
            UseItem {
              "alias": Identifier {
                "kind": "identifier",
                "name": "bar",
              },
              "kind": "useitem",
              "name": "foo",
              "type": null,
            },
          ],
          "kind": "usegroup",
          "name": null,
          "type": "const",
        },
        UseGroup {
          "items": Array [
            UseItem {
              "alias": Identifier {
                "kind": "identifier",
                "name": "bar",
              },
              "kind": "useitem",
              "name": "foo",
              "type": null,
            },
          ],
          "kind": "usegroup",
          "name": null,
          "type": "function",
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [
              Name {
                "kind": "name",
                "name": "bar",
                "resolution": "uqn",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "var_dump",
              "resolution": "uqn",
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [
              Call {
                "arguments": Array [],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "bar",
                  "resolution": "uqn",
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "var_dump",
              "resolution": "uqn",
            },
          },
          "kind": "expressionstatement",
        },
      ],
      "kind": "namespace",
      "name": "x",
      "withBrackets": true,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
