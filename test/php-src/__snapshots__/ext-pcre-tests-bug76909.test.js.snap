// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #76909 preg_match difference between 7.3 and < 7.3 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "data",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\" domain.com\\"",
          "unicode": false,
          "value": " domain.com",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "reg0",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"/^[\\\\x{0100}-\\\\x{017f}]{1,63}$/iu\\"",
          "unicode": false,
          "value": "/^[\\\\x{0100}-\\\\x{017f}]{1,63}$/iu",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "reg1",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"/(*NO_JIT)^[\\\\x{0100}-\\\\x{017f}]{1,63}$/iu\\"",
          "unicode": false,
          "value": "/(*NO_JIT)^[\\\\x{0100}-\\\\x{017f}]{1,63}$/iu",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "n0",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "reg0",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "data",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "m0",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "preg_match",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "n1",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "reg1",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "data",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "m1",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "preg_match",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "n0",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "n1",
          },
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "m0",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "count",
              "resolution": "uqn",
            },
          },
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "m1",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "count",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
