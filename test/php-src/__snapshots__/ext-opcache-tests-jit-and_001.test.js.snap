// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests JIT BW_AND: 001 (emty string) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
        "operator": "=",
        "right": Array {
          "items": Array [],
          "kind": "array",
          "shortForm": true,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "b",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\"",
          "unicode": false,
          "value": "",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"\\"",
              "unicode": false,
              "value": "",
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "b",
            },
            "type": "&",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "a",
          },
        },
        "operator": "*=",
        "right": Number {
          "kind": "number",
          "value": "3",
        },
      },
      "kind": "expressionstatement",
    },
    Inline {
      "kind": "inline",
      "raw": "
DONE",
      "value": "DONE",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
