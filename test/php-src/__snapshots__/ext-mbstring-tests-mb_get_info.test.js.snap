// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test mb_get_info() function 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"abc=def\\"",
            "unicode": false,
            "value": "abc=def",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "dummy",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mb_parse_str",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\xff\\\\xff\\"",
            "unicode": false,
            "value": "ÿÿ",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"Shift_JIS\\"",
            "unicode": false,
            "value": "Shift_JIS",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"UCS-2BE\\"",
            "unicode": false,
            "value": "UCS-2BE",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mb_convert_encoding",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "result",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_get_info",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "result",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "key",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "result",
                  },
                },
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "key",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mb_get_info",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "result",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "array_keys",
          "resolution": "uqn",
        },
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "key",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
