// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Hash: hash_file() function : basic functionality 1`] = `
Program {
  "children": Array [
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"*** Testing hash_file() : basic functionality ***\\\\n\\"",
          "unicode": false,
          "value": "*** Testing hash_file() : basic functionality ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "file",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Magic {
            "kind": "magic",
            "raw": "__DIR__",
            "value": "__DIR__",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"hash_file.txt\\"",
            "unicode": false,
            "value": "hash_file.txt",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              Encapsed {
                "kind": "encapsed",
                "raw": "\\"Cannot create file ($file)\\"",
                "type": "string",
                "value": Array [
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "Cannot create file (",
                      "unicode": false,
                      "value": "Cannot create file (",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "file",
                    },
                    "kind": "encapsedpart",
                    "syntax": "simple",
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": ")",
                      "unicode": false,
                      "value": ")",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                ],
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          ExpressionStatement {
            "expression": Exit {
              "expression": null,
              "kind": "exit",
              "useDie": false,
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "fp",
          },
          "operator": "=",
          "parenthesizedExpression": true,
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "file",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"w+\\"",
                "unicode": false,
                "value": "w+",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "fopen",
              "resolution": "uqn",
            },
          },
        },
        "right": Boolean {
          "kind": "boolean",
          "raw": "FALSE",
          "value": false,
        },
        "type": "==",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "content",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"This is a sample string used to test the hash_file function with various hashing algorithms\\"",
          "unicode": false,
          "value": "This is a sample string used to test the hash_file function with various hashing algorithms",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    Encapsed {
                      "kind": "encapsed",
                      "raw": "\\"Cannot write to file ($file)\\"",
                      "type": "string",
                      "value": Array [
                        EncapsedPart {
                          "curly": false,
                          "expression": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "Cannot write to file (",
                            "unicode": false,
                            "value": "Cannot write to file (",
                          },
                          "kind": "encapsedpart",
                          "syntax": null,
                        },
                        EncapsedPart {
                          "curly": false,
                          "expression": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "file",
                          },
                          "kind": "encapsedpart",
                          "syntax": "simple",
                        },
                        EncapsedPart {
                          "curly": false,
                          "expression": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": ")",
                            "unicode": false,
                            "value": ")",
                          },
                          "kind": "encapsedpart",
                          "syntax": null,
                        },
                      ],
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
                ExpressionStatement {
                  "expression": Exit {
                    "expression": null,
                    "kind": "exit",
                    "useDie": false,
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "fp",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "content",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "fwrite",
                  "resolution": "uqn",
                },
              },
              "right": Boolean {
                "kind": "boolean",
                "raw": "FALSE",
                "value": false,
              },
              "type": "===",
            },
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "file",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "is_writable",
          "resolution": "uqn",
        },
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "fp",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "fclose",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"adler32: \\"",
              "unicode": false,
              "value": "adler32: ",
            },
            "right": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'adler32'",
                  "unicode": false,
                  "value": "adler32",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "file",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "hash_file",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"crc32: \\"",
              "unicode": false,
              "value": "crc32: ",
            },
            "right": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'crc32'",
                  "unicode": false,
                  "value": "crc32",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "file",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "hash_file",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"gost: \\"",
              "unicode": false,
              "value": "gost: ",
            },
            "right": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'gost'",
                  "unicode": false,
                  "value": "gost",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "file",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "hash_file",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"haval128,3: \\"",
              "unicode": false,
              "value": "haval128,3: ",
            },
            "right": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'haval128,3'",
                  "unicode": false,
                  "value": "haval128,3",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "file",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "hash_file",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"md2: \\"",
              "unicode": false,
              "value": "md2: ",
            },
            "right": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'md2'",
                  "unicode": false,
                  "value": "md2",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "file",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "hash_file",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"md4: \\"",
              "unicode": false,
              "value": "md4: ",
            },
            "right": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'md4'",
                  "unicode": false,
                  "value": "md4",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "file",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "hash_file",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"md5: \\"",
              "unicode": false,
              "value": "md5: ",
            },
            "right": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'md5'",
                  "unicode": false,
                  "value": "md5",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "file",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "hash_file",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"ripemd128: \\"",
              "unicode": false,
              "value": "ripemd128: ",
            },
            "right": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'ripemd128'",
                  "unicode": false,
                  "value": "ripemd128",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "file",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "hash_file",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"ripemd160: \\"",
              "unicode": false,
              "value": "ripemd160: ",
            },
            "right": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'ripemd160'",
                  "unicode": false,
                  "value": "ripemd160",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "file",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "hash_file",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"ripemd256: \\"",
              "unicode": false,
              "value": "ripemd256: ",
            },
            "right": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'ripemd256'",
                  "unicode": false,
                  "value": "ripemd256",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "file",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "hash_file",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"ripemd320: \\"",
              "unicode": false,
              "value": "ripemd320: ",
            },
            "right": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'ripemd320'",
                  "unicode": false,
                  "value": "ripemd320",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "file",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "hash_file",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"sha1: \\"",
              "unicode": false,
              "value": "sha1: ",
            },
            "right": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'sha1'",
                  "unicode": false,
                  "value": "sha1",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "file",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "hash_file",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"sha256: \\"",
              "unicode": false,
              "value": "sha256: ",
            },
            "right": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'sha256'",
                  "unicode": false,
                  "value": "sha256",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "file",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "hash_file",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"sha384: \\"",
              "unicode": false,
              "value": "sha384: ",
            },
            "right": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'sha384'",
                  "unicode": false,
                  "value": "sha384",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "file",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "hash_file",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"sha512: \\"",
              "unicode": false,
              "value": "sha512: ",
            },
            "right": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'sha512'",
                  "unicode": false,
                  "value": "sha512",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "file",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "hash_file",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"snefru: \\"",
              "unicode": false,
              "value": "snefru: ",
            },
            "right": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'snefru'",
                  "unicode": false,
                  "value": "snefru",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "file",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "hash_file",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"tiger192,3: \\"",
              "unicode": false,
              "value": "tiger192,3: ",
            },
            "right": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'tiger192,3'",
                  "unicode": false,
                  "value": "tiger192,3",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "file",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "hash_file",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"whirlpool: \\"",
              "unicode": false,
              "value": "whirlpool: ",
            },
            "right": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'whirlpool'",
                  "unicode": false,
                  "value": "whirlpool",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "file",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "hash_file",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"adler32(raw): \\"",
              "unicode": false,
              "value": "adler32(raw): ",
            },
            "right": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'adler32'",
                      "unicode": false,
                      "value": "adler32",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "file",
                    },
                    Boolean {
                      "kind": "boolean",
                      "raw": "TRUE",
                      "value": true,
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "hash_file",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "bin2hex",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"md5(raw): \\"",
              "unicode": false,
              "value": "md5(raw): ",
            },
            "right": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'md5'",
                      "unicode": false,
                      "value": "md5",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "file",
                    },
                    Boolean {
                      "kind": "boolean",
                      "raw": "TRUE",
                      "value": true,
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "hash_file",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "bin2hex",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"sha256(raw): \\"",
              "unicode": false,
              "value": "sha256(raw): ",
            },
            "right": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'sha256'",
                      "unicode": false,
                      "value": "sha256",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "file",
                    },
                    Boolean {
                      "kind": "boolean",
                      "raw": "TRUE",
                      "value": true,
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "hash_file",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "bin2hex",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "file",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "unlink",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
