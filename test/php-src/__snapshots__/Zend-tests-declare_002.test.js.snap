// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Testing declare statement with several type values 1`] = `
Program {
  "children": Array [
    Declare {
      "children": Array [],
      "directives": Array [
        DeclareDirective {
          "key": Identifier {
            "kind": "identifier",
            "name": "encoding",
          },
          "kind": "declaredirective",
          "value": Number {
            "kind": "number",
            "value": "1",
          },
        },
      ],
      "kind": "declare",
      "mode": "none",
    },
    Declare {
      "children": Array [],
      "directives": Array [
        DeclareDirective {
          "key": Identifier {
            "kind": "identifier",
            "name": "encoding",
          },
          "kind": "declaredirective",
          "value": Number {
            "kind": "number",
            "value": "1123131232131312321",
          },
        },
      ],
      "kind": "declare",
      "mode": "none",
    },
    Declare {
      "children": Array [],
      "directives": Array [
        DeclareDirective {
          "key": Identifier {
            "kind": "identifier",
            "name": "encoding",
          },
          "kind": "declaredirective",
          "value": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'utf-8'",
            "unicode": false,
            "value": "utf-8",
          },
        },
      ],
      "kind": "declare",
      "mode": "none",
    },
    Declare {
      "children": Array [],
      "directives": Array [
        DeclareDirective {
          "key": Identifier {
            "kind": "identifier",
            "name": "encoding",
          },
          "kind": "declaredirective",
          "value": Name {
            "kind": "name",
            "name": "M_PI",
            "resolution": "uqn",
          },
        },
      ],
      "kind": "declare",
      "mode": "none",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'DONE'",
          "unicode": false,
          "value": "DONE",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
