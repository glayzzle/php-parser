// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #35669 (imap_mail_compose() crashes with multipart-multiboundary-email) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"from\\"",
            "unicode": false,
            "value": "from",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "envelope",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'Santa <somewhere@northpole.gov>'",
          "unicode": false,
          "value": "Santa <somewhere@northpole.gov>",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"to\\"",
            "unicode": false,
            "value": "to",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "envelope",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'The bad smurf <bad@smurf.com>'",
          "unicode": false,
          "value": "The bad smurf <bad@smurf.com>",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'date'",
            "unicode": false,
            "value": "date",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "envelope",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'Wed, 04 Jan 2006 19:24:43 -0500'",
          "unicode": false,
          "value": "Wed, 04 Jan 2006 19:24:43 -0500",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"type\\"",
            "unicode": false,
            "value": "type",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "multipart",
          },
        },
        "operator": "=",
        "right": Name {
          "kind": "name",
          "name": "TYPEMULTIPART",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"subtype\\"",
            "unicode": false,
            "value": "subtype",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "multipart",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"MIXED\\"",
          "unicode": false,
          "value": "MIXED",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": false,
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "body",
          },
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "multipart",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"type\\"",
            "unicode": false,
            "value": "type",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "textpart",
          },
        },
        "operator": "=",
        "right": Name {
          "kind": "name",
          "name": "TYPEMULTIPART",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"subtype\\"",
            "unicode": false,
            "value": "subtype",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "textpart",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"ALTERNATIVE\\"",
          "unicode": false,
          "value": "ALTERNATIVE",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": false,
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "body",
          },
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "textpart",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"type\\"",
            "unicode": false,
            "value": "type",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "plain",
          },
        },
        "operator": "=",
        "right": Name {
          "kind": "name",
          "name": "TYPETEXT",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"subtype\\"",
            "unicode": false,
            "value": "subtype",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "plain",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"PLAIN\\"",
          "unicode": false,
          "value": "PLAIN",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"charset\\"",
            "unicode": false,
            "value": "charset",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "plain",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"iso-8859-1\\"",
          "unicode": false,
          "value": "iso-8859-1",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"encoding\\"",
            "unicode": false,
            "value": "encoding",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "plain",
          },
        },
        "operator": "=",
        "right": Name {
          "kind": "name",
          "name": "ENCQUOTEDPRINTABLE",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"description\\"",
            "unicode": false,
            "value": "description",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "plain",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Plaintype part of message\\"",
          "unicode": false,
          "value": "Plaintype part of message",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'disposition'",
            "unicode": false,
            "value": "disposition",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "plain",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"inline\\"",
          "unicode": false,
          "value": "inline",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"contents.data\\"",
            "unicode": false,
            "value": "contents.data",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "plain",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'See mom, it will crash'",
          "unicode": false,
          "value": "See mom, it will crash",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": false,
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "body",
          },
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "plain",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"type\\"",
            "unicode": false,
            "value": "type",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "html",
          },
        },
        "operator": "=",
        "right": Name {
          "kind": "name",
          "name": "TYPETEXT",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"subtype\\"",
            "unicode": false,
            "value": "subtype",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "html",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"HTML\\"",
          "unicode": false,
          "value": "HTML",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"charset\\"",
            "unicode": false,
            "value": "charset",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "html",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"iso-8859-1\\"",
          "unicode": false,
          "value": "iso-8859-1",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"encoding\\"",
            "unicode": false,
            "value": "encoding",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "html",
          },
        },
        "operator": "=",
        "right": Name {
          "kind": "name",
          "name": "ENCQUOTEDPRINTABLE",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"description\\"",
            "unicode": false,
            "value": "description",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "html",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"HTML part of message\\"",
          "unicode": false,
          "value": "HTML part of message",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'disposition'",
            "unicode": false,
            "value": "disposition",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "html",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"inline\\"",
          "unicode": false,
          "value": "inline",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"contents.data\\"",
            "unicode": false,
            "value": "contents.data",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "html",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'See mom, it will <b>crash</b>'",
          "unicode": false,
          "value": "See mom, it will <b>crash</b>",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": false,
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "body",
          },
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "html",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "envelope",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "body",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "imap_mail_compose",
            "resolution": "uqn",
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
