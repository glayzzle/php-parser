// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Context switches are prevented during GC collect cycles 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "fiber",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            Closure {
              "arguments": Array [],
              "attrGroups": Array [],
              "body": Block {
                "children": Array [
                  ExpressionStatement {
                    "expression": Call {
                      "arguments": Array [
                        Closure {
                          "arguments": Array [],
                          "attrGroups": Array [],
                          "body": Block {
                            "children": Array [
                              ExpressionStatement {
                                "expression": Assign {
                                  "kind": "assign",
                                  "left": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "a",
                                  },
                                  "operator": "=",
                                  "right": New {
                                    "arguments": Array [],
                                    "kind": "new",
                                    "what": Class {
                                      "attrGroups": Array [],
                                      "body": Array [],
                                      "extends": null,
                                      "implements": null,
                                      "isAbstract": false,
                                      "isAnonymous": true,
                                      "isFinal": false,
                                      "kind": "class",
                                      "name": null,
                                    },
                                  },
                                },
                                "kind": "expressionstatement",
                              },
                              ExpressionStatement {
                                "expression": Assign {
                                  "kind": "assign",
                                  "left": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "b",
                                  },
                                  "operator": "=",
                                  "right": New {
                                    "arguments": Array [],
                                    "kind": "new",
                                    "what": Class {
                                      "attrGroups": Array [],
                                      "body": Array [
                                        Method {
                                          "arguments": Array [],
                                          "attrGroups": Array [],
                                          "body": Block {
                                            "children": Array [
                                              ExpressionStatement {
                                                "expression": Call {
                                                  "arguments": Array [],
                                                  "kind": "call",
                                                  "what": StaticLookup {
                                                    "kind": "staticlookup",
                                                    "offset": Identifier {
                                                      "kind": "identifier",
                                                      "name": "suspend",
                                                    },
                                                    "what": Name {
                                                      "kind": "name",
                                                      "name": "Fiber",
                                                      "resolution": "uqn",
                                                    },
                                                  },
                                                },
                                                "kind": "expressionstatement",
                                              },
                                            ],
                                            "kind": "block",
                                          },
                                          "byref": false,
                                          "isAbstract": false,
                                          "isFinal": false,
                                          "isStatic": false,
                                          "kind": "method",
                                          "name": Identifier {
                                            "kind": "identifier",
                                            "name": "__destruct",
                                          },
                                          "nullable": false,
                                          "type": null,
                                          "visibility": "public",
                                        },
                                      ],
                                      "extends": null,
                                      "implements": null,
                                      "isAbstract": false,
                                      "isAnonymous": true,
                                      "isFinal": false,
                                      "kind": "class",
                                      "name": null,
                                    },
                                  },
                                },
                                "kind": "expressionstatement",
                              },
                              ExpressionStatement {
                                "expression": Assign {
                                  "kind": "assign",
                                  "left": PropertyLookup {
                                    "kind": "propertylookup",
                                    "offset": Identifier {
                                      "kind": "identifier",
                                      "name": "next",
                                    },
                                    "what": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "a",
                                    },
                                  },
                                  "operator": "=",
                                  "right": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "b",
                                  },
                                },
                                "kind": "expressionstatement",
                              },
                              ExpressionStatement {
                                "expression": Assign {
                                  "kind": "assign",
                                  "left": PropertyLookup {
                                    "kind": "propertylookup",
                                    "offset": Identifier {
                                      "kind": "identifier",
                                      "name": "next",
                                    },
                                    "what": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "b",
                                    },
                                  },
                                  "operator": "=",
                                  "right": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "a",
                                  },
                                },
                                "kind": "expressionstatement",
                              },
                            ],
                            "kind": "block",
                          },
                          "byref": false,
                          "isStatic": false,
                          "kind": "closure",
                          "nullable": false,
                          "type": null,
                          "uses": Array [],
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "call_user_func",
                        "resolution": "uqn",
                      },
                    },
                    "kind": "expressionstatement",
                  },
                  ExpressionStatement {
                    "expression": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "gc_collect_cycles",
                        "resolution": "uqn",
                      },
                    },
                    "kind": "expressionstatement",
                  },
                ],
                "kind": "block",
              },
              "byref": false,
              "isStatic": false,
              "kind": "closure",
              "nullable": false,
              "type": null,
              "uses": Array [],
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "Fiber",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "start",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "fiber",
          },
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
