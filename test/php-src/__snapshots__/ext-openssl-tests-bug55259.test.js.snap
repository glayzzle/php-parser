// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #55259 (openssl extension does not get the DH parameters from DH key resource) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "phex",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'dcf93a0b883972ec0e19989ac5a2ce310e1d37717e8d9571bb7623731866e61e'",
                "unicode": false,
                "value": "dcf93a0b883972ec0e19989ac5a2ce310e1d37717e8d9571bb7623731866e61e",
              },
              "right": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'f75a2e27898b057f9891c2e27a639c3f29b60814581cd3b2ca3986d268370557'",
                "unicode": false,
                "value": "f75a2e27898b057f9891c2e27a639c3f29b60814581cd3b2ca3986d268370557",
              },
              "type": ".",
            },
            "right": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'7d45c2e7e52dc81c7a171876e5cea74b1448bfdfaf18828efd2519f14e45e382'",
              "unicode": false,
              "value": "7d45c2e7e52dc81c7a171876e5cea74b1448bfdfaf18828efd2519f14e45e382",
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'6634af1949e5b535cc829a483b8a76223e5d490a257f05bdff16f2fb22c583ab'",
            "unicode": false,
            "value": "6634af1949e5b535cc829a483b8a76223e5d490a257f05bdff16f2fb22c583ab",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "dh_details",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'p'",
                "unicode": false,
                "value": "p",
              },
              "kind": "entry",
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "name": "phex",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'g'",
                "unicode": false,
                "value": "g",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'2'",
                "unicode": false,
                "value": "2",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "dh",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Array {
              "items": Array [
                Entry {
                  "byRef": false,
                  "key": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'dh'",
                    "unicode": false,
                    "value": "dh",
                  },
                  "kind": "entry",
                  "unpack": false,
                  "value": Array {
                    "items": Array [
                      Entry {
                        "byRef": false,
                        "key": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'p'",
                          "unicode": false,
                          "value": "p",
                        },
                        "kind": "entry",
                        "unpack": false,
                        "value": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "phex",
                        },
                      },
                      Entry {
                        "byRef": false,
                        "key": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'g'",
                          "unicode": false,
                          "value": "g",
                        },
                        "kind": "entry",
                        "unpack": false,
                        "value": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'2'",
                          "unicode": false,
                          "value": "2",
                        },
                      },
                    ],
                    "kind": "array",
                    "shortForm": false,
                  },
                },
              ],
              "kind": "array",
              "shortForm": false,
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "openssl_pkey_new",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "dh",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "dh",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Array {
              "items": Array [
                Entry {
                  "byRef": false,
                  "key": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'dh'",
                    "unicode": false,
                    "value": "dh",
                  },
                  "kind": "entry",
                  "unpack": false,
                  "value": Array {
                    "items": Array [
                      Entry {
                        "byRef": false,
                        "key": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'p'",
                          "unicode": false,
                          "value": "p",
                        },
                        "kind": "entry",
                        "unpack": false,
                        "value": Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "phex",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "hex2bin",
                            "resolution": "uqn",
                          },
                        },
                      },
                      Entry {
                        "byRef": false,
                        "key": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'g'",
                          "unicode": false,
                          "value": "g",
                        },
                        "kind": "entry",
                        "unpack": false,
                        "value": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'2'",
                          "unicode": false,
                          "value": "2",
                        },
                      },
                    ],
                    "kind": "array",
                    "shortForm": false,
                  },
                },
              ],
              "kind": "array",
              "shortForm": false,
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "openssl_pkey_new",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "details",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "dh",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "openssl_pkey_get_details",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'p'",
                  "unicode": false,
                  "value": "p",
                },
                "what": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'dh'",
                    "unicode": false,
                    "value": "dh",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "details",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "bin2hex",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'g'",
              "unicode": false,
              "value": "g",
            },
            "what": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'dh'",
                "unicode": false,
                "value": "dh",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "details",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'pub_key'",
                    "unicode": false,
                    "value": "pub_key",
                  },
                  "what": OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'dh'",
                      "unicode": false,
                      "value": "dh",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "details",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "strlen",
                "resolution": "uqn",
              },
            },
            "right": Number {
              "kind": "number",
              "value": "0",
            },
            "type": ">",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'priv_key'",
                    "unicode": false,
                    "value": "priv_key",
                  },
                  "what": OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'dh'",
                      "unicode": false,
                      "value": "dh",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "details",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "strlen",
                "resolution": "uqn",
              },
            },
            "right": Number {
              "kind": "number",
              "value": "0",
            },
            "type": ">",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Done\\"",
          "unicode": false,
          "value": "Done",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
