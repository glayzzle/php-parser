// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Function Argument Parsing #003 1`] = `
Program {
  "children": Array [
    ConstantStatement {
      "constants": Array [
        Constant {
          "kind": "constant",
          "name": Identifier {
            "kind": "identifier",
            "name": "a",
          },
          "value": Number {
            "kind": "number",
            "value": "10",
          },
        },
      ],
      "kind": "constantstatement",
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "a",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": Bin {
            "kind": "bin",
            "left": Number {
              "kind": "number",
              "value": "1",
            },
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "+",
          },
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "b",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": Bin {
            "kind": "bin",
            "left": Number {
              "kind": "number",
              "value": "1",
            },
            "right": Number {
              "kind": "number",
              "value": "2",
            },
            "type": "<<",
          },
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "c",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"foo\\"",
              "unicode": false,
              "value": "foo",
            },
            "right": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"bar\\"",
              "unicode": false,
              "value": "bar",
            },
            "type": ".",
          },
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "d",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": Bin {
            "kind": "bin",
            "left": Name {
              "kind": "name",
              "name": "a",
              "resolution": "uqn",
            },
            "right": Number {
              "kind": "number",
              "value": "10",
            },
            "type": "*",
          },
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "a",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "b",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "c",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "d",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "t1",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "t1",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
