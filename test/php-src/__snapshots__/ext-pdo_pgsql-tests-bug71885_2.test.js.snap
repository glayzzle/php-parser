// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Request #71855 (PDO placeholder escaping, part 2) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": true,
        "target": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Magic {
                "kind": "magic",
                "raw": "__FILE__",
                "value": "__FILE__",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "dirname",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'/../../../ext/pdo/tests/pdo_test.inc'",
            "unicode": false,
            "value": "/../../../ext/pdo/tests/pdo_test.inc",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": true,
        "target": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Magic {
                "kind": "magic",
                "raw": "__FILE__",
                "value": "__FILE__",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "dirname",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'/config.inc'",
            "unicode": false,
            "value": "/config.inc",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "db",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Bin {
              "kind": "bin",
              "left": Call {
                "arguments": Array [
                  Magic {
                    "kind": "magic",
                    "raw": "__FILE__",
                    "value": "__FILE__",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "dirname",
                  "resolution": "uqn",
                },
              },
              "right": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/common.phpt'",
                "unicode": false,
                "value": "/common.phpt",
              },
              "type": ".",
            },
          ],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "test_factory",
            },
            "what": Name {
              "kind": "name",
              "name": "PDOTest",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "ATTR_ERRMODE",
            },
            "what": Name {
              "kind": "name",
              "name": "PDO",
              "resolution": "uqn",
            },
          },
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "ERRMODE_EXCEPTION",
            },
            "what": Name {
              "kind": "name",
              "name": "PDO",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "setAttribute",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "ATTR_DEFAULT_FETCH_MODE",
            },
            "what": Name {
              "kind": "name",
              "name": "PDO",
              "resolution": "uqn",
            },
          },
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "FETCH_NUM",
            },
            "what": Name {
              "kind": "name",
              "name": "PDO",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "setAttribute",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "jsonb",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Call {
              "arguments": Array [
                Array {
                  "items": Array [
                    Entry {
                      "byRef": false,
                      "key": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'a'",
                        "unicode": false,
                        "value": "a",
                      },
                      "kind": "entry",
                      "unpack": false,
                      "value": Number {
                        "kind": "number",
                        "value": "1",
                      },
                    },
                  ],
                  "kind": "array",
                  "shortForm": true,
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "json_encode",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "quote",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "ATTR_EMULATE_PREPARES",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "emulate",
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "setAttribute",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "stmt",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Encapsed {
                    "kind": "encapsed",
                    "raw": "\\"SELECT {$jsonb}::jsonb ?? ?\\"",
                    "type": "string",
                    "value": Array [
                      EncapsedPart {
                        "curly": false,
                        "expression": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "SELECT ",
                          "unicode": false,
                          "value": "SELECT ",
                        },
                        "kind": "encapsedpart",
                        "syntax": null,
                      },
                      EncapsedPart {
                        "curly": false,
                        "expression": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "jsonb",
                        },
                        "kind": "encapsedpart",
                        "syntax": "complex",
                      },
                      EncapsedPart {
                        "curly": false,
                        "expression": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "::jsonb ?? ?",
                          "unicode": false,
                          "value": "::jsonb ?? ?",
                        },
                        "kind": "encapsedpart",
                        "syntax": null,
                      },
                    ],
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "prepare",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "db",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Array {
                  "items": Array [
                    Entry {
                      "byRef": false,
                      "key": null,
                      "kind": "entry",
                      "unpack": false,
                      "value": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'b'",
                        "unicode": false,
                        "value": "b",
                      },
                    },
                  ],
                  "kind": "array",
                  "shortForm": true,
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "execute",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "fetch",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "stmt",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "stmt",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Encapsed {
                    "kind": "encapsed",
                    "raw": "\\"SELECT {$jsonb}::jsonb ???\\"",
                    "type": "string",
                    "value": Array [
                      EncapsedPart {
                        "curly": false,
                        "expression": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "SELECT ",
                          "unicode": false,
                          "value": "SELECT ",
                        },
                        "kind": "encapsedpart",
                        "syntax": null,
                      },
                      EncapsedPart {
                        "curly": false,
                        "expression": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "jsonb",
                        },
                        "kind": "encapsedpart",
                        "syntax": "complex",
                      },
                      EncapsedPart {
                        "curly": false,
                        "expression": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "::jsonb ???",
                          "unicode": false,
                          "value": "::jsonb ???",
                        },
                        "kind": "encapsedpart",
                        "syntax": null,
                      },
                    ],
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "prepare",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "db",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Array {
                  "items": Array [
                    Entry {
                      "byRef": false,
                      "key": null,
                      "kind": "entry",
                      "unpack": false,
                      "value": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'a'",
                        "unicode": false,
                        "value": "a",
                      },
                    },
                  ],
                  "kind": "array",
                  "shortForm": true,
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "execute",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "fetch",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "stmt",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Array {
        "items": Array [
          Entry {
            "byRef": false,
            "key": null,
            "kind": "entry",
            "unpack": false,
            "value": Boolean {
              "kind": "boolean",
              "raw": "false",
              "value": false,
            },
          },
          Entry {
            "byRef": false,
            "key": null,
            "kind": "entry",
            "unpack": false,
            "value": Boolean {
              "kind": "boolean",
              "raw": "true",
              "value": true,
            },
          },
        ],
        "kind": "array",
        "shortForm": true,
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "emulate",
      },
    },
    Inline {
      "kind": "inline",
      "raw": "
==OK==",
      "value": "==OK==",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
