// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests FFI 301: FFI loading 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "ffi",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Bin {
              "kind": "bin",
              "left": Magic {
                "kind": "magic",
                "raw": "__DIR__",
                "value": "__DIR__",
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"/300.h\\"",
                "unicode": false,
                "value": "/300.h",
              },
              "type": ".",
            },
          ],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "load",
            },
            "what": Name {
              "kind": "name",
              "name": "FFI",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"Hello World from %s!\\\\n\\"",
            "unicode": false,
            "value": "Hello World from %s!
",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"PHP\\"",
            "unicode": false,
            "value": "PHP",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "printf",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "ffi",
          },
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
