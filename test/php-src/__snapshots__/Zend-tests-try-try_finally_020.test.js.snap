// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Combination of foreach, finally and exception (call order) 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [],
      "body": Array [
        PropertyStatement {
          "isStatic": false,
          "kind": "propertystatement",
          "properties": Array [
            Property {
              "attrGroups": Array [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "n",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": Number {
                "kind": "number",
                "value": "0",
              },
            },
          ],
          "visibility": "public",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "n",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "n",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "this",
                    },
                  },
                  "operator": "=",
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "n",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "__construct",
          },
          "nullable": false,
          "type": null,
          "visibility": "",
        },
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"destruct\\"",
                        "unicode": false,
                        "value": "destruct",
                      },
                      "right": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "n",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "this",
                        },
                      },
                      "type": ".",
                    },
                    "right": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"\\\\n\\"",
                      "unicode": false,
                      "value": "
",
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "__destruct",
          },
          "nullable": false,
          "type": null,
          "visibility": "",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "A",
      },
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "a",
              },
              "operator": "=",
              "right": NullKeyword {
                "kind": "nullkeyword",
                "raw": "null",
              },
            },
            "kind": "expressionstatement",
          },
          Try {
            "always": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"finally2\\\\n\\"",
                      "unicode": false,
                      "value": "finally2
",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
              ],
              "kind": "block",
            },
            "body": Block {
              "children": Array [
                Foreach {
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "a",
                          },
                          "operator": "=",
                          "right": NullKeyword {
                            "kind": "nullkeyword",
                            "raw": "null",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      Try {
                        "always": Block {
                          "children": Array [
                            Echo {
                              "expressions": Array [
                                String {
                                  "isDoubleQuote": true,
                                  "kind": "string",
                                  "raw": "\\"finally1\\\\n\\"",
                                  "unicode": false,
                                  "value": "finally1
",
                                },
                              ],
                              "kind": "echo",
                              "shortForm": false,
                            },
                          ],
                          "kind": "block",
                        },
                        "body": Block {
                          "children": Array [
                            Foreach {
                              "body": Block {
                                "children": Array [
                                  ExpressionStatement {
                                    "expression": Assign {
                                      "kind": "assign",
                                      "left": Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "a",
                                      },
                                      "operator": "=",
                                      "right": NullKeyword {
                                        "kind": "nullkeyword",
                                        "raw": "null",
                                      },
                                    },
                                    "kind": "expressionstatement",
                                  },
                                  Throw {
                                    "kind": "throw",
                                    "what": New {
                                      "arguments": Array [],
                                      "kind": "new",
                                      "what": Name {
                                        "kind": "name",
                                        "name": "Exception",
                                        "resolution": "uqn",
                                      },
                                    },
                                  },
                                ],
                                "kind": "block",
                              },
                              "key": null,
                              "kind": "foreach",
                              "shortForm": false,
                              "source": Array {
                                "items": Array [
                                  Entry {
                                    "byRef": false,
                                    "key": null,
                                    "kind": "entry",
                                    "unpack": false,
                                    "value": New {
                                      "arguments": Array [
                                        Number {
                                          "kind": "number",
                                          "value": "3",
                                        },
                                      ],
                                      "kind": "new",
                                      "what": Name {
                                        "kind": "name",
                                        "name": "A",
                                        "resolution": "uqn",
                                      },
                                    },
                                  },
                                ],
                                "kind": "array",
                                "shortForm": true,
                              },
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "a",
                              },
                            },
                          ],
                          "kind": "block",
                        },
                        "catches": Array [],
                        "kind": "try",
                      },
                    ],
                    "kind": "block",
                  },
                  "key": null,
                  "kind": "foreach",
                  "shortForm": false,
                  "source": Array {
                    "items": Array [
                      Entry {
                        "byRef": false,
                        "key": null,
                        "kind": "entry",
                        "unpack": false,
                        "value": New {
                          "arguments": Array [
                            Number {
                              "kind": "number",
                              "value": "2",
                            },
                          ],
                          "kind": "new",
                          "what": Name {
                            "kind": "name",
                            "name": "A",
                            "resolution": "uqn",
                          },
                        },
                      },
                    ],
                    "kind": "array",
                    "shortForm": true,
                  },
                  "value": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "a",
                  },
                },
              ],
              "kind": "block",
            },
            "catches": Array [
              Catch {
                "body": Block {
                  "children": Array [
                    Echo {
                      "expressions": Array [
                        String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"catch\\\\n\\"",
                          "unicode": false,
                          "value": "catch
",
                        },
                      ],
                      "kind": "echo",
                      "shortForm": false,
                    },
                  ],
                  "kind": "block",
                },
                "kind": "catch",
                "variable": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "e",
                },
                "what": Array [
                  Name {
                    "kind": "name",
                    "name": "Exception",
                    "resolution": "uqn",
                  },
                ],
              },
            ],
            "kind": "try",
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Array {
        "items": Array [
          Entry {
            "byRef": false,
            "key": null,
            "kind": "entry",
            "unpack": false,
            "value": New {
              "arguments": Array [
                Number {
                  "kind": "number",
                  "value": "1",
                },
              ],
              "kind": "new",
              "what": Name {
                "kind": "name",
                "name": "A",
                "resolution": "uqn",
              },
            },
          },
        ],
        "kind": "array",
        "shortForm": true,
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "a",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
