// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #20927 (Segfault on wordwrap statement) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "string",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"1234567890 X \\"",
              "unicode": false,
              "value": "1234567890 X ",
            },
            Number {
              "kind": "number",
              "value": "10",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "str_repeat",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "break",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"a-very-long-break-string-to-clobber-the-heap\\"",
              "unicode": false,
              "value": "a-very-long-break-string-to-clobber-the-heap",
            },
            Number {
              "kind": "number",
              "value": "8",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "str_repeat",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "linelength",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "10",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"Length of original string:  \\"",
              "unicode": false,
              "value": "Length of original string:  ",
            },
            "right": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "string",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "strlen",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"Length of break string:     \\"",
              "unicode": false,
              "value": "Length of break string:     ",
            },
            "right": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "break",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "strlen",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "string",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "linelength",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "break",
              },
              Number {
                "kind": "number",
                "value": "1",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "wordwrap",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
