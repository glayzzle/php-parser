// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Simple multi-byte print test (EUC-JP) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "s1",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"�ޥ���Х��ȴؿ����Ȥ��ޤ���\\"",
          "unicode": false,
          "value": "�ޥ���Х��ȴؿ����Ȥ��ޤ���",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "s2",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"����ʸ����Ϣ�뤵��Ƥ���Ϥ���\\"",
          "unicode": false,
          "value": "����ʸ����Ϣ�뤵��Ƥ���Ϥ���",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"echo: \\"",
                "unicode": false,
                "value": "echo: ",
              },
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "s1",
              },
              "type": ".",
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "s2",
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"print: \\"",
                "unicode": false,
                "value": "print: ",
              },
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "s1",
              },
              "type": ".",
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "s2",
            },
            "type": ".",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"printf: %s%s\\\\n\\"",
            "unicode": false,
            "value": "printf: %s%s
",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s1",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "s2",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"sprintf: %s%s\\\\n\\"",
              "unicode": false,
              "value": "sprintf: %s%s
",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "s1",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "s2",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sprintf",
            "resolution": "uqn",
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "s3",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "s1",
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "s2",
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"echo: \\"",
            "unicode": false,
            "value": "echo: ",
          },
          "right": Variable {
            "curly": false,
            "kind": "variable",
            "name": "s3",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
