// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests COM: General variant tests 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Name {
            "kind": "name",
            "name": "E_ALL",
            "resolution": "uqn",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "error_reporting",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "v",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "VARIANT",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"VT_EMPTY: bork\\\\n\\"",
                "unicode": false,
                "value": "VT_EMPTY: bork
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Name {
          "kind": "name",
          "name": "VT_EMPTY",
          "resolution": "uqn",
        },
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "v",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "variant_get_type",
            "resolution": "uqn",
          },
        },
        "type": "!=",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "values",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": Name {
                "kind": "name",
                "name": "VT_I4",
                "resolution": "uqn",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "42",
              },
            },
            Entry {
              "byRef": false,
              "key": Name {
                "kind": "name",
                "name": "VT_R8",
                "resolution": "uqn",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "3.5",
              },
            },
            Entry {
              "byRef": false,
              "key": Name {
                "kind": "name",
                "name": "VT_BSTR",
                "resolution": "uqn",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"hello\\"",
                "unicode": false,
                "value": "hello",
              },
            },
            Entry {
              "byRef": false,
              "key": Name {
                "kind": "name",
                "name": "VT_BOOL",
                "resolution": "uqn",
              },
              "kind": "entry",
              "unpack": false,
              "value": Boolean {
                "kind": "boolean",
                "raw": "false",
                "value": false,
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "binary_ops",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'add'",
                "unicode": false,
                "value": "add",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'cat'",
                "unicode": false,
                "value": "cat",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'sub'",
                "unicode": false,
                "value": "sub",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'mul'",
                "unicode": false,
                "value": "mul",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'and'",
                "unicode": false,
                "value": "and",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'div'",
                "unicode": false,
                "value": "div",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'eqv'",
                "unicode": false,
                "value": "eqv",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'idiv'",
                "unicode": false,
                "value": "idiv",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'imp'",
                "unicode": false,
                "value": "imp",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'mod'",
                "unicode": false,
                "value": "mod",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'or'",
                "unicode": false,
                "value": "or",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'pow'",
                "unicode": false,
                "value": "pow",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'xor'",
                "unicode": false,
                "value": "xor",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "v",
              },
              "operator": "=",
              "right": New {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "val",
                  },
                ],
                "kind": "new",
                "what": Name {
                  "kind": "name",
                  "name": "VARIANT",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"Bork: [%d] %d: %s\\\\n\\"",
                        "unicode": false,
                        "value": "Bork: [%d] %d: %s
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "t",
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "v",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "variant_get_type",
                          "resolution": "uqn",
                        },
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "val",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Print {
                    "expression": Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "v",
                      },
                      "right": String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"\\\\n\\"",
                        "unicode": false,
                        "value": "
",
                      },
                      "type": ".",
                    },
                    "kind": "print",
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "t",
              },
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "v",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "variant_get_type",
                  "resolution": "uqn",
                },
              },
              "type": "!=",
            },
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "results",
              },
              "operator": "=",
              "right": Array {
                "items": Array [],
                "kind": "array",
                "shortForm": false,
              },
            },
            "kind": "expressionstatement",
          },
          Foreach {
            "body": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"--\\\\n\\"",
                      "unicode": false,
                      "value": "--
",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
                Foreach {
                  "body": Block {
                    "children": Array [
                      Try {
                        "always": null,
                        "body": Block {
                          "children": Array [
                            Echo {
                              "expressions": Array [
                                Bin {
                                  "kind": "bin",
                                  "left": Bin {
                                    "kind": "bin",
                                    "left": Encapsed {
                                      "kind": "encapsed",
                                      "raw": "\\"$op: \\" ",
                                      "type": "string",
                                      "value": Array [
                                        EncapsedPart {
                                          "curly": false,
                                          "expression": Variable {
                                            "curly": false,
                                            "kind": "variable",
                                            "name": "op",
                                          },
                                          "kind": "encapsedpart",
                                          "syntax": "simple",
                                        },
                                        EncapsedPart {
                                          "curly": false,
                                          "expression": String {
                                            "isDoubleQuote": false,
                                            "kind": "string",
                                            "raw": ": ",
                                            "unicode": false,
                                            "value": ": ",
                                          },
                                          "kind": "encapsedpart",
                                          "syntax": null,
                                        },
                                      ],
                                    },
                                    "right": Call {
                                      "arguments": Array [
                                        Bin {
                                          "kind": "bin",
                                          "left": String {
                                            "isDoubleQuote": false,
                                            "kind": "string",
                                            "raw": "'variant_'",
                                            "unicode": false,
                                            "value": "variant_",
                                          },
                                          "right": Variable {
                                            "curly": false,
                                            "kind": "variable",
                                            "name": "op",
                                          },
                                          "type": ".",
                                        },
                                        Variable {
                                          "curly": false,
                                          "kind": "variable",
                                          "name": "v",
                                        },
                                        Variable {
                                          "curly": false,
                                          "kind": "variable",
                                          "name": "op2",
                                        },
                                      ],
                                      "kind": "call",
                                      "what": Name {
                                        "kind": "name",
                                        "name": "call_user_func",
                                        "resolution": "uqn",
                                      },
                                    },
                                    "type": ".",
                                  },
                                  "right": String {
                                    "isDoubleQuote": true,
                                    "kind": "string",
                                    "raw": "\\"\\\\n\\"",
                                    "unicode": false,
                                    "value": "
",
                                  },
                                  "type": ".",
                                },
                              ],
                              "kind": "echo",
                              "shortForm": false,
                            },
                          ],
                          "kind": "block",
                        },
                        "catches": Array [
                          Catch {
                            "body": Block {
                              "children": Array [
                                Echo {
                                  "expressions": Array [
                                    Encapsed {
                                      "kind": "encapsed",
                                      "raw": "\\"$op:\\\\n\\"",
                                      "type": "string",
                                      "value": Array [
                                        EncapsedPart {
                                          "curly": false,
                                          "expression": Variable {
                                            "curly": false,
                                            "kind": "variable",
                                            "name": "op",
                                          },
                                          "kind": "encapsedpart",
                                          "syntax": "simple",
                                        },
                                        EncapsedPart {
                                          "curly": false,
                                          "expression": String {
                                            "isDoubleQuote": false,
                                            "kind": "string",
                                            "raw": ":\\\\n",
                                            "unicode": false,
                                            "value": ":",
                                          },
                                          "kind": "encapsedpart",
                                          "syntax": null,
                                        },
                                      ],
                                    },
                                  ],
                                  "kind": "echo",
                                  "shortForm": false,
                                },
                                Echo {
                                  "expressions": Array [
                                    Encapsed {
                                      "kind": "encapsed",
                                      "raw": "\\"\\\\tvariant_$op($v, $op2)\\\\n\\"",
                                      "type": "string",
                                      "value": Array [
                                        EncapsedPart {
                                          "curly": false,
                                          "expression": String {
                                            "isDoubleQuote": false,
                                            "kind": "string",
                                            "raw": "\\\\tvariant_",
                                            "unicode": false,
                                            "value": "	variant_",
                                          },
                                          "kind": "encapsedpart",
                                          "syntax": null,
                                        },
                                        EncapsedPart {
                                          "curly": false,
                                          "expression": Variable {
                                            "curly": false,
                                            "kind": "variable",
                                            "name": "op",
                                          },
                                          "kind": "encapsedpart",
                                          "syntax": "simple",
                                        },
                                        EncapsedPart {
                                          "curly": false,
                                          "expression": String {
                                            "isDoubleQuote": false,
                                            "kind": "string",
                                            "raw": "(",
                                            "unicode": false,
                                            "value": "(",
                                          },
                                          "kind": "encapsedpart",
                                          "syntax": null,
                                        },
                                        EncapsedPart {
                                          "curly": false,
                                          "expression": Variable {
                                            "curly": false,
                                            "kind": "variable",
                                            "name": "v",
                                          },
                                          "kind": "encapsedpart",
                                          "syntax": "simple",
                                        },
                                        EncapsedPart {
                                          "curly": false,
                                          "expression": String {
                                            "isDoubleQuote": false,
                                            "kind": "string",
                                            "raw": ", ",
                                            "unicode": false,
                                            "value": ", ",
                                          },
                                          "kind": "encapsedpart",
                                          "syntax": null,
                                        },
                                        EncapsedPart {
                                          "curly": false,
                                          "expression": Variable {
                                            "curly": false,
                                            "kind": "variable",
                                            "name": "op2",
                                          },
                                          "kind": "encapsedpart",
                                          "syntax": "simple",
                                        },
                                        EncapsedPart {
                                          "curly": false,
                                          "expression": String {
                                            "isDoubleQuote": false,
                                            "kind": "string",
                                            "raw": ")\\\\n",
                                            "unicode": false,
                                            "value": ")",
                                          },
                                          "kind": "encapsedpart",
                                          "syntax": null,
                                        },
                                      ],
                                    },
                                  ],
                                  "kind": "echo",
                                  "shortForm": false,
                                },
                                Echo {
                                  "expressions": Array [
                                    Bin {
                                      "kind": "bin",
                                      "left": String {
                                        "isDoubleQuote": true,
                                        "kind": "string",
                                        "raw": "\\"\\\\texception \\"",
                                        "unicode": false,
                                        "value": "	exception ",
                                      },
                                      "right": Call {
                                        "arguments": Array [],
                                        "kind": "call",
                                        "what": PropertyLookup {
                                          "kind": "propertylookup",
                                          "offset": Identifier {
                                            "kind": "identifier",
                                            "name": "getMessage",
                                          },
                                          "what": Variable {
                                            "curly": false,
                                            "kind": "variable",
                                            "name": "e",
                                          },
                                        },
                                      },
                                      "type": ".",
                                    },
                                  ],
                                  "kind": "echo",
                                  "shortForm": false,
                                },
                                ExpressionStatement {
                                  "expression": Call {
                                    "arguments": Array [
                                      String {
                                        "isDoubleQuote": true,
                                        "kind": "string",
                                        "raw": "\\"\\\\n\\\\tcode %08x\\\\n\\\\n\\"",
                                        "unicode": false,
                                        "value": "
	code %08x

",
                                      },
                                      Call {
                                        "arguments": Array [],
                                        "kind": "call",
                                        "what": PropertyLookup {
                                          "kind": "propertylookup",
                                          "offset": Identifier {
                                            "kind": "identifier",
                                            "name": "getCode",
                                          },
                                          "what": Variable {
                                            "curly": false,
                                            "kind": "variable",
                                            "name": "e",
                                          },
                                        },
                                      },
                                    ],
                                    "kind": "call",
                                    "what": Name {
                                      "kind": "name",
                                      "name": "printf",
                                      "resolution": "uqn",
                                    },
                                  },
                                  "kind": "expressionstatement",
                                },
                              ],
                              "kind": "block",
                            },
                            "kind": "catch",
                            "variable": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "e",
                            },
                            "what": Array [
                              Name {
                                "kind": "name",
                                "name": "com_exception",
                                "resolution": "uqn",
                              },
                            ],
                          },
                        ],
                        "kind": "try",
                      },
                    ],
                    "kind": "block",
                  },
                  "key": null,
                  "kind": "foreach",
                  "shortForm": false,
                  "source": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "binary_ops",
                  },
                  "value": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "op",
                  },
                },
              ],
              "kind": "block",
            },
            "key": null,
            "kind": "foreach",
            "shortForm": false,
            "source": Variable {
              "curly": false,
              "kind": "variable",
              "name": "values",
            },
            "value": Variable {
              "curly": false,
              "kind": "variable",
              "name": "op2",
            },
          },
        ],
        "kind": "block",
      },
      "key": Variable {
        "curly": false,
        "kind": "variable",
        "name": "t",
      },
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "values",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "val",
      },
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"OK!\\"",
          "unicode": false,
          "value": "OK!",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
