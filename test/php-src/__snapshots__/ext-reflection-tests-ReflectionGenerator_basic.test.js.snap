// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests ReflectionGenerator basic test 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Yield {
              "key": null,
              "kind": "yield",
              "value": null,
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "foo",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "gens",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Call {
                "arguments": Array [],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "a",
                  },
                  "what": New {
                    "arguments": Array [],
                    "kind": "new",
                    "parenthesizedExpression": true,
                    "what": Class {
                      "attrGroups": Array [],
                      "body": Array [
                        Method {
                          "arguments": Array [],
                          "attrGroups": Array [],
                          "body": Block {
                            "children": Array [
                              ExpressionStatement {
                                "expression": YieldFrom {
                                  "kind": "yieldfrom",
                                  "value": Call {
                                    "arguments": Array [],
                                    "kind": "call",
                                    "what": Name {
                                      "kind": "name",
                                      "name": "foo",
                                      "resolution": "uqn",
                                    },
                                  },
                                },
                                "kind": "expressionstatement",
                              },
                            ],
                            "kind": "block",
                          },
                          "byref": false,
                          "isAbstract": false,
                          "isFinal": false,
                          "isStatic": false,
                          "kind": "method",
                          "name": Identifier {
                            "kind": "identifier",
                            "name": "a",
                          },
                          "nullable": false,
                          "type": null,
                          "visibility": "",
                        },
                      ],
                      "extends": null,
                      "implements": null,
                      "isAbstract": false,
                      "isAnonymous": true,
                      "isFinal": false,
                      "kind": "class",
                      "name": null,
                    },
                  },
                },
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Call {
                "arguments": Array [],
                "kind": "call",
                "what": Closure {
                  "arguments": Array [],
                  "attrGroups": Array [],
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Yield {
                          "key": null,
                          "kind": "yield",
                          "value": null,
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "byref": false,
                  "isStatic": false,
                  "kind": "closure",
                  "nullable": false,
                  "parenthesizedExpression": true,
                  "type": null,
                  "uses": Array [],
                },
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Call {
                "arguments": Array [],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "foo",
                  "resolution": "uqn",
                },
              },
            },
          ],
          "kind": "array",
          "shortForm": true,
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "gen",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "valid",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "gen",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "ref",
              },
              "operator": "=",
              "right": New {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "gen",
                  },
                ],
                "kind": "new",
                "what": Name {
                  "kind": "name",
                  "name": "ReflectionGenerator",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "getTrace",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "ref",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "getExecutingLine",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "ref",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "getExecutingFile",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "ref",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "getExecutingGenerator",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "ref",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "getFunction",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "ref",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "getThis",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "ref",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "gens",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "gen",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
