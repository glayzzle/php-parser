// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #64076 (imap_sort() does not return FALSE on failure) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": true,
        "target": Bin {
          "kind": "bin",
          "left": Magic {
            "kind": "magic",
            "raw": "__DIR__",
            "value": "__DIR__",
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'/setup/imap_include.inc'",
            "unicode": false,
            "value": "/setup/imap_include.inc",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "stream",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'bug64076'",
              "unicode": false,
              "value": "bug64076",
            },
            Number {
              "kind": "number",
              "value": "2",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "setup_test_mailbox",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imap_errors",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "stream",
              },
              Name {
                "kind": "name",
                "name": "SORTFROM",
                "resolution": "uqn",
              },
              Number {
                "kind": "number",
                "value": "0",
              },
              Number {
                "kind": "number",
                "value": "0",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'UNSUPPORTED SEARCH CRITERIUM'",
                "unicode": false,
                "value": "UNSUPPORTED SEARCH CRITERIUM",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "imap_sort",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imap_errors",
                "resolution": "uqn",
              },
            },
            "right": Boolean {
              "kind": "boolean",
              "raw": "false",
              "value": false,
            },
            "type": "!==",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
