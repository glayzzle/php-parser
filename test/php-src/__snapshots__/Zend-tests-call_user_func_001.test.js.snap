// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Testing call_user_func inside namespace 1`] = `
Program {
  "children": Array [
    Namespace {
      "children": Array [
        _Function {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "str",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "str",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "var_dump",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "kind": "function",
          "name": Identifier {
            "kind": "identifier",
            "name": "foobar",
          },
          "nullable": false,
          "type": null,
        },
        Class {
          "attrGroups": Array [],
          "body": Array [
            Method {
              "arguments": Array [
                Parameter {
                  "attrGroups": Array [],
                  "byref": false,
                  "flags": 0,
                  "kind": "parameter",
                  "name": Identifier {
                    "kind": "identifier",
                    "name": "str",
                  },
                  "nullable": false,
                  "readonly": false,
                  "type": null,
                  "value": null,
                  "variadic": false,
                },
              ],
              "attrGroups": Array [],
              "body": Block {
                "children": Array [
                  ExpressionStatement {
                    "expression": Print {
                      "expression": String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"Shouldn't be called!\\\\n\\"",
                        "unicode": false,
                        "value": "Shouldn't be called!
",
                      },
                      "kind": "print",
                    },
                    "kind": "expressionstatement",
                  },
                ],
                "kind": "block",
              },
              "byref": false,
              "isAbstract": false,
              "isFinal": false,
              "isStatic": false,
              "kind": "method",
              "name": Identifier {
                "kind": "identifier",
                "name": "prot",
              },
              "nullable": false,
              "type": null,
              "visibility": "protected",
            },
          ],
          "extends": null,
          "implements": null,
          "isAbstract": true,
          "isAnonymous": false,
          "isFinal": false,
          "kind": "class",
          "name": Identifier {
            "kind": "identifier",
            "name": "bar",
          },
        },
        Class {
          "attrGroups": Array [],
          "body": Array [
            Method {
              "arguments": Array [
                Parameter {
                  "attrGroups": Array [],
                  "byref": false,
                  "flags": 0,
                  "kind": "parameter",
                  "name": Identifier {
                    "kind": "identifier",
                    "name": "str",
                  },
                  "nullable": false,
                  "readonly": false,
                  "type": null,
                  "value": null,
                  "variadic": false,
                },
              ],
              "attrGroups": Array [],
              "body": Block {
                "children": Array [
                  ExpressionStatement {
                    "expression": Print {
                      "expression": String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"Shouldn't be called!\\\\n\\"",
                        "unicode": false,
                        "value": "Shouldn't be called!
",
                      },
                      "kind": "print",
                    },
                    "kind": "expressionstatement",
                  },
                ],
                "kind": "block",
              },
              "byref": false,
              "isAbstract": false,
              "isFinal": false,
              "isStatic": false,
              "kind": "method",
              "name": Identifier {
                "kind": "identifier",
                "name": "priv",
              },
              "nullable": false,
              "type": null,
              "visibility": "private",
            },
          ],
          "extends": Name {
            "kind": "name",
            "name": "bar",
            "resolution": "uqn",
          },
          "implements": null,
          "isAbstract": false,
          "isAnonymous": false,
          "isFinal": false,
          "kind": "class",
          "name": Identifier {
            "kind": "identifier",
            "name": "foo",
          },
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [
              Bin {
                "kind": "bin",
                "left": Magic {
                  "kind": "magic",
                  "raw": "__NAMESPACE__",
                  "value": "__NAMESPACE__",
                },
                "right": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'\\\\foobar'",
                  "unicode": false,
                  "value": "\\\\foobar",
                },
                "type": ".",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'foobar'",
                "unicode": false,
                "value": "foobar",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "call_user_func",
              "resolution": "uqn",
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Assign {
            "kind": "assign",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "class",
            },
            "operator": "=",
            "right": Bin {
              "kind": "bin",
              "left": Magic {
                "kind": "magic",
                "raw": "__NAMESPACE__",
                "value": "__NAMESPACE__",
              },
              "right": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'\\\\foo'",
                "unicode": false,
                "value": "\\\\foo",
              },
              "type": ".",
            },
          },
          "kind": "expressionstatement",
        },
        Try {
          "always": null,
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    Array {
                      "items": Array [
                        Entry {
                          "byRef": false,
                          "key": null,
                          "kind": "entry",
                          "unpack": false,
                          "value": New {
                            "arguments": Array [],
                            "kind": "new",
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "class",
                            },
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": null,
                          "kind": "entry",
                          "unpack": false,
                          "value": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'priv'",
                            "unicode": false,
                            "value": "priv",
                          },
                        },
                      ],
                      "kind": "array",
                      "shortForm": false,
                    },
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'foobar'",
                      "unicode": false,
                      "value": "foobar",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "call_user_func",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "catches": Array [
            Catch {
              "body": Block {
                "children": Array [
                  Echo {
                    "expressions": Array [
                      Call {
                        "arguments": Array [],
                        "kind": "call",
                        "what": PropertyLookup {
                          "kind": "propertylookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "getMessage",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "e",
                          },
                        },
                      },
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"\\\\n\\"",
                        "unicode": false,
                        "value": "
",
                      },
                    ],
                    "kind": "echo",
                    "shortForm": false,
                  },
                ],
                "kind": "block",
              },
              "kind": "catch",
              "variable": Variable {
                "curly": false,
                "kind": "variable",
                "name": "e",
              },
              "what": Array [
                Name {
                  "kind": "name",
                  "name": "\\\\TypeError",
                  "resolution": "fqn",
                },
              ],
            },
          ],
          "kind": "try",
        },
        Try {
          "always": null,
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    Array {
                      "items": Array [
                        Entry {
                          "byRef": false,
                          "key": null,
                          "kind": "entry",
                          "unpack": false,
                          "value": New {
                            "arguments": Array [],
                            "kind": "new",
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "class",
                            },
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": null,
                          "kind": "entry",
                          "unpack": false,
                          "value": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'prot'",
                            "unicode": false,
                            "value": "prot",
                          },
                        },
                      ],
                      "kind": "array",
                      "shortForm": false,
                    },
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'foobar'",
                      "unicode": false,
                      "value": "foobar",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "call_user_func",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "catches": Array [
            Catch {
              "body": Block {
                "children": Array [
                  Echo {
                    "expressions": Array [
                      Call {
                        "arguments": Array [],
                        "kind": "call",
                        "what": PropertyLookup {
                          "kind": "propertylookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "getMessage",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "e",
                          },
                        },
                      },
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"\\\\n\\"",
                        "unicode": false,
                        "value": "
",
                      },
                    ],
                    "kind": "echo",
                    "shortForm": false,
                  },
                ],
                "kind": "block",
              },
              "kind": "catch",
              "variable": Variable {
                "curly": false,
                "kind": "variable",
                "name": "e",
              },
              "what": Array [
                Name {
                  "kind": "name",
                  "name": "\\\\TypeError",
                  "resolution": "fqn",
                },
              ],
            },
          ],
          "kind": "try",
        },
      ],
      "kind": "namespace",
      "name": "testing",
      "withBrackets": true,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
