// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #70207 Finally is broken with opcache 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          Return {
            "expr": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"bar\\"",
              "unicode": false,
              "value": "bar",
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "bar",
      },
      "nullable": false,
      "type": null,
    },
    _Function {
      "arguments": Array [],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          Try {
            "always": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Silent {
                    "expr": Call {
                      "arguments": Array [
                        String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"non-existent\\"",
                          "unicode": false,
                          "value": "non-existent",
                        },
                        String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'r'",
                          "unicode": false,
                          "value": "r",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "fopen",
                        "resolution": "uqn",
                      },
                    },
                    "kind": "silent",
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "body": Block {
              "children": Array [
                Return {
                  "expr": Call {
                    "arguments": Array [],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "bar",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "catches": Array [],
            "kind": "try",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "foo",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "foo",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
