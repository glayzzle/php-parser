// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests MySQL PDO->exec(), native types wo ZEROFILL 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": true,
        "target": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Magic {
              "kind": "magic",
              "raw": "__DIR__",
              "value": "__DIR__",
            },
            "right": Name {
              "kind": "name",
              "name": "DIRECTORY_SEPARATOR",
              "resolution": "uqn",
            },
            "type": ".",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'mysql_pdo_test.inc'",
            "unicode": false,
            "value": "mysql_pdo_test.inc",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": true,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "db",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "offset",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "sql_type",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "value",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "ret_value",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "pattern",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "alternative_type",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'DROP TABLE IF EXISTS test'",
                  "unicode": false,
                  "value": "DROP TABLE IF EXISTS test",
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "exec",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "sql",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'CREATE TABLE test(id INT, label %s) ENGINE=%s'",
                    "unicode": false,
                    "value": "CREATE TABLE test(id INT, label %s) ENGINE=%s",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "sql_type",
                  },
                  Call {
                    "arguments": Array [],
                    "kind": "call",
                    "what": StaticLookup {
                      "kind": "staticlookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "getTableEngine",
                      },
                      "what": Name {
                        "kind": "name",
                        "name": "MySQLPDOTest",
                        "resolution": "uqn",
                      },
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "sprintf",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Silent {
              "expr": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "sql",
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "exec",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "db",
                  },
                },
              },
              "kind": "silent",
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "true",
                    "value": true,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Call {
                "arguments": Array [],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "errorCode",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "db",
                  },
                },
              },
              "right": Number {
                "kind": "number",
                "value": "0",
              },
              "type": "!=",
            },
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "stmt",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'INSERT INTO test(id, label) VALUES (?, ?)'",
                    "unicode": false,
                    "value": "INSERT INTO test(id, label) VALUES (?, ?)",
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "prepare",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "db",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Number {
                  "kind": "number",
                  "value": "1",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "offset",
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "bindValue",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Number {
                  "kind": "number",
                  "value": "2",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "value",
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "bindValue",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%03d + 1] INSERT failed, %s\\\\n\\"",
                        "unicode": false,
                        "value": "[%03d + 1] INSERT failed, %s
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "offset",
                      },
                      Call {
                        "arguments": Array [
                          Call {
                            "arguments": Array [],
                            "kind": "call",
                            "what": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "errorInfo",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "stmt",
                              },
                            },
                          },
                          Boolean {
                            "kind": "boolean",
                            "raw": "true",
                            "value": true,
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "var_export",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "execute",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                },
              },
            },
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "ATTR_STRINGIFY_FETCHES",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
                Boolean {
                  "kind": "boolean",
                  "raw": "false",
                  "value": false,
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "setAttribute",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "stmt",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'SELECT  id, label FROM test'",
                    "unicode": false,
                    "value": "SELECT  id, label FROM test",
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "query",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "db",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "row",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  StaticLookup {
                    "kind": "staticlookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "FETCH_ASSOC",
                    },
                    "what": Name {
                      "kind": "name",
                      "name": "PDO",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "fetch",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "closeCursor",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%03d + 2] Fetched result seems wrong, dumping result: %s\\\\n\\"",
                        "unicode": false,
                        "value": "[%03d + 2] Fetched result seems wrong, dumping result: %s
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "offset",
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "row",
                          },
                          Boolean {
                            "kind": "boolean",
                            "raw": "true",
                            "value": true,
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "var_export",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Unary {
                "kind": "unary",
                "type": "!",
                "what": Isset {
                  "kind": "isset",
                  "variables": Array [
                    OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'id'",
                        "unicode": false,
                        "value": "id",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "row",
                      },
                    },
                  ],
                },
              },
              "right": Unary {
                "kind": "unary",
                "type": "!",
                "what": Isset {
                  "kind": "isset",
                  "variables": Array [
                    OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'label'",
                        "unicode": false,
                        "value": "label",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "row",
                      },
                    },
                  ],
                },
              },
              "type": "||",
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%03d + 3] Expecting %s got %s\\\\n\\"",
                        "unicode": false,
                        "value": "[%03d + 3] Expecting %s got %s
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "offset",
                      },
                      OffsetLookup {
                        "kind": "offsetlookup",
                        "offset": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'id'",
                          "unicode": false,
                          "value": "id",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "row",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'id'",
                  "unicode": false,
                  "value": "id",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "row",
                },
              },
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "offset",
              },
              "type": "!=",
            },
          },
          If {
            "alternate": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "exp",
                    },
                    "operator": "=",
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "value",
                    },
                  },
                  "kind": "expressionstatement",
                },
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "exp",
                          },
                          "operator": "=",
                          "right": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "ret_value",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Unary {
                    "kind": "unary",
                    "type": "!",
                    "what": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "ret_value",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "is_null",
                        "resolution": "uqn",
                      },
                    },
                  },
                },
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"[%03d + 4] %s - input = %s/%s, output = %s/%s (alternative type: %s)\\\\n\\"",
                              "unicode": false,
                              "value": "[%03d + 4] %s - input = %s/%s, output = %s/%s (alternative type: %s)
",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "offset",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "sql_type",
                            },
                            Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "exp",
                                },
                                Boolean {
                                  "kind": "boolean",
                                  "raw": "true",
                                  "value": true,
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "var_export",
                                "resolution": "uqn",
                              },
                            },
                            Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "exp",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "gettype",
                                "resolution": "uqn",
                              },
                            },
                            Call {
                              "arguments": Array [
                                OffsetLookup {
                                  "kind": "offsetlookup",
                                  "offset": String {
                                    "isDoubleQuote": false,
                                    "kind": "string",
                                    "raw": "'label'",
                                    "unicode": false,
                                    "value": "label",
                                  },
                                  "what": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "row",
                                  },
                                },
                                Boolean {
                                  "kind": "boolean",
                                  "raw": "true",
                                  "value": true,
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "var_export",
                                "resolution": "uqn",
                              },
                            },
                            Call {
                              "arguments": Array [
                                OffsetLookup {
                                  "kind": "offsetlookup",
                                  "offset": String {
                                    "isDoubleQuote": false,
                                    "kind": "string",
                                    "raw": "'label'",
                                    "unicode": false,
                                    "value": "label",
                                  },
                                  "what": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "row",
                                  },
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "gettype",
                                "resolution": "uqn",
                              },
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "alternative_type",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "printf",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      Return {
                        "expr": Boolean {
                          "kind": "boolean",
                          "raw": "false",
                          "value": false,
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": Bin {
                        "kind": "bin",
                        "left": OffsetLookup {
                          "kind": "offsetlookup",
                          "offset": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'label'",
                            "unicode": false,
                            "value": "label",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "row",
                          },
                        },
                        "right": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "exp",
                        },
                        "type": "!==",
                      },
                      "right": Unary {
                        "kind": "unary",
                        "type": "!",
                        "what": Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "alternative_type",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "is_null",
                            "resolution": "uqn",
                          },
                        },
                      },
                      "type": "&&",
                    },
                    "right": Bin {
                      "kind": "bin",
                      "left": Call {
                        "arguments": Array [
                          OffsetLookup {
                            "kind": "offsetlookup",
                            "offset": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "'label'",
                              "unicode": false,
                              "value": "label",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "row",
                            },
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "gettype",
                          "resolution": "uqn",
                        },
                      },
                      "right": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "alternative_type",
                      },
                      "type": "!=",
                    },
                    "type": "&&",
                  },
                },
              ],
              "kind": "block",
            },
            "body": Block {
              "children": Array [
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"[%03d + 5] Value seems wrong, accepting pattern %s got %s, check manually\\\\n\\"",
                              "unicode": false,
                              "value": "[%03d + 5] Value seems wrong, accepting pattern %s got %s, check manually
",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "offset",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "pattern",
                            },
                            Call {
                              "arguments": Array [
                                OffsetLookup {
                                  "kind": "offsetlookup",
                                  "offset": String {
                                    "isDoubleQuote": false,
                                    "kind": "string",
                                    "raw": "'label'",
                                    "unicode": false,
                                    "value": "label",
                                  },
                                  "what": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "row",
                                  },
                                },
                                Boolean {
                                  "kind": "boolean",
                                  "raw": "true",
                                  "value": true,
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "var_export",
                                "resolution": "uqn",
                              },
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "printf",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      Return {
                        "expr": Boolean {
                          "kind": "boolean",
                          "raw": "false",
                          "value": false,
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Unary {
                    "kind": "unary",
                    "type": "!",
                    "what": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "pattern",
                        },
                        OffsetLookup {
                          "kind": "offsetlookup",
                          "offset": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'label'",
                            "unicode": false,
                            "value": "label",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "row",
                          },
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "preg_match",
                        "resolution": "uqn",
                      },
                    },
                  },
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "pattern",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "is_null",
                  "resolution": "uqn",
                },
              },
            },
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "ATTR_STRINGIFY_FETCHES",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
                Boolean {
                  "kind": "boolean",
                  "raw": "true",
                  "value": true,
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "setAttribute",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "stmt",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'SELECT id, label FROM test'",
                    "unicode": false,
                    "value": "SELECT id, label FROM test",
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "query",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "db",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "row_string",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  StaticLookup {
                    "kind": "staticlookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "FETCH_ASSOC",
                    },
                    "what": Name {
                      "kind": "name",
                      "name": "PDO",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "fetch",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "closeCursor",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": If {
              "alternate": null,
              "body": Block {
                "children": Array [
                  ExpressionStatement {
                    "expression": Call {
                      "arguments": Array [
                        String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"%s - STRINGIGY = %s, NATIVE = %s, pattern '%s'\\\\n\\"",
                          "unicode": false,
                          "value": "%s - STRINGIGY = %s, NATIVE = %s, pattern '%s'
",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "sql_type",
                        },
                        Call {
                          "arguments": Array [
                            OffsetLookup {
                              "kind": "offsetlookup",
                              "offset": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'label'",
                                "unicode": false,
                                "value": "label",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "row_string",
                              },
                            },
                            Boolean {
                              "kind": "boolean",
                              "raw": "true",
                              "value": true,
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "var_export",
                            "resolution": "uqn",
                          },
                        },
                        Call {
                          "arguments": Array [
                            OffsetLookup {
                              "kind": "offsetlookup",
                              "offset": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'label'",
                                "unicode": false,
                                "value": "label",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "row",
                              },
                            },
                            Boolean {
                              "kind": "boolean",
                              "raw": "true",
                              "value": true,
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "var_export",
                            "resolution": "uqn",
                          },
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "pattern",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "printf",
                        "resolution": "uqn",
                      },
                    },
                    "kind": "expressionstatement",
                  },
                  Return {
                    "expr": Boolean {
                      "kind": "boolean",
                      "raw": "false",
                      "value": false,
                    },
                    "kind": "return",
                  },
                ],
                "kind": "block",
              },
              "kind": "if",
              "shortForm": false,
              "test": Bin {
                "kind": "bin",
                "left": Unary {
                  "kind": "unary",
                  "type": "!",
                  "what": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "pattern",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "is_null",
                      "resolution": "uqn",
                    },
                  },
                },
                "right": Unary {
                  "kind": "unary",
                  "type": "!",
                  "what": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "pattern",
                      },
                      OffsetLookup {
                        "kind": "offsetlookup",
                        "offset": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'label'",
                          "unicode": false,
                          "value": "label",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "row_string",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "preg_match",
                      "resolution": "uqn",
                    },
                  },
                },
                "type": "&&",
              },
            },
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"%s - STRINGIGY = %s, NATIVE = %s\\\\n\\"",
                        "unicode": false,
                        "value": "%s - STRINGIGY = %s, NATIVE = %s
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "sql_type",
                      },
                      Call {
                        "arguments": Array [
                          OffsetLookup {
                            "kind": "offsetlookup",
                            "offset": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "'label'",
                              "unicode": false,
                              "value": "label",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "row_string",
                            },
                          },
                          Boolean {
                            "kind": "boolean",
                            "raw": "true",
                            "value": true,
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "var_export",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          OffsetLookup {
                            "kind": "offsetlookup",
                            "offset": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "'label'",
                              "unicode": false,
                              "value": "label",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "row",
                            },
                          },
                          Boolean {
                            "kind": "boolean",
                            "raw": "true",
                            "value": true,
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "var_export",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "pattern",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "is_null",
                  "resolution": "uqn",
                },
              },
              "right": Bin {
                "kind": "bin",
                "left": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'label'",
                    "unicode": false,
                    "value": "label",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "row",
                  },
                },
                "parenthesizedExpression": true,
                "right": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'label'",
                    "unicode": false,
                    "value": "label",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "row_string",
                  },
                },
                "type": "!=",
              },
              "type": "&&",
            },
          },
          Return {
            "expr": Boolean {
              "kind": "boolean",
              "raw": "true",
              "value": true,
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "test_type",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "db",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "factory",
            },
            "what": Name {
              "kind": "name",
              "name": "MySQLPDOTest",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "ATTR_ERRMODE",
            },
            "what": Name {
              "kind": "name",
              "name": "PDO",
              "resolution": "uqn",
            },
          },
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "ERRMODE_EXCEPTION",
            },
            "what": Name {
              "kind": "name",
              "name": "PDO",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "setAttribute",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "ATTR_EMULATE_PREPARES",
            },
            "what": Name {
              "kind": "name",
              "name": "PDO",
              "resolution": "uqn",
            },
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "setAttribute",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "ATTR_STRINGIFY_FETCHES",
            },
            "what": Name {
              "kind": "name",
              "name": "PDO",
              "resolution": "uqn",
            },
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "setAttribute",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "is_mysqlnd",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "isPDOMySQLnd",
            },
            "what": Name {
              "kind": "name",
              "name": "MySQLPDOTest",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "30",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'TINYINT'",
            "unicode": false,
            "value": "TINYINT",
          },
          Unary {
            "kind": "unary",
            "type": "-",
            "what": Number {
              "kind": "number",
              "value": "127",
            },
          },
          RetIf {
            "falseExpr": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'-127'",
              "unicode": false,
              "value": "-127",
            },
            "kind": "retif",
            "test": Variable {
              "curly": false,
              "kind": "variable",
              "name": "is_mysqlnd",
              "parenthesizedExpression": true,
            },
            "trueExpr": Unary {
              "kind": "unary",
              "type": "-",
              "what": Number {
                "kind": "number",
                "value": "127",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "40",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'TINYINT UNSIGNED'",
            "unicode": false,
            "value": "TINYINT UNSIGNED",
          },
          Number {
            "kind": "number",
            "value": "255",
          },
          RetIf {
            "falseExpr": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'255'",
              "unicode": false,
              "value": "255",
            },
            "kind": "retif",
            "test": Variable {
              "curly": false,
              "kind": "variable",
              "name": "is_mysqlnd",
              "parenthesizedExpression": true,
            },
            "trueExpr": Number {
              "kind": "number",
              "value": "255",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "50",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'BOOLEAN'",
            "unicode": false,
            "value": "BOOLEAN",
          },
          Number {
            "kind": "number",
            "value": "1",
          },
          RetIf {
            "falseExpr": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'1'",
              "unicode": false,
              "value": "1",
            },
            "kind": "retif",
            "test": Variable {
              "curly": false,
              "kind": "variable",
              "name": "is_mysqlnd",
              "parenthesizedExpression": true,
            },
            "trueExpr": Number {
              "kind": "number",
              "value": "1",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "60",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'SMALLINT'",
            "unicode": false,
            "value": "SMALLINT",
          },
          Unary {
            "kind": "unary",
            "type": "-",
            "what": Number {
              "kind": "number",
              "value": "32768",
            },
          },
          RetIf {
            "falseExpr": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'-32768'",
              "unicode": false,
              "value": "-32768",
            },
            "kind": "retif",
            "test": Variable {
              "curly": false,
              "kind": "variable",
              "name": "is_mysqlnd",
              "parenthesizedExpression": true,
            },
            "trueExpr": Unary {
              "kind": "unary",
              "type": "-",
              "what": Number {
                "kind": "number",
                "value": "32768",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "70",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'SMALLINT UNSIGNED'",
            "unicode": false,
            "value": "SMALLINT UNSIGNED",
          },
          Number {
            "kind": "number",
            "value": "65535",
          },
          RetIf {
            "falseExpr": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'65535'",
              "unicode": false,
              "value": "65535",
            },
            "kind": "retif",
            "test": Variable {
              "curly": false,
              "kind": "variable",
              "name": "is_mysqlnd",
              "parenthesizedExpression": true,
            },
            "trueExpr": Number {
              "kind": "number",
              "value": "65535",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "80",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'MEDIUMINT'",
            "unicode": false,
            "value": "MEDIUMINT",
          },
          Unary {
            "kind": "unary",
            "type": "-",
            "what": Number {
              "kind": "number",
              "value": "8388608",
            },
          },
          RetIf {
            "falseExpr": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'-8388608'",
              "unicode": false,
              "value": "-8388608",
            },
            "kind": "retif",
            "test": Variable {
              "curly": false,
              "kind": "variable",
              "name": "is_mysqlnd",
              "parenthesizedExpression": true,
            },
            "trueExpr": Unary {
              "kind": "unary",
              "type": "-",
              "what": Number {
                "kind": "number",
                "value": "8388608",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "90",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'MEDIUMINT UNSIGNED'",
            "unicode": false,
            "value": "MEDIUMINT UNSIGNED",
          },
          Number {
            "kind": "number",
            "value": "16777215",
          },
          RetIf {
            "falseExpr": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'16777215'",
              "unicode": false,
              "value": "16777215",
            },
            "kind": "retif",
            "test": Variable {
              "curly": false,
              "kind": "variable",
              "name": "is_mysqlnd",
              "parenthesizedExpression": true,
            },
            "trueExpr": Number {
              "kind": "number",
              "value": "16777215",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "100",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'INT'",
            "unicode": false,
            "value": "INT",
          },
          Unary {
            "kind": "unary",
            "type": "-",
            "what": Number {
              "kind": "number",
              "value": "2147483648",
            },
          },
          RetIf {
            "falseExpr": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'-2147483648'",
              "unicode": false,
              "value": "-2147483648",
            },
            "kind": "retif",
            "test": Variable {
              "curly": false,
              "kind": "variable",
              "name": "is_mysqlnd",
              "parenthesizedExpression": true,
            },
            "trueExpr": RetIf {
              "falseExpr": Cast {
                "expr": Unary {
                  "kind": "unary",
                  "type": "-",
                  "what": Number {
                    "kind": "number",
                    "value": "2147483648",
                  },
                },
                "kind": "cast",
                "raw": "(double)",
                "type": "float",
              },
              "kind": "retif",
              "parenthesizedExpression": true,
              "test": Bin {
                "kind": "bin",
                "left": Name {
                  "kind": "name",
                  "name": "PHP_INT_SIZE",
                  "resolution": "uqn",
                },
                "parenthesizedExpression": true,
                "right": Number {
                  "kind": "number",
                  "value": "4",
                },
                "type": ">",
              },
              "trueExpr": Cast {
                "expr": Unary {
                  "kind": "unary",
                  "type": "-",
                  "what": Number {
                    "kind": "number",
                    "value": "2147483648",
                  },
                },
                "kind": "cast",
                "raw": "(int)",
                "type": "int",
              },
            },
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          RetIf {
            "falseExpr": NullKeyword {
              "kind": "nullkeyword",
              "raw": "NULL",
            },
            "kind": "retif",
            "test": Variable {
              "curly": false,
              "kind": "variable",
              "name": "is_mysqlnd",
              "parenthesizedExpression": true,
            },
            "trueExpr": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'integer'",
              "unicode": false,
              "value": "integer",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "110",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'INT UNSIGNED'",
            "unicode": false,
            "value": "INT UNSIGNED",
          },
          Number {
            "kind": "number",
            "value": "4294967295",
          },
          RetIf {
            "falseExpr": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'4294967295'",
              "unicode": false,
              "value": "4294967295",
            },
            "kind": "retif",
            "test": Variable {
              "curly": false,
              "kind": "variable",
              "name": "is_mysqlnd",
              "parenthesizedExpression": true,
            },
            "trueExpr": RetIf {
              "falseExpr": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'4294967295'",
                "unicode": false,
                "value": "4294967295",
              },
              "kind": "retif",
              "parenthesizedExpression": true,
              "test": Bin {
                "kind": "bin",
                "left": Name {
                  "kind": "name",
                  "name": "PHP_INT_SIZE",
                  "resolution": "uqn",
                },
                "parenthesizedExpression": true,
                "right": Number {
                  "kind": "number",
                  "value": "4",
                },
                "type": ">",
              },
              "trueExpr": Number {
                "kind": "number",
                "value": "4294967295",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "120",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'BIGINT'",
            "unicode": false,
            "value": "BIGINT",
          },
          Number {
            "kind": "number",
            "value": "1",
          },
          RetIf {
            "falseExpr": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'1'",
              "unicode": false,
              "value": "1",
            },
            "kind": "retif",
            "test": Variable {
              "curly": false,
              "kind": "variable",
              "name": "is_mysqlnd",
              "parenthesizedExpression": true,
            },
            "trueExpr": Number {
              "kind": "number",
              "value": "1",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "130",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'BIGINT'",
            "unicode": false,
            "value": "BIGINT",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'-9223372036854775808'",
            "unicode": false,
            "value": "-9223372036854775808",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'/^\\\\-9[\\\\.]*22/'",
            "unicode": false,
            "value": "/^\\\\-9[\\\\.]*22/",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "140",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'BIGINT UNSIGNED'",
            "unicode": false,
            "value": "BIGINT UNSIGNED",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'18446744073709551615'",
            "unicode": false,
            "value": "18446744073709551615",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'/^1[\\\\.]*844/'",
            "unicode": false,
            "value": "/^1[\\\\.]*844/",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "150",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'REAL'",
            "unicode": false,
            "value": "REAL",
          },
          Unary {
            "kind": "unary",
            "type": "-",
            "what": Number {
              "kind": "number",
              "value": "1.01",
            },
          },
          RetIf {
            "falseExpr": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'-1.01'",
              "unicode": false,
              "value": "-1.01",
            },
            "kind": "retif",
            "test": Variable {
              "curly": false,
              "kind": "variable",
              "name": "is_mysqlnd",
              "parenthesizedExpression": true,
            },
            "trueExpr": Unary {
              "kind": "unary",
              "type": "-",
              "what": Number {
                "kind": "number",
                "value": "1.01",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "160",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'REAL UNSIGNED'",
            "unicode": false,
            "value": "REAL UNSIGNED",
          },
          Number {
            "kind": "number",
            "value": "1.01",
          },
          RetIf {
            "falseExpr": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'1.01'",
              "unicode": false,
              "value": "1.01",
            },
            "kind": "retif",
            "test": Variable {
              "curly": false,
              "kind": "variable",
              "name": "is_mysqlnd",
              "parenthesizedExpression": true,
            },
            "trueExpr": Number {
              "kind": "number",
              "value": "1.01",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "170",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'DOUBLE'",
            "unicode": false,
            "value": "DOUBLE",
          },
          Unary {
            "kind": "unary",
            "type": "-",
            "what": Number {
              "kind": "number",
              "value": "1.01",
            },
          },
          RetIf {
            "falseExpr": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'-1.01'",
              "unicode": false,
              "value": "-1.01",
            },
            "kind": "retif",
            "test": Variable {
              "curly": false,
              "kind": "variable",
              "name": "is_mysqlnd",
              "parenthesizedExpression": true,
            },
            "trueExpr": Unary {
              "kind": "unary",
              "type": "-",
              "what": Number {
                "kind": "number",
                "value": "1.01",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "180",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'DOUBLE UNSIGNED'",
            "unicode": false,
            "value": "DOUBLE UNSIGNED",
          },
          Number {
            "kind": "number",
            "value": "1.01",
          },
          RetIf {
            "falseExpr": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'1.01'",
              "unicode": false,
              "value": "1.01",
            },
            "kind": "retif",
            "test": Variable {
              "curly": false,
              "kind": "variable",
              "name": "is_mysqlnd",
              "parenthesizedExpression": true,
            },
            "trueExpr": Number {
              "kind": "number",
              "value": "1.01",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "210",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'FLOAT'",
            "unicode": false,
            "value": "FLOAT",
          },
          Unary {
            "kind": "unary",
            "type": "-",
            "what": Number {
              "kind": "number",
              "value": "1.01",
            },
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'/^\\\\-1.0\\\\d+/'",
            "unicode": false,
            "value": "/^\\\\-1.0\\\\d+/",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "220",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'FLOAT UNSIGNED'",
            "unicode": false,
            "value": "FLOAT UNSIGNED",
          },
          Number {
            "kind": "number",
            "value": "1.01",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'/^1.0\\\\d+/'",
            "unicode": false,
            "value": "/^1.0\\\\d+/",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "250",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'DECIMAL'",
            "unicode": false,
            "value": "DECIMAL",
          },
          Unary {
            "kind": "unary",
            "type": "-",
            "what": Number {
              "kind": "number",
              "value": "1.01",
            },
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'-1'",
            "unicode": false,
            "value": "-1",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "260",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'DECIMAL UNSIGNED'",
            "unicode": false,
            "value": "DECIMAL UNSIGNED",
          },
          Number {
            "kind": "number",
            "value": "1.01",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "290",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'NUMERIC'",
            "unicode": false,
            "value": "NUMERIC",
          },
          Unary {
            "kind": "unary",
            "type": "-",
            "what": Number {
              "kind": "number",
              "value": "1.01",
            },
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'-1'",
            "unicode": false,
            "value": "-1",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "300",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'NUMERIC UNSIGNED'",
            "unicode": false,
            "value": "NUMERIC UNSIGNED",
          },
          Number {
            "kind": "number",
            "value": "1.01",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "330",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'DATE'",
            "unicode": false,
            "value": "DATE",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'2008-04-23'",
            "unicode": false,
            "value": "2008-04-23",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "340",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'TIME'",
            "unicode": false,
            "value": "TIME",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'14:37:00'",
            "unicode": false,
            "value": "14:37:00",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "350",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'TIMESTAMP'",
            "unicode": false,
            "value": "TIMESTAMP",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'2008-05-06 21:09:00'",
            "unicode": false,
            "value": "2008-05-06 21:09:00",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "360",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'DATETIME'",
            "unicode": false,
            "value": "DATETIME",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'2008-03-23 14:38:00'",
            "unicode": false,
            "value": "2008-03-23 14:38:00",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "370",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'YEAR'",
            "unicode": false,
            "value": "YEAR",
          },
          Number {
            "kind": "number",
            "value": "2008",
          },
          RetIf {
            "falseExpr": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'2008'",
              "unicode": false,
              "value": "2008",
            },
            "kind": "retif",
            "test": Variable {
              "curly": false,
              "kind": "variable",
              "name": "is_mysqlnd",
              "parenthesizedExpression": true,
            },
            "trueExpr": Number {
              "kind": "number",
              "value": "2008",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "380",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'CHAR(1)'",
            "unicode": false,
            "value": "CHAR(1)",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'a'",
            "unicode": false,
            "value": "a",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "390",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'CHAR(10)'",
            "unicode": false,
            "value": "CHAR(10)",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0123456789'",
            "unicode": false,
            "value": "0123456789",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "400",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'CHAR(255)'",
            "unicode": false,
            "value": "CHAR(255)",
          },
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'z'",
                "unicode": false,
                "value": "z",
              },
              Number {
                "kind": "number",
                "value": "255",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "str_repeat",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "410",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'VARCHAR(1)'",
            "unicode": false,
            "value": "VARCHAR(1)",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'a'",
            "unicode": false,
            "value": "a",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "420",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'VARCHAR(10)'",
            "unicode": false,
            "value": "VARCHAR(10)",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0123456789'",
            "unicode": false,
            "value": "0123456789",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "430",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'VARCHAR(255)'",
            "unicode": false,
            "value": "VARCHAR(255)",
          },
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'z'",
                "unicode": false,
                "value": "z",
              },
              Number {
                "kind": "number",
                "value": "255",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "str_repeat",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "440",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'BINARY(1)'",
            "unicode": false,
            "value": "BINARY(1)",
          },
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'a'",
                "unicode": false,
                "value": "a",
              },
              Number {
                "kind": "number",
                "value": "1",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "str_repeat",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "450",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'BINARY(255)'",
            "unicode": false,
            "value": "BINARY(255)",
          },
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'b'",
                "unicode": false,
                "value": "b",
              },
              Number {
                "kind": "number",
                "value": "255",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "str_repeat",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "460",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'VARBINARY(1)'",
            "unicode": false,
            "value": "VARBINARY(1)",
          },
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'a'",
                "unicode": false,
                "value": "a",
              },
              Number {
                "kind": "number",
                "value": "1",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "str_repeat",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "470",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'VARBINARY(255)'",
            "unicode": false,
            "value": "VARBINARY(255)",
          },
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'b'",
                "unicode": false,
                "value": "b",
              },
              Number {
                "kind": "number",
                "value": "255",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "str_repeat",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "480",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'TINYBLOB'",
            "unicode": false,
            "value": "TINYBLOB",
          },
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'b'",
                "unicode": false,
                "value": "b",
              },
              Number {
                "kind": "number",
                "value": "255",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "str_repeat",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "490",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'BLOB'",
            "unicode": false,
            "value": "BLOB",
          },
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'b'",
                "unicode": false,
                "value": "b",
              },
              Number {
                "kind": "number",
                "value": "256",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "str_repeat",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "500",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'MEDIUMBLOB'",
            "unicode": false,
            "value": "MEDIUMBLOB",
          },
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'b'",
                "unicode": false,
                "value": "b",
              },
              Number {
                "kind": "number",
                "value": "256",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "str_repeat",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "510",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'LONGBLOB'",
            "unicode": false,
            "value": "LONGBLOB",
          },
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'b'",
                "unicode": false,
                "value": "b",
              },
              Number {
                "kind": "number",
                "value": "256",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "str_repeat",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "520",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'TINYTEXT'",
            "unicode": false,
            "value": "TINYTEXT",
          },
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'b'",
                "unicode": false,
                "value": "b",
              },
              Number {
                "kind": "number",
                "value": "255",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "str_repeat",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "530",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'TINYTEXT BINARY'",
            "unicode": false,
            "value": "TINYTEXT BINARY",
          },
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'b'",
                "unicode": false,
                "value": "b",
              },
              Number {
                "kind": "number",
                "value": "255",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "str_repeat",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "560",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'TEXT'",
            "unicode": false,
            "value": "TEXT",
          },
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'b'",
                "unicode": false,
                "value": "b",
              },
              Number {
                "kind": "number",
                "value": "256",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "str_repeat",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "570",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'TEXT BINARY'",
            "unicode": false,
            "value": "TEXT BINARY",
          },
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'b'",
                "unicode": false,
                "value": "b",
              },
              Number {
                "kind": "number",
                "value": "256",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "str_repeat",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "580",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'MEDIUMTEXT'",
            "unicode": false,
            "value": "MEDIUMTEXT",
          },
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'b'",
                "unicode": false,
                "value": "b",
              },
              Number {
                "kind": "number",
                "value": "256",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "str_repeat",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "590",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'MEDIUMTEXT BINARY'",
            "unicode": false,
            "value": "MEDIUMTEXT BINARY",
          },
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'b'",
                "unicode": false,
                "value": "b",
              },
              Number {
                "kind": "number",
                "value": "256",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "str_repeat",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "600",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'LONGTEXT'",
            "unicode": false,
            "value": "LONGTEXT",
          },
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'b'",
                "unicode": false,
                "value": "b",
              },
              Number {
                "kind": "number",
                "value": "256",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "str_repeat",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "610",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'LONGTEXT BINARY'",
            "unicode": false,
            "value": "LONGTEXT BINARY",
          },
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'b'",
                "unicode": false,
                "value": "b",
              },
              Number {
                "kind": "number",
                "value": "256",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "str_repeat",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "620",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"ENUM('yes', 'no') DEFAULT 'yes'\\"",
            "unicode": false,
            "value": "ENUM('yes', 'no') DEFAULT 'yes'",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'no'",
            "unicode": false,
            "value": "no",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "630",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"SET('yes', 'no') DEFAULT 'yes'\\"",
            "unicode": false,
            "value": "SET('yes', 'no') DEFAULT 'yes'",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'no'",
            "unicode": false,
            "value": "no",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Number {
            "kind": "number",
            "value": "640",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'DECIMAL(3,2)'",
            "unicode": false,
            "value": "DECIMAL(3,2)",
          },
          Unary {
            "kind": "unary",
            "type": "-",
            "what": Number {
              "kind": "number",
              "value": "1.01",
            },
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'-1.01'",
            "unicode": false,
            "value": "-1.01",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_type",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"done!\\\\n\\"",
          "unicode": false,
          "value": "done!
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
