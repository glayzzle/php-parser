// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Basic syslog test 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'phpt'",
            "unicode": false,
            "value": "phpt",
          },
          Bin {
            "kind": "bin",
            "left": Name {
              "kind": "name",
              "name": "LOG_NDELAY",
              "resolution": "uqn",
            },
            "right": Name {
              "kind": "name",
              "name": "LOG_PID",
              "resolution": "uqn",
            },
            "type": "|",
          },
          Name {
            "kind": "name",
            "name": "LOG_USER",
            "resolution": "uqn",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "openlog",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Name {
            "kind": "name",
            "name": "LOG_WARNING",
            "resolution": "uqn",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'Basic syslog test'",
            "unicode": false,
            "value": "Basic syslog test",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "syslog",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "closelog",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Inline {
      "kind": "inline",
      "raw": "
===DONE===",
      "value": "===DONE===",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
