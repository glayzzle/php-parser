// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests SplDoublyLinkedList getIteratorMode 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "list",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "SplDoublyLinkedList",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "IT_MODE_FIFO",
              },
              "what": Name {
                "kind": "name",
                "name": "SplDoublyLinkedList",
                "resolution": "uqn",
              },
            },
            "right": StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "IT_MODE_KEEP",
              },
              "what": Name {
                "kind": "name",
                "name": "SplDoublyLinkedList",
                "resolution": "uqn",
              },
            },
            "type": "|",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "setIteratorMode",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "list",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "getIteratorMode",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "list",
            },
          },
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "IT_MODE_LIFO",
            },
            "what": Name {
              "kind": "name",
              "name": "SplDoublyLinkedList",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "setIteratorMode",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "list",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "getIteratorMode",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "list",
            },
          },
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
