// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #63398 (Segfault when polling closed link) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": true,
        "target": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'connect.inc'",
          "unicode": false,
          "value": "connect.inc",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "link",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "host",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "user",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "passwd",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "port",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "socket",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "my_mysqli_connect",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_close",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "read",
        },
        "operator": "=",
        "right": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "error",
          },
          "operator": "=",
          "right": Assign {
            "kind": "assign",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "reject",
            },
            "operator": "=",
            "right": Array {
              "items": Array [],
              "kind": "array",
              "shortForm": false,
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": false,
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "read",
          },
        },
        "operator": "=",
        "right": Assign {
          "kind": "assign",
          "left": OffsetLookup {
            "kind": "offsetlookup",
            "offset": false,
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "error",
            },
          },
          "operator": "=",
          "right": Assign {
            "kind": "assign",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": false,
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "reject",
              },
            },
            "operator": "=",
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "link",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "read",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "error",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "reject",
                },
                Number {
                  "kind": "number",
                  "value": "1",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_poll",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getMessage",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "exception",
                        },
                      },
                    },
                    "right": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"\\\\n\\"",
                      "unicode": false,
                      "value": "
",
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "exception",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "Error",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"okey\\"",
          "unicode": false,
          "value": "okey",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
