// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #54973: SimpleXML casts integers wrong 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "xml",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"<xml><number>9223372036854775808</number></xml>\\"",
              "unicode": false,
              "value": "<xml><number>9223372036854775808</number></xml>",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "simplexml_load_string",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "number",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "xml",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "int",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "number",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "xml",
                },
              },
              "right": Number {
                "kind": "number",
                "value": "1024",
              },
              "type": "/",
            },
            "right": Number {
              "kind": "number",
              "value": "1024",
            },
            "type": "/",
          },
          "right": Number {
            "kind": "number",
            "value": "1024",
          },
          "type": "/",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "int",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "double",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": Cast {
                "expr": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "number",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "xml",
                  },
                },
                "kind": "cast",
                "raw": "(double)",
                "type": "float",
              },
              "right": Number {
                "kind": "number",
                "value": "1024",
              },
              "type": "/",
            },
            "right": Number {
              "kind": "number",
              "value": "1024",
            },
            "type": "/",
          },
          "right": Number {
            "kind": "number",
            "value": "1024",
          },
          "type": "/",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "double",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
