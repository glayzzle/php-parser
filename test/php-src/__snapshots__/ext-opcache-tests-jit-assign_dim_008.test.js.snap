// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests JIT ASSIGN_DIM: 008 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "a",
          },
          "nullable": false,
          "readonly": false,
          "type": TypeReference {
            "kind": "typereference",
            "name": "int",
            "raw": "int",
          },
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "arr",
              },
              "operator": "=",
              "right": Assign {
                "kind": "assign",
                "left": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": false,
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "a",
                  },
                },
                "operator": "=",
                "right": Name {
                  "kind": "name",
                  "name": "y",
                  "parenthesizedExpression": true,
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "arr",
              },
              "operator": "=",
              "right": Name {
                "kind": "name",
                "name": "y",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "c",
              },
              "operator": "=",
              "right": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "y",
                },
                "operator": "=",
                "right": Assign {
                  "kind": "assign",
                  "left": OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": false,
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "arr",
                    },
                  },
                  "operator": "=",
                  "right": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "c",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "y",
                      "resolution": "uqn",
                    },
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": false,
      },
      "nullable": false,
      "type": null,
    },
    Inline {
      "kind": "inline",
      "raw": "
DONE",
      "value": "DONE",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
