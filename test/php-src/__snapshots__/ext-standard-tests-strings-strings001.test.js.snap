// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test whether strstr() and strrchr() are binary safe. 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "s",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"alabala nica\\"",
              "unicode": false,
              "value": "alabala nica",
            },
            "right": Call {
              "arguments": Array [
                Number {
                  "kind": "number",
                  "value": "0",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "chr",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"turska panica\\"",
            "unicode": false,
            "value": "turska panica",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "s",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"nic\\"",
                "unicode": false,
                "value": "nic",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "strstr",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "s",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\" nic\\"",
                "unicode": false,
                "value": " nic",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "strrchr",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
