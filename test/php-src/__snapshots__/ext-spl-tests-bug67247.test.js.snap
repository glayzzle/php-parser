// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #67247 (spl_fixedarray_resize integer overflow) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "ar",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            Number {
              "kind": "number",
              "value": "1",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "SplFixedArray",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"size: \\"",
              "unicode": false,
              "value": "size: ",
            },
            "right": Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "getSize",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "ar",
                },
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          RetIf {
            "falseExpr": Number {
              "kind": "number",
              "value": "0x40000001",
            },
            "kind": "retif",
            "test": Bin {
              "kind": "bin",
              "left": Name {
                "kind": "name",
                "name": "PHP_INT_SIZE",
                "resolution": "uqn",
              },
              "parenthesizedExpression": true,
              "right": Number {
                "kind": "number",
                "value": "8",
              },
              "type": "==",
            },
            "trueExpr": Number {
              "kind": "number",
              "value": "0x2000000000000001",
            },
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "setSize",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "ar",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"size: \\"",
              "unicode": false,
              "value": "size: ",
            },
            "right": Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "getSize",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "ar",
                },
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
