// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Testing Basic behaviour of strcoll() 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'a'",
          "unicode": false,
          "value": "a",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "b",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'A'",
          "unicode": false,
          "value": "A",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Name {
            "kind": "name",
            "name": "LC_COLLATE",
            "resolution": "uqn",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'C'",
            "unicode": false,
            "value": "C",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "setlocale",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "result",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "a",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "b",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "strcoll",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Pass\\\\n\\"",
                "unicode": false,
                "value": "Pass
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "result",
        },
        "right": Number {
          "kind": "number",
          "value": "0",
        },
        "type": ">",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
