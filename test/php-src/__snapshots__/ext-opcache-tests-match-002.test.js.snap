// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test match jump table optimizer 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "x",
              },
              "operator": "=",
              "right": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'2'",
                "unicode": false,
                "value": "2",
              },
            },
            "kind": "expressionstatement",
          },
          Echo {
            "expressions": Array [
              Match {
                "arms": Array [
                  MatchArm {
                    "body": Throw {
                      "kind": "throw",
                      "what": New {
                        "arguments": Array [],
                        "kind": "new",
                        "what": Name {
                          "kind": "name",
                          "name": "RuntimeException",
                          "resolution": "uqn",
                        },
                      },
                    },
                    "conds": Array [
                      Number {
                        "kind": "number",
                        "value": "1",
                      },
                      Number {
                        "kind": "number",
                        "value": "2",
                      },
                      Number {
                        "kind": "number",
                        "value": "3",
                      },
                      Number {
                        "kind": "number",
                        "value": "4",
                      },
                      Number {
                        "kind": "number",
                        "value": "5",
                      },
                    ],
                    "kind": "matcharm",
                  },
                  MatchArm {
                    "body": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"No match\\\\n\\"",
                      "unicode": false,
                      "value": "No match
",
                    },
                    "conds": null,
                    "kind": "matcharm",
                  },
                ],
                "cond": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "x",
                },
                "kind": "match",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "test",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    _Function {
      "arguments": Array [],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "x",
              },
              "operator": "=",
              "right": Number {
                "kind": "number",
                "value": "2",
              },
            },
            "kind": "expressionstatement",
          },
          Echo {
            "expressions": Array [
              Match {
                "arms": Array [
                  MatchArm {
                    "body": Throw {
                      "kind": "throw",
                      "what": New {
                        "arguments": Array [],
                        "kind": "new",
                        "what": Name {
                          "kind": "name",
                          "name": "RuntimeException",
                          "resolution": "uqn",
                        },
                      },
                    },
                    "conds": Array [
                      String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'1'",
                        "unicode": false,
                        "value": "1",
                      },
                      String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'2'",
                        "unicode": false,
                        "value": "2",
                      },
                      String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'3'",
                        "unicode": false,
                        "value": "3",
                      },
                      String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'4'",
                        "unicode": false,
                        "value": "4",
                      },
                      String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'5'",
                        "unicode": false,
                        "value": "5",
                      },
                    ],
                    "kind": "matcharm",
                  },
                  MatchArm {
                    "body": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"No match\\\\n\\"",
                      "unicode": false,
                      "value": "No match
",
                    },
                    "conds": null,
                    "kind": "matcharm",
                  },
                ],
                "cond": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "x",
                },
                "kind": "match",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "test2",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test2",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
