// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests BZ2 with strings 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "blaat",
        },
        "operator": "=",
        "right": Encapsed {
          "kind": "encapsed",
          "label": "HEREDOC",
          "raw": "<<<HEREDOC
This is some random data
HEREDOC",
          "type": "heredoc",
          "value": Array [
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "This is some random data
",
                "unicode": false,
                "value": "This is some random data",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
          ],
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "blaat2",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "blaat",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "bzcompress",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "bzdecompress",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "blaat",
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "blaat2",
            },
            "type": "===",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
