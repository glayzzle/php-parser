// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Observer: Function calls from a shutdown handler are observable 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Closure {
            "arguments": Array [],
            "attrGroups": Array [],
            "body": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    Bin {
                      "kind": "bin",
                      "left": Bin {
                        "kind": "bin",
                        "left": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'Shutdown: '",
                          "unicode": false,
                          "value": "Shutdown: ",
                        },
                        "right": Call {
                          "arguments": Array [],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "foo",
                            "resolution": "uqn",
                          },
                        },
                        "type": ".",
                      },
                      "right": Name {
                        "kind": "name",
                        "name": "PHP_EOL",
                        "resolution": "uqn",
                      },
                      "type": ".",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
              ],
              "kind": "block",
            },
            "byref": false,
            "isStatic": false,
            "kind": "closure",
            "nullable": false,
            "type": null,
            "uses": Array [],
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "register_shutdown_function",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "arg",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          Return {
            "expr": Variable {
              "curly": false,
              "kind": "variable",
              "name": "arg",
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "bar",
      },
      "nullable": false,
      "type": null,
    },
    _Function {
      "arguments": Array [],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Number {
                  "kind": "number",
                  "value": "41",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "bar",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          Return {
            "expr": Call {
              "arguments": Array [
                Number {
                  "kind": "number",
                  "value": "42",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "bar",
                "resolution": "uqn",
              },
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "foo",
      },
      "nullable": false,
      "type": null,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'Done: '",
              "unicode": false,
              "value": "Done: ",
            },
            "right": Call {
              "arguments": Array [
                Number {
                  "kind": "number",
                  "value": "40",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "bar",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": Name {
            "kind": "name",
            "name": "PHP_EOL",
            "resolution": "uqn",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
