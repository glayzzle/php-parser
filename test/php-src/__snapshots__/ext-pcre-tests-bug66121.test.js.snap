// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #66121 - UTF-8 lookbehinds match bytes instead of characters 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/(?<!ක)/u'",
                "unicode": false,
                "value": "/(?<!ක)/u",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'*'",
                "unicode": false,
                "value": "*",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'ක'",
                "unicode": false,
                "value": "ක",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "preg_replace",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/(?<!ක)/u'",
                "unicode": false,
                "value": "/(?<!ක)/u",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'*'",
                "unicode": false,
                "value": "*",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'ම'",
                "unicode": false,
                "value": "ම",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "preg_replace",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/(?<!k)/u'",
                "unicode": false,
                "value": "/(?<!k)/u",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'*'",
                "unicode": false,
                "value": "*",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'k'",
                "unicode": false,
                "value": "k",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "preg_replace",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/(?<!k)/u'",
                "unicode": false,
                "value": "/(?<!k)/u",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'*'",
                "unicode": false,
                "value": "*",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'m'",
                "unicode": false,
                "value": "m",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "preg_replace",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'/(?<!ක)/u'",
            "unicode": false,
            "value": "/(?<!ක)/u",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'ම'",
            "unicode": false,
            "value": "ම",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "matches",
          },
          Name {
            "kind": "name",
            "name": "PREG_OFFSET_CAPTURE",
            "resolution": "uqn",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "preg_match_all",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "matches",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/(?<!ක)/u'",
                "unicode": false,
                "value": "/(?<!ක)/u",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'*'",
                "unicode": false,
                "value": "*",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\xFCක\\"",
                "unicode": false,
                "value": "üක",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "preg_replace",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/(?<!ක)/u'",
                "unicode": false,
                "value": "/(?<!ක)/u",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'*'",
                "unicode": false,
                "value": "*",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"ක\\\\xFC\\"",
                "unicode": false,
                "value": "කü",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "preg_replace",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/(?<!ක)/u'",
                "unicode": false,
                "value": "/(?<!ක)/u",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\xFCම\\"",
                "unicode": false,
                "value": "üම",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "matches",
              },
              Name {
                "kind": "name",
                "name": "PREG_OFFSET_CAPTURE",
                "resolution": "uqn",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "preg_match_all",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/(?<!ක)/u'",
                "unicode": false,
                "value": "/(?<!ක)/u",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\xFCම\\"",
                "unicode": false,
                "value": "üම",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "matches",
              },
              Name {
                "kind": "name",
                "name": "PREG_OFFSET_CAPTURE",
                "resolution": "uqn",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "preg_match_all",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
