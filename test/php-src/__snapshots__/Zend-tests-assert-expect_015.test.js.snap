// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests AST pretty-peinter 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Number {
              "kind": "number",
              "value": "0",
            },
            "right": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "a",
              },
              "operator": "=",
              "parenthesizedExpression": true,
              "right": Closure {
                "arguments": Array [],
                "attrGroups": Array [],
                "body": Block {
                  "children": Array [
                    Global {
                      "items": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "a",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "b",
                          },
                        },
                      ],
                      "kind": "global",
                    },
                    Static {
                      "kind": "static",
                      "variables": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "c",
                        },
                        StaticVariable {
                          "defaultValue": Number {
                            "kind": "number",
                            "value": "0",
                          },
                          "kind": "staticvariable",
                          "variable": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "d",
                          },
                        },
                      ],
                    },
                    Unset {
                      "kind": "unset",
                      "variables": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "e",
                        },
                      ],
                    },
                    ExpressionStatement {
                      "expression": Assign {
                        "kind": "assign",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "x",
                        },
                        "operator": "=",
                        "right": Bin {
                          "kind": "bin",
                          "left": Bin {
                            "kind": "bin",
                            "left": Isset {
                              "kind": "isset",
                              "variables": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "a",
                                },
                              ],
                            },
                            "right": Unary {
                              "kind": "unary",
                              "type": "!",
                              "what": Empty {
                                "expression": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "b",
                                },
                                "kind": "empty",
                              },
                            },
                            "type": "&&",
                          },
                          "right": Eval {
                            "kind": "eval",
                            "source": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "c",
                            },
                          },
                          "type": "||",
                        },
                      },
                      "kind": "expressionstatement",
                    },
                    ExpressionStatement {
                      "expression": Assign {
                        "kind": "assign",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "x",
                        },
                        "operator": "=",
                        "right": RetIf {
                          "falseExpr": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "c",
                          },
                          "kind": "retif",
                          "test": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "a",
                          },
                          "trueExpr": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "b",
                          },
                        },
                      },
                      "kind": "expressionstatement",
                    },
                    ExpressionStatement {
                      "expression": Assign {
                        "kind": "assign",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "x",
                        },
                        "operator": "=",
                        "right": RetIf {
                          "falseExpr": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "c",
                          },
                          "kind": "retif",
                          "test": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "a",
                          },
                          "trueExpr": null,
                        },
                      },
                      "kind": "expressionstatement",
                    },
                    ExpressionStatement {
                      "expression": Assign {
                        "kind": "assign",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "x",
                        },
                        "operator": "=",
                        "right": Bin {
                          "kind": "bin",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "a",
                          },
                          "right": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "b",
                          },
                          "type": "??",
                        },
                      },
                      "kind": "expressionstatement",
                    },
                    ExpressionStatement {
                      "expression": Assign {
                        "kind": "assign",
                        "left": List {
                          "items": Array [
                            Entry {
                              "byRef": false,
                              "key": null,
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "a",
                              },
                            },
                            Entry {
                              "byRef": false,
                              "key": null,
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "b",
                              },
                            },
                            Entry {
                              "byRef": false,
                              "key": null,
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "c",
                              },
                            },
                          ],
                          "kind": "list",
                          "shortForm": false,
                        },
                        "operator": "=",
                        "right": Array {
                          "items": Array [
                            Entry {
                              "byRef": false,
                              "key": null,
                              "kind": "entry",
                              "unpack": false,
                              "value": Number {
                                "kind": "number",
                                "value": "1",
                              },
                            },
                            Entry {
                              "byRef": false,
                              "key": Number {
                                "kind": "number",
                                "value": "2",
                              },
                              "kind": "entry",
                              "unpack": false,
                              "value": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'x'",
                                "unicode": false,
                                "value": "x",
                              },
                            },
                            Entry {
                              "byRef": false,
                              "key": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'z'",
                                "unicode": false,
                                "value": "z",
                              },
                              "kind": "entry",
                              "unpack": false,
                              "value": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'c'",
                                "unicode": false,
                                "value": "c",
                              },
                            },
                          ],
                          "kind": "array",
                          "shortForm": true,
                        },
                      },
                      "kind": "expressionstatement",
                    },
                    ExpressionStatement {
                      "expression": Silent {
                        "expr": Call {
                          "arguments": Array [],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "foo",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "silent",
                      },
                      "kind": "expressionstatement",
                    },
                    ExpressionStatement {
                      "expression": Assign {
                        "kind": "assign",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "y",
                        },
                        "operator": "=",
                        "right": Clone {
                          "kind": "clone",
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "x",
                          },
                        },
                      },
                      "kind": "expressionstatement",
                    },
                    ExpressionStatement {
                      "expression": Yield {
                        "key": Number {
                          "kind": "number",
                          "value": "1",
                        },
                        "kind": "yield",
                        "value": Number {
                          "kind": "number",
                          "value": "2",
                        },
                      },
                      "kind": "expressionstatement",
                    },
                    ExpressionStatement {
                      "expression": YieldFrom {
                        "kind": "yieldfrom",
                        "value": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "x",
                        },
                      },
                      "kind": "expressionstatement",
                    },
                  ],
                  "kind": "block",
                },
                "byref": false,
                "isStatic": false,
                "kind": "closure",
                "nullable": false,
                "type": null,
                "uses": Array [],
              },
            },
            "type": "&&",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "assert",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Number {
              "kind": "number",
              "value": "0",
            },
            "right": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "a",
              },
              "operator": "=",
              "parenthesizedExpression": true,
              "right": Closure {
                "arguments": Array [
                  Parameter {
                    "attrGroups": Array [],
                    "byref": true,
                    "flags": 0,
                    "kind": "parameter",
                    "name": Identifier {
                      "kind": "identifier",
                      "name": "a",
                    },
                    "nullable": false,
                    "readonly": false,
                    "type": TypeReference {
                      "kind": "typereference",
                      "name": "array",
                      "raw": "array",
                    },
                    "value": null,
                    "variadic": false,
                  },
                  Parameter {
                    "attrGroups": Array [],
                    "byref": false,
                    "flags": 0,
                    "kind": "parameter",
                    "name": Identifier {
                      "kind": "identifier",
                      "name": "b",
                    },
                    "nullable": true,
                    "readonly": false,
                    "type": Name {
                      "kind": "name",
                      "name": "X",
                      "resolution": "uqn",
                    },
                    "value": NullKeyword {
                      "kind": "nullkeyword",
                      "raw": "null",
                    },
                    "variadic": false,
                  },
                ],
                "attrGroups": Array [],
                "body": Block {
                  "children": Array [
                    Class {
                      "attrGroups": Array [],
                      "body": Array [
                        ClassConstant {
                          "attrGroups": Array [],
                          "constants": Array [
                            Constant {
                              "kind": "constant",
                              "name": Identifier {
                                "kind": "identifier",
                                "name": "X",
                              },
                              "value": Number {
                                "kind": "number",
                                "value": "12",
                              },
                            },
                          ],
                          "kind": "classconstant",
                          "visibility": "",
                        },
                        ClassConstant {
                          "attrGroups": Array [],
                          "constants": Array [
                            Constant {
                              "kind": "constant",
                              "name": Identifier {
                                "kind": "identifier",
                                "name": "Y",
                              },
                              "value": StaticLookup {
                                "kind": "staticlookup",
                                "offset": Identifier {
                                  "kind": "identifier",
                                  "name": "X",
                                },
                                "what": SelfReference {
                                  "kind": "selfreference",
                                  "raw": "self",
                                },
                              },
                            },
                            Constant {
                              "kind": "constant",
                              "name": Identifier {
                                "kind": "identifier",
                                "name": "Z",
                              },
                              "value": String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"aaa\\"",
                                "unicode": false,
                                "value": "aaa",
                              },
                            },
                          ],
                          "kind": "classconstant",
                          "visibility": "",
                        },
                        PropertyStatement {
                          "isStatic": false,
                          "kind": "propertystatement",
                          "properties": Array [
                            Property {
                              "attrGroups": Array [],
                              "kind": "property",
                              "name": Identifier {
                                "kind": "identifier",
                                "name": "a",
                              },
                              "nullable": false,
                              "readonly": false,
                              "type": null,
                              "value": Number {
                                "kind": "number",
                                "value": "1",
                              },
                            },
                            Property {
                              "attrGroups": Array [],
                              "kind": "property",
                              "name": Identifier {
                                "kind": "identifier",
                                "name": "b",
                              },
                              "nullable": false,
                              "readonly": false,
                              "type": null,
                              "value": null,
                            },
                          ],
                          "visibility": "public",
                        },
                        PropertyStatement {
                          "isStatic": false,
                          "kind": "propertystatement",
                          "properties": Array [
                            Property {
                              "attrGroups": Array [],
                              "kind": "property",
                              "name": Identifier {
                                "kind": "identifier",
                                "name": "c",
                              },
                              "nullable": false,
                              "readonly": false,
                              "type": null,
                              "value": null,
                            },
                          ],
                          "visibility": "protected",
                        },
                        PropertyStatement {
                          "isStatic": true,
                          "kind": "propertystatement",
                          "properties": Array [
                            Property {
                              "attrGroups": Array [],
                              "kind": "property",
                              "name": Identifier {
                                "kind": "identifier",
                                "name": "d",
                              },
                              "nullable": false,
                              "readonly": false,
                              "type": null,
                              "value": NullKeyword {
                                "kind": "nullkeyword",
                                "raw": "null",
                              },
                            },
                          ],
                          "visibility": "private",
                        },
                        Method {
                          "arguments": Array [],
                          "attrGroups": Array [],
                          "body": null,
                          "byref": false,
                          "isAbstract": true,
                          "isFinal": false,
                          "isStatic": false,
                          "kind": "method",
                          "name": Identifier {
                            "kind": "identifier",
                            "name": "foo",
                          },
                          "nullable": false,
                          "type": null,
                          "visibility": "",
                        },
                        Method {
                          "arguments": Array [],
                          "attrGroups": Array [],
                          "body": Block {
                            "children": Array [
                              For {
                                "body": Block {
                                  "children": Array [
                                    ExpressionStatement {
                                      "expression": Assign {
                                        "kind": "assign",
                                        "left": OffsetLookup {
                                          "kind": "offsetlookup",
                                          "offset": Variable {
                                            "curly": false,
                                            "kind": "variable",
                                            "name": "i",
                                          },
                                          "what": Variable {
                                            "curly": false,
                                            "kind": "variable",
                                            "name": "s",
                                          },
                                        },
                                        "operator": "=",
                                        "right": OffsetLookup {
                                          "kind": "offsetlookup",
                                          "offset": Variable {
                                            "curly": false,
                                            "kind": "variable",
                                            "name": "j",
                                          },
                                          "what": Variable {
                                            "curly": false,
                                            "kind": "variable",
                                            "name": "a",
                                          },
                                        },
                                      },
                                      "kind": "expressionstatement",
                                    },
                                  ],
                                  "kind": "block",
                                },
                                "increment": Array [
                                  Post {
                                    "kind": "post",
                                    "type": "+",
                                    "what": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "i",
                                    },
                                  },
                                  Pre {
                                    "kind": "pre",
                                    "type": "-",
                                    "what": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "j",
                                    },
                                  },
                                ],
                                "init": Array [
                                  Assign {
                                    "kind": "assign",
                                    "left": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "i",
                                    },
                                    "operator": "=",
                                    "right": Number {
                                      "kind": "number",
                                      "value": "0",
                                    },
                                  },
                                  Assign {
                                    "kind": "assign",
                                    "left": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "j",
                                    },
                                    "operator": "=",
                                    "right": Number {
                                      "kind": "number",
                                      "value": "100",
                                    },
                                  },
                                ],
                                "kind": "for",
                                "shortForm": false,
                                "test": Array [
                                  Bin {
                                    "kind": "bin",
                                    "left": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "i",
                                    },
                                    "right": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "j",
                                    },
                                    "type": "<",
                                  },
                                ],
                              },
                              Foreach {
                                "body": Block {
                                  "children": Array [
                                    ExpressionStatement {
                                      "expression": Print {
                                        "expression": Encapsed {
                                          "kind": "encapsed",
                                          "raw": "\\"$key => $val\\\\n\\"",
                                          "type": "string",
                                          "value": Array [
                                            EncapsedPart {
                                              "curly": false,
                                              "expression": Variable {
                                                "curly": false,
                                                "kind": "variable",
                                                "name": "key",
                                              },
                                              "kind": "encapsedpart",
                                              "syntax": "simple",
                                            },
                                            EncapsedPart {
                                              "curly": false,
                                              "expression": String {
                                                "isDoubleQuote": false,
                                                "kind": "string",
                                                "raw": " => ",
                                                "unicode": false,
                                                "value": " => ",
                                              },
                                              "kind": "encapsedpart",
                                              "syntax": null,
                                            },
                                            EncapsedPart {
                                              "curly": false,
                                              "expression": Variable {
                                                "curly": false,
                                                "kind": "variable",
                                                "name": "val",
                                              },
                                              "kind": "encapsedpart",
                                              "syntax": "simple",
                                            },
                                            EncapsedPart {
                                              "curly": false,
                                              "expression": String {
                                                "isDoubleQuote": false,
                                                "kind": "string",
                                                "raw": "\\\\n",
                                                "unicode": false,
                                                "value": "",
                                              },
                                              "kind": "encapsedpart",
                                              "syntax": null,
                                            },
                                          ],
                                        },
                                        "kind": "print",
                                      },
                                      "kind": "expressionstatement",
                                    },
                                  ],
                                  "kind": "block",
                                },
                                "key": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "key",
                                },
                                "kind": "foreach",
                                "shortForm": false,
                                "source": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "a",
                                },
                                "value": Variable {
                                  "byref": true,
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "val",
                                },
                              },
                              While {
                                "body": Block {
                                  "children": Array [
                                    ExpressionStatement {
                                      "expression": Post {
                                        "kind": "post",
                                        "type": "+",
                                        "what": Variable {
                                          "curly": false,
                                          "kind": "variable",
                                          "name": "i",
                                        },
                                      },
                                      "kind": "expressionstatement",
                                    },
                                  ],
                                  "kind": "block",
                                },
                                "kind": "while",
                                "shortForm": false,
                                "test": OffsetLookup {
                                  "kind": "offsetlookup",
                                  "offset": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "i",
                                  },
                                  "what": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "s",
                                  },
                                },
                              },
                              Do {
                                "body": Block {
                                  "children": Array [
                                    ExpressionStatement {
                                      "expression": Post {
                                        "kind": "post",
                                        "type": "-",
                                        "what": Variable {
                                          "curly": false,
                                          "kind": "variable",
                                          "name": "i",
                                        },
                                      },
                                      "kind": "expressionstatement",
                                    },
                                  ],
                                  "kind": "block",
                                },
                                "kind": "do",
                                "test": OffsetLookup {
                                  "kind": "offsetlookup",
                                  "offset": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "i",
                                  },
                                  "what": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "s",
                                  },
                                },
                              },
                              ExpressionStatement {
                                "expression": Assign {
                                  "kind": "assign",
                                  "left": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "x",
                                  },
                                  "operator": "=",
                                  "right": Call {
                                    "arguments": Array [
                                      Bin {
                                        "kind": "bin",
                                        "left": Variable {
                                          "curly": false,
                                          "kind": "variable",
                                          "name": "a",
                                        },
                                        "right": Number {
                                          "kind": "number",
                                          "value": "1",
                                        },
                                        "type": "+",
                                      },
                                      Number {
                                        "kind": "number",
                                        "value": "4",
                                      },
                                      variadic {
                                        "kind": "variadic",
                                        "what": Array {
                                          "items": Array [
                                            Entry {
                                              "byRef": false,
                                              "key": null,
                                              "kind": "entry",
                                              "unpack": false,
                                              "value": Number {
                                                "kind": "number",
                                                "value": "1",
                                              },
                                            },
                                            Entry {
                                              "byRef": false,
                                              "key": null,
                                              "kind": "entry",
                                              "unpack": false,
                                              "value": Number {
                                                "kind": "number",
                                                "value": "2",
                                              },
                                            },
                                            Entry {
                                              "byRef": false,
                                              "key": null,
                                              "kind": "entry",
                                              "unpack": false,
                                              "value": Number {
                                                "kind": "number",
                                                "value": "3",
                                              },
                                            },
                                          ],
                                          "kind": "array",
                                          "shortForm": true,
                                        },
                                      },
                                    ],
                                    "kind": "call",
                                    "what": Name {
                                      "kind": "name",
                                      "name": "foo",
                                      "resolution": "uqn",
                                    },
                                  },
                                },
                                "kind": "expressionstatement",
                              },
                              ExpressionStatement {
                                "expression": Assign {
                                  "kind": "assign",
                                  "left": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "x",
                                  },
                                  "operator": "=",
                                  "right": Call {
                                    "arguments": Array [],
                                    "kind": "call",
                                    "what": Variable {
                                      "curly": true,
                                      "kind": "variable",
                                      "name": Bin {
                                        "kind": "bin",
                                        "left": Variable {
                                          "curly": false,
                                          "kind": "variable",
                                          "name": "a",
                                        },
                                        "right": String {
                                          "isDoubleQuote": true,
                                          "kind": "string",
                                          "raw": "\\"_1\\"",
                                          "unicode": false,
                                          "value": "_1",
                                        },
                                        "type": ".",
                                      },
                                    },
                                  },
                                },
                                "kind": "expressionstatement",
                              },
                              ExpressionStatement {
                                "expression": Assign {
                                  "kind": "assign",
                                  "left": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "x",
                                  },
                                  "operator": "=",
                                  "right": Call {
                                    "arguments": Array [],
                                    "kind": "call",
                                    "what": StaticLookup {
                                      "kind": "staticlookup",
                                      "offset": Identifier {
                                        "kind": "identifier",
                                        "name": "foo",
                                      },
                                      "what": Name {
                                        "kind": "name",
                                        "name": "A",
                                        "resolution": "uqn",
                                      },
                                    },
                                  },
                                },
                                "kind": "expressionstatement",
                              },
                              ExpressionStatement {
                                "expression": Assign {
                                  "kind": "assign",
                                  "left": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "x",
                                  },
                                  "operator": "=",
                                  "right": Call {
                                    "arguments": Array [],
                                    "kind": "call",
                                    "what": StaticLookup {
                                      "kind": "staticlookup",
                                      "offset": Identifier {
                                        "kind": "identifier",
                                        "name": "foo",
                                      },
                                      "what": Variable {
                                        "curly": true,
                                        "kind": "variable",
                                        "name": Bin {
                                          "kind": "bin",
                                          "left": Variable {
                                            "curly": false,
                                            "kind": "variable",
                                            "name": "a",
                                          },
                                          "right": String {
                                            "isDoubleQuote": true,
                                            "kind": "string",
                                            "raw": "\\"_1\\"",
                                            "unicode": false,
                                            "value": "_1",
                                          },
                                          "type": ".",
                                        },
                                      },
                                    },
                                  },
                                },
                                "kind": "expressionstatement",
                              },
                              ExpressionStatement {
                                "expression": Assign {
                                  "kind": "assign",
                                  "left": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "x",
                                  },
                                  "operator": "=",
                                  "right": Call {
                                    "arguments": Array [],
                                    "kind": "call",
                                    "what": StaticLookup {
                                      "kind": "staticlookup",
                                      "offset": Variable {
                                        "curly": true,
                                        "kind": "variable",
                                        "name": Bin {
                                          "kind": "bin",
                                          "left": Variable {
                                            "curly": false,
                                            "kind": "variable",
                                            "name": "a",
                                          },
                                          "right": String {
                                            "isDoubleQuote": true,
                                            "kind": "string",
                                            "raw": "\\"_1\\"",
                                            "unicode": false,
                                            "value": "_1",
                                          },
                                          "type": ".",
                                        },
                                      },
                                      "what": Name {
                                        "kind": "name",
                                        "name": "A",
                                        "resolution": "uqn",
                                      },
                                    },
                                  },
                                },
                                "kind": "expressionstatement",
                              },
                              ExpressionStatement {
                                "expression": Assign {
                                  "kind": "assign",
                                  "left": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "x",
                                  },
                                  "operator": "=",
                                  "right": Call {
                                    "arguments": Array [],
                                    "kind": "call",
                                    "what": PropertyLookup {
                                      "kind": "propertylookup",
                                      "offset": Identifier {
                                        "kind": "identifier",
                                        "name": "foo",
                                      },
                                      "what": Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "x",
                                      },
                                    },
                                  },
                                },
                                "kind": "expressionstatement",
                              },
                              ExpressionStatement {
                                "expression": Assign {
                                  "kind": "assign",
                                  "left": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "x",
                                  },
                                  "operator": "=",
                                  "right": Call {
                                    "arguments": Array [],
                                    "kind": "call",
                                    "what": PropertyLookup {
                                      "kind": "propertylookup",
                                      "offset": Identifier {
                                        "kind": "identifier",
                                        "name": "foo",
                                      },
                                      "what": Variable {
                                        "curly": true,
                                        "kind": "variable",
                                        "name": Bin {
                                          "kind": "bin",
                                          "left": Variable {
                                            "curly": false,
                                            "kind": "variable",
                                            "name": "a",
                                          },
                                          "right": String {
                                            "isDoubleQuote": true,
                                            "kind": "string",
                                            "raw": "\\"_1\\"",
                                            "unicode": false,
                                            "value": "_1",
                                          },
                                          "type": ".",
                                        },
                                      },
                                    },
                                  },
                                },
                                "kind": "expressionstatement",
                              },
                              ExpressionStatement {
                                "expression": Assign {
                                  "kind": "assign",
                                  "left": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "x",
                                  },
                                  "operator": "=",
                                  "right": Call {
                                    "arguments": Array [],
                                    "kind": "call",
                                    "what": PropertyLookup {
                                      "kind": "propertylookup",
                                      "offset": EncapsedPart {
                                        "curly": false,
                                        "expression": Bin {
                                          "kind": "bin",
                                          "left": Variable {
                                            "curly": false,
                                            "kind": "variable",
                                            "name": "a",
                                          },
                                          "right": String {
                                            "isDoubleQuote": true,
                                            "kind": "string",
                                            "raw": "\\"_1\\"",
                                            "unicode": false,
                                            "value": "_1",
                                          },
                                          "type": ".",
                                        },
                                        "kind": "encapsedpart",
                                        "syntax": "complex",
                                      },
                                      "what": Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "x",
                                      },
                                    },
                                  },
                                },
                                "kind": "expressionstatement",
                              },
                              ExpressionStatement {
                                "expression": Assign {
                                  "kind": "assign",
                                  "left": PropertyLookup {
                                    "kind": "propertylookup",
                                    "offset": Identifier {
                                      "kind": "identifier",
                                      "name": "a",
                                    },
                                    "what": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "x",
                                    },
                                  },
                                  "operator": "=",
                                  "right": StaticLookup {
                                    "kind": "staticlookup",
                                    "offset": Identifier {
                                      "kind": "identifier",
                                      "name": "C",
                                    },
                                    "what": Name {
                                      "kind": "name",
                                      "name": "C",
                                      "resolution": "uqn",
                                    },
                                  },
                                },
                                "kind": "expressionstatement",
                              },
                              ExpressionStatement {
                                "expression": Assign {
                                  "kind": "assign",
                                  "left": PropertyLookup {
                                    "kind": "propertylookup",
                                    "offset": Identifier {
                                      "kind": "identifier",
                                      "name": "a",
                                    },
                                    "what": Variable {
                                      "curly": true,
                                      "kind": "variable",
                                      "name": Bin {
                                        "kind": "bin",
                                        "left": Variable {
                                          "curly": false,
                                          "kind": "variable",
                                          "name": "a",
                                        },
                                        "right": String {
                                          "isDoubleQuote": true,
                                          "kind": "string",
                                          "raw": "\\"_1\\"",
                                          "unicode": false,
                                          "value": "_1",
                                        },
                                        "type": ".",
                                      },
                                    },
                                  },
                                  "operator": "=",
                                  "right": StaticLookup {
                                    "kind": "staticlookup",
                                    "offset": Identifier {
                                      "kind": "identifier",
                                      "name": "C",
                                    },
                                    "what": Variable {
                                      "curly": true,
                                      "kind": "variable",
                                      "name": Bin {
                                        "kind": "bin",
                                        "left": Variable {
                                          "curly": false,
                                          "kind": "variable",
                                          "name": "a",
                                        },
                                        "right": String {
                                          "isDoubleQuote": true,
                                          "kind": "string",
                                          "raw": "\\"_1\\"",
                                          "unicode": false,
                                          "value": "_1",
                                        },
                                        "type": ".",
                                      },
                                    },
                                  },
                                },
                                "kind": "expressionstatement",
                              },
                              ExpressionStatement {
                                "expression": Assign {
                                  "kind": "assign",
                                  "left": PropertyLookup {
                                    "kind": "propertylookup",
                                    "offset": EncapsedPart {
                                      "curly": false,
                                      "expression": Bin {
                                        "kind": "bin",
                                        "left": Name {
                                          "kind": "name",
                                          "name": "a",
                                          "resolution": "uqn",
                                        },
                                        "right": String {
                                          "isDoubleQuote": true,
                                          "kind": "string",
                                          "raw": "\\"_1\\"",
                                          "unicode": false,
                                          "value": "_1",
                                        },
                                        "type": ".",
                                      },
                                      "kind": "encapsedpart",
                                      "syntax": "complex",
                                    },
                                    "what": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "x",
                                    },
                                  },
                                  "operator": "=",
                                  "right": StaticLookup {
                                    "kind": "staticlookup",
                                    "offset": Identifier {
                                      "kind": "identifier",
                                      "name": "C",
                                    },
                                    "what": Name {
                                      "kind": "name",
                                      "name": "C",
                                      "resolution": "uqn",
                                    },
                                  },
                                },
                                "kind": "expressionstatement",
                              },
                              ExpressionStatement {
                                "expression": Assign {
                                  "kind": "assign",
                                  "left": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "x",
                                  },
                                  "operator": "=",
                                  "right": StaticLookup {
                                    "kind": "staticlookup",
                                    "offset": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "z",
                                    },
                                    "what": Name {
                                      "kind": "name",
                                      "name": "C",
                                      "resolution": "uqn",
                                    },
                                  },
                                },
                                "kind": "expressionstatement",
                              },
                              ExpressionStatement {
                                "expression": Assign {
                                  "kind": "assign",
                                  "left": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "x",
                                  },
                                  "operator": "=",
                                  "right": StaticLookup {
                                    "kind": "staticlookup",
                                    "offset": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "z",
                                    },
                                    "what": Variable {
                                      "curly": true,
                                      "kind": "variable",
                                      "name": Bin {
                                        "kind": "bin",
                                        "left": Variable {
                                          "curly": false,
                                          "kind": "variable",
                                          "name": "a",
                                        },
                                        "right": String {
                                          "isDoubleQuote": true,
                                          "kind": "string",
                                          "raw": "\\"_1\\"",
                                          "unicode": false,
                                          "value": "_1",
                                        },
                                        "type": ".",
                                      },
                                    },
                                  },
                                },
                                "kind": "expressionstatement",
                              },
                              ExpressionStatement {
                                "expression": Assign {
                                  "kind": "assign",
                                  "left": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "x",
                                  },
                                  "operator": "=",
                                  "right": StaticLookup {
                                    "kind": "staticlookup",
                                    "offset": Variable {
                                      "curly": true,
                                      "kind": "variable",
                                      "name": Bin {
                                        "kind": "bin",
                                        "left": Variable {
                                          "curly": false,
                                          "kind": "variable",
                                          "name": "z",
                                        },
                                        "right": String {
                                          "isDoubleQuote": true,
                                          "kind": "string",
                                          "raw": "\\"_1\\"",
                                          "unicode": false,
                                          "value": "_1",
                                        },
                                        "type": ".",
                                      },
                                    },
                                    "what": Name {
                                      "kind": "name",
                                      "name": "C",
                                      "resolution": "uqn",
                                    },
                                  },
                                },
                                "kind": "expressionstatement",
                              },
                              ExpressionStatement {
                                "expression": PropertyLookup {
                                  "kind": "nullsafepropertylookup",
                                  "offset": Identifier {
                                    "kind": "identifier",
                                    "name": "y",
                                  },
                                  "what": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "x",
                                  },
                                },
                                "kind": "expressionstatement",
                              },
                              ExpressionStatement {
                                "expression": Call {
                                  "arguments": Array [],
                                  "kind": "call",
                                  "what": PropertyLookup {
                                    "kind": "nullsafepropertylookup",
                                    "offset": Identifier {
                                      "kind": "identifier",
                                      "name": "y",
                                    },
                                    "what": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "x",
                                    },
                                  },
                                },
                                "kind": "expressionstatement",
                              },
                              ExpressionStatement {
                                "expression": Call {
                                  "arguments": Array [
                                    namedargument {
                                      "kind": "namedargument",
                                      "name": "bar",
                                      "value": Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "x",
                                      },
                                    },
                                  ],
                                  "kind": "call",
                                  "what": Name {
                                    "kind": "name",
                                    "name": "foo",
                                    "resolution": "uqn",
                                  },
                                },
                                "kind": "expressionstatement",
                              },
                            ],
                            "kind": "block",
                          },
                          "byref": false,
                          "isAbstract": false,
                          "isFinal": false,
                          "isStatic": true,
                          "kind": "method",
                          "name": Identifier {
                            "kind": "identifier",
                            "name": "f1",
                          },
                          "nullable": false,
                          "type": null,
                          "visibility": "private",
                        },
                      ],
                      "extends": Name {
                        "kind": "name",
                        "name": "B",
                        "resolution": "uqn",
                      },
                      "implements": Array [
                        Name {
                          "kind": "name",
                          "name": "C",
                          "resolution": "uqn",
                        },
                        Name {
                          "kind": "name",
                          "name": "D",
                          "resolution": "uqn",
                        },
                      ],
                      "isAbstract": true,
                      "isAnonymous": false,
                      "isFinal": false,
                      "kind": "class",
                      "name": Identifier {
                        "kind": "identifier",
                        "name": "A",
                      },
                    },
                  ],
                  "kind": "block",
                },
                "byref": true,
                "isStatic": false,
                "kind": "closure",
                "nullable": true,
                "type": Name {
                  "kind": "name",
                  "name": "X",
                  "resolution": "uqn",
                },
                "uses": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "c",
                  },
                  Variable {
                    "byref": true,
                    "curly": false,
                    "kind": "variable",
                    "name": "d",
                  },
                ],
              },
            },
            "type": "&&",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "assert",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Number {
              "kind": "number",
              "value": "0",
            },
            "right": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "a",
              },
              "operator": "=",
              "parenthesizedExpression": true,
              "right": Closure {
                "arguments": Array [
                  Parameter {
                    "attrGroups": Array [],
                    "byref": true,
                    "flags": 0,
                    "kind": "parameter",
                    "name": Identifier {
                      "kind": "identifier",
                      "name": "a",
                    },
                    "nullable": false,
                    "readonly": false,
                    "type": TypeReference {
                      "kind": "typereference",
                      "name": "array",
                      "raw": "array",
                    },
                    "value": null,
                    "variadic": false,
                  },
                  Parameter {
                    "attrGroups": Array [],
                    "byref": false,
                    "flags": 0,
                    "kind": "parameter",
                    "name": Identifier {
                      "kind": "identifier",
                      "name": "b",
                    },
                    "nullable": false,
                    "readonly": false,
                    "type": Name {
                      "kind": "name",
                      "name": "X",
                      "resolution": "uqn",
                    },
                    "value": NullKeyword {
                      "kind": "nullkeyword",
                      "raw": "null",
                    },
                    "variadic": false,
                  },
                  Parameter {
                    "attrGroups": Array [],
                    "byref": false,
                    "flags": 0,
                    "kind": "parameter",
                    "name": Identifier {
                      "kind": "identifier",
                      "name": "c",
                    },
                    "nullable": false,
                    "readonly": false,
                    "type": UnionType {
                      "kind": "uniontype",
                      "name": null,
                      "types": Array [
                        TypeReference {
                          "kind": "typereference",
                          "name": "int",
                          "raw": "int",
                        },
                        TypeReference {
                          "kind": "typereference",
                          "name": "float",
                          "raw": "float",
                        },
                      ],
                    },
                    "value": null,
                    "variadic": false,
                  },
                ],
                "attrGroups": Array [],
                "body": Block {
                  "children": Array [
                    Class {
                      "attrGroups": Array [],
                      "body": Array [
                        Method {
                          "arguments": Array [],
                          "attrGroups": Array [],
                          "body": Block {
                            "children": Array [
                              If {
                                "alternate": null,
                                "body": Block {
                                  "children": Array [
                                    Return {
                                      "expr": Number {
                                        "kind": "number",
                                        "value": "0",
                                      },
                                      "kind": "return",
                                    },
                                  ],
                                  "kind": "block",
                                },
                                "kind": "if",
                                "shortForm": false,
                                "test": Unary {
                                  "kind": "unary",
                                  "type": "!",
                                  "what": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "x",
                                  },
                                },
                              },
                              If {
                                "alternate": If {
                                  "alternate": If {
                                    "alternate": Block {
                                      "children": Array [
                                        If {
                                          "alternate": null,
                                          "body": Block {
                                            "children": Array [
                                              Return {
                                                "expr": Number {
                                                  "kind": "number",
                                                  "value": "9",
                                                },
                                                "kind": "return",
                                              },
                                            ],
                                            "kind": "block",
                                          },
                                          "kind": "if",
                                          "shortForm": false,
                                          "test": Bin {
                                            "kind": "bin",
                                            "left": Variable {
                                              "curly": false,
                                              "kind": "variable",
                                              "name": "x",
                                            },
                                            "right": Number {
                                              "kind": "number",
                                              "value": "9",
                                            },
                                            "type": "==",
                                          },
                                        },
                                        Label {
                                          "kind": "label",
                                          "name": Identifier {
                                            "kind": "identifier",
                                            "name": "L0",
                                          },
                                        },
                                        Do {
                                          "body": Block {
                                            "children": Array [
                                              Switch {
                                                "body": Block {
                                                  "children": Array [
                                                    Case {
                                                      "body": Block {
                                                        "children": Array [
                                                          Break {
                                                            "kind": "break",
                                                            "level": null,
                                                          },
                                                        ],
                                                        "kind": "block",
                                                      },
                                                      "kind": "case",
                                                      "test": Number {
                                                        "kind": "number",
                                                        "value": "4",
                                                      },
                                                    },
                                                    Case {
                                                      "body": Block {
                                                        "children": Array [
                                                          Continue {
                                                            "kind": "continue",
                                                            "level": null,
                                                          },
                                                        ],
                                                        "kind": "block",
                                                      },
                                                      "kind": "case",
                                                      "test": Number {
                                                        "kind": "number",
                                                        "value": "5",
                                                      },
                                                    },
                                                    Case {
                                                      "body": Block {
                                                        "children": Array [
                                                          Break {
                                                            "kind": "break",
                                                            "level": Number {
                                                              "kind": "number",
                                                              "value": "2",
                                                            },
                                                          },
                                                        ],
                                                        "kind": "block",
                                                      },
                                                      "kind": "case",
                                                      "test": Number {
                                                        "kind": "number",
                                                        "value": "6",
                                                      },
                                                    },
                                                    Case {
                                                      "body": Block {
                                                        "children": Array [
                                                          Continue {
                                                            "kind": "continue",
                                                            "level": Number {
                                                              "kind": "number",
                                                              "value": "2",
                                                            },
                                                          },
                                                        ],
                                                        "kind": "block",
                                                      },
                                                      "kind": "case",
                                                      "test": Number {
                                                        "kind": "number",
                                                        "value": "7",
                                                      },
                                                    },
                                                    Case {
                                                      "body": Block {
                                                        "children": Array [
                                                          Goto {
                                                            "kind": "goto",
                                                            "label": Identifier {
                                                              "kind": "identifier",
                                                              "name": "L0",
                                                            },
                                                          },
                                                        ],
                                                        "kind": "block",
                                                      },
                                                      "kind": "case",
                                                      "test": Number {
                                                        "kind": "number",
                                                        "value": "8",
                                                      },
                                                    },
                                                    Case {
                                                      "body": Block {
                                                        "children": Array [
                                                          Return {
                                                            "expr": null,
                                                            "kind": "return",
                                                          },
                                                        ],
                                                        "kind": "block",
                                                      },
                                                      "kind": "case",
                                                      "test": null,
                                                    },
                                                  ],
                                                  "kind": "block",
                                                },
                                                "kind": "switch",
                                                "shortForm": false,
                                                "test": Variable {
                                                  "curly": false,
                                                  "kind": "variable",
                                                  "name": "x",
                                                },
                                              },
                                            ],
                                            "kind": "block",
                                          },
                                          "kind": "do",
                                          "test": Number {
                                            "kind": "number",
                                            "value": "0",
                                          },
                                        },
                                      ],
                                      "kind": "block",
                                    },
                                    "body": Block {
                                      "children": Array [
                                        Return {
                                          "expr": Number {
                                            "kind": "number",
                                            "value": "3",
                                          },
                                          "kind": "return",
                                        },
                                      ],
                                      "kind": "block",
                                    },
                                    "kind": "if",
                                    "shortForm": false,
                                    "test": Bin {
                                      "kind": "bin",
                                      "left": Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "x",
                                      },
                                      "right": Number {
                                        "kind": "number",
                                        "value": "3",
                                      },
                                      "type": "==",
                                    },
                                  },
                                  "body": Block {
                                    "children": Array [
                                      Return {
                                        "expr": Number {
                                          "kind": "number",
                                          "value": "2",
                                        },
                                        "kind": "return",
                                      },
                                    ],
                                    "kind": "block",
                                  },
                                  "kind": "if",
                                  "shortForm": false,
                                  "test": Bin {
                                    "kind": "bin",
                                    "left": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "x",
                                    },
                                    "right": Number {
                                      "kind": "number",
                                      "value": "2",
                                    },
                                    "type": "==",
                                  },
                                },
                                "body": Block {
                                  "children": Array [
                                    Return {
                                      "expr": Number {
                                        "kind": "number",
                                        "value": "1",
                                      },
                                      "kind": "return",
                                    },
                                  ],
                                  "kind": "block",
                                },
                                "kind": "if",
                                "shortForm": false,
                                "test": Bin {
                                  "kind": "bin",
                                  "left": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "x",
                                  },
                                  "right": Number {
                                    "kind": "number",
                                    "value": "1",
                                  },
                                  "type": "==",
                                },
                              },
                            ],
                            "kind": "block",
                          },
                          "byref": false,
                          "isAbstract": false,
                          "isFinal": true,
                          "isStatic": false,
                          "kind": "method",
                          "name": Identifier {
                            "kind": "identifier",
                            "name": "f2",
                          },
                          "nullable": false,
                          "type": null,
                          "visibility": "protected",
                        },
                      ],
                      "extends": null,
                      "implements": null,
                      "isAbstract": false,
                      "isAnonymous": false,
                      "isFinal": true,
                      "kind": "class",
                      "name": Identifier {
                        "kind": "identifier",
                        "name": "A",
                      },
                    },
                  ],
                  "kind": "block",
                },
                "byref": true,
                "isStatic": false,
                "kind": "closure",
                "nullable": false,
                "type": Name {
                  "kind": "name",
                  "name": "X",
                  "resolution": "uqn",
                },
                "uses": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "c",
                  },
                  Variable {
                    "byref": true,
                    "curly": false,
                    "kind": "variable",
                    "name": "d",
                  },
                ],
              },
            },
            "type": "&&",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "assert",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Number {
              "kind": "number",
              "value": "0",
            },
            "right": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "a",
              },
              "operator": "=",
              "parenthesizedExpression": true,
              "right": Closure {
                "arguments": Array [
                  Parameter {
                    "attrGroups": Array [],
                    "byref": true,
                    "flags": 0,
                    "kind": "parameter",
                    "name": Identifier {
                      "kind": "identifier",
                      "name": "a",
                    },
                    "nullable": true,
                    "readonly": false,
                    "type": TypeReference {
                      "kind": "typereference",
                      "name": "array",
                      "raw": "array",
                    },
                    "value": null,
                    "variadic": false,
                  },
                  Parameter {
                    "attrGroups": Array [],
                    "byref": false,
                    "flags": 0,
                    "kind": "parameter",
                    "name": Identifier {
                      "kind": "identifier",
                      "name": "b",
                    },
                    "nullable": false,
                    "readonly": false,
                    "type": Name {
                      "kind": "name",
                      "name": "X",
                      "resolution": "uqn",
                    },
                    "value": NullKeyword {
                      "kind": "nullkeyword",
                      "raw": "null",
                    },
                    "variadic": false,
                  },
                ],
                "attrGroups": Array [],
                "body": Block {
                  "children": Array [
                    Class {
                      "attrGroups": Array [],
                      "body": Array [
                        TraitUse {
                          "adaptations": Array [
                            TraitPrecedence {
                              "instead": Array [
                                Name {
                                  "kind": "name",
                                  "name": "foo",
                                  "resolution": "uqn",
                                },
                              ],
                              "kind": "traitprecedence",
                              "method": Identifier {
                                "kind": "identifier",
                                "name": "foo",
                              },
                              "trait": Name {
                                "kind": "name",
                                "name": "T1",
                                "resolution": "uqn",
                              },
                            },
                            TraitAlias {
                              "as": Identifier {
                                "kind": "identifier",
                                "name": "bar",
                              },
                              "kind": "traitalias",
                              "method": Identifier {
                                "kind": "identifier",
                                "name": "foo",
                              },
                              "trait": Name {
                                "kind": "name",
                                "name": "T2",
                                "resolution": "uqn",
                              },
                              "visibility": "",
                            },
                            TraitAlias {
                              "as": null,
                              "kind": "traitalias",
                              "method": "baz",
                              "trait": null,
                              "visibility": "public",
                            },
                            TraitAlias {
                              "as": Identifier {
                                "kind": "identifier",
                                "name": "x",
                              },
                              "kind": "traitalias",
                              "method": "ops",
                              "trait": null,
                              "visibility": "protected",
                            },
                          ],
                          "kind": "traituse",
                          "traits": Array [
                            Name {
                              "kind": "name",
                              "name": "T1",
                              "resolution": "uqn",
                            },
                            Name {
                              "kind": "name",
                              "name": "T2",
                              "resolution": "uqn",
                            },
                          ],
                        },
                        TraitUse {
                          "adaptations": null,
                          "kind": "traituse",
                          "traits": Array [
                            Name {
                              "kind": "name",
                              "name": "T3",
                              "resolution": "uqn",
                            },
                          ],
                        },
                      ],
                      "extends": null,
                      "implements": null,
                      "isAbstract": false,
                      "isAnonymous": false,
                      "isFinal": false,
                      "kind": "class",
                      "name": Identifier {
                        "kind": "identifier",
                        "name": "A",
                      },
                    },
                  ],
                  "kind": "block",
                },
                "byref": true,
                "isStatic": false,
                "kind": "closure",
                "nullable": false,
                "type": Name {
                  "kind": "name",
                  "name": "X",
                  "resolution": "uqn",
                },
                "uses": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "c",
                  },
                  Variable {
                    "byref": true,
                    "curly": false,
                    "kind": "variable",
                    "name": "d",
                  },
                ],
              },
            },
            "type": "&&",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "assert",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Number {
              "kind": "number",
              "value": "0",
            },
            "right": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "a",
              },
              "operator": "=",
              "parenthesizedExpression": true,
              "right": Closure {
                "arguments": Array [
                  Parameter {
                    "attrGroups": Array [],
                    "byref": true,
                    "flags": 0,
                    "kind": "parameter",
                    "name": Identifier {
                      "kind": "identifier",
                      "name": "a",
                    },
                    "nullable": false,
                    "readonly": false,
                    "type": TypeReference {
                      "kind": "typereference",
                      "name": "array",
                      "raw": "array",
                    },
                    "value": null,
                    "variadic": true,
                  },
                ],
                "attrGroups": Array [],
                "body": Block {
                  "children": Array [
                    Declare {
                      "children": Array [],
                      "directives": Array [
                        DeclareDirective {
                          "key": Identifier {
                            "kind": "identifier",
                            "name": "A",
                          },
                          "kind": "declaredirective",
                          "value": Number {
                            "kind": "number",
                            "value": "1",
                          },
                        },
                        DeclareDirective {
                          "key": Identifier {
                            "kind": "identifier",
                            "name": "B",
                          },
                          "kind": "declaredirective",
                          "value": Number {
                            "kind": "number",
                            "value": "2",
                          },
                        },
                      ],
                      "kind": "declare",
                      "mode": "none",
                    },
                    Try {
                      "always": Block {
                        "children": Array [
                          Echo {
                            "expressions": Array [
                              Number {
                                "kind": "number",
                                "value": "3",
                              },
                            ],
                            "kind": "echo",
                            "shortForm": false,
                          },
                        ],
                        "kind": "block",
                      },
                      "body": Block {
                        "children": Array [
                          ExpressionStatement {
                            "expression": Post {
                              "kind": "post",
                              "type": "+",
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "i",
                              },
                            },
                            "kind": "expressionstatement",
                          },
                        ],
                        "kind": "block",
                      },
                      "catches": Array [
                        Catch {
                          "body": Block {
                            "children": Array [
                              Echo {
                                "expressions": Array [
                                  Number {
                                    "kind": "number",
                                    "value": "1",
                                  },
                                ],
                                "kind": "echo",
                                "shortForm": false,
                              },
                            ],
                            "kind": "block",
                          },
                          "kind": "catch",
                          "variable": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "e",
                          },
                          "what": Array [
                            Name {
                              "kind": "name",
                              "name": "MyException",
                              "resolution": "uqn",
                            },
                          ],
                        },
                        Catch {
                          "body": Block {
                            "children": Array [
                              Echo {
                                "expressions": Array [
                                  Number {
                                    "kind": "number",
                                    "value": "2",
                                  },
                                ],
                                "kind": "echo",
                                "shortForm": false,
                              },
                            ],
                            "kind": "block",
                          },
                          "kind": "catch",
                          "variable": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "e",
                          },
                          "what": Array [
                            Name {
                              "kind": "name",
                              "name": "Exception",
                              "resolution": "uqn",
                            },
                          ],
                        },
                      ],
                      "kind": "try",
                    },
                  ],
                  "kind": "block",
                },
                "byref": true,
                "isStatic": false,
                "kind": "closure",
                "nullable": false,
                "type": null,
                "uses": Array [],
              },
            },
            "type": "&&",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "assert",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Number {
              "kind": "number",
              "value": "0",
            },
            "right": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "a",
              },
              "operator": "=",
              "parenthesizedExpression": true,
              "right": Closure {
                "arguments": Array [],
                "attrGroups": Array [],
                "body": Block {
                  "children": Array [
                    Declare {
                      "children": Array [
                        Echo {
                          "expressions": Array [
                            Number {
                              "kind": "number",
                              "value": "1",
                            },
                          ],
                          "kind": "echo",
                          "shortForm": false,
                        },
                      ],
                      "directives": Array [
                        DeclareDirective {
                          "key": Identifier {
                            "kind": "identifier",
                            "name": "C",
                          },
                          "kind": "declaredirective",
                          "value": Number {
                            "kind": "number",
                            "value": "1",
                          },
                        },
                      ],
                      "kind": "declare",
                      "mode": "block",
                    },
                    ExpressionStatement {
                      "expression": Assign {
                        "kind": "assign",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "x",
                        },
                        "operator": "=",
                        "right": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'\\\\'\\"\`$a'",
                          "unicode": false,
                          "value": "'\\"\`$a",
                        },
                      },
                      "kind": "expressionstatement",
                    },
                    ExpressionStatement {
                      "expression": Assign {
                        "kind": "assign",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "x",
                        },
                        "operator": "=",
                        "right": Encapsed {
                          "kind": "encapsed",
                          "raw": "\\"'\\\\\\"\`$a\\"",
                          "type": "string",
                          "value": Array [
                            EncapsedPart {
                              "curly": false,
                              "expression": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'\\\\\\"\`",
                                "unicode": false,
                                "value": "'\\"\`",
                              },
                              "kind": "encapsedpart",
                              "syntax": null,
                            },
                            EncapsedPart {
                              "curly": false,
                              "expression": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "a",
                              },
                              "kind": "encapsedpart",
                              "syntax": "simple",
                            },
                          ],
                        },
                      },
                      "kind": "expressionstatement",
                    },
                    ExpressionStatement {
                      "expression": Assign {
                        "kind": "assign",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "x",
                        },
                        "operator": "=",
                        "right": Encapsed {
                          "kind": "encapsed",
                          "raw": "\`'\\"\\\\\`$a\`",
                          "type": "shell",
                          "value": Array [
                            EncapsedPart {
                              "curly": false,
                              "expression": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'\\"\\\\\`",
                                "unicode": false,
                                "value": "'\\"\\\\\`",
                              },
                              "kind": "encapsedpart",
                              "syntax": null,
                            },
                            EncapsedPart {
                              "curly": false,
                              "expression": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "a",
                              },
                              "kind": "encapsedpart",
                              "syntax": "simple",
                            },
                          ],
                        },
                      },
                      "kind": "expressionstatement",
                    },
                    ExpressionStatement {
                      "expression": Assign {
                        "kind": "assign",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "x",
                        },
                        "operator": "=",
                        "right": Encapsed {
                          "kind": "encapsed",
                          "raw": "\\"{$a}b\\"",
                          "type": "string",
                          "value": Array [
                            EncapsedPart {
                              "curly": false,
                              "expression": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "a",
                              },
                              "kind": "encapsedpart",
                              "syntax": "complex",
                            },
                            EncapsedPart {
                              "curly": false,
                              "expression": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "b",
                                "unicode": false,
                                "value": "b",
                              },
                              "kind": "encapsedpart",
                              "syntax": null,
                            },
                          ],
                        },
                      },
                      "kind": "expressionstatement",
                    },
                    ExpressionStatement {
                      "expression": Assign {
                        "kind": "assign",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "x",
                        },
                        "operator": "=",
                        "right": Encapsed {
                          "kind": "encapsed",
                          "raw": "\\"\${a}b\\"",
                          "type": "string",
                          "value": Array [
                            EncapsedPart {
                              "curly": true,
                              "expression": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "a",
                              },
                              "kind": "encapsedpart",
                              "syntax": "simple",
                            },
                            EncapsedPart {
                              "curly": false,
                              "expression": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "b",
                                "unicode": false,
                                "value": "b",
                              },
                              "kind": "encapsedpart",
                              "syntax": null,
                            },
                          ],
                        },
                      },
                      "kind": "expressionstatement",
                    },
                    ExpressionStatement {
                      "expression": Assign {
                        "kind": "assign",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "x",
                        },
                        "operator": "=",
                        "right": Encapsed {
                          "kind": "encapsed",
                          "raw": "\\" {$foo->bar} \${$foo->bar} \\"",
                          "type": "string",
                          "value": Array [
                            EncapsedPart {
                              "curly": false,
                              "expression": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": " ",
                                "unicode": false,
                                "value": " ",
                              },
                              "kind": "encapsedpart",
                              "syntax": null,
                            },
                            EncapsedPart {
                              "curly": false,
                              "expression": PropertyLookup {
                                "kind": "propertylookup",
                                "offset": Identifier {
                                  "kind": "identifier",
                                  "name": "bar",
                                },
                                "what": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "foo",
                                },
                              },
                              "kind": "encapsedpart",
                              "syntax": "complex",
                            },
                            EncapsedPart {
                              "curly": false,
                              "expression": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": " ",
                                "unicode": false,
                                "value": " ",
                              },
                              "kind": "encapsedpart",
                              "syntax": null,
                            },
                            EncapsedPart {
                              "curly": true,
                              "expression": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": PropertyLookup {
                                  "kind": "propertylookup",
                                  "offset": Identifier {
                                    "kind": "identifier",
                                    "name": "bar",
                                  },
                                  "what": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "foo",
                                  },
                                },
                              },
                              "kind": "encapsedpart",
                              "syntax": "simple",
                            },
                            EncapsedPart {
                              "curly": false,
                              "expression": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": " ",
                                "unicode": false,
                                "value": " ",
                              },
                              "kind": "encapsedpart",
                              "syntax": null,
                            },
                          ],
                        },
                      },
                      "kind": "expressionstatement",
                    },
                    ExpressionStatement {
                      "expression": Assign {
                        "kind": "assign",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "x",
                        },
                        "operator": "=",
                        "right": Encapsed {
                          "kind": "encapsed",
                          "raw": "\\" \${'---'} \\"",
                          "type": "string",
                          "value": Array [
                            EncapsedPart {
                              "curly": false,
                              "expression": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": " ",
                                "unicode": false,
                                "value": " ",
                              },
                              "kind": "encapsedpart",
                              "syntax": null,
                            },
                            EncapsedPart {
                              "curly": true,
                              "expression": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": String {
                                  "isDoubleQuote": false,
                                  "kind": "string",
                                  "raw": "'---'",
                                  "unicode": false,
                                  "value": "---",
                                },
                              },
                              "kind": "encapsedpart",
                              "syntax": "simple",
                            },
                            EncapsedPart {
                              "curly": false,
                              "expression": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": " ",
                                "unicode": false,
                                "value": " ",
                              },
                              "kind": "encapsedpart",
                              "syntax": null,
                            },
                          ],
                        },
                      },
                      "kind": "expressionstatement",
                    },
                    ExpressionStatement {
                      "expression": Call {
                        "arguments": Array [],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "foo",
                          "resolution": "uqn",
                        },
                      },
                      "kind": "expressionstatement",
                    },
                    ExpressionStatement {
                      "expression": Call {
                        "arguments": Array [],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "\\\\foo",
                          "resolution": "fqn",
                        },
                      },
                      "kind": "expressionstatement",
                    },
                    ExpressionStatement {
                      "expression": Call {
                        "arguments": Array [],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "foo",
                          "resolution": "rn",
                        },
                      },
                      "kind": "expressionstatement",
                    },
                    ExpressionStatement {
                      "expression": Assign {
                        "kind": "assign",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "x",
                        },
                        "operator": "=",
                        "right": Name {
                          "kind": "name",
                          "name": "foo",
                          "resolution": "uqn",
                        },
                      },
                      "kind": "expressionstatement",
                    },
                    ExpressionStatement {
                      "expression": Assign {
                        "kind": "assign",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "x",
                        },
                        "operator": "=",
                        "right": Name {
                          "kind": "name",
                          "name": "\\\\foo",
                          "resolution": "fqn",
                        },
                      },
                      "kind": "expressionstatement",
                    },
                    ExpressionStatement {
                      "expression": Assign {
                        "kind": "assign",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "x",
                        },
                        "operator": "=",
                        "right": Name {
                          "kind": "name",
                          "name": "foo",
                          "resolution": "rn",
                        },
                      },
                      "kind": "expressionstatement",
                    },
                    ExpressionStatement {
                      "expression": Assign {
                        "kind": "assign",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "x",
                        },
                        "operator": "=",
                        "right": New {
                          "arguments": Array [],
                          "kind": "new",
                          "what": Name {
                            "kind": "name",
                            "name": "foo",
                            "resolution": "uqn",
                          },
                        },
                      },
                      "kind": "expressionstatement",
                    },
                    ExpressionStatement {
                      "expression": Assign {
                        "kind": "assign",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "x",
                        },
                        "operator": "=",
                        "right": New {
                          "arguments": Array [],
                          "kind": "new",
                          "what": Name {
                            "kind": "name",
                            "name": "\\\\foo",
                            "resolution": "fqn",
                          },
                        },
                      },
                      "kind": "expressionstatement",
                    },
                    ExpressionStatement {
                      "expression": Assign {
                        "kind": "assign",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "x",
                        },
                        "operator": "=",
                        "right": New {
                          "arguments": Array [],
                          "kind": "new",
                          "what": Name {
                            "kind": "name",
                            "name": "foo",
                            "resolution": "rn",
                          },
                        },
                      },
                      "kind": "expressionstatement",
                    },
                    If {
                      "alternate": If {
                        "alternate": null,
                        "body": Block {
                          "children": Array [],
                          "kind": "block",
                        },
                        "kind": "if",
                        "shortForm": false,
                        "test": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "b",
                        },
                      },
                      "body": Block {
                        "children": Array [],
                        "kind": "block",
                      },
                      "kind": "if",
                      "shortForm": false,
                      "test": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "a",
                      },
                    },
                    If {
                      "alternate": null,
                      "body": null,
                      "kind": "if",
                      "shortForm": false,
                      "test": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "a",
                      },
                    },
                  ],
                  "kind": "block",
                },
                "byref": false,
                "isStatic": false,
                "kind": "closure",
                "nullable": true,
                "type": TypeReference {
                  "kind": "typereference",
                  "name": "static",
                  "raw": "static",
                },
                "uses": Array [],
              },
            },
            "type": "&&",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "assert",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
