// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests odbc_exec(): Getting accurate date data from query 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": false,
        "target": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'config.inc'",
          "unicode": false,
          "value": "config.inc",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "id_1_date",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'2014-09-23'",
          "unicode": false,
          "value": "2014-09-23",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "id_2_date",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'2014-09-24'",
          "unicode": false,
          "value": "2014-09-24",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "conn",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "dsn",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "user",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "pass",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "odbc_connect",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Silent {
        "expr": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "conn",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'CREATE DATABASE odbcTEST'",
              "unicode": false,
              "value": "CREATE DATABASE odbcTEST",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "odbc_exec",
            "resolution": "uqn",
          },
        },
        "kind": "silent",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "conn",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'CREATE TABLE FOO (ID INT, VARCHAR_COL VARCHAR(100), DATE_COL DATE)'",
            "unicode": false,
            "value": "CREATE TABLE FOO (ID INT, VARCHAR_COL VARCHAR(100), DATE_COL DATE)",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "odbc_exec",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "conn",
          },
          Encapsed {
            "kind": "encapsed",
            "raw": "\\"INSERT INTO FOO(ID, VARCHAR_COL, DATE_COL) VALUES (1, 'hello', '$id_1_date')\\"",
            "type": "string",
            "value": Array [
              EncapsedPart {
                "curly": false,
                "expression": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "INSERT INTO FOO(ID, VARCHAR_COL, DATE_COL) VALUES (1, 'hello', '",
                  "unicode": false,
                  "value": "INSERT INTO FOO(ID, VARCHAR_COL, DATE_COL) VALUES (1, 'hello', '",
                },
                "kind": "encapsedpart",
                "syntax": null,
              },
              EncapsedPart {
                "curly": false,
                "expression": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "id_1_date",
                },
                "kind": "encapsedpart",
                "syntax": "simple",
              },
              EncapsedPart {
                "curly": false,
                "expression": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "')",
                  "unicode": false,
                  "value": "')",
                },
                "kind": "encapsedpart",
                "syntax": null,
              },
            ],
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "odbc_exec",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "conn",
          },
          Encapsed {
            "kind": "encapsed",
            "raw": "\\"INSERT INTO FOO(ID, VARCHAR_COL, DATE_COL) VALUES (2, 'helloagain', '$id_2_date')\\"",
            "type": "string",
            "value": Array [
              EncapsedPart {
                "curly": false,
                "expression": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "INSERT INTO FOO(ID, VARCHAR_COL, DATE_COL) VALUES (2, 'helloagain', '",
                  "unicode": false,
                  "value": "INSERT INTO FOO(ID, VARCHAR_COL, DATE_COL) VALUES (2, 'helloagain', '",
                },
                "kind": "encapsedpart",
                "syntax": null,
              },
              EncapsedPart {
                "curly": false,
                "expression": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "id_2_date",
                },
                "kind": "encapsedpart",
                "syntax": "simple",
              },
              EncapsedPart {
                "curly": false,
                "expression": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "')",
                  "unicode": false,
                  "value": "')",
                },
                "kind": "encapsedpart",
                "syntax": null,
              },
            ],
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "odbc_exec",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "conn",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'SELECT * FROM FOO ORDER BY ID ASC'",
              "unicode": false,
              "value": "SELECT * FROM FOO ORDER BY ID ASC",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "odbc_exec",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    While {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "id",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "res",
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"ID\\"",
                    "unicode": false,
                    "value": "ID",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "odbc_result",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "varchar_col",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "res",
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"VARCHAR_COL\\"",
                    "unicode": false,
                    "value": "VARCHAR_COL",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "odbc_result",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "date",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "res",
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"DATE_COL\\"",
                    "unicode": false,
                    "value": "DATE_COL",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "odbc_result",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": Block {
              "children": Array [
                If {
                  "alternate": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Print {
                          "expression": String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"Date_2 matched\\\\n\\"",
                            "unicode": false,
                            "value": "Date_2 matched
",
                          },
                          "kind": "print",
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Print {
                          "expression": String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"Date_2 mismatched\\\\n\\"",
                            "unicode": false,
                            "value": "Date_2 mismatched
",
                          },
                          "kind": "print",
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "date",
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "id_2_date",
                    },
                    "type": "!=",
                  },
                },
              ],
              "kind": "block",
            },
            "body": Block {
              "children": Array [
                If {
                  "alternate": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Print {
                          "expression": String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"Date_1 matched\\\\n\\"",
                            "unicode": false,
                            "value": "Date_1 matched
",
                          },
                          "kind": "print",
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Print {
                          "expression": String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"Date_1 mismatched\\\\n\\"",
                            "unicode": false,
                            "value": "Date_1 mismatched
",
                          },
                          "kind": "print",
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "date",
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "id_1_date",
                    },
                    "type": "!=",
                  },
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "id",
              },
              "right": Number {
                "kind": "number",
                "value": "1",
              },
              "type": "==",
            },
          },
        ],
        "kind": "block",
      },
      "kind": "while",
      "shortForm": false,
      "test": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "res",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "odbc_fetch_row",
          "resolution": "uqn",
        },
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
