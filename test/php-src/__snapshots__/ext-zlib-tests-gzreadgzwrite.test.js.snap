// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests gzopen(), gzread(), gzwrite() 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "original",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"hallo php\\"",
              "unicode": false,
              "value": "hallo php",
            },
            Number {
              "kind": "number",
              "value": "4096",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "str_repeat",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "filename",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "sys_get_temp_dir",
                "resolution": "uqn",
              },
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"phpt\\"",
              "unicode": false,
              "value": "phpt",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "tempnam",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "fp",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "filename",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"wb\\"",
              "unicode": false,
              "value": "wb",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "gzopen",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "fp",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "original",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "gzwrite",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "original",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "strlen",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "fp",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "gztell",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "fp",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "fclose",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "fp",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "filename",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"rb\\"",
              "unicode": false,
              "value": "rb",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "gzopen",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "data",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "''",
          "unicode": false,
          "value": "",
        },
      },
      "kind": "expressionstatement",
    },
    While {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "data",
              },
              "operator": ".=",
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "buf",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "while",
      "shortForm": false,
      "test": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "buf",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "fp",
            },
            Number {
              "kind": "number",
              "value": "8092",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "gzread",
            "resolution": "uqn",
          },
        },
      },
    },
    If {
      "alternate": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Strings are not equal\\\\n\\"",
                "unicode": false,
                "value": "Strings are not equal
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "data",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Strings are equal\\\\n\\"",
                "unicode": false,
                "value": "Strings are equal
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "data",
        },
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "original",
        },
        "type": "==",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "fp",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "gzclose",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "filename",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "unlink",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
