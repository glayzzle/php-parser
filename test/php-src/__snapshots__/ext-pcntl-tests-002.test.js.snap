// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests pcntl: pcntl_sigprocmask(), pcntl_sigwaitinfo(), pcntl_sigtimedwait() 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "pid",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "pcntl_fork",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": If {
        "alternate": Block {
          "children": Array [
            ExpressionStatement {
              "expression": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "siginfo",
                },
                "operator": "=",
                "right": NullKeyword {
                  "kind": "nullkeyword",
                  "raw": "NULL",
                },
              },
              "kind": "expressionstatement",
            },
            ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  Array {
                    "items": Array [
                      Entry {
                        "byRef": false,
                        "key": null,
                        "kind": "entry",
                        "unpack": false,
                        "value": Name {
                          "kind": "name",
                          "name": "SIGINT",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "array",
                    "shortForm": false,
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "siginfo",
                  },
                  Number {
                    "kind": "number",
                    "value": "3600",
                  },
                  Number {
                    "kind": "number",
                    "value": "0",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "pcntl_sigtimedwait",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            ExpressionStatement {
              "expression": Exit {
                "expression": null,
                "kind": "exit",
                "useDie": false,
              },
              "kind": "expressionstatement",
            },
          ],
          "kind": "block",
        },
        "body": Block {
          "children": Array [
            ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  Name {
                    "kind": "name",
                    "name": "SIG_BLOCK",
                    "resolution": "uqn",
                  },
                  Array {
                    "items": Array [
                      Entry {
                        "byRef": false,
                        "key": null,
                        "kind": "entry",
                        "unpack": false,
                        "value": Name {
                          "kind": "name",
                          "name": "SIGCHLD",
                          "resolution": "uqn",
                        },
                      },
                      Entry {
                        "byRef": false,
                        "key": null,
                        "kind": "entry",
                        "unpack": false,
                        "value": Cast {
                          "expr": Name {
                            "kind": "name",
                            "name": "SIGTERM",
                            "resolution": "uqn",
                          },
                          "kind": "cast",
                          "raw": "(string)",
                          "type": "string",
                        },
                      },
                    ],
                    "kind": "array",
                    "shortForm": false,
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "pcntl_sigprocmask",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            ExpressionStatement {
              "expression": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "oldset",
                },
                "operator": "=",
                "right": Array {
                  "items": Array [],
                  "kind": "array",
                  "shortForm": false,
                },
              },
              "kind": "expressionstatement",
            },
            ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  Name {
                    "kind": "name",
                    "name": "SIG_BLOCK",
                    "resolution": "uqn",
                  },
                  Array {
                    "items": Array [],
                    "kind": "array",
                    "shortForm": false,
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "oldset",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "pcntl_sigprocmask",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  Call {
                    "arguments": Array [
                      Name {
                        "kind": "name",
                        "name": "SIGCHLD",
                        "resolution": "uqn",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "oldset",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "in_array",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "var_dump",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  Call {
                    "arguments": Array [
                      Name {
                        "kind": "name",
                        "name": "SIGTERM",
                        "resolution": "uqn",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "oldset",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "in_array",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "var_dump",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  Call {
                    "arguments": Array [],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "posix_getpid",
                      "resolution": "uqn",
                    },
                  },
                  Name {
                    "kind": "name",
                    "name": "SIGTERM",
                    "resolution": "uqn",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "posix_kill",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            ExpressionStatement {
              "expression": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "signo",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [
                    Array {
                      "items": Array [
                        Entry {
                          "byRef": false,
                          "key": null,
                          "kind": "entry",
                          "unpack": false,
                          "value": Name {
                            "kind": "name",
                            "name": "SIGTERM",
                            "resolution": "uqn",
                          },
                        },
                      ],
                      "kind": "array",
                      "shortForm": false,
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "siginfo",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "pcntl_sigwaitinfo",
                    "resolution": "uqn",
                  },
                },
              },
              "kind": "expressionstatement",
            },
            Echo {
              "expressions": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"signo == SIGTERM\\\\n\\"",
                  "unicode": false,
                  "value": "signo == SIGTERM
",
                },
              ],
              "kind": "echo",
              "shortForm": false,
            },
            ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "signo",
                      },
                      "right": Name {
                        "kind": "name",
                        "name": "SIGTERM",
                        "resolution": "uqn",
                      },
                      "type": "===",
                    },
                    "right": Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "signo",
                      },
                      "right": OffsetLookup {
                        "kind": "offsetlookup",
                        "offset": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'signo'",
                          "unicode": false,
                          "value": "signo",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "siginfo",
                        },
                      },
                      "type": "===",
                    },
                    "type": "&&",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "var_dump",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            Echo {
              "expressions": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"code === SI_USER || SI_NOINFO\\\\n\\"",
                  "unicode": false,
                  "value": "code === SI_USER || SI_NOINFO
",
                },
              ],
              "kind": "echo",
              "shortForm": false,
            },
            If {
              "alternate": Block {
                "children": Array [
                  ExpressionStatement {
                    "expression": Call {
                      "arguments": Array [
                        Bin {
                          "kind": "bin",
                          "left": OffsetLookup {
                            "kind": "offsetlookup",
                            "offset": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "'code'",
                              "unicode": false,
                              "value": "code",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "siginfo",
                            },
                          },
                          "right": Name {
                            "kind": "name",
                            "name": "SI_USER",
                            "resolution": "uqn",
                          },
                          "type": "===",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "var_dump",
                        "resolution": "uqn",
                      },
                    },
                    "kind": "expressionstatement",
                  },
                ],
                "kind": "block",
              },
              "body": Block {
                "children": Array [
                  ExpressionStatement {
                    "expression": Call {
                      "arguments": Array [
                        Bin {
                          "kind": "bin",
                          "left": Bin {
                            "kind": "bin",
                            "left": OffsetLookup {
                              "kind": "offsetlookup",
                              "offset": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'code'",
                                "unicode": false,
                                "value": "code",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "siginfo",
                              },
                            },
                            "parenthesizedExpression": true,
                            "right": Name {
                              "kind": "name",
                              "name": "SI_USER",
                              "resolution": "uqn",
                            },
                            "type": "===",
                          },
                          "right": Bin {
                            "kind": "bin",
                            "left": OffsetLookup {
                              "kind": "offsetlookup",
                              "offset": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'code'",
                                "unicode": false,
                                "value": "code",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "siginfo",
                              },
                            },
                            "parenthesizedExpression": true,
                            "right": Name {
                              "kind": "name",
                              "name": "SI_NOINFO",
                              "resolution": "uqn",
                            },
                            "type": "===",
                          },
                          "type": "||",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "var_dump",
                        "resolution": "uqn",
                      },
                    },
                    "kind": "expressionstatement",
                  },
                ],
                "kind": "block",
              },
              "kind": "if",
              "shortForm": false,
              "test": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'SI_NOINFO'",
                    "unicode": false,
                    "value": "SI_NOINFO",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "defined",
                  "resolution": "uqn",
                },
              },
            },
            ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  Name {
                    "kind": "name",
                    "name": "SIGCHLD",
                    "resolution": "uqn",
                  },
                  Closure {
                    "arguments": Array [
                      Parameter {
                        "attrGroups": Array [],
                        "byref": false,
                        "flags": 0,
                        "kind": "parameter",
                        "name": Identifier {
                          "kind": "identifier",
                          "name": "signo",
                        },
                        "nullable": false,
                        "readonly": false,
                        "type": null,
                        "value": null,
                        "variadic": false,
                      },
                    ],
                    "attrGroups": Array [],
                    "body": Block {
                      "children": Array [],
                      "kind": "block",
                    },
                    "byref": false,
                    "isStatic": false,
                    "kind": "closure",
                    "nullable": false,
                    "type": null,
                    "uses": Array [],
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "pcntl_signal",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "pid",
                  },
                  Name {
                    "kind": "name",
                    "name": "SIGTERM",
                    "resolution": "uqn",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "posix_kill",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            ExpressionStatement {
              "expression": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "signo",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [
                    Array {
                      "items": Array [
                        Entry {
                          "byRef": false,
                          "key": null,
                          "kind": "entry",
                          "unpack": false,
                          "value": Cast {
                            "expr": Name {
                              "kind": "name",
                              "name": "SIGCHLD",
                              "resolution": "uqn",
                            },
                            "kind": "cast",
                            "raw": "(string)",
                            "type": "string",
                          },
                        },
                      ],
                      "kind": "array",
                      "shortForm": false,
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "siginfo",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "pcntl_sigwaitinfo",
                    "resolution": "uqn",
                  },
                },
              },
              "kind": "expressionstatement",
            },
            Echo {
              "expressions": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"signo == SIGCHLD\\\\n\\"",
                  "unicode": false,
                  "value": "signo == SIGCHLD
",
                },
              ],
              "kind": "echo",
              "shortForm": false,
            },
            ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "signo",
                      },
                      "right": Name {
                        "kind": "name",
                        "name": "SIGCHLD",
                        "resolution": "uqn",
                      },
                      "type": "===",
                    },
                    "right": Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "signo",
                      },
                      "right": OffsetLookup {
                        "kind": "offsetlookup",
                        "offset": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'signo'",
                          "unicode": false,
                          "value": "signo",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "siginfo",
                        },
                      },
                      "type": "===",
                    },
                    "type": "&&",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "var_dump",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            Echo {
              "expressions": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"code === CLD_KILLED\\\\n\\"",
                  "unicode": false,
                  "value": "code === CLD_KILLED
",
                },
              ],
              "kind": "echo",
              "shortForm": false,
            },
            ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  Bin {
                    "kind": "bin",
                    "left": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'code'",
                        "unicode": false,
                        "value": "code",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "siginfo",
                      },
                    },
                    "right": Name {
                      "kind": "name",
                      "name": "CLD_KILLED",
                      "resolution": "uqn",
                    },
                    "type": "===",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "var_dump",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            Echo {
              "expressions": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"signo === SIGCHLD\\\\n\\"",
                  "unicode": false,
                  "value": "signo === SIGCHLD
",
                },
              ],
              "kind": "echo",
              "shortForm": false,
            },
            ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  Bin {
                    "kind": "bin",
                    "left": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'signo'",
                        "unicode": false,
                        "value": "signo",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "siginfo",
                      },
                    },
                    "right": Name {
                      "kind": "name",
                      "name": "SIGCHLD",
                      "resolution": "uqn",
                    },
                    "type": "===",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "var_dump",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            Echo {
              "expressions": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"signo === uid\\\\n\\"",
                  "unicode": false,
                  "value": "signo === uid
",
                },
              ],
              "kind": "echo",
              "shortForm": false,
            },
            ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  Bin {
                    "kind": "bin",
                    "left": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'uid'",
                        "unicode": false,
                        "value": "uid",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "siginfo",
                      },
                    },
                    "right": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "posix_getuid",
                        "resolution": "uqn",
                      },
                    },
                    "type": "===",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "var_dump",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            Echo {
              "expressions": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"signo === pid\\\\n\\"",
                  "unicode": false,
                  "value": "signo === pid
",
                },
              ],
              "kind": "echo",
              "shortForm": false,
            },
            ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  Bin {
                    "kind": "bin",
                    "left": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'pid'",
                        "unicode": false,
                        "value": "pid",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "siginfo",
                      },
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "pid",
                    },
                    "type": "===",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "var_dump",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "pid",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "status",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "pcntl_waitpid",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  Closure {
                    "arguments": Array [
                      Parameter {
                        "attrGroups": Array [],
                        "byref": false,
                        "flags": 0,
                        "kind": "parameter",
                        "name": Identifier {
                          "kind": "identifier",
                          "name": "errno",
                        },
                        "nullable": false,
                        "readonly": false,
                        "type": null,
                        "value": null,
                        "variadic": false,
                      },
                      Parameter {
                        "attrGroups": Array [],
                        "byref": false,
                        "flags": 0,
                        "kind": "parameter",
                        "name": Identifier {
                          "kind": "identifier",
                          "name": "errstr",
                        },
                        "nullable": false,
                        "readonly": false,
                        "type": null,
                        "value": null,
                        "variadic": false,
                      },
                    ],
                    "attrGroups": Array [],
                    "body": Block {
                      "children": Array [
                        Echo {
                          "expressions": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"Error triggered\\\\n\\"",
                              "unicode": false,
                              "value": "Error triggered
",
                            },
                          ],
                          "kind": "echo",
                          "shortForm": false,
                        },
                      ],
                      "kind": "block",
                    },
                    "byref": false,
                    "isStatic": false,
                    "kind": "closure",
                    "nullable": false,
                    "type": null,
                    "uses": Array [],
                  },
                  Name {
                    "kind": "name",
                    "name": "E_WARNING",
                    "resolution": "uqn",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "set_error_handler",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            Echo {
              "expressions": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"sigprocmask with invalid arguments\\\\n\\"",
                  "unicode": false,
                  "value": "sigprocmask with invalid arguments
",
                },
              ],
              "kind": "echo",
              "shortForm": false,
            },
            If {
              "alternate": Block {
                "children": Array [
                  Echo {
                    "expressions": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"Error triggered\\\\n\\"",
                        "unicode": false,
                        "value": "Error triggered
",
                      },
                    ],
                    "kind": "echo",
                    "shortForm": false,
                  },
                  Echo {
                    "expressions": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"bool(false)\\\\n\\"",
                        "unicode": false,
                        "value": "bool(false)
",
                      },
                    ],
                    "kind": "echo",
                    "shortForm": false,
                  },
                ],
                "kind": "block",
              },
              "body": Block {
                "children": Array [
                  ExpressionStatement {
                    "expression": Call {
                      "arguments": Array [
                        Call {
                          "arguments": Array [
                            Name {
                              "kind": "name",
                              "name": "PHP_INT_MAX",
                              "resolution": "uqn",
                            },
                            Array {
                              "items": Array [
                                Entry {
                                  "byRef": false,
                                  "key": null,
                                  "kind": "entry",
                                  "unpack": false,
                                  "value": Name {
                                    "kind": "name",
                                    "name": "SIGTERM",
                                    "resolution": "uqn",
                                  },
                                },
                              ],
                              "kind": "array",
                              "shortForm": false,
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "pcntl_sigprocmask",
                            "resolution": "uqn",
                          },
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "var_dump",
                        "resolution": "uqn",
                      },
                    },
                    "kind": "expressionstatement",
                  },
                ],
                "kind": "block",
              },
              "kind": "if",
              "shortForm": false,
              "test": Bin {
                "kind": "bin",
                "left": Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"USE_ZEND_ALLOC\\"",
                      "unicode": false,
                      "value": "USE_ZEND_ALLOC",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "getenv",
                    "resolution": "uqn",
                  },
                },
                "right": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'0'",
                  "unicode": false,
                  "value": "0",
                },
                "type": "!==",
              },
            },
            ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  Call {
                    "arguments": Array [
                      Name {
                        "kind": "name",
                        "name": "SIG_SETMASK",
                        "resolution": "uqn",
                      },
                      Array {
                        "items": Array [
                          Entry {
                            "byRef": false,
                            "key": null,
                            "kind": "entry",
                            "unpack": false,
                            "value": Number {
                              "kind": "number",
                              "value": "0",
                            },
                          },
                        ],
                        "kind": "array",
                        "shortForm": false,
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "pcntl_sigprocmask",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "var_dump",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            Echo {
              "expressions": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"sigwaitinfo with invalid arguments\\\\n\\"",
                  "unicode": false,
                  "value": "sigwaitinfo with invalid arguments
",
                },
              ],
              "kind": "echo",
              "shortForm": false,
            },
            ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  Call {
                    "arguments": Array [
                      Array {
                        "items": Array [
                          Entry {
                            "byRef": false,
                            "key": null,
                            "kind": "entry",
                            "unpack": false,
                            "value": Number {
                              "kind": "number",
                              "value": "0",
                            },
                          },
                        ],
                        "kind": "array",
                        "shortForm": false,
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "pcntl_sigwaitinfo",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "var_dump",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            Echo {
              "expressions": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"sigtimedwait with invalid arguments\\\\n\\"",
                  "unicode": false,
                  "value": "sigtimedwait with invalid arguments
",
                },
              ],
              "kind": "echo",
              "shortForm": false,
            },
            ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  Call {
                    "arguments": Array [
                      Array {
                        "items": Array [
                          Entry {
                            "byRef": false,
                            "key": null,
                            "kind": "entry",
                            "unpack": false,
                            "value": Name {
                              "kind": "name",
                              "name": "SIGTERM",
                              "resolution": "uqn",
                            },
                          },
                        ],
                        "kind": "array",
                        "shortForm": false,
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "signo",
                      },
                      Name {
                        "kind": "name",
                        "name": "PHP_INT_MAX",
                        "resolution": "uqn",
                      },
                      Name {
                        "kind": "name",
                        "name": "PHP_INT_MAX",
                        "resolution": "uqn",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "pcntl_sigtimedwait",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "var_dump",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
          ],
          "kind": "block",
        },
        "kind": "if",
        "shortForm": false,
        "test": Variable {
          "curly": false,
          "kind": "variable",
          "name": "pid",
        },
      },
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Exit {
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'failed'",
                "unicode": false,
                "value": "failed",
              },
              "kind": "exit",
              "useDie": true,
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "pid",
        },
        "right": Unary {
          "kind": "unary",
          "type": "-",
          "what": Number {
            "kind": "number",
            "value": "1",
          },
        },
        "type": "==",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
