// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests ZE2 iterators must be implemented 1`] = `
Program {
  "children": Array [
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"1st try\\\\n\\"",
          "unicode": false,
          "value": "1st try
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Class {
      "attrGroups": Array [],
      "body": Array [],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "c1",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "obj",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "c1",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              Encapsed {
                "kind": "encapsed",
                "raw": "\\"object:$w\\\\n\\"",
                "type": "string",
                "value": Array [
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "object:",
                      "unicode": false,
                      "value": "object:",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "w",
                    },
                    "kind": "encapsedpart",
                    "syntax": "simple",
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "\\\\n",
                      "unicode": false,
                      "value": "",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                ],
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "obj",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "w",
      },
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"2nd try\\\\n\\"",
          "unicode": false,
          "value": "2nd try
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Class {
      "attrGroups": Array [],
      "body": Array [
        PropertyStatement {
          "isStatic": false,
          "kind": "propertystatement",
          "properties": Array [
            Property {
              "attrGroups": Array [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "max",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": Number {
                "kind": "number",
                "value": "3",
              },
            },
          ],
          "visibility": "public",
        },
        PropertyStatement {
          "isStatic": false,
          "kind": "propertystatement",
          "properties": Array [
            Property {
              "attrGroups": Array [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "num",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": Number {
                "kind": "number",
                "value": "0",
              },
            },
          ],
          "visibility": "public",
        },
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Magic {
                      "kind": "magic",
                      "raw": "__METHOD__",
                      "value": "__METHOD__",
                    },
                    "right": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"\\\\n\\"",
                      "unicode": false,
                      "value": "
",
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
              Return {
                "expr": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "num",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "this",
                  },
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "current",
          },
          "nullable": false,
          "type": null,
          "visibility": "",
        },
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Magic {
                      "kind": "magic",
                      "raw": "__METHOD__",
                      "value": "__METHOD__",
                    },
                    "right": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"\\\\n\\"",
                      "unicode": false,
                      "value": "
",
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
              ExpressionStatement {
                "expression": Post {
                  "kind": "post",
                  "type": "+",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "num",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "this",
                    },
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "next",
          },
          "nullable": false,
          "type": TypeReference {
            "kind": "typereference",
            "name": "void",
            "raw": "void",
          },
          "visibility": "",
        },
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Magic {
                      "kind": "magic",
                      "raw": "__METHOD__",
                      "value": "__METHOD__",
                    },
                    "right": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"\\\\n\\"",
                      "unicode": false,
                      "value": "
",
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
              Return {
                "expr": Bin {
                  "kind": "bin",
                  "left": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "num",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "this",
                    },
                  },
                  "right": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "max",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "this",
                    },
                  },
                  "type": "<",
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "valid",
          },
          "nullable": false,
          "type": TypeReference {
            "kind": "typereference",
            "name": "bool",
            "raw": "bool",
          },
          "visibility": "",
        },
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Magic {
                      "kind": "magic",
                      "raw": "__METHOD__",
                      "value": "__METHOD__",
                    },
                    "right": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"\\\\n\\"",
                      "unicode": false,
                      "value": "
",
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
              Switch {
                "body": Block {
                  "children": Array [
                    Case {
                      "body": Block {
                        "children": Array [
                          Return {
                            "expr": String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"1st\\"",
                              "unicode": false,
                              "value": "1st",
                            },
                            "kind": "return",
                          },
                        ],
                        "kind": "block",
                      },
                      "kind": "case",
                      "test": Number {
                        "kind": "number",
                        "value": "0",
                      },
                    },
                    Case {
                      "body": Block {
                        "children": Array [
                          Return {
                            "expr": String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"2nd\\"",
                              "unicode": false,
                              "value": "2nd",
                            },
                            "kind": "return",
                          },
                        ],
                        "kind": "block",
                      },
                      "kind": "case",
                      "test": Number {
                        "kind": "number",
                        "value": "1",
                      },
                    },
                    Case {
                      "body": Block {
                        "children": Array [
                          Return {
                            "expr": String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"3rd\\"",
                              "unicode": false,
                              "value": "3rd",
                            },
                            "kind": "return",
                          },
                        ],
                        "kind": "block",
                      },
                      "kind": "case",
                      "test": Number {
                        "kind": "number",
                        "value": "2",
                      },
                    },
                    Case {
                      "body": Block {
                        "children": Array [
                          Return {
                            "expr": String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"???\\"",
                              "unicode": false,
                              "value": "???",
                            },
                            "kind": "return",
                          },
                        ],
                        "kind": "block",
                      },
                      "kind": "case",
                      "test": null,
                    },
                  ],
                  "kind": "block",
                },
                "kind": "switch",
                "shortForm": false,
                "test": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "num",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "this",
                  },
                },
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "key",
          },
          "nullable": false,
          "type": Name {
            "kind": "name",
            "name": "mixed",
            "resolution": "uqn",
          },
          "visibility": "",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "c2",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "obj",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "c2",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              Encapsed {
                "kind": "encapsed",
                "raw": "\\"object:$v=>$w\\\\n\\"",
                "type": "string",
                "value": Array [
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "object:",
                      "unicode": false,
                      "value": "object:",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "v",
                    },
                    "kind": "encapsedpart",
                    "syntax": "simple",
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "=>",
                      "unicode": false,
                      "value": "=>",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "w",
                    },
                    "kind": "encapsedpart",
                    "syntax": "simple",
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "\\\\n",
                      "unicode": false,
                      "value": "",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                ],
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "key": Variable {
        "curly": false,
        "kind": "variable",
        "name": "v",
      },
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "obj",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "w",
      },
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Done\\\\n\\"",
          "unicode": false,
          "value": "Done
",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
