// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Throwing undef var in verify return 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Closure {
            "arguments": Array [
              Parameter {
                "attrGroups": Array [],
                "byref": false,
                "flags": 0,
                "kind": "parameter",
                "name": Identifier {
                  "kind": "identifier",
                  "name": "severity",
                },
                "nullable": false,
                "readonly": false,
                "type": TypeReference {
                  "kind": "typereference",
                  "name": "int",
                  "raw": "int",
                },
                "value": null,
                "variadic": false,
              },
              Parameter {
                "attrGroups": Array [],
                "byref": false,
                "flags": 0,
                "kind": "parameter",
                "name": Identifier {
                  "kind": "identifier",
                  "name": "message",
                },
                "nullable": false,
                "readonly": false,
                "type": TypeReference {
                  "kind": "typereference",
                  "name": "string",
                  "raw": "string",
                },
                "value": null,
                "variadic": false,
              },
              Parameter {
                "attrGroups": Array [],
                "byref": false,
                "flags": 0,
                "kind": "parameter",
                "name": Identifier {
                  "kind": "identifier",
                  "name": "filename",
                },
                "nullable": false,
                "readonly": false,
                "type": TypeReference {
                  "kind": "typereference",
                  "name": "string",
                  "raw": "string",
                },
                "value": null,
                "variadic": false,
              },
              Parameter {
                "attrGroups": Array [],
                "byref": false,
                "flags": 0,
                "kind": "parameter",
                "name": Identifier {
                  "kind": "identifier",
                  "name": "lineNumber",
                },
                "nullable": false,
                "readonly": false,
                "type": TypeReference {
                  "kind": "typereference",
                  "name": "int",
                  "raw": "int",
                },
                "value": null,
                "variadic": false,
              },
            ],
            "attrGroups": Array [],
            "body": Block {
              "children": Array [
                Throw {
                  "kind": "throw",
                  "what": New {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "message",
                      },
                      Number {
                        "kind": "number",
                        "value": "0",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "severity",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "filename",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "lineNumber",
                      },
                    ],
                    "kind": "new",
                    "what": Name {
                      "kind": "name",
                      "name": "ErrorException",
                      "resolution": "uqn",
                    },
                  },
                },
              ],
              "kind": "block",
            },
            "byref": false,
            "isStatic": false,
            "kind": "closure",
            "nullable": false,
            "type": TypeReference {
              "kind": "typereference",
              "name": "void",
              "raw": "void",
            },
            "uses": Array [],
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "set_error_handler",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    _Function {
      "arguments": Array [],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          Return {
            "expr": Variable {
              "curly": false,
              "kind": "variable",
              "name": "test",
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "test",
      },
      "nullable": false,
      "type": TypeReference {
        "kind": "typereference",
        "name": "string",
        "raw": "string",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
