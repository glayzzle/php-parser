// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #80256: file_get_contents strip first line with chunked encoding redirect 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": true,
        "target": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'server.inc'",
          "unicode": false,
          "value": "server.inc",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "responses",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": Bin {
                    "kind": "bin",
                    "left": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"data://text/plain,HTTP/1.1 302 Moved Temporarily\\\\r\\\\n\\"",
                      "unicode": false,
                      "value": "data://text/plain,HTTP/1.1 302 Moved Temporarily
",
                    },
                    "right": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"Location: /try-again\\\\r\\\\n\\"",
                      "unicode": false,
                      "value": "Location: /try-again
",
                    },
                    "type": ".",
                  },
                  "right": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"Transfer-Encoding: chunked\\\\r\\\\n\\\\r\\\\n\\"",
                    "unicode": false,
                    "value": "Transfer-Encoding: chunked

",
                  },
                  "type": ".",
                },
                "right": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"0\\\\r\\\\n\\\\r\\\\n\\"",
                  "unicode": false,
                  "value": "0

",
                },
                "type": ".",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"data://text/plain,HTTP/1.1 200 Ok\\\\r\\\\n\\"",
                    "unicode": false,
                    "value": "data://text/plain,HTTP/1.1 200 Ok
",
                  },
                  "right": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"Transfer-Encoding: chunked\\\\r\\\\n\\\\r\\\\n\\"",
                    "unicode": false,
                    "value": "Transfer-Encoding: chunked

",
                  },
                  "type": ".",
                },
                "right": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"4\\\\r\\\\n1234\\\\r\\\\n0\\\\r\\\\n\\\\r\\\\n\\"",
                  "unicode": false,
                  "value": "4
1234
0

",
                },
                "type": ".",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": List {
          "items": Array [
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'pid'",
                "unicode": false,
                "value": "pid",
              },
              "kind": "entry",
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "name": "pid",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'uri'",
                "unicode": false,
                "value": "uri",
              },
              "kind": "entry",
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "name": "uri",
              },
            },
          ],
          "kind": "list",
          "shortForm": true,
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "responses",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "output",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "http_server",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "uri",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "file_get_contents",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "pid",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "http_server_kill",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
