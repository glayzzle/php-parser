// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #76094 (Access violation when using opcache) 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "t",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          Switch {
            "body": Block {
              "children": Array [
                Case {
                  "body": Block {
                    "children": Array [
                      Return {
                        "expr": Number {
                          "kind": "number",
                          "value": "1",
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "case",
                  "test": Name {
                    "kind": "name",
                    "name": "PHP_INT_MAX",
                    "resolution": "uqn",
                  },
                },
                Case {
                  "body": Block {
                    "children": Array [],
                    "kind": "block",
                  },
                  "kind": "case",
                  "test": Number {
                    "kind": "number",
                    "value": "0",
                  },
                },
                Case {
                  "body": Block {
                    "children": Array [
                      Return {
                        "expr": Number {
                          "kind": "number",
                          "value": "0",
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "case",
                  "test": null,
                },
              ],
              "kind": "block",
            },
            "kind": "switch",
            "shortForm": false,
            "test": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "t",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "strtoupper",
                "resolution": "uqn",
              },
            },
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "MetaType",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"aa\\"",
                "unicode": false,
                "value": "aa",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "MetaType",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
