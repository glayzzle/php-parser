// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests SPL: DirectoryIterator defaults 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "classes",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'DirectoryIterator'",
                "unicode": false,
                "value": "DirectoryIterator",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "0",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'FilesystemIterator'",
                "unicode": false,
                "value": "FilesystemIterator",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "1",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'RecursiveDirectoryIterator'",
                "unicode": false,
                "value": "RecursiveDirectoryIterator",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "1",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'GlobIterator'",
                "unicode": false,
                "value": "GlobIterator",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "1",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              Encapsed {
                "kind": "encapsed",
                "raw": "\\"===$class===\\\\n\\"",
                "type": "string",
                "value": Array [
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "===",
                      "unicode": false,
                      "value": "===",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "class",
                    },
                    "kind": "encapsedpart",
                    "syntax": "simple",
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "===\\\\n",
                      "unicode": false,
                      "value": "===",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                ],
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "ref",
              },
              "operator": "=",
              "right": New {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "class",
                  },
                ],
                "kind": "new",
                "what": Name {
                  "kind": "name",
                  "name": "ReflectionClass",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "obj",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'glob://*'",
                    "unicode": false,
                    "value": "glob://*",
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "newInstance",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "ref",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          Echo {
            "expressions": Array [
              Bin {
                "kind": "bin",
                "left": Call {
                  "arguments": Array [
                    Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "current",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "obj",
                        },
                      },
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "get_class",
                    "resolution": "uqn",
                  },
                },
                "right": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"\\\\n\\"",
                  "unicode": false,
                  "value": "
",
                },
                "type": ".",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Call {
                        "arguments": Array [],
                        "kind": "call",
                        "what": PropertyLookup {
                          "kind": "propertylookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "getFlags",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "obj",
                          },
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "flags",
                    },
                    "operator": "=",
                    "right": Array {
                      "items": Array [
                        Entry {
                          "byRef": false,
                          "key": StaticLookup {
                            "kind": "staticlookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "CURRENT_AS_FILEINFO",
                            },
                            "what": Name {
                              "kind": "name",
                              "name": "FilesystemIterator",
                              "resolution": "uqn",
                            },
                          },
                          "kind": "entry",
                          "unpack": false,
                          "value": Number {
                            "kind": "number",
                            "value": "0",
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": StaticLookup {
                            "kind": "staticlookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "CURRENT_AS_SELF",
                            },
                            "what": Name {
                              "kind": "name",
                              "name": "FilesystemIterator",
                              "resolution": "uqn",
                            },
                          },
                          "kind": "entry",
                          "unpack": false,
                          "value": Number {
                            "kind": "number",
                            "value": "0",
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": StaticLookup {
                            "kind": "staticlookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "CURRENT_AS_PATHNAME",
                            },
                            "what": Name {
                              "kind": "name",
                              "name": "FilesystemIterator",
                              "resolution": "uqn",
                            },
                          },
                          "kind": "entry",
                          "unpack": false,
                          "value": Number {
                            "kind": "number",
                            "value": "1",
                          },
                        },
                      ],
                      "kind": "array",
                      "shortForm": false,
                    },
                  },
                  "kind": "expressionstatement",
                },
                Foreach {
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "flag",
                            },
                          ],
                          "kind": "call",
                          "what": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "setFlags",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "obj",
                            },
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [],
                          "kind": "call",
                          "what": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "rewind",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "obj",
                            },
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            Call {
                              "arguments": Array [],
                              "kind": "call",
                              "what": PropertyLookup {
                                "kind": "propertylookup",
                                "offset": Identifier {
                                  "kind": "identifier",
                                  "name": "getFlags",
                                },
                                "what": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "obj",
                                },
                              },
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "var_dump",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      If {
                        "alternate": Block {
                          "children": Array [
                            Echo {
                              "expressions": Array [
                                Bin {
                                  "kind": "bin",
                                  "left": Call {
                                    "arguments": Array [
                                      Call {
                                        "arguments": Array [],
                                        "kind": "call",
                                        "what": PropertyLookup {
                                          "kind": "propertylookup",
                                          "offset": Identifier {
                                            "kind": "identifier",
                                            "name": "current",
                                          },
                                          "what": Variable {
                                            "curly": false,
                                            "kind": "variable",
                                            "name": "obj",
                                          },
                                        },
                                      },
                                    ],
                                    "kind": "call",
                                    "what": Name {
                                      "kind": "name",
                                      "name": "get_class",
                                      "resolution": "uqn",
                                    },
                                  },
                                  "right": String {
                                    "isDoubleQuote": true,
                                    "kind": "string",
                                    "raw": "\\"\\\\n\\"",
                                    "unicode": false,
                                    "value": "
",
                                  },
                                  "type": ".",
                                },
                              ],
                              "kind": "echo",
                              "shortForm": false,
                            },
                          ],
                          "kind": "block",
                        },
                        "body": Block {
                          "children": Array [
                            ExpressionStatement {
                              "expression": Assign {
                                "kind": "assign",
                                "left": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "val",
                                },
                                "operator": "=",
                                "right": Call {
                                  "arguments": Array [],
                                  "kind": "call",
                                  "what": PropertyLookup {
                                    "kind": "propertylookup",
                                    "offset": Identifier {
                                      "kind": "identifier",
                                      "name": "current",
                                    },
                                    "what": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "obj",
                                    },
                                  },
                                },
                              },
                              "kind": "expressionstatement",
                            },
                            If {
                              "alternate": Block {
                                "children": Array [
                                  ExpressionStatement {
                                    "expression": Call {
                                      "arguments": Array [
                                        Variable {
                                          "curly": false,
                                          "kind": "variable",
                                          "name": "val",
                                        },
                                      ],
                                      "kind": "call",
                                      "what": Name {
                                        "kind": "name",
                                        "name": "var_dump",
                                        "resolution": "uqn",
                                      },
                                    },
                                    "kind": "expressionstatement",
                                  },
                                ],
                                "kind": "block",
                              },
                              "body": Block {
                                "children": Array [
                                  ExpressionStatement {
                                    "expression": Call {
                                      "arguments": Array [
                                        Boolean {
                                          "kind": "boolean",
                                          "raw": "true",
                                          "value": true,
                                        },
                                      ],
                                      "kind": "call",
                                      "what": Name {
                                        "kind": "name",
                                        "name": "var_dump",
                                        "resolution": "uqn",
                                      },
                                    },
                                    "kind": "expressionstatement",
                                  },
                                ],
                                "kind": "block",
                              },
                              "kind": "if",
                              "shortForm": false,
                              "test": Call {
                                "arguments": Array [
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "val",
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "is_string",
                                  "resolution": "uqn",
                                },
                              },
                            },
                          ],
                          "kind": "block",
                        },
                        "kind": "if",
                        "shortForm": false,
                        "test": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "isstring",
                        },
                      },
                    ],
                    "kind": "block",
                  },
                  "key": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "flag",
                  },
                  "kind": "foreach",
                  "shortForm": false,
                  "source": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "flags",
                  },
                  "value": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "isstring",
                  },
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Variable {
              "curly": false,
              "kind": "variable",
              "name": "flags",
            },
          },
        ],
        "kind": "block",
      },
      "key": Variable {
        "curly": false,
        "kind": "variable",
        "name": "class",
      },
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "classes",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "flags",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
