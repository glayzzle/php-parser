// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests MySQL PDO->__construct() - Generic + DSN 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": true,
        "target": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Magic {
              "kind": "magic",
              "raw": "__DIR__",
              "value": "__DIR__",
            },
            "right": Name {
              "kind": "name",
              "name": "DIRECTORY_SEPARATOR",
              "resolution": "uqn",
            },
            "type": ".",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'mysql_pdo_test.inc'",
            "unicode": false,
            "value": "mysql_pdo_test.inc",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "offset",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "code",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          Try {
            "always": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Eval {
                    "kind": "eval",
                    "source": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "code",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Bin {
                        "kind": "bin",
                        "left": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"[%03d] Should have failed\\\\n\\"",
                              "unicode": false,
                              "value": "[%03d] Should have failed
",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "offset",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "sprintf",
                            "resolution": "uqn",
                          },
                        },
                        "right": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "''",
                          "unicode": false,
                          "value": "",
                        },
                        "type": "!=",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "assert",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "catches": Array [
              Catch {
                "body": Block {
                  "children": Array [
                    Return {
                      "expr": Call {
                        "arguments": Array [
                          String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"[%03d] %s, [%s] %s\\\\n\\"",
                            "unicode": false,
                            "value": "[%03d] %s, [%s] %s
",
                          },
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "offset",
                          },
                          Call {
                            "arguments": Array [],
                            "kind": "call",
                            "what": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "getMessage",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "e",
                              },
                            },
                          },
                          RetIf {
                            "falseExpr": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "'n/a'",
                              "unicode": false,
                              "value": "n/a",
                            },
                            "kind": "retif",
                            "test": Bin {
                              "kind": "bin",
                              "left": Isset {
                                "kind": "isset",
                                "variables": Array [
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "db",
                                  },
                                ],
                              },
                              "parenthesizedExpression": true,
                              "right": Call {
                                "arguments": Array [
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "db",
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "is_object",
                                  "resolution": "uqn",
                                },
                              },
                              "type": "&&",
                            },
                            "trueExpr": Call {
                              "arguments": Array [],
                              "kind": "call",
                              "what": PropertyLookup {
                                "kind": "propertylookup",
                                "offset": Identifier {
                                  "kind": "identifier",
                                  "name": "errorCode",
                                },
                                "what": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "db",
                                },
                              },
                            },
                          },
                          RetIf {
                            "falseExpr": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "'n/a'",
                              "unicode": false,
                              "value": "n/a",
                            },
                            "kind": "retif",
                            "test": Bin {
                              "kind": "bin",
                              "left": Isset {
                                "kind": "isset",
                                "variables": Array [
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "db",
                                  },
                                ],
                              },
                              "parenthesizedExpression": true,
                              "right": Call {
                                "arguments": Array [
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "db",
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "is_object",
                                  "resolution": "uqn",
                                },
                              },
                              "type": "&&",
                            },
                            "trueExpr": Call {
                              "arguments": Array [
                                String {
                                  "isDoubleQuote": false,
                                  "kind": "string",
                                  "raw": "' '",
                                  "unicode": false,
                                  "value": " ",
                                },
                                Call {
                                  "arguments": Array [],
                                  "kind": "call",
                                  "what": PropertyLookup {
                                    "kind": "propertylookup",
                                    "offset": Identifier {
                                      "kind": "identifier",
                                      "name": "errorInfo",
                                    },
                                    "what": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "db",
                                    },
                                  },
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "implode",
                                "resolution": "uqn",
                              },
                            },
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "sprintf",
                          "resolution": "uqn",
                        },
                      },
                      "kind": "return",
                    },
                  ],
                  "kind": "block",
                },
                "kind": "catch",
                "variable": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "e",
                },
                "what": Array [
                  Name {
                    "kind": "name",
                    "name": "PDOException",
                    "resolution": "uqn",
                  },
                ],
              },
            ],
            "kind": "try",
          },
          Return {
            "expr": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "''",
              "unicode": false,
              "value": "",
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "tryandcatch",
      },
      "nullable": false,
      "type": null,
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          Try {
            "always": null,
            "body": Block {
              "children": Array [
                If {
                  "alternate": null,
                  "body": ExpressionStatement {
                    "expression": Call {
                      "arguments": Array [
                        String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"[001] Too few parameters\\\\n\\"",
                          "unicode": false,
                          "value": "[001] Too few parameters
",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "printf",
                        "resolution": "uqn",
                      },
                    },
                    "kind": "expressionstatement",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": NullKeyword {
                      "kind": "nullkeyword",
                      "raw": "NULL",
                    },
                    "right": Assign {
                      "kind": "assign",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "db",
                      },
                      "operator": "=",
                      "parenthesizedExpression": true,
                      "right": Silent {
                        "expr": New {
                          "arguments": Array [],
                          "kind": "new",
                          "what": Name {
                            "kind": "name",
                            "name": "PDO",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "silent",
                      },
                    },
                    "type": "!==",
                  },
                },
              ],
              "kind": "block",
            },
            "catches": Array [
              Catch {
                "body": Block {
                  "children": Array [],
                  "kind": "block",
                },
                "kind": "catch",
                "variable": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "ex",
                },
                "what": Array [
                  Name {
                    "kind": "name",
                    "name": "TypeError",
                    "resolution": "uqn",
                  },
                ],
              },
            ],
            "kind": "try",
          },
          ExpressionStatement {
            "expression": Print {
              "expression": Call {
                "arguments": Array [
                  Number {
                    "kind": "number",
                    "value": "2",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'$db = new PDO(chr(0));'",
                    "unicode": false,
                    "value": "$db = new PDO(chr(0));",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "tryandcatch",
                  "resolution": "uqn",
                },
              },
              "kind": "print",
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Print {
              "expression": Call {
                "arguments": Array [
                  Number {
                    "kind": "number",
                    "value": "3",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'$db = new PDO(\\"a\\" . chr(0) . \\"b\\");'",
                    "unicode": false,
                    "value": "$db = new PDO(\\"a\\" . chr(0) . \\"b\\");",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "tryandcatch",
                  "resolution": "uqn",
                },
              },
              "kind": "print",
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Print {
              "expression": Call {
                "arguments": Array [
                  Number {
                    "kind": "number",
                    "value": "4",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'$db = new PDO(\\"MYSQL\\");'",
                    "unicode": false,
                    "value": "$db = new PDO(\\"MYSQL\\");",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "tryandcatch",
                  "resolution": "uqn",
                },
              },
              "kind": "print",
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Print {
              "expression": Call {
                "arguments": Array [
                  Number {
                    "kind": "number",
                    "value": "5",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'$db = new PDO(\\"mysql\\");'",
                    "unicode": false,
                    "value": "$db = new PDO(\\"mysql\\");",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "tryandcatch",
                  "resolution": "uqn",
                },
              },
              "kind": "print",
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Print {
              "expression": Call {
                "arguments": Array [
                  Number {
                    "kind": "number",
                    "value": "6",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'$db = new PDO(\\"mysql \\");'",
                    "unicode": false,
                    "value": "$db = new PDO(\\"mysql \\");",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "tryandcatch",
                  "resolution": "uqn",
                },
              },
              "kind": "print",
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Print {
              "expression": Call {
                "arguments": Array [
                  Number {
                    "kind": "number",
                    "value": "7",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'$db = new PDO(\\"fantasyandfriends :\\");'",
                    "unicode": false,
                    "value": "$db = new PDO(\\"fantasyandfriends :\\");",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "tryandcatch",
                  "resolution": "uqn",
                },
              },
              "kind": "print",
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "dsn",
              },
              "operator": "=",
              "right": Name {
                "kind": "name",
                "name": "PDO_MYSQL_TEST_DSN",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Number {
                  "kind": "number",
                  "value": "8",
                },
                Bin {
                  "kind": "bin",
                  "left": Bin {
                    "kind": "bin",
                    "left": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'$db = new PDO(\\"'",
                      "unicode": false,
                      "value": "$db = new PDO(\\"",
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "dsn",
                    },
                    "type": ".",
                  },
                  "right": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'\\");'",
                    "unicode": false,
                    "value": "\\");",
                  },
                  "type": ".",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "tryandcatch",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "user",
              },
              "operator": "=",
              "right": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'dontcreatesuchauser'",
                "unicode": false,
                "value": "dontcreatesuchauser",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "pass",
              },
              "operator": "=",
              "right": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'withthispassword'",
                "unicode": false,
                "value": "withthispassword",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Print {
              "expression": Call {
                "arguments": Array [
                  Number {
                    "kind": "number",
                    "value": "9",
                  },
                  Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": Bin {
                        "kind": "bin",
                        "left": Bin {
                          "kind": "bin",
                          "left": Bin {
                            "kind": "bin",
                            "left": Bin {
                              "kind": "bin",
                              "left": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'$db = new PDO(\\"'",
                                "unicode": false,
                                "value": "$db = new PDO(\\"",
                              },
                              "right": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "dsn",
                              },
                              "type": ".",
                            },
                            "right": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "'\\", \\"'",
                              "unicode": false,
                              "value": "\\", \\"",
                            },
                            "type": ".",
                          },
                          "right": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "user",
                          },
                          "type": ".",
                        },
                        "right": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'\\", \\"'",
                          "unicode": false,
                          "value": "\\", \\"",
                        },
                        "type": ".",
                      },
                      "right": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "pass",
                      },
                      "type": ".",
                    },
                    "right": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'\\");'",
                      "unicode": false,
                      "value": "\\");",
                    },
                    "type": ".",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "tryandcatch",
                  "resolution": "uqn",
                },
              },
              "kind": "print",
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "dsn",
              },
              "operator": "=",
              "right": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'mysql:'",
                "unicode": false,
                "value": "mysql:",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Number {
                  "kind": "number",
                  "value": "10",
                },
                Bin {
                  "kind": "bin",
                  "left": Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": Bin {
                        "kind": "bin",
                        "left": Bin {
                          "kind": "bin",
                          "left": Bin {
                            "kind": "bin",
                            "left": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "'$db = new PDO(\\"'",
                              "unicode": false,
                              "value": "$db = new PDO(\\"",
                            },
                            "right": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "dsn",
                            },
                            "type": ".",
                          },
                          "right": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'\\", \\"'",
                            "unicode": false,
                            "value": "\\", \\"",
                          },
                          "type": ".",
                        },
                        "right": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "user",
                        },
                        "type": ".",
                      },
                      "right": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'\\", \\"'",
                        "unicode": false,
                        "value": "\\", \\"",
                      },
                      "type": ".",
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "pass",
                    },
                    "type": ".",
                  },
                  "right": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'\\");'",
                    "unicode": false,
                    "value": "\\");",
                  },
                  "type": ".",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "tryandcatch",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "dsn",
              },
              "operator": "=",
              "right": Name {
                "kind": "name",
                "name": "PDO_MYSQL_TEST_DSN",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "user",
              },
              "operator": "=",
              "right": Name {
                "kind": "name",
                "name": "PDO_MYSQL_TEST_USER",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "pass",
              },
              "operator": "=",
              "right": Name {
                "kind": "name",
                "name": "PDO_MYSQL_TEST_PASS",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "db",
              },
              "operator": "=",
              "right": New {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "dsn",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "user",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "pass",
                  },
                ],
                "kind": "new",
                "what": Name {
                  "kind": "name",
                  "name": "PDO",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "dsn",
              },
              "operator": "=",
              "right": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'mysql:invalid=foo'",
                "unicode": false,
                "value": "mysql:invalid=foo",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Number {
                  "kind": "number",
                  "value": "11",
                },
                Bin {
                  "kind": "bin",
                  "left": Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": Bin {
                        "kind": "bin",
                        "left": Bin {
                          "kind": "bin",
                          "left": Bin {
                            "kind": "bin",
                            "left": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "'$db = new PDO(\\"'",
                              "unicode": false,
                              "value": "$db = new PDO(\\"",
                            },
                            "right": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "dsn",
                            },
                            "type": ".",
                          },
                          "right": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'\\", \\"'",
                            "unicode": false,
                            "value": "\\", \\"",
                          },
                          "type": ".",
                        },
                        "right": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "user",
                        },
                        "type": ".",
                      },
                      "right": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'\\", \\"'",
                        "unicode": false,
                        "value": "\\", \\"",
                      },
                      "type": ".",
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "pass",
                    },
                    "type": ".",
                  },
                  "right": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'\\");'",
                    "unicode": false,
                    "value": "\\");",
                  },
                  "type": ".",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "tryandcatch",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "dsn",
              },
              "operator": "=",
              "right": Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'mysql:'",
                  "unicode": false,
                  "value": "mysql:",
                },
                "right": Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'howmuch=canpdoeat;'",
                      "unicode": false,
                      "value": "howmuch=canpdoeat;",
                    },
                    Number {
                      "kind": "number",
                      "value": "1000",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "str_repeat",
                    "resolution": "uqn",
                  },
                },
                "type": ".",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Number {
                  "kind": "number",
                  "value": "12",
                },
                Bin {
                  "kind": "bin",
                  "left": Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": Bin {
                        "kind": "bin",
                        "left": Bin {
                          "kind": "bin",
                          "left": Bin {
                            "kind": "bin",
                            "left": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "'$db = new PDO(\\"'",
                              "unicode": false,
                              "value": "$db = new PDO(\\"",
                            },
                            "right": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "dsn",
                            },
                            "type": ".",
                          },
                          "right": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'\\", \\"'",
                            "unicode": false,
                            "value": "\\", \\"",
                          },
                          "type": ".",
                        },
                        "right": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "user",
                        },
                        "type": ".",
                      },
                      "right": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'\\", \\"'",
                        "unicode": false,
                        "value": "\\", \\"",
                      },
                      "type": ".",
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "pass",
                    },
                    "type": ".",
                  },
                  "right": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'\\");'",
                    "unicode": false,
                    "value": "\\");",
                  },
                  "type": ".",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "tryandcatch",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "dsn",
              },
              "operator": "=",
              "right": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'mysql:'",
                    "unicode": false,
                    "value": "mysql:",
                  },
                  "right": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'abcdefghij'",
                        "unicode": false,
                        "value": "abcdefghij",
                      },
                      Bin {
                        "kind": "bin",
                        "left": Number {
                          "kind": "number",
                          "value": "1024",
                        },
                        "right": Number {
                          "kind": "number",
                          "value": "10",
                        },
                        "type": "*",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "str_repeat",
                      "resolution": "uqn",
                    },
                  },
                  "type": ".",
                },
                "right": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'=somevalue'",
                  "unicode": false,
                  "value": "=somevalue",
                },
                "type": ".",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Number {
                  "kind": "number",
                  "value": "13",
                },
                Bin {
                  "kind": "bin",
                  "left": Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": Bin {
                        "kind": "bin",
                        "left": Bin {
                          "kind": "bin",
                          "left": Bin {
                            "kind": "bin",
                            "left": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "'$db = new PDO(\\"'",
                              "unicode": false,
                              "value": "$db = new PDO(\\"",
                            },
                            "right": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "dsn",
                            },
                            "type": ".",
                          },
                          "right": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'\\", \\"'",
                            "unicode": false,
                            "value": "\\", \\"",
                          },
                          "type": ".",
                        },
                        "right": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "user",
                        },
                        "type": ".",
                      },
                      "right": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'\\", \\"'",
                        "unicode": false,
                        "value": "\\", \\"",
                      },
                      "type": ".",
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "pass",
                    },
                    "type": ".",
                  },
                  "right": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'\\");'",
                    "unicode": false,
                    "value": "\\");",
                  },
                  "type": ".",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "tryandcatch",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "host",
                    },
                    "operator": "=",
                    "right": Name {
                      "kind": "name",
                      "name": "PDO_MYSQL_TEST_HOST",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "invalid_host",
                    },
                    "operator": "=",
                    "right": Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "host",
                      },
                      "right": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'invalid'",
                        "unicode": false,
                        "value": "invalid",
                      },
                      "type": ".",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "dsn",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Array {
                          "items": Array [
                            Entry {
                              "byRef": false,
                              "key": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'host'",
                                "unicode": false,
                                "value": "host",
                              },
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "host",
                              },
                            },
                          ],
                          "kind": "array",
                          "shortForm": false,
                        },
                        Bin {
                          "kind": "bin",
                          "left": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'host='",
                            "unicode": false,
                            "value": "host=",
                          },
                          "right": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "invalid_host",
                          },
                          "type": ".",
                        },
                      ],
                      "kind": "call",
                      "what": StaticLookup {
                        "kind": "staticlookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getDSN",
                        },
                        "what": Name {
                          "kind": "name",
                          "name": "MySQLPDOTest",
                          "resolution": "uqn",
                        },
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                Try {
                  "always": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "db",
                          },
                          "operator": "=",
                          "right": Silent {
                            "expr": New {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "dsn",
                                },
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "user",
                                },
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "pass",
                                },
                              ],
                              "kind": "new",
                              "what": Name {
                                "kind": "name",
                                "name": "PDO",
                                "resolution": "uqn",
                              },
                            },
                            "kind": "silent",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            Boolean {
                              "kind": "boolean",
                              "raw": "false",
                              "value": false,
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "assert",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"%s\\\\n\\"",
                              "unicode": false,
                              "value": "%s
",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "dsn",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "printf",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "catches": Array [
                    Catch {
                      "body": Block {
                        "children": Array [
                          ExpressionStatement {
                            "expression": Assign {
                              "kind": "assign",
                              "left": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "tmp",
                              },
                              "operator": "=",
                              "right": Call {
                                "arguments": Array [],
                                "kind": "call",
                                "what": PropertyLookup {
                                  "kind": "propertylookup",
                                  "offset": Identifier {
                                    "kind": "identifier",
                                    "name": "getMessage",
                                  },
                                  "what": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "e",
                                  },
                                },
                              },
                            },
                            "kind": "expressionstatement",
                          },
                          If {
                            "alternate": null,
                            "body": ExpressionStatement {
                              "expression": Call {
                                "arguments": Array [
                                  String {
                                    "isDoubleQuote": true,
                                    "kind": "string",
                                    "raw": "\\"[014] Cannot find proper error codes: %s\\\\n\\"",
                                    "unicode": false,
                                    "value": "[014] Cannot find proper error codes: %s
",
                                  },
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "tmp",
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "printf",
                                  "resolution": "uqn",
                                },
                              },
                              "kind": "expressionstatement",
                            },
                            "kind": "if",
                            "shortForm": false,
                            "test": Bin {
                              "kind": "bin",
                              "left": Bin {
                                "kind": "bin",
                                "left": Unary {
                                  "kind": "unary",
                                  "type": "!",
                                  "what": Call {
                                    "arguments": Array [
                                      Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "tmp",
                                      },
                                      String {
                                        "isDoubleQuote": false,
                                        "kind": "string",
                                        "raw": "'HY000'",
                                        "unicode": false,
                                        "value": "HY000",
                                      },
                                    ],
                                    "kind": "call",
                                    "what": Name {
                                      "kind": "name",
                                      "name": "stristr",
                                      "resolution": "uqn",
                                    },
                                  },
                                },
                                "right": Unary {
                                  "kind": "unary",
                                  "type": "!",
                                  "what": Call {
                                    "arguments": Array [
                                      Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "tmp",
                                      },
                                      String {
                                        "isDoubleQuote": false,
                                        "kind": "string",
                                        "raw": "'2005'",
                                        "unicode": false,
                                        "value": "2005",
                                      },
                                    ],
                                    "kind": "call",
                                    "what": Name {
                                      "kind": "name",
                                      "name": "stristr",
                                      "resolution": "uqn",
                                    },
                                  },
                                },
                                "type": "&&",
                              },
                              "right": Unary {
                                "kind": "unary",
                                "type": "!",
                                "what": Call {
                                  "arguments": Array [
                                    Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "tmp",
                                    },
                                    String {
                                      "isDoubleQuote": false,
                                      "kind": "string",
                                      "raw": "'2002'",
                                      "unicode": false,
                                      "value": "2002",
                                    },
                                  ],
                                  "kind": "call",
                                  "what": Name {
                                    "kind": "name",
                                    "name": "stristr",
                                    "resolution": "uqn",
                                  },
                                },
                              },
                              "type": "&&",
                            },
                          },
                        ],
                        "kind": "block",
                      },
                      "kind": "catch",
                      "variable": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "e",
                      },
                      "what": Array [
                        Name {
                          "kind": "name",
                          "name": "PDOException",
                          "resolution": "uqn",
                        },
                      ],
                    },
                  ],
                  "kind": "try",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "dsn",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Array {
                          "items": Array [
                            Entry {
                              "byRef": false,
                              "key": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'host'",
                                "unicode": false,
                                "value": "host",
                              },
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "invalid_host",
                              },
                            },
                          ],
                          "kind": "array",
                          "shortForm": false,
                        },
                        Bin {
                          "kind": "bin",
                          "left": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'host='",
                            "unicode": false,
                            "value": "host=",
                          },
                          "right": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "host",
                          },
                          "type": ".",
                        },
                      ],
                      "kind": "call",
                      "what": StaticLookup {
                        "kind": "staticlookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getDSN",
                        },
                        "what": Name {
                          "kind": "name",
                          "name": "MySQLPDOTest",
                          "resolution": "uqn",
                        },
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                Try {
                  "always": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "db",
                          },
                          "operator": "=",
                          "right": Silent {
                            "expr": New {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "dsn",
                                },
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "user",
                                },
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "pass",
                                },
                              ],
                              "kind": "new",
                              "what": Name {
                                "kind": "name",
                                "name": "PDO",
                                "resolution": "uqn",
                              },
                            },
                            "kind": "silent",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "catches": Array [
                    Catch {
                      "body": Block {
                        "children": Array [
                          ExpressionStatement {
                            "expression": Call {
                              "arguments": Array [
                                String {
                                  "isDoubleQuote": true,
                                  "kind": "string",
                                  "raw": "\\"[015] DSN=%s, %s\\\\n\\"",
                                  "unicode": false,
                                  "value": "[015] DSN=%s, %s
",
                                },
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "dsn",
                                },
                                Call {
                                  "arguments": Array [],
                                  "kind": "call",
                                  "what": PropertyLookup {
                                    "kind": "propertylookup",
                                    "offset": Identifier {
                                      "kind": "identifier",
                                      "name": "getMessage",
                                    },
                                    "what": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "e",
                                    },
                                  },
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "printf",
                                "resolution": "uqn",
                              },
                            },
                            "kind": "expressionstatement",
                          },
                        ],
                        "kind": "block",
                      },
                      "kind": "catch",
                      "variable": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "e",
                      },
                      "what": Array [
                        Name {
                          "kind": "name",
                          "name": "PDOException",
                          "resolution": "uqn",
                        },
                      ],
                    },
                  ],
                  "kind": "try",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "invalid_host",
                    },
                    "operator": "=",
                    "right": Bin {
                      "kind": "bin",
                      "left": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'-'",
                        "unicode": false,
                        "value": "-",
                      },
                      "right": Call {
                        "arguments": Array [
                          Number {
                            "kind": "number",
                            "value": "0",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "chr",
                          "resolution": "uqn",
                        },
                      },
                      "type": ".",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "dsn",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Array {
                          "items": Array [
                            Entry {
                              "byRef": false,
                              "key": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'host'",
                                "unicode": false,
                                "value": "host",
                              },
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "invalid_host",
                              },
                            },
                          ],
                          "kind": "array",
                          "shortForm": false,
                        },
                      ],
                      "kind": "call",
                      "what": StaticLookup {
                        "kind": "staticlookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getDSN",
                        },
                        "what": Name {
                          "kind": "name",
                          "name": "MySQLPDOTest",
                          "resolution": "uqn",
                        },
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                Try {
                  "always": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "db",
                          },
                          "operator": "=",
                          "right": Silent {
                            "expr": New {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "dsn",
                                },
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "user",
                                },
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "pass",
                                },
                              ],
                              "kind": "new",
                              "what": Name {
                                "kind": "name",
                                "name": "PDO",
                                "resolution": "uqn",
                              },
                            },
                            "kind": "silent",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            Boolean {
                              "kind": "boolean",
                              "raw": "false",
                              "value": false,
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "assert",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"%s\\\\n\\"",
                              "unicode": false,
                              "value": "%s
",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "dsn",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "printf",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "catches": Array [
                    Catch {
                      "body": Block {
                        "children": Array [
                          ExpressionStatement {
                            "expression": Assign {
                              "kind": "assign",
                              "left": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "tmp",
                              },
                              "operator": "=",
                              "right": Call {
                                "arguments": Array [],
                                "kind": "call",
                                "what": PropertyLookup {
                                  "kind": "propertylookup",
                                  "offset": Identifier {
                                    "kind": "identifier",
                                    "name": "getMessage",
                                  },
                                  "what": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "e",
                                  },
                                },
                              },
                            },
                            "kind": "expressionstatement",
                          },
                          If {
                            "alternate": null,
                            "body": ExpressionStatement {
                              "expression": Call {
                                "arguments": Array [
                                  String {
                                    "isDoubleQuote": true,
                                    "kind": "string",
                                    "raw": "\\"[016] Cannot find proper error codes: %s\\\\n\\"",
                                    "unicode": false,
                                    "value": "[016] Cannot find proper error codes: %s
",
                                  },
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "tmp",
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "printf",
                                  "resolution": "uqn",
                                },
                              },
                              "kind": "expressionstatement",
                            },
                            "kind": "if",
                            "shortForm": false,
                            "test": Bin {
                              "kind": "bin",
                              "left": Bin {
                                "kind": "bin",
                                "left": Unary {
                                  "kind": "unary",
                                  "type": "!",
                                  "what": Call {
                                    "arguments": Array [
                                      Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "tmp",
                                      },
                                      String {
                                        "isDoubleQuote": false,
                                        "kind": "string",
                                        "raw": "'HY000'",
                                        "unicode": false,
                                        "value": "HY000",
                                      },
                                    ],
                                    "kind": "call",
                                    "what": Name {
                                      "kind": "name",
                                      "name": "stristr",
                                      "resolution": "uqn",
                                    },
                                  },
                                },
                                "right": Unary {
                                  "kind": "unary",
                                  "type": "!",
                                  "what": Call {
                                    "arguments": Array [
                                      Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "tmp",
                                      },
                                      String {
                                        "isDoubleQuote": false,
                                        "kind": "string",
                                        "raw": "'2005'",
                                        "unicode": false,
                                        "value": "2005",
                                      },
                                    ],
                                    "kind": "call",
                                    "what": Name {
                                      "kind": "name",
                                      "name": "stristr",
                                      "resolution": "uqn",
                                    },
                                  },
                                },
                                "type": "&&",
                              },
                              "right": Unary {
                                "kind": "unary",
                                "type": "!",
                                "what": Call {
                                  "arguments": Array [
                                    Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "tmp",
                                    },
                                    String {
                                      "isDoubleQuote": false,
                                      "kind": "string",
                                      "raw": "'2002'",
                                      "unicode": false,
                                      "value": "2002",
                                    },
                                  ],
                                  "kind": "call",
                                  "what": Name {
                                    "kind": "name",
                                    "name": "stristr",
                                    "resolution": "uqn",
                                  },
                                },
                              },
                              "type": "&&",
                            },
                          },
                        ],
                        "kind": "block",
                      },
                      "kind": "catch",
                      "variable": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "e",
                      },
                      "what": Array [
                        Name {
                          "kind": "name",
                          "name": "PDOException",
                          "resolution": "uqn",
                        },
                      ],
                    },
                  ],
                  "kind": "try",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "dsn",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Array {
                          "items": Array [
                            Entry {
                              "byRef": false,
                              "key": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'host'",
                                "unicode": false,
                                "value": "host",
                              },
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "invalid_host",
                              },
                            },
                          ],
                          "kind": "array",
                          "shortForm": false,
                        },
                        Bin {
                          "kind": "bin",
                          "left": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'host='",
                            "unicode": false,
                            "value": "host=",
                          },
                          "right": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "host",
                          },
                          "type": ".",
                        },
                      ],
                      "kind": "call",
                      "what": StaticLookup {
                        "kind": "staticlookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getDSN",
                        },
                        "what": Name {
                          "kind": "name",
                          "name": "MySQLPDOTest",
                          "resolution": "uqn",
                        },
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                Try {
                  "always": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "db",
                          },
                          "operator": "=",
                          "right": Silent {
                            "expr": New {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "dsn",
                                },
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "user",
                                },
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "pass",
                                },
                              ],
                              "kind": "new",
                              "what": Name {
                                "kind": "name",
                                "name": "PDO",
                                "resolution": "uqn",
                              },
                            },
                            "kind": "silent",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "catches": Array [
                    Catch {
                      "body": Block {
                        "children": Array [
                          ExpressionStatement {
                            "expression": Call {
                              "arguments": Array [
                                String {
                                  "isDoubleQuote": true,
                                  "kind": "string",
                                  "raw": "\\"[017] DSN=%s, %s\\\\n\\"",
                                  "unicode": false,
                                  "value": "[017] DSN=%s, %s
",
                                },
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "dsn",
                                },
                                Call {
                                  "arguments": Array [],
                                  "kind": "call",
                                  "what": PropertyLookup {
                                    "kind": "propertylookup",
                                    "offset": Identifier {
                                      "kind": "identifier",
                                      "name": "getMessage",
                                    },
                                    "what": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "e",
                                    },
                                  },
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "printf",
                                "resolution": "uqn",
                              },
                            },
                            "kind": "expressionstatement",
                          },
                        ],
                        "kind": "block",
                      },
                      "kind": "catch",
                      "variable": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "e",
                      },
                      "what": Array [
                        Name {
                          "kind": "name",
                          "name": "PDOException",
                          "resolution": "uqn",
                        },
                      ],
                    },
                  ],
                  "kind": "try",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Name {
              "kind": "name",
              "name": "PDO_MYSQL_TEST_HOST",
              "resolution": "uqn",
            },
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "dsn",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Array {
                    "items": Array [
                      Entry {
                        "byRef": false,
                        "key": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'host'",
                          "unicode": false,
                          "value": "host",
                        },
                        "kind": "entry",
                        "unpack": false,
                        "value": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "'0123456789'",
                              "unicode": false,
                              "value": "0123456789",
                            },
                            Number {
                              "kind": "number",
                              "value": "100",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "str_repeat",
                            "resolution": "uqn",
                          },
                        },
                      },
                    ],
                    "kind": "array",
                    "shortForm": false,
                  },
                ],
                "kind": "call",
                "what": StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "getDSN",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "MySQLPDOTest",
                    "resolution": "uqn",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          Try {
            "always": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "db",
                    },
                    "operator": "=",
                    "right": Silent {
                      "expr": New {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "dsn",
                          },
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "user",
                          },
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "pass",
                          },
                        ],
                        "kind": "new",
                        "what": Name {
                          "kind": "name",
                          "name": "PDO",
                          "resolution": "uqn",
                        },
                      },
                      "kind": "silent",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Boolean {
                        "kind": "boolean",
                        "raw": "false",
                        "value": false,
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "assert",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"%s\\\\n\\"",
                        "unicode": false,
                        "value": "%s
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "dsn",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "catches": Array [
              Catch {
                "body": Block {
                  "children": Array [
                    ExpressionStatement {
                      "expression": Assign {
                        "kind": "assign",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "tmp",
                        },
                        "operator": "=",
                        "right": Call {
                          "arguments": Array [],
                          "kind": "call",
                          "what": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "getMessage",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "e",
                            },
                          },
                        },
                      },
                      "kind": "expressionstatement",
                    },
                    If {
                      "alternate": null,
                      "body": ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"[018] Cannot find proper error codes: %s\\\\n\\"",
                              "unicode": false,
                              "value": "[018] Cannot find proper error codes: %s
",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "tmp",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "printf",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      "kind": "if",
                      "shortForm": false,
                      "test": Bin {
                        "kind": "bin",
                        "left": Bin {
                          "kind": "bin",
                          "left": Unary {
                            "kind": "unary",
                            "type": "!",
                            "what": Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "tmp",
                                },
                                String {
                                  "isDoubleQuote": false,
                                  "kind": "string",
                                  "raw": "'HY000'",
                                  "unicode": false,
                                  "value": "HY000",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "stristr",
                                "resolution": "uqn",
                              },
                            },
                          },
                          "right": Unary {
                            "kind": "unary",
                            "type": "!",
                            "what": Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "tmp",
                                },
                                String {
                                  "isDoubleQuote": false,
                                  "kind": "string",
                                  "raw": "'2005'",
                                  "unicode": false,
                                  "value": "2005",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "stristr",
                                "resolution": "uqn",
                              },
                            },
                          },
                          "type": "&&",
                        },
                        "right": Unary {
                          "kind": "unary",
                          "type": "!",
                          "what": Call {
                            "arguments": Array [
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "tmp",
                              },
                              String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'2002'",
                                "unicode": false,
                                "value": "2002",
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "stristr",
                              "resolution": "uqn",
                            },
                          },
                        },
                        "type": "&&",
                      },
                    },
                  ],
                  "kind": "block",
                },
                "kind": "catch",
                "variable": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "e",
                },
                "what": Array [
                  Name {
                    "kind": "name",
                    "name": "PDOException",
                    "resolution": "uqn",
                  },
                ],
              },
            ],
            "kind": "try",
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "port",
                    },
                    "operator": "=",
                    "right": Name {
                      "kind": "name",
                      "name": "PDO_MYSQL_TEST_PORT",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "invalid_port",
                    },
                    "operator": "=",
                    "right": Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "port",
                      },
                      "right": Number {
                        "kind": "number",
                        "value": "2",
                      },
                      "type": "*",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "dsn",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Array {
                          "items": Array [
                            Entry {
                              "byRef": false,
                              "key": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'port'",
                                "unicode": false,
                                "value": "port",
                              },
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "port",
                              },
                            },
                          ],
                          "kind": "array",
                          "shortForm": false,
                        },
                        Bin {
                          "kind": "bin",
                          "left": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'port='",
                            "unicode": false,
                            "value": "port=",
                          },
                          "right": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "invalid_port",
                          },
                          "type": ".",
                        },
                      ],
                      "kind": "call",
                      "what": StaticLookup {
                        "kind": "staticlookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getDSN",
                        },
                        "what": Name {
                          "kind": "name",
                          "name": "MySQLPDOTest",
                          "resolution": "uqn",
                        },
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                Try {
                  "always": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "db",
                          },
                          "operator": "=",
                          "right": Silent {
                            "expr": New {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "dsn",
                                },
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "user",
                                },
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "pass",
                                },
                              ],
                              "kind": "new",
                              "what": Name {
                                "kind": "name",
                                "name": "PDO",
                                "resolution": "uqn",
                              },
                            },
                            "kind": "silent",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            Boolean {
                              "kind": "boolean",
                              "raw": "false",
                              "value": false,
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "assert",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"%s\\\\n\\"",
                              "unicode": false,
                              "value": "%s
",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "dsn",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "printf",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "catches": Array [
                    Catch {
                      "body": Block {
                        "children": Array [
                          ExpressionStatement {
                            "expression": Assign {
                              "kind": "assign",
                              "left": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "tmp",
                              },
                              "operator": "=",
                              "right": Call {
                                "arguments": Array [],
                                "kind": "call",
                                "what": PropertyLookup {
                                  "kind": "propertylookup",
                                  "offset": Identifier {
                                    "kind": "identifier",
                                    "name": "getMessage",
                                  },
                                  "what": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "e",
                                  },
                                },
                              },
                            },
                            "kind": "expressionstatement",
                          },
                          If {
                            "alternate": null,
                            "body": ExpressionStatement {
                              "expression": Call {
                                "arguments": Array [
                                  String {
                                    "isDoubleQuote": true,
                                    "kind": "string",
                                    "raw": "\\"[019] Cannot find proper error codes: %s\\\\n\\"",
                                    "unicode": false,
                                    "value": "[019] Cannot find proper error codes: %s
",
                                  },
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "tmp",
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "printf",
                                  "resolution": "uqn",
                                },
                              },
                              "kind": "expressionstatement",
                            },
                            "kind": "if",
                            "shortForm": false,
                            "test": Bin {
                              "kind": "bin",
                              "left": Unary {
                                "kind": "unary",
                                "type": "!",
                                "what": Call {
                                  "arguments": Array [
                                    Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "tmp",
                                    },
                                    String {
                                      "isDoubleQuote": false,
                                      "kind": "string",
                                      "raw": "'HY000'",
                                      "unicode": false,
                                      "value": "HY000",
                                    },
                                  ],
                                  "kind": "call",
                                  "what": Name {
                                    "kind": "name",
                                    "name": "stristr",
                                    "resolution": "uqn",
                                  },
                                },
                              },
                              "right": Unary {
                                "kind": "unary",
                                "type": "!",
                                "what": Call {
                                  "arguments": Array [
                                    Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "tmp",
                                    },
                                    String {
                                      "isDoubleQuote": false,
                                      "kind": "string",
                                      "raw": "'2005'",
                                      "unicode": false,
                                      "value": "2005",
                                    },
                                  ],
                                  "kind": "call",
                                  "what": Name {
                                    "kind": "name",
                                    "name": "stristr",
                                    "resolution": "uqn",
                                  },
                                },
                              },
                              "type": "&&",
                            },
                          },
                        ],
                        "kind": "block",
                      },
                      "kind": "catch",
                      "variable": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "e",
                      },
                      "what": Array [
                        Name {
                          "kind": "name",
                          "name": "PDOException",
                          "resolution": "uqn",
                        },
                      ],
                    },
                  ],
                  "kind": "try",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "dsn",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Array {
                          "items": Array [
                            Entry {
                              "byRef": false,
                              "key": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'port'",
                                "unicode": false,
                                "value": "port",
                              },
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "invalid_port",
                              },
                            },
                          ],
                          "kind": "array",
                          "shortForm": false,
                        },
                        Bin {
                          "kind": "bin",
                          "left": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'port='",
                            "unicode": false,
                            "value": "port=",
                          },
                          "right": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "port",
                          },
                          "type": ".",
                        },
                      ],
                      "kind": "call",
                      "what": StaticLookup {
                        "kind": "staticlookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getDSN",
                        },
                        "what": Name {
                          "kind": "name",
                          "name": "MySQLPDOTest",
                          "resolution": "uqn",
                        },
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                Try {
                  "always": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "db",
                          },
                          "operator": "=",
                          "right": Silent {
                            "expr": New {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "dsn",
                                },
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "user",
                                },
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "pass",
                                },
                              ],
                              "kind": "new",
                              "what": Name {
                                "kind": "name",
                                "name": "PDO",
                                "resolution": "uqn",
                              },
                            },
                            "kind": "silent",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "catches": Array [
                    Catch {
                      "body": Block {
                        "children": Array [
                          ExpressionStatement {
                            "expression": Call {
                              "arguments": Array [
                                String {
                                  "isDoubleQuote": true,
                                  "kind": "string",
                                  "raw": "\\"[020] DSN=%s, %s\\\\n\\"",
                                  "unicode": false,
                                  "value": "[020] DSN=%s, %s
",
                                },
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "dsn",
                                },
                                Call {
                                  "arguments": Array [],
                                  "kind": "call",
                                  "what": PropertyLookup {
                                    "kind": "propertylookup",
                                    "offset": Identifier {
                                      "kind": "identifier",
                                      "name": "getMessage",
                                    },
                                    "what": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "e",
                                    },
                                  },
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "printf",
                                "resolution": "uqn",
                              },
                            },
                            "kind": "expressionstatement",
                          },
                        ],
                        "kind": "block",
                      },
                      "kind": "catch",
                      "variable": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "e",
                      },
                      "what": Array [
                        Name {
                          "kind": "name",
                          "name": "PDOException",
                          "resolution": "uqn",
                        },
                      ],
                    },
                  ],
                  "kind": "try",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "invalid_port",
                    },
                    "operator": "=",
                    "right": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'abc'",
                      "unicode": false,
                      "value": "abc",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "dsn",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Array {
                          "items": Array [
                            Entry {
                              "byRef": false,
                              "key": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'port'",
                                "unicode": false,
                                "value": "port",
                              },
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "port",
                              },
                            },
                          ],
                          "kind": "array",
                          "shortForm": false,
                        },
                        Bin {
                          "kind": "bin",
                          "left": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'port='",
                            "unicode": false,
                            "value": "port=",
                          },
                          "right": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "invalid_port",
                          },
                          "type": ".",
                        },
                      ],
                      "kind": "call",
                      "what": StaticLookup {
                        "kind": "staticlookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getDSN",
                        },
                        "what": Name {
                          "kind": "name",
                          "name": "MySQLPDOTest",
                          "resolution": "uqn",
                        },
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                Try {
                  "always": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "db",
                          },
                          "operator": "=",
                          "right": Silent {
                            "expr": New {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "dsn",
                                },
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "user",
                                },
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "pass",
                                },
                              ],
                              "kind": "new",
                              "what": Name {
                                "kind": "name",
                                "name": "PDO",
                                "resolution": "uqn",
                              },
                            },
                            "kind": "silent",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "catches": Array [
                    Catch {
                      "body": Block {
                        "children": Array [],
                        "kind": "block",
                      },
                      "kind": "catch",
                      "variable": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "e",
                      },
                      "what": Array [
                        Name {
                          "kind": "name",
                          "name": "PDOException",
                          "resolution": "uqn",
                        },
                      ],
                    },
                  ],
                  "kind": "try",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Name {
                "kind": "name",
                "name": "PDO_MYSQL_TEST_PORT",
                "resolution": "uqn",
              },
              "right": Bin {
                "kind": "bin",
                "left": Name {
                  "kind": "name",
                  "name": "PDO_MYSQL_TEST_SOCKET",
                  "resolution": "uqn",
                },
                "parenthesizedExpression": true,
                "right": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "''",
                  "unicode": false,
                  "value": "",
                },
                "type": "==",
              },
              "type": "&&",
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "db",
                    },
                    "operator": "=",
                    "right": Name {
                      "kind": "name",
                      "name": "PDO_MYSQL_TEST_DB",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "invalid_db",
                    },
                    "operator": "=",
                    "right": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'letshopeitdoesnotexist'",
                      "unicode": false,
                      "value": "letshopeitdoesnotexist",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "dsn",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Array {
                          "items": Array [
                            Entry {
                              "byRef": false,
                              "key": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'dbname'",
                                "unicode": false,
                                "value": "dbname",
                              },
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "db",
                              },
                            },
                          ],
                          "kind": "array",
                          "shortForm": false,
                        },
                        Bin {
                          "kind": "bin",
                          "left": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'dbname='",
                            "unicode": false,
                            "value": "dbname=",
                          },
                          "right": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "invalid_db",
                          },
                          "type": ".",
                        },
                      ],
                      "kind": "call",
                      "what": StaticLookup {
                        "kind": "staticlookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getDSN",
                        },
                        "what": Name {
                          "kind": "name",
                          "name": "MySQLPDOTest",
                          "resolution": "uqn",
                        },
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                Try {
                  "always": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "db",
                          },
                          "operator": "=",
                          "right": Silent {
                            "expr": New {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "dsn",
                                },
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "user",
                                },
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "pass",
                                },
                              ],
                              "kind": "new",
                              "what": Name {
                                "kind": "name",
                                "name": "PDO",
                                "resolution": "uqn",
                              },
                            },
                            "kind": "silent",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            Boolean {
                              "kind": "boolean",
                              "raw": "false",
                              "value": false,
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "assert",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"%s\\\\n\\"",
                              "unicode": false,
                              "value": "%s
",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "dsn",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "printf",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "catches": Array [
                    Catch {
                      "body": Block {
                        "children": Array [
                          ExpressionStatement {
                            "expression": Assign {
                              "kind": "assign",
                              "left": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "tmp",
                              },
                              "operator": "=",
                              "right": Call {
                                "arguments": Array [],
                                "kind": "call",
                                "what": PropertyLookup {
                                  "kind": "propertylookup",
                                  "offset": Identifier {
                                    "kind": "identifier",
                                    "name": "getMessage",
                                  },
                                  "what": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "e",
                                  },
                                },
                              },
                            },
                            "kind": "expressionstatement",
                          },
                          If {
                            "alternate": null,
                            "body": ExpressionStatement {
                              "expression": Call {
                                "arguments": Array [
                                  String {
                                    "isDoubleQuote": true,
                                    "kind": "string",
                                    "raw": "\\"[022] Cannot find proper error codes: %s\\\\n\\"",
                                    "unicode": false,
                                    "value": "[022] Cannot find proper error codes: %s
",
                                  },
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "tmp",
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "printf",
                                  "resolution": "uqn",
                                },
                              },
                              "kind": "expressionstatement",
                            },
                            "kind": "if",
                            "shortForm": false,
                            "test": Bin {
                              "kind": "bin",
                              "left": Bin {
                                "kind": "bin",
                                "left": Unary {
                                  "kind": "unary",
                                  "type": "!",
                                  "what": Call {
                                    "arguments": Array [
                                      Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "tmp",
                                      },
                                      String {
                                        "isDoubleQuote": false,
                                        "kind": "string",
                                        "raw": "'42000'",
                                        "unicode": false,
                                        "value": "42000",
                                      },
                                    ],
                                    "kind": "call",
                                    "what": Name {
                                      "kind": "name",
                                      "name": "stristr",
                                      "resolution": "uqn",
                                    },
                                  },
                                },
                                "right": Unary {
                                  "kind": "unary",
                                  "type": "!",
                                  "what": Call {
                                    "arguments": Array [
                                      Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "tmp",
                                      },
                                      String {
                                        "isDoubleQuote": false,
                                        "kind": "string",
                                        "raw": "'1049'",
                                        "unicode": false,
                                        "value": "1049",
                                      },
                                    ],
                                    "kind": "call",
                                    "what": Name {
                                      "kind": "name",
                                      "name": "stristr",
                                      "resolution": "uqn",
                                    },
                                  },
                                },
                                "type": "&&",
                              },
                              "right": Unary {
                                "kind": "unary",
                                "type": "!",
                                "what": Call {
                                  "arguments": Array [
                                    Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "tmp",
                                    },
                                    String {
                                      "isDoubleQuote": false,
                                      "kind": "string",
                                      "raw": "'1044'",
                                      "unicode": false,
                                      "value": "1044",
                                    },
                                  ],
                                  "kind": "call",
                                  "what": Name {
                                    "kind": "name",
                                    "name": "stristr",
                                    "resolution": "uqn",
                                  },
                                },
                              },
                              "type": "&&",
                            },
                          },
                        ],
                        "kind": "block",
                      },
                      "kind": "catch",
                      "variable": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "e",
                      },
                      "what": Array [
                        Name {
                          "kind": "name",
                          "name": "PDOException",
                          "resolution": "uqn",
                        },
                      ],
                    },
                  ],
                  "kind": "try",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "dsn",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Array {
                          "items": Array [
                            Entry {
                              "byRef": false,
                              "key": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'dbname'",
                                "unicode": false,
                                "value": "dbname",
                              },
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "invalid_db",
                              },
                            },
                          ],
                          "kind": "array",
                          "shortForm": false,
                        },
                        Bin {
                          "kind": "bin",
                          "left": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'dbname='",
                            "unicode": false,
                            "value": "dbname=",
                          },
                          "right": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "db",
                          },
                          "type": ".",
                        },
                      ],
                      "kind": "call",
                      "what": StaticLookup {
                        "kind": "staticlookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getDSN",
                        },
                        "what": Name {
                          "kind": "name",
                          "name": "MySQLPDOTest",
                          "resolution": "uqn",
                        },
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                Try {
                  "always": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "db",
                          },
                          "operator": "=",
                          "right": Silent {
                            "expr": New {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "dsn",
                                },
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "user",
                                },
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "pass",
                                },
                              ],
                              "kind": "new",
                              "what": Name {
                                "kind": "name",
                                "name": "PDO",
                                "resolution": "uqn",
                              },
                            },
                            "kind": "silent",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "catches": Array [
                    Catch {
                      "body": Block {
                        "children": Array [
                          ExpressionStatement {
                            "expression": Call {
                              "arguments": Array [
                                String {
                                  "isDoubleQuote": true,
                                  "kind": "string",
                                  "raw": "\\"[023] DSN=%s, %s\\\\n\\"",
                                  "unicode": false,
                                  "value": "[023] DSN=%s, %s
",
                                },
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "dsn",
                                },
                                Call {
                                  "arguments": Array [],
                                  "kind": "call",
                                  "what": PropertyLookup {
                                    "kind": "propertylookup",
                                    "offset": Identifier {
                                      "kind": "identifier",
                                      "name": "getMessage",
                                    },
                                    "what": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "e",
                                    },
                                  },
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "printf",
                                "resolution": "uqn",
                              },
                            },
                            "kind": "expressionstatement",
                          },
                        ],
                        "kind": "block",
                      },
                      "kind": "catch",
                      "variable": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "e",
                      },
                      "what": Array [
                        Name {
                          "kind": "name",
                          "name": "PDOException",
                          "resolution": "uqn",
                        },
                      ],
                    },
                  ],
                  "kind": "try",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Name {
              "kind": "name",
              "name": "PDO_MYSQL_TEST_DB",
              "resolution": "uqn",
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "socket",
                    },
                    "operator": "=",
                    "right": Name {
                      "kind": "name",
                      "name": "PDO_MYSQL_TEST_SOCKET",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "invalid_socket",
                    },
                    "operator": "=",
                    "right": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'/lets/hope/it/does/not/exist'",
                      "unicode": false,
                      "value": "/lets/hope/it/does/not/exist",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "dsn",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Array {
                          "items": Array [
                            Entry {
                              "byRef": false,
                              "key": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'unix_socket'",
                                "unicode": false,
                                "value": "unix_socket",
                              },
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "socket",
                              },
                            },
                          ],
                          "kind": "array",
                          "shortForm": false,
                        },
                        Bin {
                          "kind": "bin",
                          "left": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'unix_socket='",
                            "unicode": false,
                            "value": "unix_socket=",
                          },
                          "right": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "invalid_socket",
                          },
                          "type": ".",
                        },
                      ],
                      "kind": "call",
                      "what": StaticLookup {
                        "kind": "staticlookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getDSN",
                        },
                        "what": Name {
                          "kind": "name",
                          "name": "MySQLPDOTest",
                          "resolution": "uqn",
                        },
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                Try {
                  "always": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "db",
                          },
                          "operator": "=",
                          "right": Silent {
                            "expr": New {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "dsn",
                                },
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "user",
                                },
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "pass",
                                },
                              ],
                              "kind": "new",
                              "what": Name {
                                "kind": "name",
                                "name": "PDO",
                                "resolution": "uqn",
                              },
                            },
                            "kind": "silent",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            Boolean {
                              "kind": "boolean",
                              "raw": "false",
                              "value": false,
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "assert",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"%s\\\\n\\"",
                              "unicode": false,
                              "value": "%s
",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "dsn",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "printf",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "catches": Array [
                    Catch {
                      "body": Block {
                        "children": Array [
                          ExpressionStatement {
                            "expression": Assign {
                              "kind": "assign",
                              "left": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "tmp",
                              },
                              "operator": "=",
                              "right": Call {
                                "arguments": Array [],
                                "kind": "call",
                                "what": PropertyLookup {
                                  "kind": "propertylookup",
                                  "offset": Identifier {
                                    "kind": "identifier",
                                    "name": "getMessage",
                                  },
                                  "what": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "e",
                                  },
                                },
                              },
                            },
                            "kind": "expressionstatement",
                          },
                          If {
                            "alternate": null,
                            "body": ExpressionStatement {
                              "expression": Call {
                                "arguments": Array [
                                  String {
                                    "isDoubleQuote": true,
                                    "kind": "string",
                                    "raw": "\\"[024] Cannot find proper error codes: %s\\\\n\\"",
                                    "unicode": false,
                                    "value": "[024] Cannot find proper error codes: %s
",
                                  },
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "tmp",
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "printf",
                                  "resolution": "uqn",
                                },
                              },
                              "kind": "expressionstatement",
                            },
                            "kind": "if",
                            "shortForm": false,
                            "test": Bin {
                              "kind": "bin",
                              "left": Unary {
                                "kind": "unary",
                                "type": "!",
                                "what": Call {
                                  "arguments": Array [
                                    Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "tmp",
                                    },
                                    String {
                                      "isDoubleQuote": false,
                                      "kind": "string",
                                      "raw": "'HY000'",
                                      "unicode": false,
                                      "value": "HY000",
                                    },
                                  ],
                                  "kind": "call",
                                  "what": Name {
                                    "kind": "name",
                                    "name": "stristr",
                                    "resolution": "uqn",
                                  },
                                },
                              },
                              "right": Unary {
                                "kind": "unary",
                                "type": "!",
                                "what": Call {
                                  "arguments": Array [
                                    Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "tmp",
                                    },
                                    String {
                                      "isDoubleQuote": false,
                                      "kind": "string",
                                      "raw": "'2002'",
                                      "unicode": false,
                                      "value": "2002",
                                    },
                                  ],
                                  "kind": "call",
                                  "what": Name {
                                    "kind": "name",
                                    "name": "stristr",
                                    "resolution": "uqn",
                                  },
                                },
                              },
                              "type": "&&",
                            },
                          },
                        ],
                        "kind": "block",
                      },
                      "kind": "catch",
                      "variable": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "e",
                      },
                      "what": Array [
                        Name {
                          "kind": "name",
                          "name": "PDOException",
                          "resolution": "uqn",
                        },
                      ],
                    },
                  ],
                  "kind": "try",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "dsn",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Array {
                          "items": Array [
                            Entry {
                              "byRef": false,
                              "key": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'unix_socket'",
                                "unicode": false,
                                "value": "unix_socket",
                              },
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "invalid_socket",
                              },
                            },
                          ],
                          "kind": "array",
                          "shortForm": false,
                        },
                        Bin {
                          "kind": "bin",
                          "left": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'unix_socket='",
                            "unicode": false,
                            "value": "unix_socket=",
                          },
                          "right": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "socket",
                          },
                          "type": ".",
                        },
                      ],
                      "kind": "call",
                      "what": StaticLookup {
                        "kind": "staticlookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getDSN",
                        },
                        "what": Name {
                          "kind": "name",
                          "name": "MySQLPDOTest",
                          "resolution": "uqn",
                        },
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                Try {
                  "always": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "db",
                          },
                          "operator": "=",
                          "right": Silent {
                            "expr": New {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "dsn",
                                },
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "user",
                                },
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "pass",
                                },
                              ],
                              "kind": "new",
                              "what": Name {
                                "kind": "name",
                                "name": "PDO",
                                "resolution": "uqn",
                              },
                            },
                            "kind": "silent",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "catches": Array [
                    Catch {
                      "body": Block {
                        "children": Array [
                          ExpressionStatement {
                            "expression": Call {
                              "arguments": Array [
                                String {
                                  "isDoubleQuote": true,
                                  "kind": "string",
                                  "raw": "\\"[025] DSN=%s, %s\\\\n\\"",
                                  "unicode": false,
                                  "value": "[025] DSN=%s, %s
",
                                },
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "dsn",
                                },
                                Call {
                                  "arguments": Array [],
                                  "kind": "call",
                                  "what": PropertyLookup {
                                    "kind": "propertylookup",
                                    "offset": Identifier {
                                      "kind": "identifier",
                                      "name": "getMessage",
                                    },
                                    "what": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "e",
                                    },
                                  },
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "printf",
                                "resolution": "uqn",
                              },
                            },
                            "kind": "expressionstatement",
                          },
                        ],
                        "kind": "block",
                      },
                      "kind": "catch",
                      "variable": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "e",
                      },
                      "what": Array [
                        Name {
                          "kind": "name",
                          "name": "PDOException",
                          "resolution": "uqn",
                        },
                      ],
                    },
                  ],
                  "kind": "try",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Name {
                "kind": "name",
                "name": "PDO_MYSQL_TEST_SOCKET",
                "resolution": "uqn",
              },
              "right": Bin {
                "kind": "bin",
                "left": Call {
                  "arguments": Array [
                    Name {
                      "kind": "name",
                      "name": "PDO_MYSQL_TEST_DSN",
                      "resolution": "uqn",
                    },
                    Name {
                      "kind": "name",
                      "name": "PDO_MYSQL_TEST_SOCKET",
                      "resolution": "uqn",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "stristr",
                    "resolution": "uqn",
                  },
                },
                "parenthesizedExpression": true,
                "right": Boolean {
                  "kind": "boolean",
                  "raw": "false",
                  "value": false,
                },
                "type": "!==",
              },
              "type": "&&",
            },
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "have_charset_support",
              },
              "operator": "=",
              "right": Boolean {
                "kind": "boolean",
                "raw": "false",
                "value": false,
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "dsn",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [],
                "kind": "call",
                "what": StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "getDSN",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "MySQLPDOTest",
                    "resolution": "uqn",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          Try {
            "always": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "db",
                    },
                    "operator": "=",
                    "right": New {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "dsn",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "user",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "pass",
                        },
                      ],
                      "kind": "new",
                      "what": Name {
                        "kind": "name",
                        "name": "PDO",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "stmt",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'SELECT VERSION() as _version'",
                          "unicode": false,
                          "value": "SELECT VERSION() as _version",
                        },
                      ],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "query",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "db",
                        },
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "version",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        StaticLookup {
                          "kind": "staticlookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "FETCH_ASSOC",
                          },
                          "what": Name {
                            "kind": "name",
                            "name": "PDO",
                            "resolution": "uqn",
                          },
                        },
                      ],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "fetch",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "stmt",
                        },
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "tmp",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'.'",
                          "unicode": false,
                          "value": ".",
                        },
                        OffsetLookup {
                          "kind": "offsetlookup",
                          "offset": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'_version'",
                            "unicode": false,
                            "value": "_version",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "version",
                          },
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "explode",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "have_charset_support",
                          },
                          "operator": "=",
                          "right": Boolean {
                            "kind": "boolean",
                            "raw": "true",
                            "value": true,
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "tmp",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "count",
                          "resolution": "uqn",
                        },
                      },
                      "parenthesizedExpression": true,
                      "right": Number {
                        "kind": "number",
                        "value": "3",
                      },
                      "type": "==",
                    },
                    "right": Bin {
                      "kind": "bin",
                      "left": Bin {
                        "kind": "bin",
                        "left": Bin {
                          "kind": "bin",
                          "left": OffsetLookup {
                            "kind": "offsetlookup",
                            "offset": Number {
                              "kind": "number",
                              "value": "0",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "tmp",
                            },
                          },
                          "right": Number {
                            "kind": "number",
                            "value": "4",
                          },
                          "type": ">=",
                        },
                        "parenthesizedExpression": true,
                        "right": Bin {
                          "kind": "bin",
                          "left": OffsetLookup {
                            "kind": "offsetlookup",
                            "offset": Number {
                              "kind": "number",
                              "value": "1",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "tmp",
                            },
                          },
                          "right": Number {
                            "kind": "number",
                            "value": "1",
                          },
                          "type": ">=",
                        },
                        "type": "&&",
                      },
                      "parenthesizedExpression": true,
                      "right": Bin {
                        "kind": "bin",
                        "left": OffsetLookup {
                          "kind": "offsetlookup",
                          "offset": Number {
                            "kind": "number",
                            "value": "0",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "tmp",
                          },
                        },
                        "parenthesizedExpression": true,
                        "right": Number {
                          "kind": "number",
                          "value": "5",
                        },
                        "type": ">=",
                      },
                      "type": "||",
                    },
                    "type": "&&",
                  },
                },
              ],
              "kind": "block",
            },
            "catches": Array [
              Catch {
                "body": Block {
                  "children": Array [
                    ExpressionStatement {
                      "expression": Call {
                        "arguments": Array [
                          String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"[026] DSN=%s, %s\\\\n\\"",
                            "unicode": false,
                            "value": "[026] DSN=%s, %s
",
                          },
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "dsn",
                          },
                          Call {
                            "arguments": Array [],
                            "kind": "call",
                            "what": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "getMessage",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "e",
                              },
                            },
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "printf",
                          "resolution": "uqn",
                        },
                      },
                      "kind": "expressionstatement",
                    },
                  ],
                  "kind": "block",
                },
                "kind": "catch",
                "variable": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "e",
                },
                "what": Array [
                  Name {
                    "kind": "name",
                    "name": "PDOException",
                    "resolution": "uqn",
                  },
                ],
              },
            ],
            "kind": "try",
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "charset",
                    },
                    "operator": "=",
                    "right": Name {
                      "kind": "name",
                      "name": "PDO_MYSQL_TEST_CHARSET",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "invalid_charset",
                    },
                    "operator": "=",
                    "right": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'invalid'",
                      "unicode": false,
                      "value": "invalid",
                    },
                  },
                  "kind": "expressionstatement",
                },
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "dsn",
                          },
                          "operator": "=",
                          "right": Call {
                            "arguments": Array [],
                            "kind": "call",
                            "what": StaticLookup {
                              "kind": "staticlookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "getDSN",
                              },
                              "what": Name {
                                "kind": "name",
                                "name": "MySQLPDOTest",
                                "resolution": "uqn",
                              },
                            },
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "db",
                          },
                          "operator": "=",
                          "right": New {
                            "arguments": Array [
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "dsn",
                              },
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "user",
                              },
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "pass",
                              },
                            ],
                            "kind": "new",
                            "what": Name {
                              "kind": "name",
                              "name": "PDO",
                              "resolution": "uqn",
                            },
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "stmt",
                          },
                          "operator": "=",
                          "right": Call {
                            "arguments": Array [
                              Call {
                                "arguments": Array [
                                  String {
                                    "isDoubleQuote": false,
                                    "kind": "string",
                                    "raw": "'SHOW CHARACTER SET LIKE \\"%s\\"'",
                                    "unicode": false,
                                    "value": "SHOW CHARACTER SET LIKE \\"%s\\"",
                                  },
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "charset",
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "sprintf",
                                  "resolution": "uqn",
                                },
                              },
                            ],
                            "kind": "call",
                            "what": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "query",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "db",
                              },
                            },
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "tmp",
                          },
                          "operator": "=",
                          "right": Call {
                            "arguments": Array [
                              StaticLookup {
                                "kind": "staticlookup",
                                "offset": Identifier {
                                  "kind": "identifier",
                                  "name": "FETCH_ASSOC",
                                },
                                "what": Name {
                                  "kind": "name",
                                  "name": "PDO",
                                  "resolution": "uqn",
                                },
                              },
                            ],
                            "kind": "call",
                            "what": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "fetch",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "stmt",
                              },
                            },
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "have_charset",
                          },
                          "operator": "=",
                          "right": RetIf {
                            "falseExpr": Boolean {
                              "kind": "boolean",
                              "raw": "true",
                              "value": true,
                            },
                            "kind": "retif",
                            "test": Empty {
                              "expression": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "tmp",
                              },
                              "kind": "empty",
                              "parenthesizedExpression": true,
                            },
                            "trueExpr": Boolean {
                              "kind": "boolean",
                              "raw": "false",
                              "value": false,
                            },
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      If {
                        "alternate": Block {
                          "children": Array [
                            ExpressionStatement {
                              "expression": Call {
                                "arguments": Array [
                                  String {
                                    "isDoubleQuote": true,
                                    "kind": "string",
                                    "raw": "\\"[030] You're trying to run the tests with charset '%s' which seems not supported by the server!\\"",
                                    "unicode": false,
                                    "value": "[030] You're trying to run the tests with charset '%s' which seems not supported by the server!",
                                  },
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "charset",
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "printf",
                                  "resolution": "uqn",
                                },
                              },
                              "kind": "expressionstatement",
                            },
                          ],
                          "kind": "block",
                        },
                        "body": Block {
                          "children": Array [
                            ExpressionStatement {
                              "expression": Assign {
                                "kind": "assign",
                                "left": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "dsn",
                                },
                                "operator": "=",
                                "right": Call {
                                  "arguments": Array [
                                    Array {
                                      "items": Array [
                                        Entry {
                                          "byRef": false,
                                          "key": String {
                                            "isDoubleQuote": false,
                                            "kind": "string",
                                            "raw": "'charset'",
                                            "unicode": false,
                                            "value": "charset",
                                          },
                                          "kind": "entry",
                                          "unpack": false,
                                          "value": Variable {
                                            "curly": false,
                                            "kind": "variable",
                                            "name": "charset",
                                          },
                                        },
                                      ],
                                      "kind": "array",
                                      "shortForm": false,
                                    },
                                    Bin {
                                      "kind": "bin",
                                      "left": String {
                                        "isDoubleQuote": false,
                                        "kind": "string",
                                        "raw": "'charset='",
                                        "unicode": false,
                                        "value": "charset=",
                                      },
                                      "right": Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "invalid_charset",
                                      },
                                      "type": ".",
                                    },
                                  ],
                                  "kind": "call",
                                  "what": StaticLookup {
                                    "kind": "staticlookup",
                                    "offset": Identifier {
                                      "kind": "identifier",
                                      "name": "getDSN",
                                    },
                                    "what": Name {
                                      "kind": "name",
                                      "name": "MySQLPDOTest",
                                      "resolution": "uqn",
                                    },
                                  },
                                },
                              },
                              "kind": "expressionstatement",
                            },
                            Try {
                              "always": null,
                              "body": Block {
                                "children": Array [
                                  ExpressionStatement {
                                    "expression": Assign {
                                      "kind": "assign",
                                      "left": Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "db",
                                      },
                                      "operator": "=",
                                      "right": Silent {
                                        "expr": New {
                                          "arguments": Array [
                                            Variable {
                                              "curly": false,
                                              "kind": "variable",
                                              "name": "dsn",
                                            },
                                            Variable {
                                              "curly": false,
                                              "kind": "variable",
                                              "name": "user",
                                            },
                                            Variable {
                                              "curly": false,
                                              "kind": "variable",
                                              "name": "pass",
                                            },
                                          ],
                                          "kind": "new",
                                          "what": Name {
                                            "kind": "name",
                                            "name": "PDO",
                                            "resolution": "uqn",
                                          },
                                        },
                                        "kind": "silent",
                                      },
                                    },
                                    "kind": "expressionstatement",
                                  },
                                ],
                                "kind": "block",
                              },
                              "catches": Array [
                                Catch {
                                  "body": Block {
                                    "children": Array [
                                      ExpressionStatement {
                                        "expression": Assign {
                                          "kind": "assign",
                                          "left": Variable {
                                            "curly": false,
                                            "kind": "variable",
                                            "name": "tmp",
                                          },
                                          "operator": "=",
                                          "right": Call {
                                            "arguments": Array [],
                                            "kind": "call",
                                            "what": PropertyLookup {
                                              "kind": "propertylookup",
                                              "offset": Identifier {
                                                "kind": "identifier",
                                                "name": "getMessage",
                                              },
                                              "what": Variable {
                                                "curly": false,
                                                "kind": "variable",
                                                "name": "e",
                                              },
                                            },
                                          },
                                        },
                                        "kind": "expressionstatement",
                                      },
                                      If {
                                        "alternate": null,
                                        "body": ExpressionStatement {
                                          "expression": Call {
                                            "arguments": Array [
                                              String {
                                                "isDoubleQuote": true,
                                                "kind": "string",
                                                "raw": "\\"[027] TODO - Cannot find proper error codes: %s\\\\n\\"",
                                                "unicode": false,
                                                "value": "[027] TODO - Cannot find proper error codes: %s
",
                                              },
                                              Variable {
                                                "curly": false,
                                                "kind": "variable",
                                                "name": "tmp",
                                              },
                                            ],
                                            "kind": "call",
                                            "what": Name {
                                              "kind": "name",
                                              "name": "printf",
                                              "resolution": "uqn",
                                            },
                                          },
                                          "kind": "expressionstatement",
                                        },
                                        "kind": "if",
                                        "shortForm": false,
                                        "test": Bin {
                                          "kind": "bin",
                                          "left": Unary {
                                            "kind": "unary",
                                            "type": "!",
                                            "what": Call {
                                              "arguments": Array [
                                                Variable {
                                                  "curly": false,
                                                  "kind": "variable",
                                                  "name": "tmp",
                                                },
                                                String {
                                                  "isDoubleQuote": false,
                                                  "kind": "string",
                                                  "raw": "'sqlstatecode'",
                                                  "unicode": false,
                                                  "value": "sqlstatecode",
                                                },
                                              ],
                                              "kind": "call",
                                              "what": Name {
                                                "kind": "name",
                                                "name": "stristr",
                                                "resolution": "uqn",
                                              },
                                            },
                                          },
                                          "right": Unary {
                                            "kind": "unary",
                                            "type": "!",
                                            "what": Call {
                                              "arguments": Array [
                                                Variable {
                                                  "curly": false,
                                                  "kind": "variable",
                                                  "name": "tmp",
                                                },
                                                String {
                                                  "isDoubleQuote": false,
                                                  "kind": "string",
                                                  "raw": "'mysqlinternalerrcode'",
                                                  "unicode": false,
                                                  "value": "mysqlinternalerrcode",
                                                },
                                              ],
                                              "kind": "call",
                                              "what": Name {
                                                "kind": "name",
                                                "name": "stristr",
                                                "resolution": "uqn",
                                              },
                                            },
                                          },
                                          "type": "||",
                                        },
                                      },
                                    ],
                                    "kind": "block",
                                  },
                                  "kind": "catch",
                                  "variable": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "e",
                                  },
                                  "what": Array [
                                    Name {
                                      "kind": "name",
                                      "name": "PDOException",
                                      "resolution": "uqn",
                                    },
                                  ],
                                },
                              ],
                              "kind": "try",
                            },
                            ExpressionStatement {
                              "expression": Assign {
                                "kind": "assign",
                                "left": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "dsn",
                                },
                                "operator": "=",
                                "right": Call {
                                  "arguments": Array [
                                    Array {
                                      "items": Array [
                                        Entry {
                                          "byRef": false,
                                          "key": String {
                                            "isDoubleQuote": false,
                                            "kind": "string",
                                            "raw": "'charset'",
                                            "unicode": false,
                                            "value": "charset",
                                          },
                                          "kind": "entry",
                                          "unpack": false,
                                          "value": Variable {
                                            "curly": false,
                                            "kind": "variable",
                                            "name": "invalid_charset",
                                          },
                                        },
                                      ],
                                      "kind": "array",
                                      "shortForm": false,
                                    },
                                    Bin {
                                      "kind": "bin",
                                      "left": String {
                                        "isDoubleQuote": false,
                                        "kind": "string",
                                        "raw": "'charset='",
                                        "unicode": false,
                                        "value": "charset=",
                                      },
                                      "right": Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "charset",
                                      },
                                      "type": ".",
                                    },
                                  ],
                                  "kind": "call",
                                  "what": StaticLookup {
                                    "kind": "staticlookup",
                                    "offset": Identifier {
                                      "kind": "identifier",
                                      "name": "getDSN",
                                    },
                                    "what": Name {
                                      "kind": "name",
                                      "name": "MySQLPDOTest",
                                      "resolution": "uqn",
                                    },
                                  },
                                },
                              },
                              "kind": "expressionstatement",
                            },
                            Try {
                              "always": null,
                              "body": Block {
                                "children": Array [
                                  ExpressionStatement {
                                    "expression": Assign {
                                      "kind": "assign",
                                      "left": Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "db",
                                      },
                                      "operator": "=",
                                      "right": Silent {
                                        "expr": New {
                                          "arguments": Array [
                                            Variable {
                                              "curly": false,
                                              "kind": "variable",
                                              "name": "dsn",
                                            },
                                            Variable {
                                              "curly": false,
                                              "kind": "variable",
                                              "name": "user",
                                            },
                                            Variable {
                                              "curly": false,
                                              "kind": "variable",
                                              "name": "pass",
                                            },
                                          ],
                                          "kind": "new",
                                          "what": Name {
                                            "kind": "name",
                                            "name": "PDO",
                                            "resolution": "uqn",
                                          },
                                        },
                                        "kind": "silent",
                                      },
                                    },
                                    "kind": "expressionstatement",
                                  },
                                  ExpressionStatement {
                                    "expression": Assign {
                                      "kind": "assign",
                                      "left": Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "stmt",
                                      },
                                      "operator": "=",
                                      "right": Call {
                                        "arguments": Array [
                                          String {
                                            "isDoubleQuote": false,
                                            "kind": "string",
                                            "raw": "'SELECT @@character_set_connection AS _charset'",
                                            "unicode": false,
                                            "value": "SELECT @@character_set_connection AS _charset",
                                          },
                                        ],
                                        "kind": "call",
                                        "what": PropertyLookup {
                                          "kind": "propertylookup",
                                          "offset": Identifier {
                                            "kind": "identifier",
                                            "name": "query",
                                          },
                                          "what": Variable {
                                            "curly": false,
                                            "kind": "variable",
                                            "name": "db",
                                          },
                                        },
                                      },
                                    },
                                    "kind": "expressionstatement",
                                  },
                                  ExpressionStatement {
                                    "expression": Assign {
                                      "kind": "assign",
                                      "left": Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "tmp",
                                      },
                                      "operator": "=",
                                      "right": Call {
                                        "arguments": Array [
                                          StaticLookup {
                                            "kind": "staticlookup",
                                            "offset": Identifier {
                                              "kind": "identifier",
                                              "name": "FETCH_ASSOC",
                                            },
                                            "what": Name {
                                              "kind": "name",
                                              "name": "PDO",
                                              "resolution": "uqn",
                                            },
                                          },
                                        ],
                                        "kind": "call",
                                        "what": PropertyLookup {
                                          "kind": "propertylookup",
                                          "offset": Identifier {
                                            "kind": "identifier",
                                            "name": "fetch",
                                          },
                                          "what": Variable {
                                            "curly": false,
                                            "kind": "variable",
                                            "name": "stmt",
                                          },
                                        },
                                      },
                                    },
                                    "kind": "expressionstatement",
                                  },
                                  If {
                                    "alternate": null,
                                    "body": ExpressionStatement {
                                      "expression": Call {
                                        "arguments": Array [
                                          String {
                                            "isDoubleQuote": true,
                                            "kind": "string",
                                            "raw": "\\"[028] Character sets has not been set, @@character_set_connection reports '%s', expecting '%s'\\"",
                                            "unicode": false,
                                            "value": "[028] Character sets has not been set, @@character_set_connection reports '%s', expecting '%s'",
                                          },
                                          OffsetLookup {
                                            "kind": "offsetlookup",
                                            "offset": String {
                                              "isDoubleQuote": false,
                                              "kind": "string",
                                              "raw": "'_charset'",
                                              "unicode": false,
                                              "value": "_charset",
                                            },
                                            "what": Variable {
                                              "curly": false,
                                              "kind": "variable",
                                              "name": "tmp",
                                            },
                                          },
                                          Variable {
                                            "curly": false,
                                            "kind": "variable",
                                            "name": "charset",
                                          },
                                        ],
                                        "kind": "call",
                                        "what": Name {
                                          "kind": "name",
                                          "name": "printf",
                                          "resolution": "uqn",
                                        },
                                      },
                                      "kind": "expressionstatement",
                                    },
                                    "kind": "if",
                                    "shortForm": false,
                                    "test": Bin {
                                      "kind": "bin",
                                      "left": OffsetLookup {
                                        "kind": "offsetlookup",
                                        "offset": String {
                                          "isDoubleQuote": false,
                                          "kind": "string",
                                          "raw": "'_charset'",
                                          "unicode": false,
                                          "value": "_charset",
                                        },
                                        "what": Variable {
                                          "curly": false,
                                          "kind": "variable",
                                          "name": "tmp",
                                        },
                                      },
                                      "right": Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "charset",
                                      },
                                      "type": "!=",
                                    },
                                  },
                                ],
                                "kind": "block",
                              },
                              "catches": Array [
                                Catch {
                                  "body": Block {
                                    "children": Array [
                                      ExpressionStatement {
                                        "expression": Call {
                                          "arguments": Array [
                                            String {
                                              "isDoubleQuote": true,
                                              "kind": "string",
                                              "raw": "\\"[029] DSN=%s, %s\\\\n\\"",
                                              "unicode": false,
                                              "value": "[029] DSN=%s, %s
",
                                            },
                                            Variable {
                                              "curly": false,
                                              "kind": "variable",
                                              "name": "dsn",
                                            },
                                            Call {
                                              "arguments": Array [],
                                              "kind": "call",
                                              "what": PropertyLookup {
                                                "kind": "propertylookup",
                                                "offset": Identifier {
                                                  "kind": "identifier",
                                                  "name": "getMessage",
                                                },
                                                "what": Variable {
                                                  "curly": false,
                                                  "kind": "variable",
                                                  "name": "e",
                                                },
                                              },
                                            },
                                          ],
                                          "kind": "call",
                                          "what": Name {
                                            "kind": "name",
                                            "name": "printf",
                                            "resolution": "uqn",
                                          },
                                        },
                                        "kind": "expressionstatement",
                                      },
                                    ],
                                    "kind": "block",
                                  },
                                  "kind": "catch",
                                  "variable": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "e",
                                  },
                                  "what": Array [
                                    Name {
                                      "kind": "name",
                                      "name": "PDOException",
                                      "resolution": "uqn",
                                    },
                                  ],
                                },
                              ],
                              "kind": "try",
                            },
                          ],
                          "kind": "block",
                        },
                        "kind": "if",
                        "shortForm": false,
                        "test": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "have_charset",
                        },
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "have_charset_support",
                  },
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Name {
              "kind": "name",
              "name": "PDO_MYSQL_TEST_CHARSET",
              "resolution": "uqn",
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "dsn",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": StaticLookup {
                        "kind": "staticlookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getDSN",
                        },
                        "what": Name {
                          "kind": "name",
                          "name": "MySQLPDOTest",
                          "resolution": "uqn",
                        },
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "db",
                    },
                    "operator": "=",
                    "right": New {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "dsn",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "user",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "pass",
                        },
                      ],
                      "kind": "new",
                      "what": Name {
                        "kind": "name",
                        "name": "PDO",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "stmt",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'SHOW CHARACTER SET LIKE \\"latin1\\"'",
                          "unicode": false,
                          "value": "SHOW CHARACTER SET LIKE \\"latin1\\"",
                        },
                      ],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "query",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "db",
                        },
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "tmp",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        StaticLookup {
                          "kind": "staticlookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "FETCH_ASSOC",
                          },
                          "what": Name {
                            "kind": "name",
                            "name": "PDO",
                            "resolution": "uqn",
                          },
                        },
                      ],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "fetch",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "stmt",
                        },
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "have_latin1",
                    },
                    "operator": "=",
                    "right": RetIf {
                      "falseExpr": Boolean {
                        "kind": "boolean",
                        "raw": "true",
                        "value": true,
                      },
                      "kind": "retif",
                      "test": Empty {
                        "expression": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "tmp",
                        },
                        "kind": "empty",
                        "parenthesizedExpression": true,
                      },
                      "trueExpr": Boolean {
                        "kind": "boolean",
                        "raw": "false",
                        "value": false,
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "stmt",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'SHOW CHARACTER SET LIKE \\"latin2\\"'",
                          "unicode": false,
                          "value": "SHOW CHARACTER SET LIKE \\"latin2\\"",
                        },
                      ],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "query",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "db",
                        },
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "tmp",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        StaticLookup {
                          "kind": "staticlookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "FETCH_ASSOC",
                          },
                          "what": Name {
                            "kind": "name",
                            "name": "PDO",
                            "resolution": "uqn",
                          },
                        },
                      ],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "fetch",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "stmt",
                        },
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "have_latin2",
                    },
                    "operator": "=",
                    "right": RetIf {
                      "falseExpr": Boolean {
                        "kind": "boolean",
                        "raw": "true",
                        "value": true,
                      },
                      "kind": "retif",
                      "test": Empty {
                        "expression": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "tmp",
                        },
                        "kind": "empty",
                        "parenthesizedExpression": true,
                      },
                      "trueExpr": Boolean {
                        "kind": "boolean",
                        "raw": "false",
                        "value": false,
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      Try {
                        "always": null,
                        "body": Block {
                          "children": Array [
                            ExpressionStatement {
                              "expression": Assign {
                                "kind": "assign",
                                "left": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "dsn",
                                },
                                "operator": "=",
                                "right": Call {
                                  "arguments": Array [
                                    Array {
                                      "items": Array [
                                        Entry {
                                          "byRef": false,
                                          "key": String {
                                            "isDoubleQuote": false,
                                            "kind": "string",
                                            "raw": "'charset'",
                                            "unicode": false,
                                            "value": "charset",
                                          },
                                          "kind": "entry",
                                          "unpack": false,
                                          "value": String {
                                            "isDoubleQuote": false,
                                            "kind": "string",
                                            "raw": "'latin1'",
                                            "unicode": false,
                                            "value": "latin1",
                                          },
                                        },
                                      ],
                                      "kind": "array",
                                      "shortForm": false,
                                    },
                                  ],
                                  "kind": "call",
                                  "what": StaticLookup {
                                    "kind": "staticlookup",
                                    "offset": Identifier {
                                      "kind": "identifier",
                                      "name": "getDSN",
                                    },
                                    "what": Name {
                                      "kind": "name",
                                      "name": "MySQLPDOTest",
                                      "resolution": "uqn",
                                    },
                                  },
                                },
                              },
                              "kind": "expressionstatement",
                            },
                            ExpressionStatement {
                              "expression": Assign {
                                "kind": "assign",
                                "left": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "db",
                                },
                                "operator": "=",
                                "right": New {
                                  "arguments": Array [
                                    Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "dsn",
                                    },
                                    Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "user",
                                    },
                                    Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "pass",
                                    },
                                  ],
                                  "kind": "new",
                                  "what": Name {
                                    "kind": "name",
                                    "name": "PDO",
                                    "resolution": "uqn",
                                  },
                                },
                              },
                              "kind": "expressionstatement",
                            },
                            ExpressionStatement {
                              "expression": Assign {
                                "kind": "assign",
                                "left": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "stmt",
                                },
                                "operator": "=",
                                "right": Call {
                                  "arguments": Array [
                                    String {
                                      "isDoubleQuote": false,
                                      "kind": "string",
                                      "raw": "'SELECT @@character_set_connection AS _charset'",
                                      "unicode": false,
                                      "value": "SELECT @@character_set_connection AS _charset",
                                    },
                                  ],
                                  "kind": "call",
                                  "what": PropertyLookup {
                                    "kind": "propertylookup",
                                    "offset": Identifier {
                                      "kind": "identifier",
                                      "name": "query",
                                    },
                                    "what": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "db",
                                    },
                                  },
                                },
                              },
                              "kind": "expressionstatement",
                            },
                            ExpressionStatement {
                              "expression": Assign {
                                "kind": "assign",
                                "left": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "tmp",
                                },
                                "operator": "=",
                                "right": Call {
                                  "arguments": Array [
                                    StaticLookup {
                                      "kind": "staticlookup",
                                      "offset": Identifier {
                                        "kind": "identifier",
                                        "name": "FETCH_ASSOC",
                                      },
                                      "what": Name {
                                        "kind": "name",
                                        "name": "PDO",
                                        "resolution": "uqn",
                                      },
                                    },
                                  ],
                                  "kind": "call",
                                  "what": PropertyLookup {
                                    "kind": "propertylookup",
                                    "offset": Identifier {
                                      "kind": "identifier",
                                      "name": "fetch",
                                    },
                                    "what": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "stmt",
                                    },
                                  },
                                },
                              },
                              "kind": "expressionstatement",
                            },
                            If {
                              "alternate": null,
                              "body": ExpressionStatement {
                                "expression": Call {
                                  "arguments": Array [
                                    String {
                                      "isDoubleQuote": true,
                                      "kind": "string",
                                      "raw": "\\"[031] DSN = %s, Character sets has not been set, @@character_set_connection reports '%s', expecting '%s'\\"",
                                      "unicode": false,
                                      "value": "[031] DSN = %s, Character sets has not been set, @@character_set_connection reports '%s', expecting '%s'",
                                    },
                                    Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "dsn",
                                    },
                                    OffsetLookup {
                                      "kind": "offsetlookup",
                                      "offset": String {
                                        "isDoubleQuote": false,
                                        "kind": "string",
                                        "raw": "'_charset'",
                                        "unicode": false,
                                        "value": "_charset",
                                      },
                                      "what": Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "tmp",
                                      },
                                    },
                                    String {
                                      "isDoubleQuote": false,
                                      "kind": "string",
                                      "raw": "'latin1'",
                                      "unicode": false,
                                      "value": "latin1",
                                    },
                                  ],
                                  "kind": "call",
                                  "what": Name {
                                    "kind": "name",
                                    "name": "printf",
                                    "resolution": "uqn",
                                  },
                                },
                                "kind": "expressionstatement",
                              },
                              "kind": "if",
                              "shortForm": false,
                              "test": Bin {
                                "kind": "bin",
                                "left": OffsetLookup {
                                  "kind": "offsetlookup",
                                  "offset": String {
                                    "isDoubleQuote": false,
                                    "kind": "string",
                                    "raw": "'_charset'",
                                    "unicode": false,
                                    "value": "_charset",
                                  },
                                  "what": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "tmp",
                                  },
                                },
                                "right": String {
                                  "isDoubleQuote": false,
                                  "kind": "string",
                                  "raw": "'latin1'",
                                  "unicode": false,
                                  "value": "latin1",
                                },
                                "type": "!=",
                              },
                            },
                          ],
                          "kind": "block",
                        },
                        "catches": Array [
                          Catch {
                            "body": Block {
                              "children": Array [
                                ExpressionStatement {
                                  "expression": Call {
                                    "arguments": Array [
                                      String {
                                        "isDoubleQuote": true,
                                        "kind": "string",
                                        "raw": "\\"[032] %s\\\\n\\"",
                                        "unicode": false,
                                        "value": "[032] %s
",
                                      },
                                      Call {
                                        "arguments": Array [],
                                        "kind": "call",
                                        "what": PropertyLookup {
                                          "kind": "propertylookup",
                                          "offset": Identifier {
                                            "kind": "identifier",
                                            "name": "getMessage",
                                          },
                                          "what": Variable {
                                            "curly": false,
                                            "kind": "variable",
                                            "name": "e",
                                          },
                                        },
                                      },
                                    ],
                                    "kind": "call",
                                    "what": Name {
                                      "kind": "name",
                                      "name": "printf",
                                      "resolution": "uqn",
                                    },
                                  },
                                  "kind": "expressionstatement",
                                },
                              ],
                              "kind": "block",
                            },
                            "kind": "catch",
                            "variable": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "e",
                            },
                            "what": Array [
                              Name {
                                "kind": "name",
                                "name": "PDOException",
                                "resolution": "uqn",
                              },
                            ],
                          },
                        ],
                        "kind": "try",
                      },
                      Try {
                        "always": null,
                        "body": Block {
                          "children": Array [
                            ExpressionStatement {
                              "expression": Assign {
                                "kind": "assign",
                                "left": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "dsn",
                                },
                                "operator": "=",
                                "right": Call {
                                  "arguments": Array [
                                    Array {
                                      "items": Array [
                                        Entry {
                                          "byRef": false,
                                          "key": String {
                                            "isDoubleQuote": false,
                                            "kind": "string",
                                            "raw": "'charset'",
                                            "unicode": false,
                                            "value": "charset",
                                          },
                                          "kind": "entry",
                                          "unpack": false,
                                          "value": String {
                                            "isDoubleQuote": false,
                                            "kind": "string",
                                            "raw": "'latin2'",
                                            "unicode": false,
                                            "value": "latin2",
                                          },
                                        },
                                      ],
                                      "kind": "array",
                                      "shortForm": false,
                                    },
                                  ],
                                  "kind": "call",
                                  "what": StaticLookup {
                                    "kind": "staticlookup",
                                    "offset": Identifier {
                                      "kind": "identifier",
                                      "name": "getDSN",
                                    },
                                    "what": Name {
                                      "kind": "name",
                                      "name": "MySQLPDOTest",
                                      "resolution": "uqn",
                                    },
                                  },
                                },
                              },
                              "kind": "expressionstatement",
                            },
                            ExpressionStatement {
                              "expression": Assign {
                                "kind": "assign",
                                "left": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "db",
                                },
                                "operator": "=",
                                "right": New {
                                  "arguments": Array [
                                    Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "dsn",
                                    },
                                    Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "user",
                                    },
                                    Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "pass",
                                    },
                                  ],
                                  "kind": "new",
                                  "what": Name {
                                    "kind": "name",
                                    "name": "PDO",
                                    "resolution": "uqn",
                                  },
                                },
                              },
                              "kind": "expressionstatement",
                            },
                            ExpressionStatement {
                              "expression": Assign {
                                "kind": "assign",
                                "left": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "stmt",
                                },
                                "operator": "=",
                                "right": Call {
                                  "arguments": Array [
                                    String {
                                      "isDoubleQuote": false,
                                      "kind": "string",
                                      "raw": "'SELECT @@character_set_connection AS _charset'",
                                      "unicode": false,
                                      "value": "SELECT @@character_set_connection AS _charset",
                                    },
                                  ],
                                  "kind": "call",
                                  "what": PropertyLookup {
                                    "kind": "propertylookup",
                                    "offset": Identifier {
                                      "kind": "identifier",
                                      "name": "query",
                                    },
                                    "what": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "db",
                                    },
                                  },
                                },
                              },
                              "kind": "expressionstatement",
                            },
                            ExpressionStatement {
                              "expression": Assign {
                                "kind": "assign",
                                "left": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "tmp",
                                },
                                "operator": "=",
                                "right": Call {
                                  "arguments": Array [
                                    StaticLookup {
                                      "kind": "staticlookup",
                                      "offset": Identifier {
                                        "kind": "identifier",
                                        "name": "FETCH_ASSOC",
                                      },
                                      "what": Name {
                                        "kind": "name",
                                        "name": "PDO",
                                        "resolution": "uqn",
                                      },
                                    },
                                  ],
                                  "kind": "call",
                                  "what": PropertyLookup {
                                    "kind": "propertylookup",
                                    "offset": Identifier {
                                      "kind": "identifier",
                                      "name": "fetch",
                                    },
                                    "what": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "stmt",
                                    },
                                  },
                                },
                              },
                              "kind": "expressionstatement",
                            },
                            If {
                              "alternate": null,
                              "body": ExpressionStatement {
                                "expression": Call {
                                  "arguments": Array [
                                    String {
                                      "isDoubleQuote": true,
                                      "kind": "string",
                                      "raw": "\\"[033] DSN = %s, character sets has not been set, @@character_set_connection reports '%s', expecting '%s'\\"",
                                      "unicode": false,
                                      "value": "[033] DSN = %s, character sets has not been set, @@character_set_connection reports '%s', expecting '%s'",
                                    },
                                    Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "dsn",
                                    },
                                    OffsetLookup {
                                      "kind": "offsetlookup",
                                      "offset": String {
                                        "isDoubleQuote": false,
                                        "kind": "string",
                                        "raw": "'_charset'",
                                        "unicode": false,
                                        "value": "_charset",
                                      },
                                      "what": Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "tmp",
                                      },
                                    },
                                    String {
                                      "isDoubleQuote": false,
                                      "kind": "string",
                                      "raw": "'latin2'",
                                      "unicode": false,
                                      "value": "latin2",
                                    },
                                  ],
                                  "kind": "call",
                                  "what": Name {
                                    "kind": "name",
                                    "name": "printf",
                                    "resolution": "uqn",
                                  },
                                },
                                "kind": "expressionstatement",
                              },
                              "kind": "if",
                              "shortForm": false,
                              "test": Bin {
                                "kind": "bin",
                                "left": OffsetLookup {
                                  "kind": "offsetlookup",
                                  "offset": String {
                                    "isDoubleQuote": false,
                                    "kind": "string",
                                    "raw": "'_charset'",
                                    "unicode": false,
                                    "value": "_charset",
                                  },
                                  "what": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "tmp",
                                  },
                                },
                                "right": String {
                                  "isDoubleQuote": false,
                                  "kind": "string",
                                  "raw": "'latin2'",
                                  "unicode": false,
                                  "value": "latin2",
                                },
                                "type": "!=",
                              },
                            },
                          ],
                          "kind": "block",
                        },
                        "catches": Array [
                          Catch {
                            "body": Block {
                              "children": Array [
                                ExpressionStatement {
                                  "expression": Call {
                                    "arguments": Array [
                                      String {
                                        "isDoubleQuote": true,
                                        "kind": "string",
                                        "raw": "\\"[034] %s\\\\n\\"",
                                        "unicode": false,
                                        "value": "[034] %s
",
                                      },
                                      Call {
                                        "arguments": Array [],
                                        "kind": "call",
                                        "what": PropertyLookup {
                                          "kind": "propertylookup",
                                          "offset": Identifier {
                                            "kind": "identifier",
                                            "name": "getMessage",
                                          },
                                          "what": Variable {
                                            "curly": false,
                                            "kind": "variable",
                                            "name": "e",
                                          },
                                        },
                                      },
                                    ],
                                    "kind": "call",
                                    "what": Name {
                                      "kind": "name",
                                      "name": "printf",
                                      "resolution": "uqn",
                                    },
                                  },
                                  "kind": "expressionstatement",
                                },
                              ],
                              "kind": "block",
                            },
                            "kind": "catch",
                            "variable": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "e",
                            },
                            "what": Array [
                              Name {
                                "kind": "name",
                                "name": "PDOException",
                                "resolution": "uqn",
                              },
                            ],
                          },
                        ],
                        "kind": "try",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "have_latin1",
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "have_latin2",
                    },
                    "type": "&&",
                  },
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Variable {
              "curly": false,
              "kind": "variable",
              "name": "have_charset_support",
            },
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"[001] %s, [%s] %s\\\\n\\"",
                      "unicode": false,
                      "value": "[001] %s, [%s] %s
",
                    },
                    Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getMessage",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "e",
                        },
                      },
                    },
                    RetIf {
                      "falseExpr": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'n/a'",
                        "unicode": false,
                        "value": "n/a",
                      },
                      "kind": "retif",
                      "test": Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "db",
                          },
                        ],
                        "kind": "call",
                        "parenthesizedExpression": true,
                        "what": Name {
                          "kind": "name",
                          "name": "is_object",
                          "resolution": "uqn",
                        },
                      },
                      "trueExpr": Call {
                        "arguments": Array [],
                        "kind": "call",
                        "what": PropertyLookup {
                          "kind": "propertylookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "errorCode",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "db",
                          },
                        },
                      },
                    },
                    RetIf {
                      "falseExpr": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'n/a'",
                        "unicode": false,
                        "value": "n/a",
                      },
                      "kind": "retif",
                      "test": Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "db",
                          },
                        ],
                        "kind": "call",
                        "parenthesizedExpression": true,
                        "what": Name {
                          "kind": "name",
                          "name": "is_object",
                          "resolution": "uqn",
                        },
                      },
                      "trueExpr": Call {
                        "arguments": Array [
                          String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "' '",
                            "unicode": false,
                            "value": " ",
                          },
                          Call {
                            "arguments": Array [],
                            "kind": "call",
                            "what": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "errorInfo",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "db",
                              },
                            },
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "implode",
                          "resolution": "uqn",
                        },
                      },
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "printf",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "PDOException",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"done!\\"",
          "unicode": false,
          "value": "done!",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
