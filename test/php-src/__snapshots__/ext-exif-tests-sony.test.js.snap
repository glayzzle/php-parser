// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Sony test 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "data",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Bin {
              "kind": "bin",
              "left": Bin {
                "kind": "bin",
                "left": Magic {
                  "kind": "magic",
                  "raw": "__DIR__",
                  "value": "__DIR__",
                },
                "right": Name {
                  "kind": "name",
                  "name": "DIRECTORY_SEPARATOR",
                  "resolution": "uqn",
                },
                "type": ".",
              },
              "right": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'sony.jpg'",
                "unicode": false,
                "value": "sony.jpg",
              },
              "type": ".",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "exif_read_data",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Exit {
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'Error: Unable to parse EXIF data'",
                "unicode": false,
                "value": "Error: Unable to parse EXIF data",
              },
              "kind": "exit",
              "useDie": false,
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Variable {
          "curly": false,
          "kind": "variable",
          "name": "data",
        },
      },
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Bin {
                  "kind": "bin",
                  "left": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'%s was %sfound'",
                    "unicode": false,
                    "value": "%s was %sfound",
                  },
                  "right": Name {
                    "kind": "name",
                    "name": "PHP_EOL",
                    "resolution": "uqn",
                  },
                  "type": ".",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "sony_tag",
                },
                RetIf {
                  "falseExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "''",
                    "unicode": false,
                    "value": "",
                  },
                  "kind": "retif",
                  "parenthesizedExpression": true,
                  "test": Unary {
                    "kind": "unary",
                    "type": "!",
                    "what": Isset {
                      "kind": "isset",
                      "variables": Array [
                        OffsetLookup {
                          "kind": "offsetlookup",
                          "offset": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "sony_tag",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "data",
                          },
                        },
                      ],
                    },
                  },
                  "trueExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'NOT '",
                    "unicode": false,
                    "value": "NOT ",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "printf",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Array {
        "items": Array [
          Entry {
            "byRef": false,
            "key": null,
            "kind": "entry",
            "unpack": false,
            "value": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'SonyModelID'",
              "unicode": false,
              "value": "SonyModelID",
            },
          },
          Entry {
            "byRef": false,
            "key": null,
            "kind": "entry",
            "unpack": false,
            "value": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'Panorama'",
              "unicode": false,
              "value": "Panorama",
            },
          },
          Entry {
            "byRef": false,
            "key": null,
            "kind": "entry",
            "unpack": false,
            "value": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'AntiBlur'",
              "unicode": false,
              "value": "AntiBlur",
            },
          },
        ],
        "kind": "array",
        "shortForm": true,
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "sony_tag",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
