// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #43993 (mb_substr_count() behaves differently to substr_count() with overlapping needles) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"abcabcabca\\"",
                "unicode": false,
                "value": "abcabcabca",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"abcabc\\"",
                "unicode": false,
                "value": "abcabc",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_substr_count",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"abcabcabca\\"",
                "unicode": false,
                "value": "abcabcabca",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"abc\\"",
                "unicode": false,
                "value": "abc",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_substr_count",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"abcabcabca\\"",
                "unicode": false,
                "value": "abcabcabca",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"cab\\"",
                "unicode": false,
                "value": "cab",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_substr_count",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"abcabcabca\\"",
                "unicode": false,
                "value": "abcabcabca",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"bca\\"",
                "unicode": false,
                "value": "bca",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_substr_count",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"ababababab\\"",
                "unicode": false,
                "value": "ababababab",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"ba\\"",
                "unicode": false,
                "value": "ba",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_substr_count",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"ababababab\\"",
                "unicode": false,
                "value": "ababababab",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"ab\\"",
                "unicode": false,
                "value": "ab",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_substr_count",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"ababababab\\"",
                "unicode": false,
                "value": "ababababab",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"bc\\"",
                "unicode": false,
                "value": "bc",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_substr_count",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"aaaaaaaaaa\\"",
                "unicode": false,
                "value": "aaaaaaaaaa",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"a\\"",
                "unicode": false,
                "value": "a",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_substr_count",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"aaaaaaaaaa\\"",
                "unicode": false,
                "value": "aaaaaaaaaa",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"b\\"",
                "unicode": false,
                "value": "b",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_substr_count",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
