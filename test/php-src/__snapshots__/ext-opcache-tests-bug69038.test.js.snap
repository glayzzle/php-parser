// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #69038 (switch(SOMECONSTANT) misbehaves) 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "a",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"bad\\"",
            "unicode": false,
            "value": "bad",
          },
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          Switch {
            "body": Block {
              "children": Array [
                Case {
                  "body": Block {
                    "children": Array [
                      Return {
                        "expr": String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"LALALAL\\"",
                          "unicode": false,
                          "value": "LALALAL",
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "case",
                  "test": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"LALALALA\\"",
                    "unicode": false,
                    "value": "LALALALA",
                  },
                },
                Case {
                  "body": Block {
                    "children": Array [
                      Return {
                        "expr": String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"okey\\"",
                          "unicode": false,
                          "value": "okey",
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "case",
                  "test": Name {
                    "kind": "name",
                    "name": "PHP_OS",
                    "resolution": "uqn",
                  },
                },
                Case {
                  "body": Block {
                    "children": Array [
                      Break {
                        "kind": "break",
                        "level": null,
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "case",
                  "test": null,
                },
              ],
              "kind": "block",
            },
            "kind": "switch",
            "shortForm": false,
            "test": Name {
              "kind": "name",
              "name": "PHP_OS",
              "resolution": "uqn",
            },
          },
          Return {
            "expr": Variable {
              "curly": false,
              "kind": "variable",
              "name": "a",
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "a",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "a",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "b",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"bad\\"",
            "unicode": false,
            "value": "bad",
          },
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          Switch {
            "body": Block {
              "children": Array [
                Case {
                  "body": Block {
                    "children": Array [
                      Return {
                        "expr": String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"bad\\"",
                          "unicode": false,
                          "value": "bad",
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "case",
                  "test": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"LALALAL\\"",
                    "unicode": false,
                    "value": "LALALAL",
                  },
                },
                Case {
                  "body": Block {
                    "children": Array [
                      Switch {
                        "body": Block {
                          "children": Array [
                            Case {
                              "body": Block {
                                "children": Array [
                                  Break {
                                    "kind": "break",
                                    "level": null,
                                  },
                                ],
                                "kind": "block",
                              },
                              "kind": "case",
                              "test": String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"FOO\\"",
                                "unicode": false,
                                "value": "FOO",
                              },
                            },
                            Case {
                              "body": Block {
                                "children": Array [
                                  Return {
                                    "expr": String {
                                      "isDoubleQuote": true,
                                      "kind": "string",
                                      "raw": "\\"okey\\"",
                                      "unicode": false,
                                      "value": "okey",
                                    },
                                    "kind": "return",
                                  },
                                ],
                                "kind": "block",
                              },
                              "kind": "case",
                              "test": Name {
                                "kind": "name",
                                "name": "PHP_OS",
                                "resolution": "uqn",
                              },
                            },
                            Case {
                              "body": Block {
                                "children": Array [
                                  Break {
                                    "kind": "break",
                                    "level": null,
                                  },
                                ],
                                "kind": "block",
                              },
                              "kind": "case",
                              "test": null,
                            },
                          ],
                          "kind": "block",
                        },
                        "kind": "switch",
                        "shortForm": false,
                        "test": Name {
                          "kind": "name",
                          "name": "PHP_OS",
                          "resolution": "uqn",
                        },
                      },
                      Break {
                        "kind": "break",
                        "level": null,
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "case",
                  "test": Name {
                    "kind": "name",
                    "name": "PHP_OS",
                    "resolution": "uqn",
                  },
                },
                Case {
                  "body": Block {
                    "children": Array [
                      Break {
                        "kind": "break",
                        "level": null,
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "case",
                  "test": null,
                },
              ],
              "kind": "block",
            },
            "kind": "switch",
            "shortForm": false,
            "test": Name {
              "kind": "name",
              "name": "PHP_OS",
              "resolution": "uqn",
            },
          },
          Return {
            "expr": Variable {
              "curly": false,
              "kind": "variable",
              "name": "b",
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "b",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "b",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "b",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"bad\\"",
            "unicode": false,
            "value": "bad",
          },
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          Switch {
            "body": Block {
              "children": Array [
                Case {
                  "body": Block {
                    "children": Array [
                      Return {
                        "expr": String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"LALALAL\\"",
                          "unicode": false,
                          "value": "LALALAL",
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "case",
                  "test": Number {
                    "kind": "number",
                    "value": "0",
                  },
                },
                Case {
                  "body": Block {
                    "children": Array [
                      Return {
                        "expr": String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"okey\\"",
                          "unicode": false,
                          "value": "okey",
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "case",
                  "test": Number {
                    "kind": "number",
                    "value": "1",
                  },
                },
                Case {
                  "body": Block {
                    "children": Array [
                      Return {
                        "expr": String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"bad\\"",
                          "unicode": false,
                          "value": "bad",
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "case",
                  "test": null,
                },
              ],
              "kind": "block",
            },
            "kind": "switch",
            "shortForm": false,
            "test": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"standard\\"",
                  "unicode": false,
                  "value": "standard",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "extension_loaded",
                "resolution": "uqn",
              },
            },
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "c",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "c",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    _Function {
      "arguments": Array [],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          Switch {
            "body": Block {
              "children": Array [
                Case {
                  "body": Block {
                    "children": Array [
                      Return {
                        "expr": String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"bad\\"",
                          "unicode": false,
                          "value": "bad",
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "case",
                  "test": null,
                },
                Case {
                  "body": Block {
                    "children": Array [
                      Return {
                        "expr": String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"okey\\"",
                          "unicode": false,
                          "value": "okey",
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "case",
                  "test": Name {
                    "kind": "name",
                    "name": "PHP_OS",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "block",
            },
            "kind": "switch",
            "shortForm": false,
            "test": Name {
              "kind": "name",
              "name": "PHP_OS",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "d",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "d",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
