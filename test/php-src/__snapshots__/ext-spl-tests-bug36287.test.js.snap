// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #36287 (Segfault with SplFileInfo conversion) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "it",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            New {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\".\\"",
                  "unicode": false,
                  "value": ".",
                },
              ],
              "kind": "new",
              "what": Name {
                "kind": "name",
                "name": "RecursiveDirectoryIterator",
                "resolution": "uqn",
              },
            },
            Boolean {
              "kind": "boolean",
              "raw": "true",
              "value": true,
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "RecursiveIteratorIterator",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "idx",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "0",
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"First\\\\n\\"",
                "unicode": false,
                "value": "First
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "getFilename",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "file",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_Dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Second\\\\n\\"",
                "unicode": false,
                "value": "Second
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "getFilename",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "file",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                Break {
                  "kind": "break",
                  "level": null,
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Pre {
                "kind": "pre",
                "type": "+",
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "idx",
                },
              },
              "right": Number {
                "kind": "number",
                "value": "1",
              },
              "type": ">",
            },
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "it",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "file",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
