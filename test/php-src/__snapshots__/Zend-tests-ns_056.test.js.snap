// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests 056: type-hint compatibility in namespaces 1`] = `
Program {
  "children": Array [
    Namespace {
      "children": Array [
        UseGroup {
          "items": Array [
            UseItem {
              "alias": null,
              "kind": "useitem",
              "name": "\\\\SplObserver",
              "type": null,
            },
          ],
          "kind": "usegroup",
          "name": null,
          "type": null,
        },
        Class {
          "attrGroups": Array [],
          "body": Array [
            Method {
              "arguments": Array [
                Parameter {
                  "attrGroups": Array [],
                  "byref": false,
                  "flags": 0,
                  "kind": "parameter",
                  "name": Identifier {
                    "kind": "identifier",
                    "name": "x",
                  },
                  "nullable": false,
                  "readonly": false,
                  "type": Name {
                    "kind": "name",
                    "name": "\\\\SplSubject",
                    "resolution": "fqn",
                  },
                  "value": null,
                  "variadic": false,
                },
              ],
              "attrGroups": Array [],
              "body": Block {
                "children": Array [
                  Echo {
                    "expressions": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"ok\\\\n\\"",
                        "unicode": false,
                        "value": "ok
",
                      },
                    ],
                    "kind": "echo",
                    "shortForm": false,
                  },
                ],
                "kind": "block",
              },
              "byref": false,
              "isAbstract": false,
              "isFinal": false,
              "isStatic": false,
              "kind": "method",
              "name": Identifier {
                "kind": "identifier",
                "name": "update",
              },
              "nullable": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "void",
                "raw": "void",
              },
              "visibility": "",
            },
          ],
          "extends": null,
          "implements": Array [
            Name {
              "kind": "name",
              "name": "SplObserver",
              "resolution": "uqn",
            },
          ],
          "isAbstract": false,
          "isAnonymous": false,
          "isFinal": false,
          "kind": "class",
          "name": Identifier {
            "kind": "identifier",
            "name": "Foo",
          },
        },
        Class {
          "attrGroups": Array [],
          "body": Array [
            Method {
              "arguments": Array [
                Parameter {
                  "attrGroups": Array [],
                  "byref": false,
                  "flags": 0,
                  "kind": "parameter",
                  "name": Identifier {
                    "kind": "identifier",
                    "name": "x",
                  },
                  "nullable": false,
                  "readonly": false,
                  "type": Name {
                    "kind": "name",
                    "name": "SplObserver",
                    "resolution": "uqn",
                  },
                  "value": null,
                  "variadic": false,
                },
              ],
              "attrGroups": Array [],
              "body": Block {
                "children": Array [
                  Echo {
                    "expressions": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"ok\\\\n\\"",
                        "unicode": false,
                        "value": "ok
",
                      },
                    ],
                    "kind": "echo",
                    "shortForm": false,
                  },
                ],
                "kind": "block",
              },
              "byref": false,
              "isAbstract": false,
              "isFinal": false,
              "isStatic": false,
              "kind": "method",
              "name": Identifier {
                "kind": "identifier",
                "name": "attach",
              },
              "nullable": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "void",
                "raw": "void",
              },
              "visibility": "",
            },
            Method {
              "arguments": Array [],
              "attrGroups": Array [],
              "body": Block {
                "children": Array [],
                "kind": "block",
              },
              "byref": false,
              "isAbstract": false,
              "isFinal": false,
              "isStatic": false,
              "kind": "method",
              "name": Identifier {
                "kind": "identifier",
                "name": "notify",
              },
              "nullable": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "void",
                "raw": "void",
              },
              "visibility": "",
            },
            Method {
              "arguments": Array [
                Parameter {
                  "attrGroups": Array [],
                  "byref": false,
                  "flags": 0,
                  "kind": "parameter",
                  "name": Identifier {
                    "kind": "identifier",
                    "name": "x",
                  },
                  "nullable": false,
                  "readonly": false,
                  "type": Name {
                    "kind": "name",
                    "name": "SplObserver",
                    "resolution": "uqn",
                  },
                  "value": null,
                  "variadic": false,
                },
              ],
              "attrGroups": Array [],
              "body": Block {
                "children": Array [],
                "kind": "block",
              },
              "byref": false,
              "isAbstract": false,
              "isFinal": false,
              "isStatic": false,
              "kind": "method",
              "name": Identifier {
                "kind": "identifier",
                "name": "detach",
              },
              "nullable": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "void",
                "raw": "void",
              },
              "visibility": "",
            },
          ],
          "extends": null,
          "implements": Array [
            Name {
              "kind": "name",
              "name": "\\\\SplSubject",
              "resolution": "fqn",
            },
          ],
          "isAbstract": false,
          "isAnonymous": false,
          "isFinal": false,
          "kind": "class",
          "name": Identifier {
            "kind": "identifier",
            "name": "Bar",
          },
        },
        ExpressionStatement {
          "expression": Assign {
            "kind": "assign",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "foo",
            },
            "operator": "=",
            "right": New {
              "arguments": Array [],
              "kind": "new",
              "what": Name {
                "kind": "name",
                "name": "Foo",
                "resolution": "uqn",
              },
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Assign {
            "kind": "assign",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "bar",
            },
            "operator": "=",
            "right": New {
              "arguments": Array [],
              "kind": "new",
              "what": Name {
                "kind": "name",
                "name": "Bar",
                "resolution": "uqn",
              },
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "foo",
              },
            ],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "attach",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "bar",
              },
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "bar",
              },
            ],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "update",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "foo",
              },
            },
          },
          "kind": "expressionstatement",
        },
      ],
      "kind": "namespace",
      "name": "test\\\\ns1",
      "withBrackets": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
