// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests MySQL PDO->__construct() - URI 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": true,
        "target": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Magic {
              "kind": "magic",
              "raw": "__DIR__",
              "value": "__DIR__",
            },
            "right": Name {
              "kind": "name",
              "name": "DIRECTORY_SEPARATOR",
              "resolution": "uqn",
            },
            "type": ".",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'mysql_pdo_test.inc'",
            "unicode": false,
            "value": "mysql_pdo_test.inc",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "file",
                    },
                    "operator": "=",
                    "right": Bin {
                      "kind": "bin",
                      "left": Bin {
                        "kind": "bin",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "tmp",
                        },
                        "right": Name {
                          "kind": "name",
                          "name": "DIRECTORY_SEPARATOR",
                          "resolution": "uqn",
                        },
                        "type": ".",
                      },
                      "right": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'pdomuri.tst'",
                        "unicode": false,
                        "value": "pdomuri.tst",
                      },
                      "type": ".",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "dsn",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": StaticLookup {
                        "kind": "staticlookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getDSN",
                        },
                        "what": Name {
                          "kind": "name",
                          "name": "MySQLPDOTest",
                          "resolution": "uqn",
                        },
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "user",
                    },
                    "operator": "=",
                    "right": Name {
                      "kind": "name",
                      "name": "PDO_MYSQL_TEST_USER",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "pass",
                    },
                    "operator": "=",
                    "right": Name {
                      "kind": "name",
                      "name": "PDO_MYSQL_TEST_PASS",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "uri",
                    },
                    "operator": "=",
                    "right": Bin {
                      "kind": "bin",
                      "left": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'uri:file://'",
                        "unicode": false,
                        "value": "uri:file://",
                      },
                      "right": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "file",
                      },
                      "type": ".",
                    },
                  },
                  "kind": "expressionstatement",
                },
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "fp",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "dsn",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "fwrite",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "fp",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "fclose",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "clearstatcache",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "file",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "file_exists",
                                "resolution": "uqn",
                              },
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "assert",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      Try {
                        "always": null,
                        "body": Block {
                          "children": Array [
                            ExpressionStatement {
                              "expression": Assign {
                                "kind": "assign",
                                "left": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "db",
                                },
                                "operator": "=",
                                "right": New {
                                  "arguments": Array [
                                    Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "uri",
                                    },
                                    Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "user",
                                    },
                                    Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "pass",
                                    },
                                  ],
                                  "kind": "new",
                                  "what": Name {
                                    "kind": "name",
                                    "name": "PDO",
                                    "resolution": "uqn",
                                  },
                                },
                              },
                              "kind": "expressionstatement",
                            },
                          ],
                          "kind": "block",
                        },
                        "catches": Array [
                          Catch {
                            "body": Block {
                              "children": Array [
                                ExpressionStatement {
                                  "expression": Call {
                                    "arguments": Array [
                                      String {
                                        "isDoubleQuote": true,
                                        "kind": "string",
                                        "raw": "\\"[002] URI=%s, DSN=%s, File=%s (%d bytes, '%s'), %s\\\\n\\"",
                                        "unicode": false,
                                        "value": "[002] URI=%s, DSN=%s, File=%s (%d bytes, '%s'), %s
",
                                      },
                                      Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "uri",
                                      },
                                      Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "dsn",
                                      },
                                      Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "file",
                                      },
                                      Call {
                                        "arguments": Array [
                                          Variable {
                                            "curly": false,
                                            "kind": "variable",
                                            "name": "file",
                                          },
                                        ],
                                        "kind": "call",
                                        "what": Name {
                                          "kind": "name",
                                          "name": "filesize",
                                          "resolution": "uqn",
                                        },
                                      },
                                      Call {
                                        "arguments": Array [
                                          Variable {
                                            "curly": false,
                                            "kind": "variable",
                                            "name": "file",
                                          },
                                        ],
                                        "kind": "call",
                                        "what": Name {
                                          "kind": "name",
                                          "name": "file_get_contents",
                                          "resolution": "uqn",
                                        },
                                      },
                                      Call {
                                        "arguments": Array [],
                                        "kind": "call",
                                        "what": PropertyLookup {
                                          "kind": "propertylookup",
                                          "offset": Identifier {
                                            "kind": "identifier",
                                            "name": "getMessage",
                                          },
                                          "what": Variable {
                                            "curly": false,
                                            "kind": "variable",
                                            "name": "e",
                                          },
                                        },
                                      },
                                    ],
                                    "kind": "call",
                                    "what": Name {
                                      "kind": "name",
                                      "name": "printf",
                                      "resolution": "uqn",
                                    },
                                  },
                                  "kind": "expressionstatement",
                                },
                              ],
                              "kind": "block",
                            },
                            "kind": "catch",
                            "variable": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "e",
                            },
                            "what": Array [
                              Name {
                                "kind": "name",
                                "name": "PDOException",
                                "resolution": "uqn",
                              },
                            ],
                          },
                        ],
                        "kind": "try",
                      },
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "file",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "unlink",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "fp",
                    },
                    "operator": "=",
                    "right": Silent {
                      "expr": Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "file",
                          },
                          String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'w'",
                            "unicode": false,
                            "value": "w",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "fopen",
                          "resolution": "uqn",
                        },
                      },
                      "kind": "silent",
                    },
                  },
                },
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "fp",
                            },
                            Bin {
                              "kind": "bin",
                              "left": Bin {
                                "kind": "bin",
                                "left": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "dsn",
                                },
                                "right": Call {
                                  "arguments": Array [
                                    Number {
                                      "kind": "number",
                                      "value": "0",
                                    },
                                  ],
                                  "kind": "call",
                                  "what": Name {
                                    "kind": "name",
                                    "name": "chr",
                                    "resolution": "uqn",
                                  },
                                },
                                "type": ".",
                              },
                              "right": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "';host=nonsense;unix_socket=nonsense'",
                                "unicode": false,
                                "value": ";host=nonsense;unix_socket=nonsense",
                              },
                              "type": ".",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "fwrite",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "fp",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "fclose",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "clearstatcache",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "file",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "file_exists",
                                "resolution": "uqn",
                              },
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "assert",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      Try {
                        "always": null,
                        "body": Block {
                          "children": Array [
                            ExpressionStatement {
                              "expression": Assign {
                                "kind": "assign",
                                "left": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "db",
                                },
                                "operator": "=",
                                "right": New {
                                  "arguments": Array [
                                    Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "uri",
                                    },
                                    Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "user",
                                    },
                                    Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "pass",
                                    },
                                  ],
                                  "kind": "new",
                                  "what": Name {
                                    "kind": "name",
                                    "name": "PDO",
                                    "resolution": "uqn",
                                  },
                                },
                              },
                              "kind": "expressionstatement",
                            },
                          ],
                          "kind": "block",
                        },
                        "catches": Array [
                          Catch {
                            "body": Block {
                              "children": Array [
                                ExpressionStatement {
                                  "expression": Call {
                                    "arguments": Array [
                                      String {
                                        "isDoubleQuote": true,
                                        "kind": "string",
                                        "raw": "\\"[003] URI=%s, DSN=%s, File=%s (%d bytes, '%s'), %s\\\\n\\"",
                                        "unicode": false,
                                        "value": "[003] URI=%s, DSN=%s, File=%s (%d bytes, '%s'), %s
",
                                      },
                                      Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "uri",
                                      },
                                      Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "dsn",
                                      },
                                      Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "file",
                                      },
                                      Call {
                                        "arguments": Array [
                                          Variable {
                                            "curly": false,
                                            "kind": "variable",
                                            "name": "file",
                                          },
                                        ],
                                        "kind": "call",
                                        "what": Name {
                                          "kind": "name",
                                          "name": "filesize",
                                          "resolution": "uqn",
                                        },
                                      },
                                      Call {
                                        "arguments": Array [
                                          Variable {
                                            "curly": false,
                                            "kind": "variable",
                                            "name": "file",
                                          },
                                        ],
                                        "kind": "call",
                                        "what": Name {
                                          "kind": "name",
                                          "name": "file_get_contents",
                                          "resolution": "uqn",
                                        },
                                      },
                                      Call {
                                        "arguments": Array [],
                                        "kind": "call",
                                        "what": PropertyLookup {
                                          "kind": "propertylookup",
                                          "offset": Identifier {
                                            "kind": "identifier",
                                            "name": "getMessage",
                                          },
                                          "what": Variable {
                                            "curly": false,
                                            "kind": "variable",
                                            "name": "e",
                                          },
                                        },
                                      },
                                    ],
                                    "kind": "call",
                                    "what": Name {
                                      "kind": "name",
                                      "name": "printf",
                                      "resolution": "uqn",
                                    },
                                  },
                                  "kind": "expressionstatement",
                                },
                              ],
                              "kind": "block",
                            },
                            "kind": "catch",
                            "variable": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "e",
                            },
                            "what": Array [
                              Name {
                                "kind": "name",
                                "name": "PDOException",
                                "resolution": "uqn",
                              },
                            ],
                          },
                        ],
                        "kind": "try",
                      },
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "file",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "unlink",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "fp",
                    },
                    "operator": "=",
                    "right": Silent {
                      "expr": Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "file",
                          },
                          String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'w'",
                            "unicode": false,
                            "value": "w",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "fopen",
                          "resolution": "uqn",
                        },
                      },
                      "kind": "silent",
                    },
                  },
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "tmp",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [],
                "kind": "call",
                "what": StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "getTempDir",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "MySQLPDOTest",
                    "resolution": "uqn",
                  },
                },
              },
            },
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"[001] %s, [%s] %s\\\\n\\"",
                      "unicode": false,
                      "value": "[001] %s, [%s] %s
",
                    },
                    Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getMessage",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "e",
                        },
                      },
                    },
                    RetIf {
                      "falseExpr": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'n/a'",
                        "unicode": false,
                        "value": "n/a",
                      },
                      "kind": "retif",
                      "test": Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "db",
                          },
                        ],
                        "kind": "call",
                        "parenthesizedExpression": true,
                        "what": Name {
                          "kind": "name",
                          "name": "is_object",
                          "resolution": "uqn",
                        },
                      },
                      "trueExpr": Call {
                        "arguments": Array [],
                        "kind": "call",
                        "what": PropertyLookup {
                          "kind": "propertylookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "errorCode",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "db",
                          },
                        },
                      },
                    },
                    RetIf {
                      "falseExpr": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'n/a'",
                        "unicode": false,
                        "value": "n/a",
                      },
                      "kind": "retif",
                      "test": Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "db",
                          },
                        ],
                        "kind": "call",
                        "parenthesizedExpression": true,
                        "what": Name {
                          "kind": "name",
                          "name": "is_object",
                          "resolution": "uqn",
                        },
                      },
                      "trueExpr": Call {
                        "arguments": Array [
                          String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "' '",
                            "unicode": false,
                            "value": " ",
                          },
                          Call {
                            "arguments": Array [],
                            "kind": "call",
                            "what": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "errorInfo",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "db",
                              },
                            },
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "implode",
                          "resolution": "uqn",
                        },
                      },
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "printf",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "PDOException",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"done!\\"",
          "unicode": false,
          "value": "done!",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
