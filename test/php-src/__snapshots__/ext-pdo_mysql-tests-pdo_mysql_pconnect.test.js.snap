// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests MySQL PDO->__construct(), PDO::ATTR_PERSISTENT 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": true,
        "target": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Magic {
              "kind": "magic",
              "raw": "__DIR__",
              "value": "__DIR__",
            },
            "right": Name {
              "kind": "name",
              "name": "DIRECTORY_SEPARATOR",
              "resolution": "uqn",
            },
            "type": ".",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'mysql_pdo_test.inc'",
            "unicode": false,
            "value": "mysql_pdo_test.inc",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "dsn",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [],
                "kind": "call",
                "what": StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "getDSN",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "MySQLPDOTest",
                    "resolution": "uqn",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "user",
              },
              "operator": "=",
              "right": Name {
                "kind": "name",
                "name": "PDO_MYSQL_TEST_USER",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "pass",
              },
              "operator": "=",
              "right": Name {
                "kind": "name",
                "name": "PDO_MYSQL_TEST_PASS",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "db1",
              },
              "operator": "=",
              "right": New {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "dsn",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "user",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "pass",
                  },
                  Array {
                    "items": Array [
                      Entry {
                        "byRef": false,
                        "key": StaticLookup {
                          "kind": "staticlookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "ATTR_PERSISTENT",
                          },
                          "what": Name {
                            "kind": "name",
                            "name": "PDO",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "entry",
                        "unpack": false,
                        "value": Boolean {
                          "kind": "boolean",
                          "raw": "true",
                          "value": true,
                        },
                      },
                    ],
                    "kind": "array",
                    "shortForm": false,
                  },
                ],
                "kind": "new",
                "what": Name {
                  "kind": "name",
                  "name": "PDO",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "db2",
              },
              "operator": "=",
              "right": New {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "dsn",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "user",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "pass",
                  },
                  Array {
                    "items": Array [
                      Entry {
                        "byRef": false,
                        "key": StaticLookup {
                          "kind": "staticlookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "ATTR_PERSISTENT",
                          },
                          "what": Name {
                            "kind": "name",
                            "name": "PDO",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "entry",
                        "unpack": false,
                        "value": Boolean {
                          "kind": "boolean",
                          "raw": "true",
                          "value": true,
                        },
                      },
                    ],
                    "kind": "array",
                    "shortForm": false,
                  },
                ],
                "kind": "new",
                "what": Name {
                  "kind": "name",
                  "name": "PDO",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "ATTR_ERRMODE",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "ERRMODE_SILENT",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "setAttribute",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db1",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "ATTR_ERRMODE",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "ERRMODE_SILENT",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "setAttribute",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db2",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'SET @pdo_persistent_connection=1'",
                  "unicode": false,
                  "value": "SET @pdo_persistent_connection=1",
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "exec",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db1",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "stmt",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'SELECT @pdo_persistent_connection as _pers'",
                    "unicode": false,
                    "value": "SELECT @pdo_persistent_connection as _pers",
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "query",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "db2",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "tmp",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  StaticLookup {
                    "kind": "staticlookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "FETCH_ASSOC",
                    },
                    "what": Name {
                      "kind": "name",
                      "name": "PDO",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "fetch",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[001] Both handles should use the same connection.\\"",
                    "unicode": false,
                    "value": "[001] Both handles should use the same connection.",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'_pers'",
                  "unicode": false,
                  "value": "_pers",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "tmp",
                },
              },
              "right": Number {
                "kind": "number",
                "value": "1",
              },
              "type": "!=",
            },
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "stmt",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'SELECT CONNECTION_ID() as _con1'",
                    "unicode": false,
                    "value": "SELECT CONNECTION_ID() as _con1",
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "query",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "db1",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "tmp",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  StaticLookup {
                    "kind": "staticlookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "FETCH_ASSOC",
                    },
                    "what": Name {
                      "kind": "name",
                      "name": "PDO",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "fetch",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "con1",
              },
              "operator": "=",
              "right": OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'_con1'",
                  "unicode": false,
                  "value": "_con1",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "tmp",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "stmt",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'SELECT CONNECTION_ID() as _con2'",
                    "unicode": false,
                    "value": "SELECT CONNECTION_ID() as _con2",
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "query",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "db2",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "tmp",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  StaticLookup {
                    "kind": "staticlookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "FETCH_ASSOC",
                    },
                    "what": Name {
                      "kind": "name",
                      "name": "PDO",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "fetch",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "con2",
              },
              "operator": "=",
              "right": OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'_con2'",
                  "unicode": false,
                  "value": "_con2",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "tmp",
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[002] Both handles should report the same MySQL thread ID\\"",
                    "unicode": false,
                    "value": "[002] Both handles should report the same MySQL thread ID",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "con1",
              },
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "con2",
              },
              "type": "!==",
            },
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "db1",
              },
              "operator": "=",
              "right": NullKeyword {
                "kind": "nullkeyword",
                "raw": "NULL",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "db1",
              },
              "operator": "=",
              "right": New {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "dsn",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "user",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "pass",
                  },
                  Array {
                    "items": Array [
                      Entry {
                        "byRef": false,
                        "key": StaticLookup {
                          "kind": "staticlookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "ATTR_PERSISTENT",
                          },
                          "what": Name {
                            "kind": "name",
                            "name": "PDO",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "entry",
                        "unpack": false,
                        "value": Boolean {
                          "kind": "boolean",
                          "raw": "true",
                          "value": true,
                        },
                      },
                    ],
                    "kind": "array",
                    "shortForm": false,
                  },
                ],
                "kind": "new",
                "what": Name {
                  "kind": "name",
                  "name": "PDO",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "ATTR_ERRMODE",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "ERRMODE_SILENT",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "setAttribute",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db1",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "stmt",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'SELECT CONNECTION_ID() as _con1'",
                    "unicode": false,
                    "value": "SELECT CONNECTION_ID() as _con1",
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "query",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "db1",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "tmp",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  StaticLookup {
                    "kind": "staticlookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "FETCH_ASSOC",
                    },
                    "what": Name {
                      "kind": "name",
                      "name": "PDO",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "fetch",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "con1",
              },
              "operator": "=",
              "right": OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'_con1'",
                  "unicode": false,
                  "value": "_con1",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "tmp",
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[003] Both handles should report the same MySQL thread ID\\"",
                    "unicode": false,
                    "value": "[003] Both handles should report the same MySQL thread ID",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "con1",
              },
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "con2",
              },
              "type": "!==",
            },
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "affected",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'KILL %d'",
                        "unicode": false,
                        "value": "KILL %d",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "con1",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "sprintf",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "exec",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "db1",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Number {
                  "kind": "number",
                  "value": "1",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "sleep",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Silent {
                    "expr": Call {
                      "arguments": Array [
                        String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"SET @pdo_persistent_connection=2\\"",
                          "unicode": false,
                          "value": "SET @pdo_persistent_connection=2",
                        },
                      ],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "exec",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "db1",
                        },
                      },
                    },
                    "kind": "silent",
                  },
                  "kind": "expressionstatement",
                },
                If {
                  "alternate": null,
                  "body": ExpressionStatement {
                    "expression": Call {
                      "arguments": Array [
                        String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"[004] Wrong error code %s\\\\n\\"",
                          "unicode": false,
                          "value": "[004] Wrong error code %s
",
                        },
                        Call {
                          "arguments": Array [],
                          "kind": "call",
                          "what": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "errorCode",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "db1",
                            },
                          },
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "printf",
                        "resolution": "uqn",
                      },
                    },
                    "kind": "expressionstatement",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'HY000'",
                      "unicode": false,
                      "value": "HY000",
                    },
                    "right": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "errorCode",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "db1",
                        },
                      },
                    },
                    "type": "!=",
                  },
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "tmp",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "' '",
                          "unicode": false,
                          "value": " ",
                        },
                        Call {
                          "arguments": Array [],
                          "kind": "call",
                          "what": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "errorInfo",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "db1",
                            },
                          },
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "implode",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                If {
                  "alternate": null,
                  "body": ExpressionStatement {
                    "expression": Call {
                      "arguments": Array [
                        String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"[005] Wrong error info %s\\\\n\\"",
                          "unicode": false,
                          "value": "[005] Wrong error info %s
",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "tmp",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "printf",
                        "resolution": "uqn",
                      },
                    },
                    "kind": "expressionstatement",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Unary {
                    "kind": "unary",
                    "type": "!",
                    "what": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "tmp",
                        },
                        String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'2006'",
                          "unicode": false,
                          "value": "2006",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "strstr",
                        "resolution": "uqn",
                      },
                    },
                  },
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'00000'",
                "unicode": false,
                "value": "00000",
              },
              "right": Call {
                "arguments": Array [],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "errorCode",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "db1",
                  },
                },
              },
              "type": "==",
            },
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "db1",
              },
              "operator": "=",
              "right": New {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "dsn",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "user",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "pass",
                  },
                  Array {
                    "items": Array [
                      Entry {
                        "byRef": false,
                        "key": StaticLookup {
                          "kind": "staticlookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "ATTR_PERSISTENT",
                          },
                          "what": Name {
                            "kind": "name",
                            "name": "PDO",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "entry",
                        "unpack": false,
                        "value": Boolean {
                          "kind": "boolean",
                          "raw": "false",
                          "value": false,
                        },
                      },
                    ],
                    "kind": "array",
                    "shortForm": false,
                  },
                ],
                "kind": "new",
                "what": Name {
                  "kind": "name",
                  "name": "PDO",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "ATTR_ERRMODE",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "ERRMODE_SILENT",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "setAttribute",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db1",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "stmt",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'SELECT CONNECTION_ID() as _con1'",
                    "unicode": false,
                    "value": "SELECT CONNECTION_ID() as _con1",
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "query",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "db1",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "tmp",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  StaticLookup {
                    "kind": "staticlookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "FETCH_ASSOC",
                    },
                    "what": Name {
                      "kind": "name",
                      "name": "PDO",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "fetch",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "con1",
              },
              "operator": "=",
              "right": OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'_con1'",
                  "unicode": false,
                  "value": "_con1",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "tmp",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Silent {
              "expr": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db2",
                },
                "operator": "=",
                "right": New {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "dsn",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "user",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "pass",
                    },
                    Array {
                      "items": Array [
                        Entry {
                          "byRef": false,
                          "key": StaticLookup {
                            "kind": "staticlookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "ATTR_PERSISTENT",
                            },
                            "what": Name {
                              "kind": "name",
                              "name": "PDO",
                              "resolution": "uqn",
                            },
                          },
                          "kind": "entry",
                          "unpack": false,
                          "value": Boolean {
                            "kind": "boolean",
                            "raw": "true",
                            "value": true,
                          },
                        },
                      ],
                      "kind": "array",
                      "shortForm": false,
                    },
                  ],
                  "kind": "new",
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              },
              "kind": "silent",
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "ATTR_ERRMODE",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "ERRMODE_SILENT",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "setAttribute",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db2",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "stmt",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'SELECT CONNECTION_ID() as _con2'",
                    "unicode": false,
                    "value": "SELECT CONNECTION_ID() as _con2",
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "query",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "db2",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "tmp",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  StaticLookup {
                    "kind": "staticlookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "FETCH_ASSOC",
                    },
                    "what": Name {
                      "kind": "name",
                      "name": "PDO",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "fetch",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "con2",
              },
              "operator": "=",
              "right": OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'_con2'",
                  "unicode": false,
                  "value": "_con2",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "tmp",
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[006] Looks like the persistent and the non persistent connection are using the same link?!\\\\n\\"",
                    "unicode": false,
                    "value": "[006] Looks like the persistent and the non persistent connection are using the same link?!
",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "con1",
              },
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "con2",
              },
              "type": "==",
            },
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "connections",
              },
              "operator": "=",
              "right": Array {
                "items": Array [],
                "kind": "array",
                "shortForm": false,
              },
            },
            "kind": "expressionstatement",
          },
          For {
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "i",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "connections",
                      },
                    },
                    "operator": "=",
                    "right": New {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "dsn",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "user",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "pass",
                        },
                        Array {
                          "items": Array [
                            Entry {
                              "byRef": false,
                              "key": StaticLookup {
                                "kind": "staticlookup",
                                "offset": Identifier {
                                  "kind": "identifier",
                                  "name": "ATTR_PERSISTENT",
                                },
                                "what": Name {
                                  "kind": "name",
                                  "name": "PDO",
                                  "resolution": "uqn",
                                },
                              },
                              "kind": "entry",
                              "unpack": false,
                              "value": Boolean {
                                "kind": "boolean",
                                "raw": "true",
                                "value": true,
                              },
                            },
                          ],
                          "kind": "array",
                          "shortForm": false,
                        },
                      ],
                      "kind": "new",
                      "what": Name {
                        "kind": "name",
                        "name": "PDO",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "increment": Array [
              Post {
                "kind": "post",
                "type": "+",
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
              },
            ],
            "init": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
                "operator": "=",
                "right": Number {
                  "kind": "number",
                  "value": "0",
                },
              },
            ],
            "kind": "for",
            "shortForm": false,
            "test": Array [
              Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
                "right": Number {
                  "kind": "number",
                  "value": "20",
                },
                "type": "<=",
              },
            ],
          },
          Do {
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "i",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Number {
                          "kind": "number",
                          "value": "0",
                        },
                        Number {
                          "kind": "number",
                          "value": "20",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "mt_rand",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                If {
                  "alternate": null,
                  "body": Unset {
                    "kind": "unset",
                    "variables": Array [
                      OffsetLookup {
                        "kind": "offsetlookup",
                        "offset": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "i",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "connections",
                        },
                      },
                    ],
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Isset {
                    "kind": "isset",
                    "variables": Array [
                      OffsetLookup {
                        "kind": "offsetlookup",
                        "offset": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "i",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "connections",
                        },
                      },
                    ],
                  },
                },
              ],
              "kind": "block",
            },
            "kind": "do",
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Empty {
                "expression": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "connections",
                },
                "kind": "empty",
              },
            },
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"[001] %s, [%s] %s [%s] %s\\\\n\\"",
                      "unicode": false,
                      "value": "[001] %s, [%s] %s [%s] %s
",
                    },
                    Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getMessage",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "e",
                        },
                      },
                    },
                    RetIf {
                      "falseExpr": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'n/a'",
                        "unicode": false,
                        "value": "n/a",
                      },
                      "kind": "retif",
                      "test": Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "db1",
                          },
                        ],
                        "kind": "call",
                        "parenthesizedExpression": true,
                        "what": Name {
                          "kind": "name",
                          "name": "is_object",
                          "resolution": "uqn",
                        },
                      },
                      "trueExpr": Call {
                        "arguments": Array [],
                        "kind": "call",
                        "what": PropertyLookup {
                          "kind": "propertylookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "errorCode",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "db1",
                          },
                        },
                      },
                    },
                    RetIf {
                      "falseExpr": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'n/a'",
                        "unicode": false,
                        "value": "n/a",
                      },
                      "kind": "retif",
                      "test": Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "db1",
                          },
                        ],
                        "kind": "call",
                        "parenthesizedExpression": true,
                        "what": Name {
                          "kind": "name",
                          "name": "is_object",
                          "resolution": "uqn",
                        },
                      },
                      "trueExpr": Call {
                        "arguments": Array [
                          String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "' '",
                            "unicode": false,
                            "value": " ",
                          },
                          Call {
                            "arguments": Array [],
                            "kind": "call",
                            "what": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "errorInfo",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "db1",
                              },
                            },
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "implode",
                          "resolution": "uqn",
                        },
                      },
                    },
                    RetIf {
                      "falseExpr": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'n/a'",
                        "unicode": false,
                        "value": "n/a",
                      },
                      "kind": "retif",
                      "test": Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "db2",
                          },
                        ],
                        "kind": "call",
                        "parenthesizedExpression": true,
                        "what": Name {
                          "kind": "name",
                          "name": "is_object",
                          "resolution": "uqn",
                        },
                      },
                      "trueExpr": Call {
                        "arguments": Array [],
                        "kind": "call",
                        "what": PropertyLookup {
                          "kind": "propertylookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "errorCode",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "db2",
                          },
                        },
                      },
                    },
                    RetIf {
                      "falseExpr": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'n/a'",
                        "unicode": false,
                        "value": "n/a",
                      },
                      "kind": "retif",
                      "test": Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "db2",
                          },
                        ],
                        "kind": "call",
                        "parenthesizedExpression": true,
                        "what": Name {
                          "kind": "name",
                          "name": "is_object",
                          "resolution": "uqn",
                        },
                      },
                      "trueExpr": Call {
                        "arguments": Array [
                          String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "' '",
                            "unicode": false,
                            "value": " ",
                          },
                          Call {
                            "arguments": Array [],
                            "kind": "call",
                            "what": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "errorInfo",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "db2",
                              },
                            },
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "implode",
                          "resolution": "uqn",
                        },
                      },
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "printf",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "PDOException",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"done!\\"",
          "unicode": false,
          "value": "done!",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
