// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test that there is no arginfo/zpp mismatch 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": true,
        "target": Bin {
          "kind": "bin",
          "left": Magic {
            "kind": "magic",
            "raw": "__DIR__",
            "value": "__DIR__",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"/arginfo_zpp_mismatch.inc\\"",
            "unicode": false,
            "value": "/arginfo_zpp_mismatch.inc",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "function",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                Return {
                  "expr": null,
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "function",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "skipFunction",
                "resolution": "uqn",
              },
            },
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "ob_start",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    Bin {
                      "kind": "bin",
                      "left": Bin {
                        "kind": "bin",
                        "left": String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"Testing \\"",
                          "unicode": false,
                          "value": "Testing ",
                        },
                        "right": Call {
                          "arguments": Array [
                            OffsetLookup {
                              "kind": "offsetlookup",
                              "offset": Number {
                                "kind": "number",
                                "value": "0",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "function",
                              },
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "get_class",
                            "resolution": "uqn",
                          },
                        },
                        "type": ".",
                      },
                      "right": Encapsed {
                        "kind": "encapsed",
                        "raw": "\\"::$function[1]\\\\n\\"",
                        "type": "string",
                        "value": Array [
                          EncapsedPart {
                            "curly": false,
                            "expression": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "::",
                              "unicode": false,
                              "value": "::",
                            },
                            "kind": "encapsedpart",
                            "syntax": null,
                          },
                          EncapsedPart {
                            "curly": false,
                            "expression": OffsetLookup {
                              "kind": "offsetlookup",
                              "offset": Number {
                                "kind": "number",
                                "value": "1",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "function",
                              },
                            },
                            "kind": "encapsedpart",
                            "syntax": "simple",
                          },
                          EncapsedPart {
                            "curly": false,
                            "expression": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "\\\\n",
                              "unicode": false,
                              "value": "",
                            },
                            "kind": "encapsedpart",
                            "syntax": null,
                          },
                        ],
                      },
                      "type": ".",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
              ],
              "kind": "block",
            },
            "body": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    Encapsed {
                      "kind": "encapsed",
                      "raw": "\\"Testing $function\\\\n\\"",
                      "type": "string",
                      "value": Array [
                        EncapsedPart {
                          "curly": false,
                          "expression": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "Testing ",
                            "unicode": false,
                            "value": "Testing ",
                          },
                          "kind": "encapsedpart",
                          "syntax": null,
                        },
                        EncapsedPart {
                          "curly": false,
                          "expression": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "function",
                          },
                          "kind": "encapsedpart",
                          "syntax": "simple",
                        },
                        EncapsedPart {
                          "curly": false,
                          "expression": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "\\\\n",
                            "unicode": false,
                            "value": "",
                          },
                          "kind": "encapsedpart",
                          "syntax": null,
                        },
                      ],
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "function",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "is_string",
                "resolution": "uqn",
              },
            },
          },
          Try {
            "always": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Silent {
                    "expr": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "function",
                      },
                    },
                    "kind": "silent",
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "catches": Array [
              Catch {
                "body": Block {
                  "children": Array [],
                  "kind": "block",
                },
                "kind": "catch",
                "variable": null,
                "what": Array [
                  Name {
                    "kind": "name",
                    "name": "Throwable",
                    "resolution": "uqn",
                  },
                ],
              },
            ],
            "kind": "try",
          },
          Try {
            "always": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Silent {
                    "expr": Call {
                      "arguments": Array [
                        NullKeyword {
                          "kind": "nullkeyword",
                          "raw": "null",
                        },
                      ],
                      "kind": "call",
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "function",
                      },
                    },
                    "kind": "silent",
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "catches": Array [
              Catch {
                "body": Block {
                  "children": Array [],
                  "kind": "block",
                },
                "kind": "catch",
                "variable": null,
                "what": Array [
                  Name {
                    "kind": "name",
                    "name": "Throwable",
                    "resolution": "uqn",
                  },
                ],
              },
            ],
            "kind": "try",
          },
          Try {
            "always": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Silent {
                    "expr": Call {
                      "arguments": Array [
                        NullKeyword {
                          "kind": "nullkeyword",
                          "raw": "null",
                        },
                        NullKeyword {
                          "kind": "nullkeyword",
                          "raw": "null",
                        },
                      ],
                      "kind": "call",
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "function",
                      },
                    },
                    "kind": "silent",
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "catches": Array [
              Catch {
                "body": Block {
                  "children": Array [],
                  "kind": "block",
                },
                "kind": "catch",
                "variable": null,
                "what": Array [
                  Name {
                    "kind": "name",
                    "name": "Throwable",
                    "resolution": "uqn",
                  },
                ],
              },
            ],
            "kind": "try",
          },
          Try {
            "always": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Silent {
                    "expr": Call {
                      "arguments": Array [
                        NullKeyword {
                          "kind": "nullkeyword",
                          "raw": "null",
                        },
                        NullKeyword {
                          "kind": "nullkeyword",
                          "raw": "null",
                        },
                        NullKeyword {
                          "kind": "nullkeyword",
                          "raw": "null",
                        },
                      ],
                      "kind": "call",
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "function",
                      },
                    },
                    "kind": "silent",
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "catches": Array [
              Catch {
                "body": Block {
                  "children": Array [],
                  "kind": "block",
                },
                "kind": "catch",
                "variable": null,
                "what": Array [
                  Name {
                    "kind": "name",
                    "name": "Throwable",
                    "resolution": "uqn",
                  },
                ],
              },
            ],
            "kind": "try",
          },
          Try {
            "always": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Silent {
                    "expr": Call {
                      "arguments": Array [
                        NullKeyword {
                          "kind": "nullkeyword",
                          "raw": "null",
                        },
                        NullKeyword {
                          "kind": "nullkeyword",
                          "raw": "null",
                        },
                        NullKeyword {
                          "kind": "nullkeyword",
                          "raw": "null",
                        },
                        NullKeyword {
                          "kind": "nullkeyword",
                          "raw": "null",
                        },
                      ],
                      "kind": "call",
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "function",
                      },
                    },
                    "kind": "silent",
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "catches": Array [
              Catch {
                "body": Block {
                  "children": Array [],
                  "kind": "block",
                },
                "kind": "catch",
                "variable": null,
                "what": Array [
                  Name {
                    "kind": "name",
                    "name": "Throwable",
                    "resolution": "uqn",
                  },
                ],
              },
            ],
            "kind": "try",
          },
          Try {
            "always": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Silent {
                    "expr": Call {
                      "arguments": Array [
                        NullKeyword {
                          "kind": "nullkeyword",
                          "raw": "null",
                        },
                        NullKeyword {
                          "kind": "nullkeyword",
                          "raw": "null",
                        },
                        NullKeyword {
                          "kind": "nullkeyword",
                          "raw": "null",
                        },
                        NullKeyword {
                          "kind": "nullkeyword",
                          "raw": "null",
                        },
                        NullKeyword {
                          "kind": "nullkeyword",
                          "raw": "null",
                        },
                      ],
                      "kind": "call",
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "function",
                      },
                    },
                    "kind": "silent",
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "catches": Array [
              Catch {
                "body": Block {
                  "children": Array [],
                  "kind": "block",
                },
                "kind": "catch",
                "variable": null,
                "what": Array [
                  Name {
                    "kind": "name",
                    "name": "Throwable",
                    "resolution": "uqn",
                  },
                ],
              },
            ],
            "kind": "try",
          },
          Try {
            "always": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Silent {
                    "expr": Call {
                      "arguments": Array [
                        NullKeyword {
                          "kind": "nullkeyword",
                          "raw": "null",
                        },
                        NullKeyword {
                          "kind": "nullkeyword",
                          "raw": "null",
                        },
                        NullKeyword {
                          "kind": "nullkeyword",
                          "raw": "null",
                        },
                        NullKeyword {
                          "kind": "nullkeyword",
                          "raw": "null",
                        },
                        NullKeyword {
                          "kind": "nullkeyword",
                          "raw": "null",
                        },
                        NullKeyword {
                          "kind": "nullkeyword",
                          "raw": "null",
                        },
                      ],
                      "kind": "call",
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "function",
                      },
                    },
                    "kind": "silent",
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "catches": Array [
              Catch {
                "body": Block {
                  "children": Array [],
                  "kind": "block",
                },
                "kind": "catch",
                "variable": null,
                "what": Array [
                  Name {
                    "kind": "name",
                    "name": "Throwable",
                    "resolution": "uqn",
                  },
                ],
              },
            ],
            "kind": "try",
          },
          Try {
            "always": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Silent {
                    "expr": Call {
                      "arguments": Array [
                        NullKeyword {
                          "kind": "nullkeyword",
                          "raw": "null",
                        },
                        NullKeyword {
                          "kind": "nullkeyword",
                          "raw": "null",
                        },
                        NullKeyword {
                          "kind": "nullkeyword",
                          "raw": "null",
                        },
                        NullKeyword {
                          "kind": "nullkeyword",
                          "raw": "null",
                        },
                        NullKeyword {
                          "kind": "nullkeyword",
                          "raw": "null",
                        },
                        NullKeyword {
                          "kind": "nullkeyword",
                          "raw": "null",
                        },
                        NullKeyword {
                          "kind": "nullkeyword",
                          "raw": "null",
                        },
                      ],
                      "kind": "call",
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "function",
                      },
                    },
                    "kind": "silent",
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "catches": Array [
              Catch {
                "body": Block {
                  "children": Array [],
                  "kind": "block",
                },
                "kind": "catch",
                "variable": null,
                "what": Array [
                  Name {
                    "kind": "name",
                    "name": "Throwable",
                    "resolution": "uqn",
                  },
                ],
              },
            ],
            "kind": "try",
          },
          Try {
            "always": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Silent {
                    "expr": Call {
                      "arguments": Array [
                        NullKeyword {
                          "kind": "nullkeyword",
                          "raw": "null",
                        },
                        NullKeyword {
                          "kind": "nullkeyword",
                          "raw": "null",
                        },
                        NullKeyword {
                          "kind": "nullkeyword",
                          "raw": "null",
                        },
                        NullKeyword {
                          "kind": "nullkeyword",
                          "raw": "null",
                        },
                        NullKeyword {
                          "kind": "nullkeyword",
                          "raw": "null",
                        },
                        NullKeyword {
                          "kind": "nullkeyword",
                          "raw": "null",
                        },
                        NullKeyword {
                          "kind": "nullkeyword",
                          "raw": "null",
                        },
                        NullKeyword {
                          "kind": "nullkeyword",
                          "raw": "null",
                        },
                      ],
                      "kind": "call",
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "function",
                      },
                    },
                    "kind": "silent",
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "catches": Array [
              Catch {
                "body": Block {
                  "children": Array [],
                  "kind": "block",
                },
                "kind": "catch",
                "variable": null,
                "what": Array [
                  Name {
                    "kind": "name",
                    "name": "Throwable",
                    "resolution": "uqn",
                  },
                ],
              },
            ],
            "kind": "try",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "ob_end_clean",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "test",
      },
      "nullable": false,
      "type": null,
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "function",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": OffsetLookup {
        "kind": "offsetlookup",
        "offset": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"internal\\"",
          "unicode": false,
          "value": "internal",
        },
        "what": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "get_defined_functions",
            "resolution": "uqn",
          },
        },
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "function",
      },
    },
    Foreach {
      "body": Block {
        "children": Array [
          Try {
            "always": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "rc",
                    },
                    "operator": "=",
                    "right": New {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "class",
                        },
                      ],
                      "kind": "new",
                      "what": Name {
                        "kind": "name",
                        "name": "ReflectionClass",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "obj",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "newInstanceWithoutConstructor",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "rc",
                        },
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "catches": Array [
              Catch {
                "body": Block {
                  "children": Array [
                    Continue {
                      "kind": "continue",
                      "level": null,
                    },
                  ],
                  "kind": "block",
                },
                "kind": "catch",
                "variable": null,
                "what": Array [
                  Name {
                    "kind": "name",
                    "name": "Throwable",
                    "resolution": "uqn",
                  },
                ],
              },
            ],
            "kind": "try",
          },
          Foreach {
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Array {
                        "items": Array [
                          Entry {
                            "byRef": false,
                            "key": null,
                            "kind": "entry",
                            "unpack": false,
                            "value": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "obj",
                            },
                          },
                          Entry {
                            "byRef": false,
                            "key": null,
                            "kind": "entry",
                            "unpack": false,
                            "value": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "method",
                            },
                          },
                        ],
                        "kind": "array",
                        "shortForm": true,
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "test",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "key": null,
            "kind": "foreach",
            "shortForm": false,
            "source": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "class",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "get_class_methods",
                "resolution": "uqn",
              },
            },
            "value": Variable {
              "curly": false,
              "kind": "variable",
              "name": "method",
            },
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "get_declared_classes",
          "resolution": "uqn",
        },
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "class",
      },
    },
    Inline {
      "kind": "inline",
      "raw": "
===DONE===",
      "value": "===DONE===",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
