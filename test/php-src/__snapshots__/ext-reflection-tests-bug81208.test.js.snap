// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #81208: Segmentation fault while create newInstance from attribute 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [
        AttrGroup {
          "attrs": Array [
            Attribute {
              "args": Array [
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "TARGET_PROPERTY",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "Attribute",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "attribute",
              "name": "Attribute",
            },
          ],
          "kind": "attrgroup",
        },
      ],
      "body": Array [
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 1,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "nullable",
              },
              "nullable": false,
              "readonly": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "bool",
                "raw": "bool",
              },
              "value": Boolean {
                "kind": "boolean",
                "raw": "false",
                "value": false,
              },
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "__construct",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "MyAnnotation",
      },
    },
    Class {
      "attrGroups": Array [],
      "body": Array [
        PropertyStatement {
          "isStatic": false,
          "kind": "propertystatement",
          "properties": Array [
            Property {
              "attrGroups": Array [
                AttrGroup {
                  "attrs": Array [
                    Attribute {
                      "args": Array [
                        namedargument {
                          "kind": "namedargument",
                          "name": "name",
                          "value": String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"my_name\\"",
                            "unicode": false,
                            "value": "my_name",
                          },
                        },
                        namedargument {
                          "kind": "namedargument",
                          "name": "type",
                          "value": String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"integer\\"",
                            "unicode": false,
                            "value": "integer",
                          },
                        },
                        namedargument {
                          "kind": "namedargument",
                          "name": "nullable",
                          "value": Name {
                            "kind": "name",
                            "name": "asdasdasd",
                            "resolution": "uqn",
                          },
                        },
                      ],
                      "kind": "attribute",
                      "name": "MyAnnotation",
                    },
                  ],
                  "kind": "attrgroup",
                },
              ],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "property",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
            },
          ],
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "MyClass",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "z",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "class",
              },
              "what": Name {
                "kind": "name",
                "name": "MyClass",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "ReflectionClass",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          Try {
            "always": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "newInstance",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "attribute",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "catches": Array [
              Catch {
                "body": Block {
                  "children": Array [
                    Echo {
                      "expressions": Array [
                        Call {
                          "arguments": Array [],
                          "kind": "call",
                          "what": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "getMessage",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "e",
                            },
                          },
                        },
                        String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"\\\\n\\"",
                          "unicode": false,
                          "value": "
",
                        },
                      ],
                      "kind": "echo",
                      "shortForm": false,
                    },
                  ],
                  "kind": "block",
                },
                "kind": "catch",
                "variable": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "e",
                },
                "what": Array [
                  Name {
                    "kind": "name",
                    "name": "Error",
                    "resolution": "uqn",
                  },
                ],
              },
            ],
            "kind": "try",
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "getAttributes",
          },
          "what": Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"property\\"",
                "unicode": false,
                "value": "property",
              },
            ],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "getProperty",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "z",
              },
            },
          },
        },
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "attribute",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
