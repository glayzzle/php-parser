// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests mysqli_stmt_bind_param() - binding variable twice 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": true,
        "target": String {
          "isDoubleQuote": false,
          "kind": "string",
          "parenthesizedExpression": true,
          "raw": "'table.inc'",
          "unicode": false,
          "value": "table.inc",
        },
      },
      "kind": "expressionstatement",
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "link",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "engine",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "sql_type1",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "sql_type2",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "bind_type1",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "bind_type2",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "bind_value1",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "bind_value2",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "offset",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%03d + 1] [%d] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[%03d + 1] [%d] %s
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "offset",
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_errno",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_error",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "link",
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"DROP TABLE IF EXISTS test\\"",
                    "unicode": false,
                    "value": "DROP TABLE IF EXISTS test",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_query",
                  "resolution": "uqn",
                },
              },
            },
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
                Boolean {
                  "kind": "boolean",
                  "raw": "true",
                  "value": true,
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_autocommit",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "sql",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"CREATE TABLE test(col1 %s, col2 %s) ENGINE=%s\\"",
                    "unicode": false,
                    "value": "CREATE TABLE test(col1 %s, col2 %s) ENGINE=%s",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "sql_type1",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "sql_type2",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "engine",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "sprintf",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%03d + 2] [%d] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[%03d + 2] [%d] %s
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "offset",
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_errno",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_error",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "link",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "sql",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_query",
                  "resolution": "uqn",
                },
              },
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%03d + 3] [%d] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[%03d + 3] [%d] %s
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "offset",
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_errno",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_error",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "link",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_stmt_init",
                    "resolution": "uqn",
                  },
                },
              },
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%03d + 4] [%d] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[%03d + 4] [%d] %s
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "offset",
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "stmt",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_stmt_errno",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "stmt",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_stmt_error",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"INSERT INTO test(col1, col2) VALUES (?, ?)\\"",
                    "unicode": false,
                    "value": "INSERT INTO test(col1, col2) VALUES (?, ?)",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_stmt_prepare",
                  "resolution": "uqn",
                },
              },
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%03d + 5] [%d] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[%03d + 5] [%d] %s
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "offset",
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "stmt",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_stmt_errno",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "stmt",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_stmt_error",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                  Bin {
                    "kind": "bin",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "bind_type1",
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "bind_type2",
                    },
                    "type": ".",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "bind_value1",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "bind_value1",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_stmt_bind_param",
                  "resolution": "uqn",
                },
              },
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%03d + 6] [%d] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[%03d + 6] [%d] %s
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "offset",
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "stmt",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_stmt_errno",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "stmt",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_stmt_error",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_stmt_execute",
                  "resolution": "uqn",
                },
              },
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%03d + 7] [%d] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[%03d + 7] [%d] %s
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "offset",
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "stmt",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_stmt_errno",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "stmt",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_stmt_error",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                  Bin {
                    "kind": "bin",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "bind_type1",
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "bind_type2",
                    },
                    "type": ".",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "bind_value1",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "bind_value2",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_stmt_bind_param",
                  "resolution": "uqn",
                },
              },
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%03d + 8] [%d] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[%03d + 8] [%d] %s
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "offset",
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "stmt",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_stmt_errno",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "stmt",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_stmt_error",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_stmt_execute",
                  "resolution": "uqn",
                },
              },
            },
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_close",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%03d + 9] [%d] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[%03d + 9] [%d] %s
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "offset",
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_errno",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_error",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "res",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "link",
                    },
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"SELECT col1, col2 FROM test\\"",
                      "unicode": false,
                      "value": "SELECT col1, col2 FROM test",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_query",
                    "resolution": "uqn",
                  },
                },
              },
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%03d + 10] Expecting 2 rows, got %d rows [%d] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[%03d + 10] Expecting 2 rows, got %d rows [%d] %s
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "offset",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "tmp",
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_errno",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_error",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Number {
                "kind": "number",
                "value": "2",
              },
              "right": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "tmp",
                },
                "operator": "=",
                "parenthesizedExpression": true,
                "right": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "res",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_num_rows",
                    "resolution": "uqn",
                  },
                },
              },
              "type": "!==",
            },
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "row",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "res",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_fetch_assoc",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%03d + 11] Expecting col1 = %s, col2 = %s got col1 = %s, col2 = %s - [%d] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[%03d + 11] Expecting col1 = %s, col2 = %s got col1 = %s, col2 = %s - [%d] %s
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "offset",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "bind_value1",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "bind_value1",
                      },
                      OffsetLookup {
                        "kind": "offsetlookup",
                        "offset": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'col1'",
                          "unicode": false,
                          "value": "col1",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "row",
                        },
                      },
                      OffsetLookup {
                        "kind": "offsetlookup",
                        "offset": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'col2'",
                          "unicode": false,
                          "value": "col2",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "row",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_errno",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_error",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Bin {
                "kind": "bin",
                "left": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'col1'",
                    "unicode": false,
                    "value": "col1",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "row",
                  },
                },
                "parenthesizedExpression": true,
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "bind_value1",
                },
                "type": "!=",
              },
              "right": Bin {
                "kind": "bin",
                "left": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'col2'",
                    "unicode": false,
                    "value": "col2",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "row",
                  },
                },
                "parenthesizedExpression": true,
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "bind_value1",
                },
                "type": "!=",
              },
              "type": "||",
            },
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "row",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "res",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_fetch_assoc",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%03d + 12] Expecting col1 = %s, col2 = %s got col1 = %s, col2 = %s - [%d] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[%03d + 12] Expecting col1 = %s, col2 = %s got col1 = %s, col2 = %s - [%d] %s
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "offset",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "bind_value1",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "bind_value2",
                      },
                      OffsetLookup {
                        "kind": "offsetlookup",
                        "offset": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'col1'",
                          "unicode": false,
                          "value": "col1",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "row",
                        },
                      },
                      OffsetLookup {
                        "kind": "offsetlookup",
                        "offset": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'col2'",
                          "unicode": false,
                          "value": "col2",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "row",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_errno",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_error",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Bin {
                "kind": "bin",
                "left": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'col1'",
                    "unicode": false,
                    "value": "col1",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "row",
                  },
                },
                "parenthesizedExpression": true,
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "bind_value1",
                },
                "type": "!=",
              },
              "right": Bin {
                "kind": "bin",
                "left": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'col2'",
                    "unicode": false,
                    "value": "col2",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "row",
                  },
                },
                "parenthesizedExpression": true,
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "bind_value2",
                },
                "type": "!=",
              },
              "type": "||",
            },
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "res",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_free_result",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          Return {
            "expr": Boolean {
              "kind": "boolean",
              "raw": "true",
              "value": true,
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "bind_twice",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'CHAR(1)'",
            "unicode": false,
            "value": "CHAR(1)",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'CHAR(1)'",
            "unicode": false,
            "value": "CHAR(1)",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'s'",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'s'",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'a'",
            "unicode": false,
            "value": "a",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'b'",
            "unicode": false,
            "value": "b",
          },
          Number {
            "kind": "number",
            "value": "10",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "bind_twice",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'INT'",
            "unicode": false,
            "value": "INT",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'INT'",
            "unicode": false,
            "value": "INT",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'i'",
            "unicode": false,
            "value": "i",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'i'",
            "unicode": false,
            "value": "i",
          },
          Number {
            "kind": "number",
            "value": "1",
          },
          Number {
            "kind": "number",
            "value": "2",
          },
          Number {
            "kind": "number",
            "value": "20",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "bind_twice",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'FLOAT'",
            "unicode": false,
            "value": "FLOAT",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'FLOAT'",
            "unicode": false,
            "value": "FLOAT",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'d'",
            "unicode": false,
            "value": "d",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'d'",
            "unicode": false,
            "value": "d",
          },
          Number {
            "kind": "number",
            "value": "1.01",
          },
          Number {
            "kind": "number",
            "value": "1.02",
          },
          Number {
            "kind": "number",
            "value": "30",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "bind_twice",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'CHAR(1)'",
            "unicode": false,
            "value": "CHAR(1)",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'CHAR(1)'",
            "unicode": false,
            "value": "CHAR(1)",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'s'",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'s'",
            "unicode": false,
            "value": "s",
          },
          Number {
            "kind": "number",
            "value": "1",
          },
          Number {
            "kind": "number",
            "value": "2",
          },
          Number {
            "kind": "number",
            "value": "40",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "bind_twice",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'INT'",
            "unicode": false,
            "value": "INT",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'INT'",
            "unicode": false,
            "value": "INT",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'i'",
            "unicode": false,
            "value": "i",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'i'",
            "unicode": false,
            "value": "i",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1'",
            "unicode": false,
            "value": "1",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'2'",
            "unicode": false,
            "value": "2",
          },
          Number {
            "kind": "number",
            "value": "50",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "bind_twice",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'FLOAT'",
            "unicode": false,
            "value": "FLOAT",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'FLOAT'",
            "unicode": false,
            "value": "FLOAT",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'d'",
            "unicode": false,
            "value": "d",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'d'",
            "unicode": false,
            "value": "d",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1.01'",
            "unicode": false,
            "value": "1.01",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1.02'",
            "unicode": false,
            "value": "1.02",
          },
          Number {
            "kind": "number",
            "value": "60",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "bind_twice",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'INT'",
            "unicode": false,
            "value": "INT",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'CHAR(1)'",
            "unicode": false,
            "value": "CHAR(1)",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'i'",
            "unicode": false,
            "value": "i",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'s'",
            "unicode": false,
            "value": "s",
          },
          Number {
            "kind": "number",
            "value": "1",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'a'",
            "unicode": false,
            "value": "a",
          },
          Number {
            "kind": "number",
            "value": "70",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "bind_twice",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_close",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"done!\\"",
          "unicode": false,
          "value": "done!",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
