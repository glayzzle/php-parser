// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests htmlentities() conformance check (HTML 4) 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "k",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          If {
            "alternate": If {
              "alternate": If {
                "alternate": If {
                  "alternate": If {
                    "alternate": Block {
                      "children": Array [
                        ExpressionStatement {
                          "expression": Assign {
                            "kind": "assign",
                            "left": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "retval",
                            },
                            "operator": "=",
                            "right": Call {
                              "arguments": Array [
                                String {
                                  "isDoubleQuote": false,
                                  "kind": "string",
                                  "raw": "'C6'",
                                  "unicode": false,
                                  "value": "C6",
                                },
                                Bin {
                                  "kind": "bin",
                                  "left": Number {
                                    "kind": "number",
                                    "value": "0xfc",
                                  },
                                  "right": Bin {
                                    "kind": "bin",
                                    "left": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "k",
                                    },
                                    "parenthesizedExpression": true,
                                    "right": Number {
                                      "kind": "number",
                                      "value": "30",
                                    },
                                    "type": ">>",
                                  },
                                  "type": "|",
                                },
                                Bin {
                                  "kind": "bin",
                                  "left": Number {
                                    "kind": "number",
                                    "value": "0x80",
                                  },
                                  "right": Bin {
                                    "kind": "bin",
                                    "left": Bin {
                                      "kind": "bin",
                                      "left": Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "k",
                                      },
                                      "parenthesizedExpression": true,
                                      "right": Number {
                                        "kind": "number",
                                        "value": "24",
                                      },
                                      "type": ">>",
                                    },
                                    "parenthesizedExpression": true,
                                    "right": Number {
                                      "kind": "number",
                                      "value": "0x3f",
                                    },
                                    "type": "&",
                                  },
                                  "type": "|",
                                },
                                Bin {
                                  "kind": "bin",
                                  "left": Number {
                                    "kind": "number",
                                    "value": "0x80",
                                  },
                                  "right": Bin {
                                    "kind": "bin",
                                    "left": Bin {
                                      "kind": "bin",
                                      "left": Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "k",
                                      },
                                      "parenthesizedExpression": true,
                                      "right": Number {
                                        "kind": "number",
                                        "value": "18",
                                      },
                                      "type": ">>",
                                    },
                                    "parenthesizedExpression": true,
                                    "right": Number {
                                      "kind": "number",
                                      "value": "0x3f",
                                    },
                                    "type": "&",
                                  },
                                  "type": "|",
                                },
                                Bin {
                                  "kind": "bin",
                                  "left": Number {
                                    "kind": "number",
                                    "value": "0x80",
                                  },
                                  "right": Bin {
                                    "kind": "bin",
                                    "left": Bin {
                                      "kind": "bin",
                                      "left": Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "k",
                                      },
                                      "parenthesizedExpression": true,
                                      "right": Number {
                                        "kind": "number",
                                        "value": "12",
                                      },
                                      "type": ">>",
                                    },
                                    "parenthesizedExpression": true,
                                    "right": Number {
                                      "kind": "number",
                                      "value": "0x3f",
                                    },
                                    "type": "&",
                                  },
                                  "type": "|",
                                },
                                Bin {
                                  "kind": "bin",
                                  "left": Number {
                                    "kind": "number",
                                    "value": "0x80",
                                  },
                                  "right": Bin {
                                    "kind": "bin",
                                    "left": Bin {
                                      "kind": "bin",
                                      "left": Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "k",
                                      },
                                      "parenthesizedExpression": true,
                                      "right": Number {
                                        "kind": "number",
                                        "value": "6",
                                      },
                                      "type": ">>",
                                    },
                                    "parenthesizedExpression": true,
                                    "right": Number {
                                      "kind": "number",
                                      "value": "0x3f",
                                    },
                                    "type": "&",
                                  },
                                  "type": "|",
                                },
                                Bin {
                                  "kind": "bin",
                                  "left": Number {
                                    "kind": "number",
                                    "value": "0x80",
                                  },
                                  "right": Bin {
                                    "kind": "bin",
                                    "left": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "k",
                                    },
                                    "parenthesizedExpression": true,
                                    "right": Number {
                                      "kind": "number",
                                      "value": "0x3f",
                                    },
                                    "type": "&",
                                  },
                                  "type": "|",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "pack",
                                "resolution": "uqn",
                              },
                            },
                          },
                          "kind": "expressionstatement",
                        },
                      ],
                      "kind": "block",
                    },
                    "body": Block {
                      "children": Array [
                        ExpressionStatement {
                          "expression": Assign {
                            "kind": "assign",
                            "left": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "retval",
                            },
                            "operator": "=",
                            "right": Call {
                              "arguments": Array [
                                String {
                                  "isDoubleQuote": false,
                                  "kind": "string",
                                  "raw": "'C5'",
                                  "unicode": false,
                                  "value": "C5",
                                },
                                Bin {
                                  "kind": "bin",
                                  "left": Number {
                                    "kind": "number",
                                    "value": "0xf8",
                                  },
                                  "right": Bin {
                                    "kind": "bin",
                                    "left": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "k",
                                    },
                                    "parenthesizedExpression": true,
                                    "right": Number {
                                      "kind": "number",
                                      "value": "24",
                                    },
                                    "type": ">>",
                                  },
                                  "type": "|",
                                },
                                Bin {
                                  "kind": "bin",
                                  "left": Number {
                                    "kind": "number",
                                    "value": "0x80",
                                  },
                                  "right": Bin {
                                    "kind": "bin",
                                    "left": Bin {
                                      "kind": "bin",
                                      "left": Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "k",
                                      },
                                      "parenthesizedExpression": true,
                                      "right": Number {
                                        "kind": "number",
                                        "value": "18",
                                      },
                                      "type": ">>",
                                    },
                                    "parenthesizedExpression": true,
                                    "right": Number {
                                      "kind": "number",
                                      "value": "0x3f",
                                    },
                                    "type": "&",
                                  },
                                  "type": "|",
                                },
                                Bin {
                                  "kind": "bin",
                                  "left": Number {
                                    "kind": "number",
                                    "value": "0x80",
                                  },
                                  "right": Bin {
                                    "kind": "bin",
                                    "left": Bin {
                                      "kind": "bin",
                                      "left": Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "k",
                                      },
                                      "parenthesizedExpression": true,
                                      "right": Number {
                                        "kind": "number",
                                        "value": "12",
                                      },
                                      "type": ">>",
                                    },
                                    "parenthesizedExpression": true,
                                    "right": Number {
                                      "kind": "number",
                                      "value": "0x3f",
                                    },
                                    "type": "&",
                                  },
                                  "type": "|",
                                },
                                Bin {
                                  "kind": "bin",
                                  "left": Number {
                                    "kind": "number",
                                    "value": "0x80",
                                  },
                                  "right": Bin {
                                    "kind": "bin",
                                    "left": Bin {
                                      "kind": "bin",
                                      "left": Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "k",
                                      },
                                      "parenthesizedExpression": true,
                                      "right": Number {
                                        "kind": "number",
                                        "value": "6",
                                      },
                                      "type": ">>",
                                    },
                                    "parenthesizedExpression": true,
                                    "right": Number {
                                      "kind": "number",
                                      "value": "0x3f",
                                    },
                                    "type": "&",
                                  },
                                  "type": "|",
                                },
                                Bin {
                                  "kind": "bin",
                                  "left": Number {
                                    "kind": "number",
                                    "value": "0x80",
                                  },
                                  "right": Bin {
                                    "kind": "bin",
                                    "left": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "k",
                                    },
                                    "parenthesizedExpression": true,
                                    "right": Number {
                                      "kind": "number",
                                      "value": "0x3f",
                                    },
                                    "type": "&",
                                  },
                                  "type": "|",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "pack",
                                "resolution": "uqn",
                              },
                            },
                          },
                          "kind": "expressionstatement",
                        },
                      ],
                      "kind": "block",
                    },
                    "kind": "if",
                    "shortForm": false,
                    "test": Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "k",
                      },
                      "right": Number {
                        "kind": "number",
                        "value": "0x4000000",
                      },
                      "type": "<",
                    },
                  },
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "retval",
                          },
                          "operator": "=",
                          "right": Call {
                            "arguments": Array [
                              String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'C4'",
                                "unicode": false,
                                "value": "C4",
                              },
                              Bin {
                                "kind": "bin",
                                "left": Number {
                                  "kind": "number",
                                  "value": "0xf0",
                                },
                                "right": Bin {
                                  "kind": "bin",
                                  "left": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "k",
                                  },
                                  "parenthesizedExpression": true,
                                  "right": Number {
                                    "kind": "number",
                                    "value": "18",
                                  },
                                  "type": ">>",
                                },
                                "type": "|",
                              },
                              Bin {
                                "kind": "bin",
                                "left": Number {
                                  "kind": "number",
                                  "value": "0x80",
                                },
                                "right": Bin {
                                  "kind": "bin",
                                  "left": Bin {
                                    "kind": "bin",
                                    "left": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "k",
                                    },
                                    "parenthesizedExpression": true,
                                    "right": Number {
                                      "kind": "number",
                                      "value": "12",
                                    },
                                    "type": ">>",
                                  },
                                  "parenthesizedExpression": true,
                                  "right": Number {
                                    "kind": "number",
                                    "value": "0x3f",
                                  },
                                  "type": "&",
                                },
                                "type": "|",
                              },
                              Bin {
                                "kind": "bin",
                                "left": Number {
                                  "kind": "number",
                                  "value": "0x80",
                                },
                                "right": Bin {
                                  "kind": "bin",
                                  "left": Bin {
                                    "kind": "bin",
                                    "left": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "k",
                                    },
                                    "parenthesizedExpression": true,
                                    "right": Number {
                                      "kind": "number",
                                      "value": "6",
                                    },
                                    "type": ">>",
                                  },
                                  "parenthesizedExpression": true,
                                  "right": Number {
                                    "kind": "number",
                                    "value": "0x3f",
                                  },
                                  "type": "&",
                                },
                                "type": "|",
                              },
                              Bin {
                                "kind": "bin",
                                "left": Number {
                                  "kind": "number",
                                  "value": "0x80",
                                },
                                "right": Bin {
                                  "kind": "bin",
                                  "left": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "k",
                                  },
                                  "parenthesizedExpression": true,
                                  "right": Number {
                                    "kind": "number",
                                    "value": "0x3f",
                                  },
                                  "type": "&",
                                },
                                "type": "|",
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "pack",
                              "resolution": "uqn",
                            },
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "k",
                    },
                    "right": Number {
                      "kind": "number",
                      "value": "0x200000",
                    },
                    "type": "<",
                  },
                },
                "body": Block {
                  "children": Array [
                    ExpressionStatement {
                      "expression": Assign {
                        "kind": "assign",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "retval",
                        },
                        "operator": "=",
                        "right": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "'C3'",
                              "unicode": false,
                              "value": "C3",
                            },
                            Bin {
                              "kind": "bin",
                              "left": Number {
                                "kind": "number",
                                "value": "0xe0",
                              },
                              "right": Bin {
                                "kind": "bin",
                                "left": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "k",
                                },
                                "parenthesizedExpression": true,
                                "right": Number {
                                  "kind": "number",
                                  "value": "12",
                                },
                                "type": ">>",
                              },
                              "type": "|",
                            },
                            Bin {
                              "kind": "bin",
                              "left": Number {
                                "kind": "number",
                                "value": "0x80",
                              },
                              "right": Bin {
                                "kind": "bin",
                                "left": Bin {
                                  "kind": "bin",
                                  "left": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "k",
                                  },
                                  "parenthesizedExpression": true,
                                  "right": Number {
                                    "kind": "number",
                                    "value": "6",
                                  },
                                  "type": ">>",
                                },
                                "parenthesizedExpression": true,
                                "right": Number {
                                  "kind": "number",
                                  "value": "0x3f",
                                },
                                "type": "&",
                              },
                              "type": "|",
                            },
                            Bin {
                              "kind": "bin",
                              "left": Number {
                                "kind": "number",
                                "value": "0x80",
                              },
                              "right": Bin {
                                "kind": "bin",
                                "left": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "k",
                                },
                                "parenthesizedExpression": true,
                                "right": Number {
                                  "kind": "number",
                                  "value": "0x3f",
                                },
                                "type": "&",
                              },
                              "type": "|",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "pack",
                            "resolution": "uqn",
                          },
                        },
                      },
                      "kind": "expressionstatement",
                    },
                  ],
                  "kind": "block",
                },
                "kind": "if",
                "shortForm": false,
                "test": Bin {
                  "kind": "bin",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "k",
                  },
                  "right": Number {
                    "kind": "number",
                    "value": "0x10000",
                  },
                  "type": "<",
                },
              },
              "body": Block {
                "children": Array [
                  ExpressionStatement {
                    "expression": Assign {
                      "kind": "assign",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "retval",
                      },
                      "operator": "=",
                      "right": Call {
                        "arguments": Array [
                          String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'C2'",
                            "unicode": false,
                            "value": "C2",
                          },
                          Bin {
                            "kind": "bin",
                            "left": Number {
                              "kind": "number",
                              "value": "0xc0",
                            },
                            "right": Bin {
                              "kind": "bin",
                              "left": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "k",
                              },
                              "parenthesizedExpression": true,
                              "right": Number {
                                "kind": "number",
                                "value": "6",
                              },
                              "type": ">>",
                            },
                            "type": "|",
                          },
                          Bin {
                            "kind": "bin",
                            "left": Number {
                              "kind": "number",
                              "value": "0x80",
                            },
                            "right": Bin {
                              "kind": "bin",
                              "left": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "k",
                              },
                              "parenthesizedExpression": true,
                              "right": Number {
                                "kind": "number",
                                "value": "0x3f",
                              },
                              "type": "&",
                            },
                            "type": "|",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "pack",
                          "resolution": "uqn",
                        },
                      },
                    },
                    "kind": "expressionstatement",
                  },
                ],
                "kind": "block",
              },
              "kind": "if",
              "shortForm": false,
              "test": Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "k",
                },
                "right": Number {
                  "kind": "number",
                  "value": "0x800",
                },
                "type": "<",
              },
            },
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "retval",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'C'",
                          "unicode": false,
                          "value": "C",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "k",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "pack",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "k",
              },
              "right": Number {
                "kind": "number",
                "value": "0x80",
              },
              "type": "<",
            },
          },
          Return {
            "expr": Variable {
              "curly": false,
              "kind": "variable",
              "name": "retval",
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "utf32_utf8",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "table",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Name {
              "kind": "name",
              "name": "HTML_ENTITIES",
              "resolution": "uqn",
            },
            Name {
              "kind": "name",
              "name": "ENT_QUOTES",
              "resolution": "uqn",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'UTF-8'",
              "unicode": false,
              "value": "UTF-8",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "get_html_translation_table",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    For {
      "body": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": Continue {
              "kind": "continue",
              "level": null,
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
                "right": Number {
                  "kind": "number",
                  "value": "0xd800",
                },
                "type": ">=",
              },
              "right": Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
                "right": Number {
                  "kind": "number",
                  "value": "0xe000",
                },
                "type": "<",
              },
              "type": "&&",
            },
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "str",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "i",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "utf32_utf8",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"%s\\\\tU+%05X\\\\n\\"",
                        "unicode": false,
                        "value": "%s	U+%05X
",
                      },
                      OffsetLookup {
                        "kind": "offsetlookup",
                        "offset": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "str",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "table",
                        },
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "i",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Unset {
                  "kind": "unset",
                  "variables": Array [
                    OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "str",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "table",
                      },
                    },
                  ],
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Isset {
              "kind": "isset",
              "variables": Array [
                OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "str",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "table",
                  },
                },
              ],
            },
          },
        ],
        "kind": "block",
      },
      "increment": Array [
        Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "0",
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "right": Number {
            "kind": "number",
            "value": "0x2710",
          },
          "type": "<",
        },
      ],
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Not matched entities: \\"",
                "unicode": false,
                "value": "Not matched entities: ",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "table",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "table",
          },
          "kind": "empty",
        },
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
