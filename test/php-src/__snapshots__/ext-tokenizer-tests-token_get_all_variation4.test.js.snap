// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test token_get_all() function : usage variations - with comparison operators 1`] = `
Program {
  "children": Array [
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"*** Testing token_get_all() : 'source' string with different comparison operators ***\\\\n\\"",
          "unicode": false,
          "value": "*** Testing token_get_all() : 'source' string with different comparison operators ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "source",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'<?php
if($a == 0)
  echo \\"== 0\\";
elseif($a === 2)
  echo \\"=== 2\\";
elseif($a >= 10 && $a <= 20)
  echo \\">= 10 & <=20\\";
elseif($a != 1 || $a <> 1)
  echo \\"!= 1\\";
elseif($a !== 1)
  echo \\"!==1\\";
?>'",
          "unicode": false,
          "value": "<?php
if($a == 0)
  echo \\"== 0\\";
elseif($a === 2)
  echo \\"=== 2\\";
elseif($a >= 10 && $a <= 20)
  echo \\">= 10 & <=20\\";
elseif($a != 1 || $a <> 1)
  echo \\"!= 1\\";
elseif($a !== 1)
  echo \\"!==1\\";
?>",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "source",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "token_get_all",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Done\\"",
          "unicode": false,
          "value": "Done",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
