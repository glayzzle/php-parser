// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test parse_ini_file() function : variation - various absolute and relative paths 1`] = `
Program {
  "children": Array [
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"*** Testing parse_ini_file() : variation ***\\\\n\\"",
          "unicode": false,
          "value": "*** Testing parse_ini_file() : variation ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "mainDir",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"parseIniFileVar6.dir\\"",
          "unicode": false,
          "value": "parseIniFileVar6.dir",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "subDir",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"parseIniFileVar6Sub\\"",
          "unicode": false,
          "value": "parseIniFileVar6Sub",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "absMainDir",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Magic {
              "kind": "magic",
              "raw": "__DIR__",
              "value": "__DIR__",
            },
            "right": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"/\\"",
              "unicode": false,
              "value": "/",
            },
            "type": ".",
          },
          "right": Variable {
            "curly": false,
            "kind": "variable",
            "name": "mainDir",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "absMainDir",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mkdir",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "absSubDir",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "absMainDir",
            },
            "right": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"/\\"",
              "unicode": false,
              "value": "/",
            },
            "type": ".",
          },
          "right": Variable {
            "curly": false,
            "kind": "variable",
            "name": "subDir",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "absSubDir",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mkdir",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "old_dir_path",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "getcwd",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Magic {
            "kind": "magic",
            "raw": "__DIR__",
            "value": "__DIR__",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "chdir",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "allDirs",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Encapsed {
                "kind": "encapsed",
                "raw": "\\"$absSubDir/\\"",
                "type": "string",
                "value": Array [
                  EncapsedPart {
                    "curly": false,
                    "expression": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "absSubDir",
                    },
                    "kind": "encapsedpart",
                    "syntax": "simple",
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "/",
                      "unicode": false,
                      "value": "/",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                ],
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Bin {
                "kind": "bin",
                "left": Encapsed {
                  "kind": "encapsed",
                  "raw": "\\"$absSubDir/../\\"",
                  "type": "string",
                  "value": Array [
                    EncapsedPart {
                      "curly": false,
                      "expression": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "absSubDir",
                      },
                      "kind": "encapsedpart",
                      "syntax": "simple",
                    },
                    EncapsedPart {
                      "curly": false,
                      "expression": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "/../",
                        "unicode": false,
                        "value": "/../",
                      },
                      "kind": "encapsedpart",
                      "syntax": null,
                    },
                  ],
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "subDir",
                },
                "type": ".",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Bin {
                "kind": "bin",
                "left": Encapsed {
                  "kind": "encapsed",
                  "raw": "\\"$absSubDir//.././\\"",
                  "type": "string",
                  "value": Array [
                    EncapsedPart {
                      "curly": false,
                      "expression": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "absSubDir",
                      },
                      "kind": "encapsedpart",
                      "syntax": "simple",
                    },
                    EncapsedPart {
                      "curly": false,
                      "expression": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "//.././",
                        "unicode": false,
                        "value": "//.././",
                      },
                      "kind": "encapsedpart",
                      "syntax": null,
                    },
                  ],
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "subDir",
                },
                "type": ".",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": Bin {
                    "kind": "bin",
                    "left": Encapsed {
                      "kind": "encapsed",
                      "raw": "\\"$absSubDir/../../\\"",
                      "type": "string",
                      "value": Array [
                        EncapsedPart {
                          "curly": false,
                          "expression": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "absSubDir",
                          },
                          "kind": "encapsedpart",
                          "syntax": "simple",
                        },
                        EncapsedPart {
                          "curly": false,
                          "expression": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "/../../",
                            "unicode": false,
                            "value": "/../../",
                          },
                          "kind": "encapsedpart",
                          "syntax": null,
                        },
                      ],
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "mainDir",
                    },
                    "type": ".",
                  },
                  "right": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"/./\\"",
                    "unicode": false,
                    "value": "/./",
                  },
                  "type": ".",
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "subDir",
                },
                "type": ".",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": Bin {
                    "kind": "bin",
                    "left": Encapsed {
                      "kind": "encapsed",
                      "raw": "\\"$absSubDir/..///\\"",
                      "type": "string",
                      "value": Array [
                        EncapsedPart {
                          "curly": false,
                          "expression": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "absSubDir",
                          },
                          "kind": "encapsedpart",
                          "syntax": "simple",
                        },
                        EncapsedPart {
                          "curly": false,
                          "expression": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "/..///",
                            "unicode": false,
                            "value": "/..///",
                          },
                          "kind": "encapsedpart",
                          "syntax": null,
                        },
                      ],
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "subDir",
                    },
                    "type": ".",
                  },
                  "right": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"//..//../\\"",
                    "unicode": false,
                    "value": "//..//../",
                  },
                  "type": ".",
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "subDir",
                },
                "type": ".",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Encapsed {
                "kind": "encapsed",
                "raw": "\\"$absSubDir/BADDIR\\"",
                "type": "string",
                "value": Array [
                  EncapsedPart {
                    "curly": false,
                    "expression": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "absSubDir",
                    },
                    "kind": "encapsedpart",
                    "syntax": "simple",
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "/BADDIR",
                      "unicode": false,
                      "value": "/BADDIR",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                ],
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "mainDir",
                  },
                  "right": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"/\\"",
                    "unicode": false,
                    "value": "/",
                  },
                  "type": ".",
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "subDir",
                },
                "type": ".",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "mainDir",
                  },
                  "right": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"//\\"",
                    "unicode": false,
                    "value": "//",
                  },
                  "type": ".",
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "subDir",
                },
                "type": ".",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "mainDir",
                  },
                  "right": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"///\\"",
                    "unicode": false,
                    "value": "///",
                  },
                  "type": ".",
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "subDir",
                },
                "type": ".",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": Bin {
                        "kind": "bin",
                        "left": String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"./\\"",
                          "unicode": false,
                          "value": "./",
                        },
                        "right": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "mainDir",
                        },
                        "type": ".",
                      },
                      "right": String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"/../\\"",
                        "unicode": false,
                        "value": "/../",
                      },
                      "type": ".",
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "mainDir",
                    },
                    "type": ".",
                  },
                  "right": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"/\\"",
                    "unicode": false,
                    "value": "/",
                  },
                  "type": ".",
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "subDir",
                },
                "type": ".",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"BADDIR\\"",
                "unicode": false,
                "value": "BADDIR",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "filename",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'ParseIniFileVar6.ini'",
          "unicode": false,
          "value": "ParseIniFileVar6.ini",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "content",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"a=test\\"",
          "unicode": false,
          "value": "a=test",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "absFile",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "absSubDir",
            },
            "right": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'/'",
              "unicode": false,
              "value": "/",
            },
            "type": ".",
          },
          "right": Variable {
            "curly": false,
            "kind": "variable",
            "name": "filename",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "h",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "absFile",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"w\\"",
              "unicode": false,
              "value": "w",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "fopen",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "h",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "content",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "fwrite",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "h",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "fclose",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    For {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "j",
              },
              "operator": "=",
              "right": Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
                "right": Number {
                  "kind": "number",
                  "value": "1",
                },
                "type": "+",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "dir",
              },
              "operator": "=",
              "right": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "allDirs",
                },
              },
            },
            "kind": "expressionstatement",
          },
          Echo {
            "expressions": Array [
              Encapsed {
                "kind": "encapsed",
                "raw": "\\"\\\\n-- Iteration $j --\\\\n\\"",
                "type": "string",
                "value": Array [
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "\\\\n-- Iteration ",
                      "unicode": false,
                      "value": "
-- Iteration ",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "j",
                    },
                    "kind": "encapsedpart",
                    "syntax": "simple",
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": " --\\\\n",
                      "unicode": false,
                      "value": " --",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                ],
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [
                    Bin {
                      "kind": "bin",
                      "left": Bin {
                        "kind": "bin",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "dir",
                        },
                        "right": String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"/\\"",
                          "unicode": false,
                          "value": "/",
                        },
                        "type": ".",
                      },
                      "right": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "filename",
                      },
                      "type": ".",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "parse_ini_file",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "increment": Array [
        Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "0",
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "allDirs",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "count",
              "resolution": "uqn",
            },
          },
          "type": "<",
        },
      ],
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "absFile",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "unlink",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "old_dir_path",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "chdir",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "absSubDir",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "rmdir",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "absMainDir",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "rmdir",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n*** Done ***\\\\n\\"",
          "unicode": false,
          "value": "
*** Done ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
