// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests FFI 021: packed enums 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "size",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "type",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    Encapsed {
                      "kind": "encapsed",
                      "raw": "\\"FAIL: sizeof($type) != $size\\\\n\\"",
                      "type": "string",
                      "value": Array [
                        EncapsedPart {
                          "curly": false,
                          "expression": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "FAIL: sizeof(",
                            "unicode": false,
                            "value": "FAIL: sizeof(",
                          },
                          "kind": "encapsedpart",
                          "syntax": null,
                        },
                        EncapsedPart {
                          "curly": false,
                          "expression": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "type",
                          },
                          "kind": "encapsedpart",
                          "syntax": "simple",
                        },
                        EncapsedPart {
                          "curly": false,
                          "expression": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": ") != ",
                            "unicode": false,
                            "value": ") != ",
                          },
                          "kind": "encapsedpart",
                          "syntax": null,
                        },
                        EncapsedPart {
                          "curly": false,
                          "expression": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "size",
                          },
                          "kind": "encapsedpart",
                          "syntax": "simple",
                        },
                        EncapsedPart {
                          "curly": false,
                          "expression": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "\\\\n",
                            "unicode": false,
                            "value": "",
                          },
                          "kind": "encapsedpart",
                          "syntax": null,
                        },
                      ],
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Call {
                "arguments": Array [
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "type",
                      },
                    ],
                    "kind": "call",
                    "what": StaticLookup {
                      "kind": "staticlookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "new",
                      },
                      "what": Name {
                        "kind": "name",
                        "name": "FFI",
                        "resolution": "uqn",
                      },
                    },
                  },
                ],
                "kind": "call",
                "what": StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "sizeof",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "FFI",
                    "resolution": "uqn",
                  },
                },
              },
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "size",
              },
              "type": "!==",
            },
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "test",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "4",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"enum {a1, b1}\\"",
            "unicode": false,
            "value": "enum {a1, b1}",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "1",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"enum __attribute__((packed)) {a2, b2}\\"",
            "unicode": false,
            "value": "enum __attribute__((packed)) {a2, b2}",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "4",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"enum {a3=0, b3=0x80000000}\\"",
            "unicode": false,
            "value": "enum {a3=0, b3=0x80000000}",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "8",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"enum {a4=-1, b4=0x80000000}\\"",
            "unicode": false,
            "value": "enum {a4=-1, b4=0x80000000}",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "8",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"enum {a5=0x80000000, b5=-1}\\"",
            "unicode": false,
            "value": "enum {a5=0x80000000, b5=-1}",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "4",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"enum {a6=-1, b6=0x7fffffff}\\"",
            "unicode": false,
            "value": "enum {a6=-1, b6=0x7fffffff}",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "8",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"enum {a7=-1, b7=0x7fffffff, c7}\\"",
            "unicode": false,
            "value": "enum {a7=-1, b7=0x7fffffff, c7}",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "1",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"enum __attribute__((packed)) {a8=0, b8=0xff}\\"",
            "unicode": false,
            "value": "enum __attribute__((packed)) {a8=0, b8=0xff}",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "2",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"enum __attribute__((packed)) {a9=0, b9=0x100}\\"",
            "unicode": false,
            "value": "enum __attribute__((packed)) {a9=0, b9=0x100}",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "1",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"enum __attribute__((packed)) {a10=-1, b10=0x7f}\\"",
            "unicode": false,
            "value": "enum __attribute__((packed)) {a10=-1, b10=0x7f}",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "2",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"enum __attribute__((packed)) {a11=-1, b11=0x80}\\"",
            "unicode": false,
            "value": "enum __attribute__((packed)) {a11=-1, b11=0x80}",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "1",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"enum __attribute__((packed)) {a12=0x7f, b12=-0x80}\\"",
            "unicode": false,
            "value": "enum __attribute__((packed)) {a12=0x7f, b12=-0x80}",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "2",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"enum __attribute__((packed)) {a13=0x7f, b13=-0x81}\\"",
            "unicode": false,
            "value": "enum __attribute__((packed)) {a13=0x7f, b13=-0x81}",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "2",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"enum __attribute__((packed)) {a8=0, b8=0xffff}\\"",
            "unicode": false,
            "value": "enum __attribute__((packed)) {a8=0, b8=0xffff}",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "4",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"enum __attribute__((packed)) {a9=0, b9=0x10000}\\"",
            "unicode": false,
            "value": "enum __attribute__((packed)) {a9=0, b9=0x10000}",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "2",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"enum __attribute__((packed)) {a10=-1, b10=0x7f00}\\"",
            "unicode": false,
            "value": "enum __attribute__((packed)) {a10=-1, b10=0x7f00}",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "4",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"enum __attribute__((packed)) {a11=-1, b11=0x8000}\\"",
            "unicode": false,
            "value": "enum __attribute__((packed)) {a11=-1, b11=0x8000}",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "2",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"enum __attribute__((packed)) {a12=0x7f00, b12=-0x8000}\\"",
            "unicode": false,
            "value": "enum __attribute__((packed)) {a12=0x7f00, b12=-0x8000}",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "4",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"enum __attribute__((packed)) {a13=0x7f00, b13=-0x8001}\\"",
            "unicode": false,
            "value": "enum __attribute__((packed)) {a13=0x7f00, b13=-0x8001}",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "4",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"enum __attribute__((packed)) {a8=0, b8=0xffffffff}\\"",
            "unicode": false,
            "value": "enum __attribute__((packed)) {a8=0, b8=0xffffffff}",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "8",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"enum __attribute__((packed)) {a9=0, b9=0x100000000}\\"",
            "unicode": false,
            "value": "enum __attribute__((packed)) {a9=0, b9=0x100000000}",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "4",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"enum __attribute__((packed)) {a10=-1, b10=0x7f000000}\\"",
            "unicode": false,
            "value": "enum __attribute__((packed)) {a10=-1, b10=0x7f000000}",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "8",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"enum __attribute__((packed)) {a11=-1, b11=0x80000000}\\"",
            "unicode": false,
            "value": "enum __attribute__((packed)) {a11=-1, b11=0x80000000}",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "4",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"enum __attribute__((packed)) {a12=0x7f000000, b12=-0x80000000}\\"",
            "unicode": false,
            "value": "enum __attribute__((packed)) {a12=0x7f000000, b12=-0x80000000}",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "8",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"enum __attribute__((packed)) {a13=0x7f000000, b13=-0x80000001}\\"",
            "unicode": false,
            "value": "enum __attribute__((packed)) {a13=0x7f000000, b13=-0x80000001}",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "1",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"enum __attribute__((packed)) {a14=-0x80}\\"",
            "unicode": false,
            "value": "enum __attribute__((packed)) {a14=-0x80}",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "2",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"enum __attribute__((packed)) {a14=-0x81}\\"",
            "unicode": false,
            "value": "enum __attribute__((packed)) {a14=-0x81}",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "2",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"enum __attribute__((packed)) {a14=-0x8000}\\"",
            "unicode": false,
            "value": "enum __attribute__((packed)) {a14=-0x8000}",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "4",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"enum __attribute__((packed)) {a14=-0x8001}\\"",
            "unicode": false,
            "value": "enum __attribute__((packed)) {a14=-0x8001}",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "4",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"enum __attribute__((packed)) {a14=-0x80000000}\\"",
            "unicode": false,
            "value": "enum __attribute__((packed)) {a14=-0x80000000}",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "8",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"enum __attribute__((packed)) {a14=-0x80000001}\\"",
            "unicode": false,
            "value": "enum __attribute__((packed)) {a14=-0x80000001}",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Inline {
      "kind": "inline",
      "raw": "
ok",
      "value": "ok",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
