// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Function snmp2_set (without MIBs loading) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": true,
        "target": Bin {
          "kind": "bin",
          "left": Magic {
            "kind": "magic",
            "raw": "__DIR__",
            "value": "__DIR__",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'/snmp_include.inc'",
            "unicode": false,
            "value": "/snmp_include.inc",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "snmp_set_quick_print",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Name {
            "kind": "name",
            "name": "SNMP_VALUE_PLAIN",
            "resolution": "uqn",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "snmp_set_valueretrieval",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Check error handing\\\\n\\"",
          "unicode": false,
          "value": "Check error handing
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Nonexisting OID\\\\n\\"",
          "unicode": false,
          "value": "Nonexisting OID
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "z",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "hostname",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "communityWrite",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'.1.3.6.777.888.999.444.0'",
              "unicode": false,
              "value": ".1.3.6.777.888.999.444.0",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'s'",
              "unicode": false,
              "value": "s",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'bbb'",
              "unicode": false,
              "value": "bbb",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "timeout",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "retries",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "snmp2_set",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "z",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Bogus OID\\\\n\\"",
          "unicode": false,
          "value": "Bogus OID
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "z",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "hostname",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "communityWrite",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'.1.3.6...777.888.999.444.0'",
              "unicode": false,
              "value": ".1.3.6...777.888.999.444.0",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'s'",
              "unicode": false,
              "value": "s",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'bbb'",
              "unicode": false,
              "value": "bbb",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "timeout",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "retries",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "snmp2_set",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "z",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Checking working\\\\n\\"",
          "unicode": false,
          "value": "Checking working
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "oid1",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'.1.3.6.1.2.1.1.4.0'",
          "unicode": false,
          "value": ".1.3.6.1.2.1.1.4.0",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "oldvalue1",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "hostname",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "communityWrite",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "oid1",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "timeout",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "retries",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "snmpget",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "newvalue1",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "oldvalue1",
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Single OID\\\\n\\"",
          "unicode": false,
          "value": "Single OID
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "z",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "hostname",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "communityWrite",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "oid1",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'s'",
              "unicode": false,
              "value": "s",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "newvalue1",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "timeout",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "retries",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "snmp2_set",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "z",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "hostname",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "communityWrite",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "oid1",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "timeout",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "retries",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "snmpget",
                "resolution": "uqn",
              },
            },
            "parenthesizedExpression": true,
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "newvalue1",
            },
            "type": "===",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "z",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "hostname",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "communityWrite",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "oid1",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'s'",
              "unicode": false,
              "value": "s",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "oldvalue1",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "timeout",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "retries",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "snmp2_set",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "z",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "hostname",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "communityWrite",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "oid1",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "timeout",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "retries",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "snmpget",
                "resolution": "uqn",
              },
            },
            "parenthesizedExpression": true,
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "oldvalue1",
            },
            "type": "===",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
