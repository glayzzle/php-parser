// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests imap_open() DISABLE_AUTHENTICATOR ignores array param 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "tests",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'Array'",
                "unicode": false,
                "value": "Array",
              },
              "kind": "entry",
              "unpack": false,
              "value": Array {
                "items": Array [
                  Entry {
                    "byRef": false,
                    "key": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'DISABLE_AUTHENTICATOR'",
                      "unicode": false,
                      "value": "DISABLE_AUTHENTICATOR",
                    },
                    "kind": "entry",
                    "unpack": false,
                    "value": Array {
                      "items": Array [
                        Entry {
                          "byRef": false,
                          "key": null,
                          "kind": "entry",
                          "unpack": false,
                          "value": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'GSSAPI'",
                            "unicode": false,
                            "value": "GSSAPI",
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": null,
                          "kind": "entry",
                          "unpack": false,
                          "value": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'NTLM'",
                            "unicode": false,
                            "value": "NTLM",
                          },
                        },
                      ],
                      "kind": "array",
                      "shortForm": false,
                    },
                  },
                ],
                "kind": "array",
                "shortForm": false,
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'String'",
                "unicode": false,
                "value": "String",
              },
              "kind": "entry",
              "unpack": false,
              "value": Array {
                "items": Array [
                  Entry {
                    "byRef": false,
                    "key": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'DISABLE_AUTHENTICATOR'",
                      "unicode": false,
                      "value": "DISABLE_AUTHENTICATOR",
                    },
                    "kind": "entry",
                    "unpack": false,
                    "value": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'GSSAPI'",
                      "unicode": false,
                      "value": "GSSAPI",
                    },
                  },
                ],
                "kind": "array",
                "shortForm": false,
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": true,
        "target": Bin {
          "kind": "bin",
          "left": Magic {
            "kind": "magic",
            "raw": "__DIR__",
            "value": "__DIR__",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'/setup/imap_include.inc'",
            "unicode": false,
            "value": "/setup/imap_include.inc",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              Encapsed {
                "kind": "encapsed",
                "raw": "\\"Test for $name\\\\n\\"",
                "type": "string",
                "value": Array [
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "Test for ",
                      "unicode": false,
                      "value": "Test for ",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "name",
                    },
                    "kind": "encapsedpart",
                    "syntax": "simple",
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "\\\\n",
                      "unicode": false,
                      "value": "",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                ],
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "in",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Name {
                    "kind": "name",
                    "name": "IMAP_SERVER_DEBUG",
                    "resolution": "uqn",
                  },
                  Name {
                    "kind": "name",
                    "name": "IMAP_MAILBOX_USERNAME",
                    "resolution": "uqn",
                  },
                  Name {
                    "kind": "name",
                    "name": "IMAP_MAILBOX_PASSWORD",
                    "resolution": "uqn",
                  },
                  Name {
                    "kind": "name",
                    "name": "OP_HALFOPEN",
                    "resolution": "uqn",
                  },
                  Number {
                    "kind": "number",
                    "value": "1",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "testparams",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "imap_open",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"Can't connect\\\\n\\"",
                      "unicode": false,
                      "value": "Can't connect
",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
              ],
              "kind": "block",
            },
            "body": Block {
              "children": Array [
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      Foreach {
                        "body": Block {
                          "children": Array [
                            If {
                              "alternate": null,
                              "body": Block {
                                "children": Array [
                                  Echo {
                                    "expressions": Array [
                                      Encapsed {
                                        "kind": "encapsed",
                                        "raw": "\\"$err\\\\n\\"",
                                        "type": "string",
                                        "value": Array [
                                          EncapsedPart {
                                            "curly": false,
                                            "expression": Variable {
                                              "curly": false,
                                              "kind": "variable",
                                              "name": "err",
                                            },
                                            "kind": "encapsedpart",
                                            "syntax": "simple",
                                          },
                                          EncapsedPart {
                                            "curly": false,
                                            "expression": String {
                                              "isDoubleQuote": false,
                                              "kind": "string",
                                              "raw": "\\\\n",
                                              "unicode": false,
                                              "value": "",
                                            },
                                            "kind": "encapsedpart",
                                            "syntax": null,
                                          },
                                        ],
                                      },
                                    ],
                                    "kind": "echo",
                                    "shortForm": false,
                                  },
                                ],
                                "kind": "block",
                              },
                              "kind": "if",
                              "shortForm": false,
                              "test": Bin {
                                "kind": "bin",
                                "left": Call {
                                  "arguments": Array [
                                    Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "err",
                                    },
                                    String {
                                      "isDoubleQuote": false,
                                      "kind": "string",
                                      "raw": "'GSSAPI'",
                                      "unicode": false,
                                      "value": "GSSAPI",
                                    },
                                  ],
                                  "kind": "call",
                                  "what": Name {
                                    "kind": "name",
                                    "name": "strstr",
                                    "resolution": "uqn",
                                  },
                                },
                                "right": Call {
                                  "arguments": Array [
                                    Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "err",
                                    },
                                    String {
                                      "isDoubleQuote": false,
                                      "kind": "string",
                                      "raw": "'Kerberos'",
                                      "unicode": false,
                                      "value": "Kerberos",
                                    },
                                  ],
                                  "kind": "call",
                                  "what": Name {
                                    "kind": "name",
                                    "name": "strstr",
                                    "resolution": "uqn",
                                  },
                                },
                                "type": "||",
                              },
                            },
                          ],
                          "kind": "block",
                        },
                        "key": null,
                        "kind": "foreach",
                        "shortForm": false,
                        "source": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "errors",
                        },
                        "value": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "err",
                        },
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Call {
                    "arguments": Array [
                      Assign {
                        "kind": "assign",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "errors",
                        },
                        "operator": "=",
                        "right": Call {
                          "arguments": Array [],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "imap_errors",
                            "resolution": "uqn",
                          },
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "is_array",
                      "resolution": "uqn",
                    },
                  },
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Variable {
              "curly": false,
              "kind": "variable",
              "name": "in",
            },
          },
        ],
        "kind": "block",
      },
      "key": Variable {
        "curly": false,
        "kind": "variable",
        "name": "name",
      },
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "tests",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "testparams",
      },
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Done\\\\n\\"",
          "unicode": false,
          "value": "Done
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
