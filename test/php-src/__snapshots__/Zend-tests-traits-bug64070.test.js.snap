// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #64070 (Inheritance with Traits failed with error) 1`] = `
Program {
  "children": Array [
    Trait {
      "body": Array [
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"From First Trait\\\\n\\"",
                    "unicode": false,
                    "value": "From First Trait
",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "first_function",
          },
          "nullable": false,
          "type": null,
          "visibility": "",
        },
      ],
      "kind": "trait",
      "name": Identifier {
        "kind": "identifier",
        "name": "first_trait",
      },
    },
    Trait {
      "body": Array [
        TraitUse {
          "adaptations": Array [
            TraitAlias {
              "as": Identifier {
                "kind": "identifier",
                "name": "second_function",
              },
              "kind": "traitalias",
              "method": Identifier {
                "kind": "identifier",
                "name": "first_function",
              },
              "trait": Name {
                "kind": "name",
                "name": "first_trait",
                "resolution": "uqn",
              },
              "visibility": "",
            },
          ],
          "kind": "traituse",
          "traits": Array [
            Name {
              "kind": "name",
              "name": "first_trait",
              "resolution": "uqn",
            },
          ],
        },
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"From Second Trait\\\\n\\"",
                    "unicode": false,
                    "value": "From Second Trait
",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "first_function",
          },
          "nullable": false,
          "type": null,
          "visibility": "",
        },
      ],
      "kind": "trait",
      "name": Identifier {
        "kind": "identifier",
        "name": "second_trait",
      },
    },
    Class {
      "attrGroups": Array [],
      "body": Array [
        TraitUse {
          "adaptations": null,
          "kind": "traituse",
          "traits": Array [
            Name {
              "kind": "name",
              "name": "second_trait",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "first_class",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "obj",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "first_class",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "first_function",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "obj",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "second_function",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "obj",
          },
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
