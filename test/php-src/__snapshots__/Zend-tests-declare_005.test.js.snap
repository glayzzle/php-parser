// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Testing declare statement with ticks 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Closure {
            "arguments": Array [],
            "attrGroups": Array [],
            "body": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"tick\\\\n\\"",
                      "unicode": false,
                      "value": "tick
",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
              ],
              "kind": "block",
            },
            "byref": false,
            "isStatic": false,
            "kind": "closure",
            "nullable": false,
            "type": null,
            "uses": Array [],
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "register_tick_function",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    _Function {
      "arguments": Array [],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "foo",
      },
      "nullable": false,
      "type": null,
    },
    Declare {
      "children": Array [
        ExpressionStatement {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "statement",
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "foo",
              "resolution": "uqn",
            },
          },
          "kind": "expressionstatement",
        },
      ],
      "directives": Array [
        DeclareDirective {
          "key": Identifier {
            "kind": "identifier",
            "name": "ticks",
          },
          "kind": "declaredirective",
          "value": Number {
            "kind": "number",
            "value": "1",
          },
        },
      ],
      "kind": "declare",
      "mode": "block",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
