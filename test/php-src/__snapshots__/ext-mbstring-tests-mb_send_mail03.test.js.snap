// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests mb_send_mail() test 3 (lang=English) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "to",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'example@example.com'",
          "unicode": false,
          "value": "example@example.com",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "to",
          },
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_language",
              "resolution": "uqn",
            },
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"test\\"",
            "unicode": false,
            "value": "test",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mb_send_mail",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"ISO-8859-1\\"",
                  "unicode": false,
                  "value": "ISO-8859-1",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mb_internal_encoding",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "to",
                },
                Bin {
                  "kind": "bin",
                  "left": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"test \\"",
                    "unicode": false,
                    "value": "test ",
                  },
                  "right": Call {
                    "arguments": Array [],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mb_language",
                      "resolution": "uqn",
                    },
                  },
                  "type": ".",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"test\\"",
                  "unicode": false,
                  "value": "test",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mb_send_mail",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"english\\"",
            "unicode": false,
            "value": "english",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mb_language",
          "resolution": "uqn",
        },
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
