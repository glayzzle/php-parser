// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests MessageFormat accepts IntlCalendar args 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"intl.error_level\\"",
            "unicode": false,
            "value": "intl.error_level",
          },
          Name {
            "kind": "name",
            "name": "E_WARNING",
            "resolution": "uqn",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "ini_set",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'date.timezone'",
            "unicode": false,
            "value": "date.timezone",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'Europe/Lisbon'",
            "unicode": false,
            "value": "Europe/Lisbon",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "ini_set",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "cal",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            Number {
              "kind": "number",
              "value": "2012",
            },
            Number {
              "kind": "number",
              "value": "04",
            },
            Number {
              "kind": "number",
              "value": "17",
            },
            Number {
              "kind": "number",
              "value": "17",
            },
            Number {
              "kind": "number",
              "value": "35",
            },
            Number {
              "kind": "number",
              "value": "36",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "IntlGregorianCalendar",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "msgf",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'pt_PT'",
              "unicode": false,
              "value": "pt_PT",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'{0,date,full} {0,time,h:m:s a V}'",
              "unicode": false,
              "value": "{0,date,full} {0,time,h:m:s a V}",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "MessageFormatter",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Call {
          "arguments": Array [
            Array {
              "items": Array [
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "cal",
                  },
                },
              ],
              "kind": "array",
              "shortForm": false,
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "format",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "msgf",
            },
          },
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
