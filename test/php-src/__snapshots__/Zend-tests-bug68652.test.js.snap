// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #68652 (segmentation fault in destructor) 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [],
      "body": Array [
        PropertyStatement {
          "isStatic": true,
          "kind": "propertystatement",
          "properties": Array [
            Property {
              "attrGroups": Array [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "instance",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
            },
          ],
          "visibility": "private",
        },
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              If {
                "alternate": null,
                "body": Block {
                  "children": Array [
                    Return {
                      "expr": StaticLookup {
                        "kind": "staticlookup",
                        "offset": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "instance",
                        },
                        "what": SelfReference {
                          "kind": "selfreference",
                          "raw": "self",
                        },
                      },
                      "kind": "return",
                    },
                  ],
                  "kind": "block",
                },
                "kind": "if",
                "shortForm": false,
                "test": Isset {
                  "kind": "isset",
                  "variables": Array [
                    StaticLookup {
                      "kind": "staticlookup",
                      "offset": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "instance",
                      },
                      "what": SelfReference {
                        "kind": "selfreference",
                        "raw": "self",
                      },
                    },
                  ],
                },
              },
              Return {
                "expr": Assign {
                  "kind": "assign",
                  "left": StaticLookup {
                    "kind": "staticlookup",
                    "offset": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "instance",
                    },
                    "what": SelfReference {
                      "kind": "selfreference",
                      "raw": "self",
                    },
                  },
                  "operator": "=",
                  "right": New {
                    "arguments": Array [],
                    "kind": "new",
                    "what": SelfReference {
                      "kind": "selfreference",
                      "raw": "self",
                    },
                  },
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": true,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "getInstance",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": StaticLookup {
                    "kind": "staticlookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "getInstance",
                    },
                    "what": Name {
                      "kind": "name",
                      "name": "Bar",
                      "resolution": "uqn",
                    },
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "__destruct",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "Foo",
      },
    },
    Class {
      "attrGroups": Array [],
      "body": Array [
        PropertyStatement {
          "isStatic": true,
          "kind": "propertystatement",
          "properties": Array [
            Property {
              "attrGroups": Array [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "instance",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
            },
          ],
          "visibility": "private",
        },
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              If {
                "alternate": null,
                "body": Block {
                  "children": Array [
                    Return {
                      "expr": StaticLookup {
                        "kind": "staticlookup",
                        "offset": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "instance",
                        },
                        "what": SelfReference {
                          "kind": "selfreference",
                          "raw": "self",
                        },
                      },
                      "kind": "return",
                    },
                  ],
                  "kind": "block",
                },
                "kind": "if",
                "shortForm": false,
                "test": Isset {
                  "kind": "isset",
                  "variables": Array [
                    StaticLookup {
                      "kind": "staticlookup",
                      "offset": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "instance",
                      },
                      "what": SelfReference {
                        "kind": "selfreference",
                        "raw": "self",
                      },
                    },
                  ],
                },
              },
              Return {
                "expr": Assign {
                  "kind": "assign",
                  "left": StaticLookup {
                    "kind": "staticlookup",
                    "offset": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "instance",
                    },
                    "what": SelfReference {
                      "kind": "selfreference",
                      "raw": "self",
                    },
                  },
                  "operator": "=",
                  "right": New {
                    "arguments": Array [],
                    "kind": "new",
                    "what": SelfReference {
                      "kind": "selfreference",
                      "raw": "self",
                    },
                  },
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": true,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "getInstance",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              If {
                "alternate": null,
                "body": Return {
                  "expr": null,
                  "kind": "return",
                },
                "kind": "if",
                "shortForm": false,
                "test": Unary {
                  "kind": "unary",
                  "type": "!",
                  "what": Isset {
                    "kind": "isset",
                    "variables": Array [
                      StaticLookup {
                        "kind": "staticlookup",
                        "offset": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "instance",
                        },
                        "what": SelfReference {
                          "kind": "selfreference",
                          "raw": "self",
                        },
                      },
                    ],
                  },
                },
              },
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": StaticLookup {
                    "kind": "staticlookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "getInstance",
                    },
                    "what": Name {
                      "kind": "name",
                      "name": "Foo",
                      "resolution": "uqn",
                    },
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "__destruct",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "Bar",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "foo",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "Foo",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Inline {
      "kind": "inline",
      "raw": "
OK",
      "value": "OK",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
