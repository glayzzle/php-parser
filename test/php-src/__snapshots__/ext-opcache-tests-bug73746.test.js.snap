// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #73746 (Method that returns string returns UNKNOWN:0 instead) 1`] = `
Program {
  "children": Array [
    Namespace {
      "children": Array [
        Class {
          "attrGroups": Array [],
          "body": Array [
            ClassConstant {
              "attrGroups": Array [],
              "constants": Array [
                Constant {
                  "kind": "constant",
                  "name": Identifier {
                    "kind": "identifier",
                    "name": "CZ",
                  },
                  "value": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'CZ'",
                    "unicode": false,
                    "value": "CZ",
                  },
                },
              ],
              "kind": "classconstant",
              "visibility": "",
            },
            ClassConstant {
              "attrGroups": Array [],
              "constants": Array [
                Constant {
                  "kind": "constant",
                  "name": Identifier {
                    "kind": "identifier",
                    "name": "EN",
                  },
                  "value": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'EN'",
                    "unicode": false,
                    "value": "EN",
                  },
                },
              ],
              "kind": "classconstant",
              "visibility": "",
            },
            Method {
              "arguments": Array [
                Parameter {
                  "attrGroups": Array [],
                  "byref": false,
                  "flags": 0,
                  "kind": "parameter",
                  "name": Identifier {
                    "kind": "identifier",
                    "name": "countryIsoCode",
                  },
                  "nullable": false,
                  "readonly": false,
                  "type": TypeReference {
                    "kind": "typereference",
                    "name": "string",
                    "raw": "string",
                  },
                  "value": NullKeyword {
                    "kind": "nullkeyword",
                    "raw": "null",
                  },
                  "variadic": false,
                },
              ],
              "attrGroups": Array [],
              "body": Block {
                "children": Array [
                  Switch {
                    "body": Block {
                      "children": Array [
                        Case {
                          "body": Block {
                            "children": Array [],
                            "kind": "block",
                          },
                          "kind": "case",
                          "test": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'CZ'",
                            "unicode": false,
                            "value": "CZ",
                          },
                        },
                        Case {
                          "body": Block {
                            "children": Array [
                              Return {
                                "expr": StaticLookup {
                                  "kind": "staticlookup",
                                  "offset": Identifier {
                                    "kind": "identifier",
                                    "name": "CZ",
                                  },
                                  "what": SelfReference {
                                    "kind": "selfreference",
                                    "raw": "self",
                                  },
                                },
                                "kind": "return",
                              },
                            ],
                            "kind": "block",
                          },
                          "kind": "case",
                          "test": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'SK'",
                            "unicode": false,
                            "value": "SK",
                          },
                        },
                        Case {
                          "body": Block {
                            "children": Array [
                              Return {
                                "expr": StaticLookup {
                                  "kind": "staticlookup",
                                  "offset": Identifier {
                                    "kind": "identifier",
                                    "name": "EN",
                                  },
                                  "what": SelfReference {
                                    "kind": "selfreference",
                                    "raw": "self",
                                  },
                                },
                                "kind": "return",
                              },
                            ],
                            "kind": "block",
                          },
                          "kind": "case",
                          "test": null,
                        },
                      ],
                      "kind": "block",
                    },
                    "kind": "switch",
                    "shortForm": false,
                    "test": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "countryIsoCode",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "strtoupper",
                        "resolution": "uqn",
                      },
                    },
                  },
                ],
                "kind": "block",
              },
              "byref": false,
              "isAbstract": false,
              "isFinal": false,
              "isStatic": false,
              "kind": "method",
              "name": Identifier {
                "kind": "identifier",
                "name": "get",
              },
              "nullable": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "string",
                "raw": "string",
              },
              "visibility": "public",
            },
          ],
          "extends": null,
          "implements": null,
          "isAbstract": false,
          "isAnonymous": false,
          "isFinal": false,
          "kind": "class",
          "name": Identifier {
            "kind": "identifier",
            "name": "CountryMapping",
          },
        },
        ExpressionStatement {
          "expression": Assign {
            "kind": "assign",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "mapping",
            },
            "operator": "=",
            "right": New {
              "arguments": Array [],
              "kind": "new",
              "what": Name {
                "kind": "name",
                "name": "CountryMapping",
                "resolution": "uqn",
              },
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [
              Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'CZ'",
                    "unicode": false,
                    "value": "CZ",
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "get",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "mapping",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "var_dump",
              "resolution": "uqn",
            },
          },
          "kind": "expressionstatement",
        },
      ],
      "kind": "namespace",
      "name": "Core\\\\Bundle\\\\Service\\\\Property\\\\Room\\\\Rooms",
      "withBrackets": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
