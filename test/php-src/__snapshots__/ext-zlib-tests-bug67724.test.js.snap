// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #67724 (chained zlib filters silently fail with large amounts of data) 1`] = `
Program {
  "children": Array [
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Test\\\\n\\"",
          "unicode": false,
          "value": "Test
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Bin {
        "kind": "bin",
        "left": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "f",
          },
          "operator": "=",
          "right": Call {
            "arguments": Array [
              Bin {
                "kind": "bin",
                "left": Magic {
                  "kind": "magic",
                  "raw": "__DIR__",
                  "value": "__DIR__",
                },
                "right": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"/bug67724.gz.gz\\"",
                  "unicode": false,
                  "value": "/bug67724.gz.gz",
                },
                "type": ".",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"rb\\"",
                "unicode": false,
                "value": "rb",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "fopen",
              "resolution": "uqn",
            },
          },
        },
        "right": Exit {
          "expression": Call {
            "arguments": Array [
              Call {
                "arguments": Array [],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "error_get_last",
                  "resolution": "uqn",
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "current",
              "resolution": "uqn",
            },
          },
          "kind": "exit",
          "useDie": true,
        },
        "type": "or",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "f",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"zlib.inflate\\"",
            "unicode": false,
            "value": "zlib.inflate",
          },
          Name {
            "kind": "name",
            "name": "STREAM_FILTER_READ",
            "resolution": "uqn",
          },
          Array {
            "items": Array [
              Entry {
                "byRef": false,
                "key": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"window\\"",
                  "unicode": false,
                  "value": "window",
                },
                "kind": "entry",
                "unpack": false,
                "value": Number {
                  "kind": "number",
                  "value": "30",
                },
              },
            ],
            "kind": "array",
            "shortForm": true,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "stream_filter_append",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "f",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"zlib.inflate\\"",
            "unicode": false,
            "value": "zlib.inflate",
          },
          Name {
            "kind": "name",
            "name": "STREAM_FILTER_READ",
            "resolution": "uqn",
          },
          Array {
            "items": Array [
              Entry {
                "byRef": false,
                "key": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"window\\"",
                  "unicode": false,
                  "value": "window",
                },
                "kind": "entry",
                "unpack": false,
                "value": Number {
                  "kind": "number",
                  "value": "30",
                },
              },
            ],
            "kind": "array",
            "shortForm": true,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "stream_filter_append",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    For {
      "body": null,
      "increment": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "operator": "+=",
          "right": Call {
            "arguments": Array [
              Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "f",
                  },
                  Number {
                    "kind": "number",
                    "value": "0x1000",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "fread",
                  "resolution": "uqn",
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "strlen",
              "resolution": "uqn",
            },
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "0",
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "f",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "feof",
              "resolution": "uqn",
            },
          },
        },
      ],
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "f",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "fclose",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Inline {
      "kind": "inline",
      "raw": "
DONE",
      "value": "DONE",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
