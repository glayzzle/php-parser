// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests SCCP 021: Memleak 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [],
      "body": Array [
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "num_tokens",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "queries",
                  },
                  "operator": "=",
                  "right": Array {
                    "items": Array [],
                    "kind": "array",
                    "shortForm": false,
                  },
                },
                "kind": "expressionstatement",
              },
              For {
                "body": Block {
                  "children": Array [
                    If {
                      "alternate": ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": OffsetLookup {
                            "kind": "offsetlookup",
                            "offset": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "i",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "queries",
                            },
                          },
                          "operator": "=",
                          "right": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "''",
                            "unicode": false,
                            "value": "",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      "body": ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": OffsetLookup {
                            "kind": "offsetlookup",
                            "offset": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "i",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "queries",
                            },
                          },
                          "operator": "=",
                          "right": Bin {
                            "kind": "bin",
                            "left": OffsetLookup {
                              "kind": "offsetlookup",
                              "offset": Bin {
                                "kind": "bin",
                                "left": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "i",
                                },
                                "right": Number {
                                  "kind": "number",
                                  "value": "1",
                                },
                                "type": "-",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "queries",
                              },
                            },
                            "right": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "'&'",
                              "unicode": false,
                              "value": "&",
                            },
                            "type": ".",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      "kind": "if",
                      "shortForm": false,
                      "test": Bin {
                        "kind": "bin",
                        "left": Number {
                          "kind": "number",
                          "value": "0",
                        },
                        "right": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "i",
                        },
                        "type": "<",
                      },
                    },
                    ExpressionStatement {
                      "expression": Assign {
                        "kind": "assign",
                        "left": OffsetLookup {
                          "kind": "offsetlookup",
                          "offset": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "i",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "queries",
                          },
                        },
                        "operator": ".=",
                        "right": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "query_token",
                        },
                      },
                      "kind": "expressionstatement",
                    },
                  ],
                  "kind": "block",
                },
                "increment": Array [
                  Pre {
                    "kind": "pre",
                    "type": "+",
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "i",
                    },
                  },
                ],
                "init": Array [
                  Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "i",
                    },
                    "operator": "=",
                    "right": Number {
                      "kind": "number",
                      "value": "0",
                    },
                  },
                ],
                "kind": "for",
                "shortForm": false,
                "test": Array [
                  Bin {
                    "kind": "bin",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "i",
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "num_tokens",
                    },
                    "type": "<",
                  },
                ],
              },
              Return {
                "expr": null,
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "memleak",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "A",
      },
    },
    Inline {
      "kind": "inline",
      "raw": "
okey",
      "value": "okey",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
