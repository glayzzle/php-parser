// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests ReflectionParameter class - canBePassedByValue() method. 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "fun",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "func",
              },
              "operator": "=",
              "right": New {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "fun",
                  },
                ],
                "kind": "new",
                "what": Name {
                  "kind": "name",
                  "name": "ReflectionFunction",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "parameters",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "getParameters",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "func",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          Foreach {
            "body": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"Name: \\"",
                      "unicode": false,
                      "value": "Name: ",
                    },
                    Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getName",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "parameter",
                        },
                      },
                    },
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"\\\\n\\"",
                      "unicode": false,
                      "value": "
",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
                Echo {
                  "expressions": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"Is passed by reference: \\"",
                      "unicode": false,
                      "value": "Is passed by reference: ",
                    },
                    RetIf {
                      "falseExpr": String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"no\\"",
                        "unicode": false,
                        "value": "no",
                      },
                      "kind": "retif",
                      "test": Call {
                        "arguments": Array [],
                        "kind": "call",
                        "what": PropertyLookup {
                          "kind": "propertylookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "isPassedByReference",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "parameter",
                          },
                        },
                      },
                      "trueExpr": String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"yes\\"",
                        "unicode": false,
                        "value": "yes",
                      },
                    },
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"\\\\n\\"",
                      "unicode": false,
                      "value": "
",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
                Echo {
                  "expressions": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"Can be passed by value: \\"",
                      "unicode": false,
                      "value": "Can be passed by value: ",
                    },
                    RetIf {
                      "falseExpr": String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"no\\"",
                        "unicode": false,
                        "value": "no",
                      },
                      "kind": "retif",
                      "test": Call {
                        "arguments": Array [],
                        "kind": "call",
                        "what": PropertyLookup {
                          "kind": "propertylookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "canBePassedByValue",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "parameter",
                          },
                        },
                      },
                      "trueExpr": String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"yes\\"",
                        "unicode": false,
                        "value": "yes",
                      },
                    },
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"\\\\n\\"",
                      "unicode": false,
                      "value": "
",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
                Echo {
                  "expressions": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"\\\\n\\"",
                      "unicode": false,
                      "value": "
",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
              ],
              "kind": "block",
            },
            "key": null,
            "kind": "foreach",
            "shortForm": false,
            "source": Variable {
              "curly": false,
              "kind": "variable",
              "name": "parameters",
            },
            "value": Variable {
              "curly": false,
              "kind": "variable",
              "name": "parameter",
            },
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "aux",
      },
      "nullable": false,
      "type": null,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"=> array_multisort:\\\\n\\\\n\\"",
          "unicode": false,
          "value": "=> array_multisort:

",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'array_multisort'",
            "unicode": false,
            "value": "array_multisort",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "aux",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"=> sort:\\\\n\\\\n\\"",
          "unicode": false,
          "value": "=> sort:

",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'sort'",
            "unicode": false,
            "value": "sort",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "aux",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"=> user function:\\\\n\\\\n\\"",
          "unicode": false,
          "value": "=> user function:

",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": true,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "array1",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "array2",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "ufunc",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'ufunc'",
            "unicode": false,
            "value": "ufunc",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "aux",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Done.\\\\n\\"",
          "unicode": false,
          "value": "Done.
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
