// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests test of larger than 8kb text file being parsed by require statement 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'test.php'",
            "unicode": false,
            "value": "test.php",
          },
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'passed, '",
                "unicode": false,
                "value": "passed, ",
              },
              Number {
                "kind": "number",
                "value": "1024",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "str_repeat",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "file_put_contents",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": true,
        "target": String {
          "isDoubleQuote": false,
          "kind": "string",
          "parenthesizedExpression": true,
          "raw": "'./test.php'",
          "unicode": false,
          "value": "./test.php",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'test.php'",
            "unicode": false,
            "value": "test.php",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "unlink",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
