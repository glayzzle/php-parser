// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #72598 (Reference is lost after array_slice()) 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": true,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "ref",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "ref",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "ref",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": New {
        "arguments": Array [],
        "kind": "new",
        "what": Class {
          "attrGroups": Array [],
          "body": Array [
            Method {
              "arguments": Array [],
              "attrGroups": Array [],
              "body": Block {
                "children": Array [
                  ExpressionStatement {
                    "expression": Assign {
                      "kind": "assign",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "args",
                      },
                      "operator": "=",
                      "right": Array {
                        "items": Array [
                          Entry {
                            "byRef": true,
                            "key": null,
                            "kind": "entry",
                            "unpack": false,
                            "value": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "this",
                            },
                          },
                        ],
                        "kind": "array",
                        "shortForm": true,
                      },
                    },
                    "kind": "expressionstatement",
                  },
                  For {
                    "body": Block {
                      "children": Array [
                        ExpressionStatement {
                          "expression": Assign {
                            "kind": "assign",
                            "left": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "a",
                            },
                            "operator": "=",
                            "right": Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "args",
                                },
                                Number {
                                  "kind": "number",
                                  "value": "0",
                                },
                                Number {
                                  "kind": "number",
                                  "value": "1",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "array_slice",
                                "resolution": "uqn",
                              },
                            },
                          },
                          "kind": "expressionstatement",
                        },
                        ExpressionStatement {
                          "expression": Call {
                            "arguments": Array [
                              String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'ref'",
                                "unicode": false,
                                "value": "ref",
                              },
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "a",
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "call_user_func_array",
                              "resolution": "uqn",
                            },
                          },
                          "kind": "expressionstatement",
                        },
                      ],
                      "kind": "block",
                    },
                    "increment": Array [
                      Post {
                        "kind": "post",
                        "type": "+",
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "i",
                        },
                      },
                    ],
                    "init": Array [
                      Assign {
                        "kind": "assign",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "i",
                        },
                        "operator": "=",
                        "right": Number {
                          "kind": "number",
                          "value": "0",
                        },
                      },
                    ],
                    "kind": "for",
                    "shortForm": false,
                    "test": Array [
                      Bin {
                        "kind": "bin",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "i",
                        },
                        "right": Number {
                          "kind": "number",
                          "value": "2",
                        },
                        "type": "<",
                      },
                    ],
                  },
                ],
                "kind": "block",
              },
              "byref": false,
              "isAbstract": false,
              "isFinal": false,
              "isStatic": false,
              "kind": "method",
              "name": Identifier {
                "kind": "identifier",
                "name": "__construct",
              },
              "nullable": false,
              "type": null,
              "visibility": "",
            },
          ],
          "extends": null,
          "implements": null,
          "isAbstract": false,
          "isAnonymous": true,
          "isFinal": false,
          "kind": "class",
          "name": null,
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
