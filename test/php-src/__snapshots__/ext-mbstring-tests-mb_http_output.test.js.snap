// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests mb_http_output() 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'include_path'",
            "unicode": false,
            "value": "include_path",
          },
          Magic {
            "kind": "magic",
            "raw": "__DIR__",
            "value": "__DIR__",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "ini_set",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": false,
        "target": String {
          "isDoubleQuote": false,
          "kind": "string",
          "parenthesizedExpression": true,
          "raw": "'common.inc'",
          "unicode": false,
          "value": "common.inc",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "r",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'ASCII'",
              "unicode": false,
              "value": "ASCII",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_http_output",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": RetIf {
        "falseExpr": Print {
          "expression": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"NG_ASCII_SET\\\\n\\"",
            "unicode": false,
            "value": "NG_ASCII_SET
",
          },
          "kind": "print",
        },
        "kind": "retif",
        "test": Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "r",
          },
          "parenthesizedExpression": true,
          "right": Boolean {
            "kind": "boolean",
            "raw": "TRUE",
            "value": true,
          },
          "type": "===",
        },
        "trueExpr": Print {
          "expression": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"OK_ASCII_SET\\\\n\\"",
            "unicode": false,
            "value": "OK_ASCII_SET
",
          },
          "kind": "print",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "enc",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_http_output",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Encapsed {
          "kind": "encapsed",
          "raw": "\\"$enc\\\\n\\"",
          "type": "string",
          "value": Array [
            EncapsedPart {
              "curly": false,
              "expression": Variable {
                "curly": false,
                "kind": "variable",
                "name": "enc",
              },
              "kind": "encapsedpart",
              "syntax": "simple",
            },
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "\\\\n",
                "unicode": false,
                "value": "",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
          ],
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "r",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'SJIS'",
              "unicode": false,
              "value": "SJIS",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_http_output",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": RetIf {
        "falseExpr": Print {
          "expression": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"NG_SJIS_SET\\\\n\\"",
            "unicode": false,
            "value": "NG_SJIS_SET
",
          },
          "kind": "print",
        },
        "kind": "retif",
        "test": Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "r",
          },
          "parenthesizedExpression": true,
          "right": Boolean {
            "kind": "boolean",
            "raw": "TRUE",
            "value": true,
          },
          "type": "===",
        },
        "trueExpr": Print {
          "expression": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"OK_SJIS_SET\\\\n\\"",
            "unicode": false,
            "value": "OK_SJIS_SET
",
          },
          "kind": "print",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "enc",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_http_output",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Encapsed {
          "kind": "encapsed",
          "raw": "\\"$enc\\\\n\\"",
          "type": "string",
          "value": Array [
            EncapsedPart {
              "curly": false,
              "expression": Variable {
                "curly": false,
                "kind": "variable",
                "name": "enc",
              },
              "kind": "encapsedpart",
              "syntax": "simple",
            },
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "\\\\n",
                "unicode": false,
                "value": "",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
          ],
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "r",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'JIS'",
              "unicode": false,
              "value": "JIS",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_http_output",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": RetIf {
        "falseExpr": Print {
          "expression": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"NG_JIS_SET\\\\n\\"",
            "unicode": false,
            "value": "NG_JIS_SET
",
          },
          "kind": "print",
        },
        "kind": "retif",
        "test": Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "r",
          },
          "parenthesizedExpression": true,
          "right": Boolean {
            "kind": "boolean",
            "raw": "TRUE",
            "value": true,
          },
          "type": "===",
        },
        "trueExpr": Print {
          "expression": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"OK_JIS_SET\\\\n\\"",
            "unicode": false,
            "value": "OK_JIS_SET
",
          },
          "kind": "print",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "enc",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_http_output",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Encapsed {
          "kind": "encapsed",
          "raw": "\\"$enc\\\\n\\"",
          "type": "string",
          "value": Array [
            EncapsedPart {
              "curly": false,
              "expression": Variable {
                "curly": false,
                "kind": "variable",
                "name": "enc",
              },
              "kind": "encapsedpart",
              "syntax": "simple",
            },
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "\\\\n",
                "unicode": false,
                "value": "",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
          ],
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "r",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'UTF-8'",
              "unicode": false,
              "value": "UTF-8",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_http_output",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": RetIf {
        "falseExpr": Print {
          "expression": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"NG_UTF-8_SET\\\\n\\"",
            "unicode": false,
            "value": "NG_UTF-8_SET
",
          },
          "kind": "print",
        },
        "kind": "retif",
        "test": Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "r",
          },
          "parenthesizedExpression": true,
          "right": Boolean {
            "kind": "boolean",
            "raw": "TRUE",
            "value": true,
          },
          "type": "===",
        },
        "trueExpr": Print {
          "expression": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"OK_UTF-8_SET\\\\n\\"",
            "unicode": false,
            "value": "OK_UTF-8_SET
",
          },
          "kind": "print",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "enc",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_http_output",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Encapsed {
          "kind": "encapsed",
          "raw": "\\"$enc\\\\n\\"",
          "type": "string",
          "value": Array [
            EncapsedPart {
              "curly": false,
              "expression": Variable {
                "curly": false,
                "kind": "variable",
                "name": "enc",
              },
              "kind": "encapsedpart",
              "syntax": "simple",
            },
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "\\\\n",
                "unicode": false,
                "value": "",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
          ],
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "r",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'EUC-JP'",
              "unicode": false,
              "value": "EUC-JP",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_http_output",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": RetIf {
        "falseExpr": Print {
          "expression": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"NG_EUC-JP_SET\\\\n\\"",
            "unicode": false,
            "value": "NG_EUC-JP_SET
",
          },
          "kind": "print",
        },
        "kind": "retif",
        "test": Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "r",
          },
          "parenthesizedExpression": true,
          "right": Boolean {
            "kind": "boolean",
            "raw": "TRUE",
            "value": true,
          },
          "type": "===",
        },
        "trueExpr": Print {
          "expression": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"OK_EUC-JP_SET\\\\n\\"",
            "unicode": false,
            "value": "OK_EUC-JP_SET
",
          },
          "kind": "print",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "enc",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_http_output",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Encapsed {
          "kind": "encapsed",
          "raw": "\\"$enc\\\\n\\"",
          "type": "string",
          "value": Array [
            EncapsedPart {
              "curly": false,
              "expression": Variable {
                "curly": false,
                "kind": "variable",
                "name": "enc",
              },
              "kind": "encapsedpart",
              "syntax": "simple",
            },
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "\\\\n",
                "unicode": false,
                "value": "",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
          ],
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"== INVALID PARAMETER ==\\\\n\\"",
          "unicode": false,
          "value": "== INVALID PARAMETER ==
",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "r",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'BAD_NAME'",
                    "unicode": false,
                    "value": "BAD_NAME",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mb_http_output",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Print {
              "expression": Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'NG_BAD_SET'",
                  "unicode": false,
                  "value": "NG_BAD_SET",
                },
                "right": Name {
                  "kind": "name",
                  "name": "\\\\PHP_EOL",
                  "resolution": "fqn",
                },
                "type": ".",
              },
              "kind": "print",
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getMessage",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "e",
                        },
                      },
                    },
                    "right": Name {
                      "kind": "name",
                      "name": "\\\\PHP_EOL",
                      "resolution": "fqn",
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "\\\\ValueError",
              "resolution": "fqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "enc",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mb_http_output",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Encapsed {
          "kind": "encapsed",
          "raw": "\\"$enc\\\\n\\"",
          "type": "string",
          "value": Array [
            EncapsedPart {
              "curly": false,
              "expression": Variable {
                "curly": false,
                "kind": "variable",
                "name": "enc",
              },
              "kind": "encapsedpart",
              "syntax": "simple",
            },
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "\\\\n",
                "unicode": false,
                "value": "",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
          ],
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
