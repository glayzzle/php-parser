// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #73337 (try/catch not working with two exceptions inside a same operation) 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [],
      "body": Array [
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Throw {
                "kind": "throw",
                "what": New {
                  "arguments": Array [],
                  "kind": "new",
                  "what": Name {
                    "kind": "name",
                    "name": "Exception",
                    "resolution": "uqn",
                  },
                },
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "__destruct",
          },
          "nullable": false,
          "type": null,
          "visibility": "",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "d",
      },
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Bin {
              "kind": "bin",
              "left": New {
                "arguments": Array [],
                "kind": "new",
                "what": Name {
                  "kind": "name",
                  "name": "d",
                  "resolution": "uqn",
                },
              },
              "right": New {
                "arguments": Array [],
                "kind": "new",
                "what": Name {
                  "kind": "name",
                  "name": "d",
                  "resolution": "uqn",
                },
              },
              "type": "+",
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Print {
                  "expression": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"Exception properly caught\\\\n\\"",
                    "unicode": false,
                    "value": "Exception properly caught
",
                  },
                  "kind": "print",
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "Exception",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
