// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Check for libsodium KDF 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "key",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_kdf_keygen",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "subkey",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Number {
                    "kind": "number",
                    "value": "10",
                  },
                  Number {
                    "kind": "number",
                    "value": "0",
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"context!\\"",
                    "unicode": false,
                    "value": "context!",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "key",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "sodium_crypto_kdf_derive_from_key",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    Boolean {
                      "kind": "boolean",
                      "raw": "true",
                      "value": true,
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "var_dump",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "ex",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "SodiumException",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "subkey",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Number {
                    "kind": "number",
                    "value": "100",
                  },
                  Number {
                    "kind": "number",
                    "value": "0",
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"context!\\"",
                    "unicode": false,
                    "value": "context!",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "key",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "sodium_crypto_kdf_derive_from_key",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    Boolean {
                      "kind": "boolean",
                      "raw": "true",
                      "value": true,
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "var_dump",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "ex",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "SodiumException",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "subkey",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Name {
                    "kind": "name",
                    "name": "SODIUM_CRYPTO_KDF_BYTES_MAX",
                    "resolution": "uqn",
                  },
                  Number {
                    "kind": "number",
                    "value": "0",
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"context\\"",
                    "unicode": false,
                    "value": "context",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "key",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "sodium_crypto_kdf_derive_from_key",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    Boolean {
                      "kind": "boolean",
                      "raw": "true",
                      "value": true,
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "var_dump",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "ex",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "SodiumException",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "subkey",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Name {
                    "kind": "name",
                    "name": "SODIUM_CRYPTO_KDF_BYTES_MAX",
                    "resolution": "uqn",
                  },
                  Unary {
                    "kind": "unary",
                    "type": "-",
                    "what": Number {
                      "kind": "number",
                      "value": "1",
                    },
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"context!\\"",
                    "unicode": false,
                    "value": "context!",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "key",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "sodium_crypto_kdf_derive_from_key",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    Boolean {
                      "kind": "boolean",
                      "raw": "true",
                      "value": true,
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "var_dump",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "ex",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "SodiumException",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "subkey",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Name {
                    "kind": "name",
                    "name": "SODIUM_CRYPTO_KDF_BYTES_MAX",
                    "resolution": "uqn",
                  },
                  Number {
                    "kind": "number",
                    "value": "0",
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"context!\\"",
                    "unicode": false,
                    "value": "context!",
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"short key\\"",
                    "unicode": false,
                    "value": "short key",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "sodium_crypto_kdf_derive_from_key",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    Boolean {
                      "kind": "boolean",
                      "raw": "true",
                      "value": true,
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "var_dump",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "ex",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "SodiumException",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "subkey1",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Name {
              "kind": "name",
              "name": "SODIUM_CRYPTO_KDF_BYTES_MIN",
              "resolution": "uqn",
            },
            Number {
              "kind": "number",
              "value": "0",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"context!\\"",
              "unicode": false,
              "value": "context!",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "key",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_kdf_derive_from_key",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "subkey2",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Name {
              "kind": "name",
              "name": "SODIUM_CRYPTO_KDF_BYTES_MIN",
              "resolution": "uqn",
            },
            Number {
              "kind": "number",
              "value": "1",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"context!\\"",
              "unicode": false,
              "value": "context!",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "key",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_kdf_derive_from_key",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "subkey3",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Name {
              "kind": "name",
              "name": "SODIUM_CRYPTO_KDF_BYTES_MIN",
              "resolution": "uqn",
            },
            Number {
              "kind": "number",
              "value": "2",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"context2\\"",
              "unicode": false,
              "value": "context2",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "key",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_kdf_derive_from_key",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "subkey4",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Name {
              "kind": "name",
              "name": "SODIUM_CRYPTO_KDF_BYTES_MIN",
              "resolution": "uqn",
            },
            Number {
              "kind": "number",
              "value": "0",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"context!\\"",
              "unicode": false,
              "value": "context!",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "key",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_kdf_derive_from_key",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "subkey1",
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "subkey2",
            },
            "type": "!==",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "subkey1",
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "subkey3",
            },
            "type": "!==",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "subkey2",
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "subkey3",
            },
            "type": "!==",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "subkey1",
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "subkey4",
            },
            "type": "===",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
