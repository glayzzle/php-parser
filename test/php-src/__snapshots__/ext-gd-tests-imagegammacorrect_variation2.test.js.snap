// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Apply imagegammacorrect() to a step wedge 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": true,
        "target": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Magic {
              "kind": "magic",
              "raw": "__DIR__",
              "value": "__DIR__",
            },
            "right": Name {
              "kind": "name",
              "name": "DIRECTORY_SEPARATOR",
              "resolution": "uqn",
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'func.inc'",
            "unicode": false,
            "value": "func.inc",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "1",
          },
          Number {
            "kind": "number",
            "value": "2",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_gamma_both",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "1",
          },
          Number {
            "kind": "number",
            "value": "1",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_gamma_both",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "2",
          },
          Number {
            "kind": "number",
            "value": "1",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_gamma_both",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "in",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "out",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "in",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "out",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'imagecreate'",
                  "unicode": false,
                  "value": "imagecreate",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_gamma",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "in",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "out",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'imagecreatetruecolor'",
                  "unicode": false,
                  "value": "imagecreatetruecolor",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_gamma",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "test_gamma_both",
      },
      "nullable": false,
      "type": null,
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "in",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "out",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "constructor",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "im",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Number {
                    "kind": "number",
                    "value": "640",
                  },
                  Number {
                    "kind": "number",
                    "value": "480",
                  },
                ],
                "kind": "call",
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "constructor",
                },
              },
            },
            "kind": "expressionstatement",
          },
          For {
            "body": Block {
              "children": Array [
                For {
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "im",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "i",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "j",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "draw_cell",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "increment": Array [
                    Post {
                      "kind": "post",
                      "type": "+",
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "i",
                      },
                    },
                  ],
                  "init": Array [
                    Assign {
                      "kind": "assign",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "i",
                      },
                      "operator": "=",
                      "right": Number {
                        "kind": "number",
                        "value": "0",
                      },
                    },
                  ],
                  "kind": "for",
                  "shortForm": false,
                  "test": Array [
                    Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "i",
                      },
                      "right": Number {
                        "kind": "number",
                        "value": "32",
                      },
                      "type": "<",
                    },
                  ],
                },
              ],
              "kind": "block",
            },
            "increment": Array [
              Post {
                "kind": "post",
                "type": "+",
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "j",
                },
              },
            ],
            "init": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "j",
                },
                "operator": "=",
                "right": Number {
                  "kind": "number",
                  "value": "0",
                },
              },
            ],
            "kind": "for",
            "shortForm": false,
            "test": Array [
              Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "j",
                },
                "right": Number {
                  "kind": "number",
                  "value": "4",
                },
                "type": "<",
              },
            ],
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "im",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "in",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "out",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagegammacorrect",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "filename",
              },
              "operator": "=",
              "right": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": Magic {
                    "kind": "magic",
                    "raw": "__DIR__",
                    "value": "__DIR__",
                  },
                  "right": Name {
                    "kind": "name",
                    "name": "DIRECTORY_SEPARATOR",
                    "resolution": "uqn",
                  },
                  "type": ".",
                },
                "right": Encapsed {
                  "kind": "encapsed",
                  "raw": "\\"imagegammacorrect_variation2_{$in}_{$out}.png\\"",
                  "type": "string",
                  "value": Array [
                    EncapsedPart {
                      "curly": false,
                      "expression": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "imagegammacorrect_variation2_",
                        "unicode": false,
                        "value": "imagegammacorrect_variation2_",
                      },
                      "kind": "encapsedpart",
                      "syntax": null,
                    },
                    EncapsedPart {
                      "curly": false,
                      "expression": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "in",
                      },
                      "kind": "encapsedpart",
                      "syntax": "complex",
                    },
                    EncapsedPart {
                      "curly": false,
                      "expression": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "_",
                        "unicode": false,
                        "value": "_",
                      },
                      "kind": "encapsedpart",
                      "syntax": null,
                    },
                    EncapsedPart {
                      "curly": false,
                      "expression": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "out",
                      },
                      "kind": "encapsedpart",
                      "syntax": "complex",
                    },
                    EncapsedPart {
                      "curly": false,
                      "expression": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": ".png",
                        "unicode": false,
                        "value": ".png",
                      },
                      "kind": "encapsedpart",
                      "syntax": null,
                    },
                  ],
                },
                "type": ".",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "kind",
              },
              "operator": "=",
              "right": RetIf {
                "falseExpr": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'truecolor'",
                  "unicode": false,
                  "value": "truecolor",
                },
                "kind": "retif",
                "test": Bin {
                  "kind": "bin",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "constructor",
                  },
                  "right": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'imagecreate'",
                    "unicode": false,
                    "value": "imagecreate",
                  },
                  "type": "===",
                },
                "trueExpr": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'palette'",
                  "unicode": false,
                  "value": "palette",
                },
              },
            },
            "kind": "expressionstatement",
          },
          Echo {
            "expressions": Array [
              Encapsed {
                "kind": "encapsed",
                "raw": "\\"$kind gamma ($in, $out): \\"",
                "type": "string",
                "value": Array [
                  EncapsedPart {
                    "curly": false,
                    "expression": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "kind",
                    },
                    "kind": "encapsedpart",
                    "syntax": "simple",
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": " gamma (",
                      "unicode": false,
                      "value": " gamma (",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "in",
                    },
                    "kind": "encapsedpart",
                    "syntax": "simple",
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": ", ",
                      "unicode": false,
                      "value": ", ",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "out",
                    },
                    "kind": "encapsedpart",
                    "syntax": "simple",
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "): ",
                      "unicode": false,
                      "value": "): ",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                ],
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "filename",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "im",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_image_equals_file",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "test_gamma",
      },
      "nullable": false,
      "type": null,
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "im",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "x",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "y",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "x1",
              },
              "operator": "=",
              "right": Bin {
                "kind": "bin",
                "left": Number {
                  "kind": "number",
                  "value": "20",
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "x",
                },
                "type": "*",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "y1",
              },
              "operator": "=",
              "right": Bin {
                "kind": "bin",
                "left": Number {
                  "kind": "number",
                  "value": "120",
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "y",
                },
                "type": "*",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "x2",
              },
              "operator": "=",
              "right": Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "x1",
                },
                "right": Number {
                  "kind": "number",
                  "value": "19",
                },
                "type": "+",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "y2",
              },
              "operator": "=",
              "right": Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "y1",
                },
                "right": Number {
                  "kind": "number",
                  "value": "119",
                },
                "type": "+",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "color",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "im",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "x",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "y",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "cell_color",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "im",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "x1",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "y1",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "x2",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "y2",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "color",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "imagefilledrectangle",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "draw_cell",
      },
      "nullable": false,
      "type": null,
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "im",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "x",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "y",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "channel",
              },
              "operator": "=",
              "right": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": Number {
                    "kind": "number",
                    "value": "8",
                  },
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "x",
                  },
                  "type": "*",
                },
                "right": Number {
                  "kind": "number",
                  "value": "4",
                },
                "type": "+",
              },
            },
            "kind": "expressionstatement",
          },
          Switch {
            "body": Block {
              "children": Array [
                Case {
                  "body": Block {
                    "children": Array [
                      Return {
                        "expr": Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "im",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "channel",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "channel",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "channel",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "imagecolorallocate",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "case",
                  "test": Number {
                    "kind": "number",
                    "value": "0",
                  },
                },
                Case {
                  "body": Block {
                    "children": Array [
                      Return {
                        "expr": Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "im",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "channel",
                            },
                            Number {
                              "kind": "number",
                              "value": "0",
                            },
                            Number {
                              "kind": "number",
                              "value": "0",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "imagecolorallocate",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "case",
                  "test": Number {
                    "kind": "number",
                    "value": "1",
                  },
                },
                Case {
                  "body": Block {
                    "children": Array [
                      Return {
                        "expr": Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "im",
                            },
                            Number {
                              "kind": "number",
                              "value": "0",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "channel",
                            },
                            Number {
                              "kind": "number",
                              "value": "0",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "imagecolorallocate",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "case",
                  "test": Number {
                    "kind": "number",
                    "value": "2",
                  },
                },
                Case {
                  "body": Block {
                    "children": Array [
                      Return {
                        "expr": Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "im",
                            },
                            Number {
                              "kind": "number",
                              "value": "0",
                            },
                            Number {
                              "kind": "number",
                              "value": "0",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "channel",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "imagecolorallocate",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "case",
                  "test": Number {
                    "kind": "number",
                    "value": "3",
                  },
                },
              ],
              "kind": "block",
            },
            "kind": "switch",
            "shortForm": false,
            "test": Variable {
              "curly": false,
              "kind": "variable",
              "name": "y",
            },
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "cell_color",
      },
      "nullable": false,
      "type": null,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
