// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests jump 04: goto from loop (backward) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "s",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"X\\"",
          "unicode": false,
          "value": "X",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"1: ok\\\\n\\"",
          "unicode": false,
          "value": "1: ok
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Label {
      "kind": "label",
      "name": Identifier {
        "kind": "identifier",
        "name": "L1",
      },
    },
    If {
      "alternate": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"2: ok\\\\n\\"",
                "unicode": false,
                "value": "2: ok
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          While {
            "body": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"3: ok\\\\n\\"",
                      "unicode": false,
                      "value": "3: ok
",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "s",
                    },
                    "operator": ".=",
                    "right": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"X\\"",
                      "unicode": false,
                      "value": "X",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Goto {
                  "kind": "goto",
                  "label": Identifier {
                    "kind": "identifier",
                    "name": "L1",
                  },
                },
                Echo {
                  "expressions": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"bug\\\\n\\"",
                      "unicode": false,
                      "value": "bug
",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
              ],
              "kind": "block",
            },
            "kind": "while",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "s",
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"XXX\\"",
                "unicode": false,
                "value": "XXX",
              },
              "type": "!=",
            },
          },
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"bug\\\\n\\"",
                "unicode": false,
                "value": "bug
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"4: ok\\\\n\\"",
                "unicode": false,
                "value": "4: ok
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "s",
        },
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"X\\"",
          "unicode": false,
          "value": "X",
        },
        "type": "!=",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
