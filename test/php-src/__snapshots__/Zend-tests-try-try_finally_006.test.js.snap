// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Try finally (with near goto) 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "jmp",
              },
              "operator": "=",
              "right": Number {
                "kind": "number",
                "value": "1",
              },
            },
            "kind": "expressionstatement",
          },
          Try {
            "always": Block {
              "children": Array [
                Label {
                  "kind": "label",
                  "name": Identifier {
                    "kind": "identifier",
                    "name": "previous",
                  },
                },
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      Goto {
                        "kind": "goto",
                        "label": Identifier {
                          "kind": "identifier",
                          "name": "label",
                        },
                      },
                      Echo {
                        "expressions": Array [
                          String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"dummy\\"",
                            "unicode": false,
                            "value": "dummy",
                          },
                        ],
                        "kind": "echo",
                        "shortForm": false,
                      },
                      Label {
                        "kind": "label",
                        "name": Identifier {
                          "kind": "identifier",
                          "name": "label",
                        },
                      },
                      Echo {
                        "expressions": Array [
                          String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"label\\\\n\\"",
                            "unicode": false,
                            "value": "label
",
                          },
                        ],
                        "kind": "echo",
                        "shortForm": false,
                      },
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "jmp",
                          },
                          "operator": "=",
                          "right": Number {
                            "kind": "number",
                            "value": "0",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      Goto {
                        "kind": "goto",
                        "label": Identifier {
                          "kind": "identifier",
                          "name": "previous",
                        },
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "jmp",
                  },
                },
                Echo {
                  "expressions": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"okey\\"",
                      "unicode": false,
                      "value": "okey",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
              ],
              "kind": "block",
            },
            "body": Block {
              "children": Array [],
              "kind": "block",
            },
            "catches": Array [],
            "kind": "try",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "foo",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "foo",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
