// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #76249 (stream filter convert.iconv leads to infinite loop on invalid sequence) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "fh",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'php://memory'",
              "unicode": false,
              "value": "php://memory",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'rw'",
              "unicode": false,
              "value": "rw",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "fopen",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "fh",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"abc\\"",
            "unicode": false,
            "value": "abc",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "fwrite",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "fh",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "rewind",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "fh",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'convert.iconv.ucs-2/utf-8//IGNORE'",
                  "unicode": false,
                  "value": "convert.iconv.ucs-2/utf-8//IGNORE",
                },
                Name {
                  "kind": "name",
                  "name": "STREAM_FILTER_READ",
                  "resolution": "uqn",
                },
                Array {
                  "items": Array [],
                  "kind": "array",
                  "shortForm": true,
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "stream_filter_append",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Boolean {
          "kind": "boolean",
          "raw": "false",
          "value": false,
        },
        "right": Silent {
          "expr": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "fh",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'convert.iconv.ucs-2/utf8//IGNORE'",
                "unicode": false,
                "value": "convert.iconv.ucs-2/utf8//IGNORE",
              },
              Name {
                "kind": "name",
                "name": "STREAM_FILTER_READ",
                "resolution": "uqn",
              },
              Array {
                "items": Array [],
                "kind": "array",
                "shortForm": true,
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "stream_filter_append",
              "resolution": "uqn",
            },
          },
          "kind": "silent",
        },
        "type": "===",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "fh",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "stream_get_contents",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Inline {
      "kind": "inline",
      "raw": "
DONE",
      "value": "DONE",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
