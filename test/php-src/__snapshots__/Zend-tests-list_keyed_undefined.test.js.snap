// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests list() with undefined keys 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "contrivedMixedKeyTypesExample",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": Number {
                "kind": "number",
                "value": "7",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"the best PHP version\\"",
                "unicode": false,
                "value": "the best PHP version",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"elePHPant\\"",
                "unicode": false,
                "value": "elePHPant",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"the cutest mascot\\"",
                "unicode": false,
                "value": "the cutest mascot",
              },
            },
          ],
          "kind": "array",
          "shortForm": true,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": List {
          "items": Array [
            Entry {
              "byRef": false,
              "key": Number {
                "kind": "number",
                "value": "5",
              },
              "kind": "entry",
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "name": "five",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"duke\\"",
                "unicode": false,
                "value": "duke",
              },
              "kind": "entry",
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "name": "duke",
              },
            },
          ],
          "kind": "list",
          "shortForm": false,
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "contrivedMixedKeyTypesExample",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "five",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "duke",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
