// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test bug #64370 microtime(true) less than $_SERVER['REQUEST_TIME_FLOAT'] 1`] = `
Program {
  "children": Array [
    Echo {
      "expressions": Array [
        Encapsed {
          "kind": "encapsed",
          "raw": "\\"\\\\$_SERVER['REQUEST_TIME']: {$_SERVER['REQUEST_TIME']}\\\\n\\"",
          "type": "string",
          "value": Array [
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "\\\\$_SERVER['REQUEST_TIME']: ",
                "unicode": false,
                "value": "$_SERVER['REQUEST_TIME']: ",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
            EncapsedPart {
              "curly": false,
              "expression": OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'REQUEST_TIME'",
                  "unicode": false,
                  "value": "REQUEST_TIME",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "_SERVER",
                },
              },
              "kind": "encapsedpart",
              "syntax": "complex",
            },
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "\\\\n",
                "unicode": false,
                "value": "",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
          ],
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Encapsed {
          "kind": "encapsed",
          "raw": "\\"\\\\$_SERVER['REQUEST_TIME_FLOAT']: {$_SERVER['REQUEST_TIME_FLOAT']}\\\\n\\"",
          "type": "string",
          "value": Array [
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "\\\\$_SERVER['REQUEST_TIME_FLOAT']: ",
                "unicode": false,
                "value": "$_SERVER['REQUEST_TIME_FLOAT']: ",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
            EncapsedPart {
              "curly": false,
              "expression": OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'REQUEST_TIME_FLOAT'",
                  "unicode": false,
                  "value": "REQUEST_TIME_FLOAT",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "_SERVER",
                },
              },
              "kind": "encapsedpart",
              "syntax": "complex",
            },
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "\\\\n",
                "unicode": false,
                "value": "",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
          ],
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"time(): \\"",
              "unicode": false,
              "value": "time(): ",
            },
            "right": Call {
              "arguments": Array [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "time",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"microtime(true): \\"",
              "unicode": false,
              "value": "microtime(true): ",
            },
            "right": Call {
              "arguments": Array [
                Boolean {
                  "kind": "boolean",
                  "raw": "true",
                  "value": true,
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "microtime",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "d",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Boolean {
                  "kind": "boolean",
                  "raw": "true",
                  "value": true,
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "microtime",
                "resolution": "uqn",
              },
            },
            "parenthesizedExpression": true,
            "right": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'REQUEST_TIME_FLOAT'",
                "unicode": false,
                "value": "REQUEST_TIME_FLOAT",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "_SERVER",
              },
            },
            "type": "-",
          },
          "right": Number {
            "kind": "number",
            "value": "1000",
          },
          "type": "*",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Encapsed {
          "kind": "encapsed",
          "raw": "\\"created in $d ms\\\\n\\"",
          "type": "string",
          "value": Array [
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "created in ",
                "unicode": false,
                "value": "created in ",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
            EncapsedPart {
              "curly": false,
              "expression": Variable {
                "curly": false,
                "kind": "variable",
                "name": "d",
              },
              "kind": "encapsedpart",
              "syntax": "simple",
            },
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": " ms\\\\n",
                "unicode": false,
                "value": " ms",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
          ],
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Cast {
            "expr": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "d",
              },
              "parenthesizedExpression": true,
              "right": Number {
                "kind": "number",
                "value": "0",
              },
              "type": ">=",
            },
            "kind": "cast",
            "parenthesizedExpression": true,
            "raw": "(bool)",
            "type": "bool",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
