// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Ensure by value assignments leave temporaries on the stack, for all sorts of assignees. 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          Return {
            "expr": Number {
              "kind": "number",
              "value": "0",
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "f",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Number {
            "kind": "number",
            "value": "1",
          },
          "what": OffsetLookup {
            "kind": "offsetlookup",
            "offset": Number {
              "kind": "number",
              "value": "0",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "a",
            },
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'good'",
          "unicode": false,
          "value": "good",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Number {
            "kind": "number",
            "value": "1",
          },
          "what": OffsetLookup {
            "kind": "offsetlookup",
            "offset": Number {
              "kind": "number",
              "value": "1",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "a",
            },
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'bad'",
          "unicode": false,
          "value": "bad",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'$i=f(): '",
            "unicode": false,
            "value": "$i=f(): ",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        OffsetLookup {
          "kind": "offsetlookup",
          "offset": Pre {
            "kind": "pre",
            "type": "+",
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "i",
            },
          },
          "what": OffsetLookup {
            "kind": "offsetlookup",
            "offset": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "i",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "f",
                  "resolution": "uqn",
                },
              },
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "a",
            },
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Unset {
      "kind": "unset",
      "variables": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "i",
        },
      ],
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'$$x=f(): '",
            "unicode": false,
            "value": "$$x=f(): ",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "x",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'i'",
          "unicode": false,
          "value": "i",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        OffsetLookup {
          "kind": "offsetlookup",
          "offset": Pre {
            "kind": "pre",
            "type": "+",
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": Variable {
                "curly": false,
                "kind": "variable",
                "name": "x",
              },
            },
          },
          "what": OffsetLookup {
            "kind": "offsetlookup",
            "offset": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "x",
                },
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "f",
                  "resolution": "uqn",
                },
              },
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "a",
            },
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Unset {
      "kind": "unset",
      "variables": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "i",
        },
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "x",
        },
      ],
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'\${\\\\'i\\\\'}=f(): '",
            "unicode": false,
            "value": "\${'i'}=f(): ",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        OffsetLookup {
          "kind": "offsetlookup",
          "offset": Pre {
            "kind": "pre",
            "type": "+",
            "what": Variable {
              "curly": true,
              "kind": "variable",
              "name": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'i'",
                "unicode": false,
                "value": "i",
              },
            },
          },
          "what": OffsetLookup {
            "kind": "offsetlookup",
            "offset": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": true,
                "kind": "variable",
                "name": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'i'",
                  "unicode": false,
                  "value": "i",
                },
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "f",
                  "resolution": "uqn",
                },
              },
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "a",
            },
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Unset {
      "kind": "unset",
      "variables": Array [
        Variable {
          "curly": true,
          "kind": "variable",
          "name": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'i'",
            "unicode": false,
            "value": "i",
          },
        },
      ],
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'$i[0]=f(): '",
            "unicode": false,
            "value": "$i[0]=f(): ",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        OffsetLookup {
          "kind": "offsetlookup",
          "offset": Pre {
            "kind": "pre",
            "type": "+",
            "what": OffsetLookup {
              "kind": "offsetlookup",
              "offset": Number {
                "kind": "number",
                "value": "0",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "i",
              },
            },
          },
          "what": OffsetLookup {
            "kind": "offsetlookup",
            "offset": Assign {
              "kind": "assign",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "0",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "f",
                  "resolution": "uqn",
                },
              },
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "a",
            },
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Unset {
      "kind": "unset",
      "variables": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "i",
        },
      ],
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'$i[0][0]=f(): '",
            "unicode": false,
            "value": "$i[0][0]=f(): ",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        OffsetLookup {
          "kind": "offsetlookup",
          "offset": Pre {
            "kind": "pre",
            "type": "+",
            "what": OffsetLookup {
              "kind": "offsetlookup",
              "offset": Number {
                "kind": "number",
                "value": "0",
              },
              "what": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "0",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
              },
            },
          },
          "what": OffsetLookup {
            "kind": "offsetlookup",
            "offset": Assign {
              "kind": "assign",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "0",
                },
                "what": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": Number {
                    "kind": "number",
                    "value": "0",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "i",
                  },
                },
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "f",
                  "resolution": "uqn",
                },
              },
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "a",
            },
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Unset {
      "kind": "unset",
      "variables": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "i",
        },
      ],
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'$i->p=f(): '",
            "unicode": false,
            "value": "$i->p=f(): ",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "i",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "stdClass",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        OffsetLookup {
          "kind": "offsetlookup",
          "offset": Pre {
            "kind": "pre",
            "type": "+",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "p",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "i",
              },
            },
          },
          "what": OffsetLookup {
            "kind": "offsetlookup",
            "offset": Assign {
              "kind": "assign",
              "left": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "p",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "f",
                  "resolution": "uqn",
                },
              },
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "a",
            },
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Unset {
      "kind": "unset",
      "variables": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "i",
        },
      ],
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'$i->p->q=f(): '",
            "unicode": false,
            "value": "$i->p->q=f(): ",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "i",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "stdClass",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "p",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "stdClass",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        OffsetLookup {
          "kind": "offsetlookup",
          "offset": Pre {
            "kind": "pre",
            "type": "+",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "q",
              },
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "p",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
              },
            },
          },
          "what": OffsetLookup {
            "kind": "offsetlookup",
            "offset": Assign {
              "kind": "assign",
              "left": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "q",
                },
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "p",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "i",
                  },
                },
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "f",
                  "resolution": "uqn",
                },
              },
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "a",
            },
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Unset {
      "kind": "unset",
      "variables": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "i",
        },
      ],
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'$i->p[0]=f(): '",
            "unicode": false,
            "value": "$i->p[0]=f(): ",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "i",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "stdClass",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        OffsetLookup {
          "kind": "offsetlookup",
          "offset": Pre {
            "kind": "pre",
            "type": "+",
            "what": OffsetLookup {
              "kind": "offsetlookup",
              "offset": Number {
                "kind": "number",
                "value": "0",
              },
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "p",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
              },
            },
          },
          "what": OffsetLookup {
            "kind": "offsetlookup",
            "offset": Assign {
              "kind": "assign",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "0",
                },
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "p",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "i",
                  },
                },
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "f",
                  "resolution": "uqn",
                },
              },
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "a",
            },
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Unset {
      "kind": "unset",
      "variables": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "i",
        },
      ],
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'$i->p[0]->p=f(): '",
            "unicode": false,
            "value": "$i->p[0]->p=f(): ",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "i",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "stdClass",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Number {
            "kind": "number",
            "value": "0",
          },
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "p",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "i",
            },
          },
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "stdClass",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        OffsetLookup {
          "kind": "offsetlookup",
          "offset": Pre {
            "kind": "pre",
            "type": "+",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "p",
              },
              "what": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "0",
                },
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "p",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "i",
                  },
                },
              },
            },
          },
          "what": OffsetLookup {
            "kind": "offsetlookup",
            "offset": Assign {
              "kind": "assign",
              "left": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "p",
                },
                "what": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": Number {
                    "kind": "number",
                    "value": "0",
                  },
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "p",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "i",
                    },
                  },
                },
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "f",
                  "resolution": "uqn",
                },
              },
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "a",
            },
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Unset {
      "kind": "unset",
      "variables": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "i",
        },
      ],
    },
    Class {
      "attrGroups": Array [],
      "body": Array [
        PropertyStatement {
          "isStatic": true,
          "kind": "propertystatement",
          "properties": Array [
            Property {
              "attrGroups": Array [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "p",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
            },
          ],
          "visibility": "",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "C",
      },
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'C::$p=f(): '",
            "unicode": false,
            "value": "C::$p=f(): ",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        OffsetLookup {
          "kind": "offsetlookup",
          "offset": Pre {
            "kind": "pre",
            "type": "+",
            "what": StaticLookup {
              "kind": "staticlookup",
              "offset": Variable {
                "curly": false,
                "kind": "variable",
                "name": "p",
              },
              "what": Name {
                "kind": "name",
                "name": "C",
                "resolution": "uqn",
              },
            },
          },
          "what": OffsetLookup {
            "kind": "offsetlookup",
            "offset": Assign {
              "kind": "assign",
              "left": StaticLookup {
                "kind": "staticlookup",
                "offset": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "p",
                },
                "what": Name {
                  "kind": "name",
                  "name": "C",
                  "resolution": "uqn",
                },
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "f",
                  "resolution": "uqn",
                },
              },
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "a",
            },
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'C::$p[0]=f(): '",
            "unicode": false,
            "value": "C::$p[0]=f(): ",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": StaticLookup {
          "kind": "staticlookup",
          "offset": Variable {
            "curly": false,
            "kind": "variable",
            "name": "p",
          },
          "what": Name {
            "kind": "name",
            "name": "C",
            "resolution": "uqn",
          },
        },
        "operator": "=",
        "right": Array {
          "items": Array [],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        OffsetLookup {
          "kind": "offsetlookup",
          "offset": Pre {
            "kind": "pre",
            "type": "+",
            "what": OffsetLookup {
              "kind": "offsetlookup",
              "offset": Number {
                "kind": "number",
                "value": "0",
              },
              "what": StaticLookup {
                "kind": "staticlookup",
                "offset": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "p",
                },
                "what": Name {
                  "kind": "name",
                  "name": "C",
                  "resolution": "uqn",
                },
              },
            },
          },
          "what": OffsetLookup {
            "kind": "offsetlookup",
            "offset": Assign {
              "kind": "assign",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "0",
                },
                "what": StaticLookup {
                  "kind": "staticlookup",
                  "offset": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "p",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "C",
                    "resolution": "uqn",
                  },
                },
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "f",
                  "resolution": "uqn",
                },
              },
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "a",
            },
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'C::$p->q=f(): '",
            "unicode": false,
            "value": "C::$p->q=f(): ",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": StaticLookup {
          "kind": "staticlookup",
          "offset": Variable {
            "curly": false,
            "kind": "variable",
            "name": "p",
          },
          "what": Name {
            "kind": "name",
            "name": "C",
            "resolution": "uqn",
          },
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "stdclass",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        OffsetLookup {
          "kind": "offsetlookup",
          "offset": Pre {
            "kind": "pre",
            "type": "+",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "q",
              },
              "what": StaticLookup {
                "kind": "staticlookup",
                "offset": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "p",
                },
                "what": Name {
                  "kind": "name",
                  "name": "C",
                  "resolution": "uqn",
                },
              },
            },
          },
          "what": OffsetLookup {
            "kind": "offsetlookup",
            "offset": Assign {
              "kind": "assign",
              "left": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "q",
                },
                "what": StaticLookup {
                  "kind": "staticlookup",
                  "offset": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "p",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "C",
                    "resolution": "uqn",
                  },
                },
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "f",
                  "resolution": "uqn",
                },
              },
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "a",
            },
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
