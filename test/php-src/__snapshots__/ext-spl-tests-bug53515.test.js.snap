// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #53515 (property_exists incorrect on ArrayObject null and 0 values) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'a'",
                "unicode": false,
                "value": "a",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "1",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'b'",
                "unicode": false,
                "value": "b",
              },
              "kind": "entry",
              "unpack": false,
              "value": Boolean {
                "kind": "boolean",
                "raw": "true",
                "value": true,
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'c'",
                "unicode": false,
                "value": "c",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "0",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'d'",
                "unicode": false,
                "value": "d",
              },
              "kind": "entry",
              "unpack": false,
              "value": NullKeyword {
                "kind": "nullkeyword",
                "raw": "null",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'e'",
                "unicode": false,
                "value": "e",
              },
              "kind": "entry",
              "unpack": false,
              "value": Boolean {
                "kind": "boolean",
                "raw": "false",
                "value": false,
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'f'",
                "unicode": false,
                "value": "f",
              },
              "kind": "entry",
              "unpack": false,
              "value": Array {
                "items": Array [],
                "kind": "array",
                "shortForm": false,
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "o",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "a",
            },
            StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "ARRAY_AS_PROPS",
              },
              "what": Name {
                "kind": "name",
                "name": "ArrayObject",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "ArrayObject",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'z'",
            "unicode": false,
            "value": "z",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "a",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "''",
          "unicode": false,
          "value": "",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "''",
            "unicode": false,
            "value": "",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "a",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "''",
          "unicode": false,
          "value": "",
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": Bin {
                        "kind": "bin",
                        "left": Bin {
                          "kind": "bin",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "key",
                          },
                          "right": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "': '",
                            "unicode": false,
                            "value": ": ",
                          },
                          "type": ".",
                        },
                        "right": RetIf {
                          "falseExpr": Silent {
                            "expr": Encapsed {
                              "kind": "encapsed",
                              "raw": "\\"$value\\"",
                              "type": "string",
                              "value": Array [
                                EncapsedPart {
                                  "curly": false,
                                  "expression": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "value",
                                  },
                                  "kind": "encapsedpart",
                                  "syntax": "simple",
                                },
                              ],
                            },
                            "kind": "silent",
                          },
                          "kind": "retif",
                          "parenthesizedExpression": true,
                          "test": Call {
                            "arguments": Array [
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "value",
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "is_null",
                              "resolution": "uqn",
                            },
                          },
                          "trueExpr": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'null'",
                            "unicode": false,
                            "value": "null",
                          },
                        },
                        "type": ".",
                      },
                      "right": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "' array_key_exists: '",
                        "unicode": false,
                        "value": " array_key_exists: ",
                      },
                      "type": ".",
                    },
                    "right": RetIf {
                      "falseExpr": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'false'",
                        "unicode": false,
                        "value": "false",
                      },
                      "kind": "retif",
                      "parenthesizedExpression": true,
                      "test": Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "key",
                          },
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "a",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "array_key_exists",
                          "resolution": "uqn",
                        },
                      },
                      "trueExpr": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'true'",
                        "unicode": false,
                        "value": "true",
                      },
                    },
                    "type": ".",
                  },
                  "right": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "' property_exists: '",
                    "unicode": false,
                    "value": " property_exists: ",
                  },
                  "type": ".",
                },
                "right": RetIf {
                  "falseExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'false'",
                    "unicode": false,
                    "value": "false",
                  },
                  "kind": "retif",
                  "parenthesizedExpression": true,
                  "test": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "o",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "key",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "property_exists",
                      "resolution": "uqn",
                    },
                  },
                  "trueExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'true'",
                    "unicode": false,
                    "value": "true",
                  },
                },
                "type": ".",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\n\\"",
                "unicode": false,
                "value": "
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "key": Variable {
        "curly": false,
        "kind": "variable",
        "name": "key",
      },
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "a",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "value",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
