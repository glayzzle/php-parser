// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test readdir() with a dir for multibyte filenames 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": false,
        "target": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Magic {
              "kind": "magic",
              "raw": "__DIR__",
              "value": "__DIR__",
            },
            "right": Name {
              "kind": "name",
              "name": "DIRECTORY_SEPARATOR",
              "resolution": "uqn",
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"util.inc\\"",
            "unicode": false,
            "value": "util.inc",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "prefix",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"mb_names\\"",
              "unicode": false,
              "value": "mb_names",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "create_data",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "content",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\"",
          "unicode": false,
          "value": "",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "prefix",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"českýtestování.inc\\"",
            "unicode": false,
            "value": "českýtestování.inc",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "content",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "create_verify_file",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "prefix",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"Röd_Statistics.txt\\"",
            "unicode": false,
            "value": "Röd_Statistics.txt",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "content",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "create_verify_file",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "prefix",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"š.txt\\"",
            "unicode": false,
            "value": "š.txt",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\"",
            "unicode": false,
            "value": "",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "create_verify_file",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "prefix",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"tschüß\\"",
            "unicode": false,
            "value": "tschüß",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "content",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "create_verify_file",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "prefix",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"Voláçao\\"",
            "unicode": false,
            "value": "Voláçao",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"hola\\"",
            "unicode": false,
            "value": "hola",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "create_verify_file",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "prefix",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"Ελλάδα.txt\\"",
            "unicode": false,
            "value": "Ελλάδα.txt",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\"",
            "unicode": false,
            "value": "",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "create_verify_file",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "prefix",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"привет\\"",
            "unicode": false,
            "value": "привет",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"opened an utf8 filename for reading\\"",
            "unicode": false,
            "value": "opened an utf8 filename for reading",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "create_verify_file",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "prefix",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"テストマルチバイト・パス\\"",
            "unicode": false,
            "value": "テストマルチバイト・パス",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "content",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "create_verify_file",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "prefix",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"測試多字節路徑\\"",
            "unicode": false,
            "value": "測試多字節路徑",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "content",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "create_verify_file",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "prefix",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"żółć.txt\\"",
            "unicode": false,
            "value": "żółć.txt",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "content",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "create_verify_file",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "prefix",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"tschüß3\\"",
            "unicode": false,
            "value": "tschüß3",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "create_verify_dir",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "prefix",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"Voláçao3\\"",
            "unicode": false,
            "value": "Voláçao3",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "create_verify_dir",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "prefix",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"привет3\\"",
            "unicode": false,
            "value": "привет3",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "create_verify_dir",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "prefix",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"テストマルチバイト・パス42\\"",
            "unicode": false,
            "value": "テストマルチバイト・パス42",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "create_verify_dir",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "prefix",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"測試多字節路徑5\\"",
            "unicode": false,
            "value": "測試多字節路徑5",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "create_verify_dir",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "prefix",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"żółć\\"",
            "unicode": false,
            "value": "żółć",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "create_verify_dir",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "dirw",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "prefix",
          },
          "right": Name {
            "kind": "name",
            "name": "DIRECTORY_SEPARATOR",
            "resolution": "uqn",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "old_cp",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "get_active_cp",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "65001",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "set_active_cp",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"is_dir failed\\\\n\\"",
                "unicode": false,
                "value": "is_dir failed
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                While {
                  "body": Block {
                    "children": Array [
                      Echo {
                        "expressions": Array [
                          Bin {
                            "kind": "bin",
                            "left": Bin {
                              "kind": "bin",
                              "left": Encapsed {
                                "kind": "encapsed",
                                "raw": "\\"filename: $file : filetype: \\" ",
                                "type": "string",
                                "value": Array [
                                  EncapsedPart {
                                    "curly": false,
                                    "expression": String {
                                      "isDoubleQuote": false,
                                      "kind": "string",
                                      "raw": "filename: ",
                                      "unicode": false,
                                      "value": "filename: ",
                                    },
                                    "kind": "encapsedpart",
                                    "syntax": null,
                                  },
                                  EncapsedPart {
                                    "curly": false,
                                    "expression": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "file",
                                    },
                                    "kind": "encapsedpart",
                                    "syntax": "simple",
                                  },
                                  EncapsedPart {
                                    "curly": false,
                                    "expression": String {
                                      "isDoubleQuote": false,
                                      "kind": "string",
                                      "raw": " : filetype: ",
                                      "unicode": false,
                                      "value": " : filetype: ",
                                    },
                                    "kind": "encapsedpart",
                                    "syntax": null,
                                  },
                                ],
                              },
                              "right": Call {
                                "arguments": Array [
                                  Bin {
                                    "kind": "bin",
                                    "left": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "dirw",
                                    },
                                    "right": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "file",
                                    },
                                    "type": ".",
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "filetype",
                                  "resolution": "uqn",
                                },
                              },
                              "type": ".",
                            },
                            "right": String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"\\\\n\\"",
                              "unicode": false,
                              "value": "
",
                            },
                            "type": ".",
                          },
                        ],
                        "kind": "echo",
                        "shortForm": false,
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "while",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Assign {
                      "kind": "assign",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "file",
                      },
                      "operator": "=",
                      "parenthesizedExpression": true,
                      "right": Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "dh",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "readdir",
                          "resolution": "uqn",
                        },
                      },
                    },
                    "right": Boolean {
                      "kind": "boolean",
                      "raw": "false",
                      "value": false,
                    },
                    "type": "!==",
                  },
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "dh",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "closedir",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "dh",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "dirw",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "opendir",
                  "resolution": "uqn",
                },
              },
            },
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "dirw",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "is_dir",
          "resolution": "uqn",
        },
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "old_cp",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "set_active_cp",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"mb_names\\"",
            "unicode": false,
            "value": "mb_names",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "remove_data",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
