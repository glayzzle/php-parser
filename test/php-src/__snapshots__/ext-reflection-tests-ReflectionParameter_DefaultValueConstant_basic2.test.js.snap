// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests ReflectionParameter::isDefaultValueConstant() && getDefaultValueConstantName() for namespace 1`] = `
Program {
  "children": Array [
    Namespace {
      "children": Array [
        ConstantStatement {
          "constants": Array [
            Constant {
              "kind": "constant",
              "name": Identifier {
                "kind": "identifier",
                "name": "TEST_CONST_1",
              },
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Test Const 1\\"",
                "unicode": false,
                "value": "Test Const 1",
              },
            },
          ],
          "kind": "constantstatement",
        },
        Class {
          "attrGroups": Array [],
          "body": Array [
            ClassConstant {
              "attrGroups": Array [],
              "constants": Array [
                Constant {
                  "kind": "constant",
                  "name": Identifier {
                    "kind": "identifier",
                    "name": "TEST_CONST_2",
                  },
                  "value": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"Test Const 2 in class\\"",
                    "unicode": false,
                    "value": "Test Const 2 in class",
                  },
                },
              ],
              "kind": "classconstant",
              "visibility": "",
            },
          ],
          "extends": null,
          "implements": null,
          "isAbstract": false,
          "isAnonymous": false,
          "isFinal": false,
          "kind": "class",
          "name": Identifier {
            "kind": "identifier",
            "name": "TestClass",
          },
        },
      ],
      "kind": "namespace",
      "name": "ReflectionTestNamespace",
      "withBrackets": true,
    },
    Namespace {
      "children": Array [
        _Function {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "test",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": StaticLookup {
                "kind": "staticlookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "TEST_CONST_2",
                },
                "what": Name {
                  "kind": "name",
                  "name": "ReflectionTestNamespace\\\\TestClass",
                  "resolution": "qn",
                },
              },
              "variadic": false,
            },
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "test2",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": Name {
                "kind": "name",
                "name": "ReflectionTestNamespace\\\\CONST_TEST_1",
                "resolution": "qn",
              },
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "test",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "kind": "function",
          "name": Identifier {
            "kind": "identifier",
            "name": "ReflectionParameterTest",
          },
          "nullable": false,
          "type": null,
        },
        ExpressionStatement {
          "expression": Assign {
            "kind": "assign",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "reflect",
            },
            "operator": "=",
            "right": New {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'ReflectionParameterTest'",
                  "unicode": false,
                  "value": "ReflectionParameterTest",
                },
              ],
              "kind": "new",
              "what": Name {
                "kind": "name",
                "name": "ReflectionFunction",
                "resolution": "uqn",
              },
            },
          },
          "kind": "expressionstatement",
        },
        Foreach {
          "body": Block {
            "children": Array [
              If {
                "alternate": null,
                "body": Block {
                  "children": Array [
                    Echo {
                      "expressions": Array [
                        Bin {
                          "kind": "bin",
                          "left": Silent {
                            "expr": Call {
                              "arguments": Array [],
                              "kind": "call",
                              "what": PropertyLookup {
                                "kind": "propertylookup",
                                "offset": Identifier {
                                  "kind": "identifier",
                                  "name": "getDefaultValueConstantName",
                                },
                                "what": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "param",
                                },
                              },
                            },
                            "kind": "silent",
                          },
                          "right": String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"\\\\n\\"",
                            "unicode": false,
                            "value": "
",
                          },
                          "type": ".",
                        },
                      ],
                      "kind": "echo",
                      "shortForm": false,
                    },
                  ],
                  "kind": "block",
                },
                "kind": "if",
                "shortForm": false,
                "test": Bin {
                  "kind": "bin",
                  "left": Call {
                    "arguments": Array [],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "isDefaultValueAvailable",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "param",
                      },
                    },
                  },
                  "right": Silent {
                    "expr": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "isDefaultValueConstant",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "param",
                        },
                      },
                    },
                    "kind": "silent",
                  },
                  "type": "&&",
                },
              },
            ],
            "kind": "block",
          },
          "key": null,
          "kind": "foreach",
          "shortForm": false,
          "source": Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "getParameters",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "reflect",
              },
            },
          },
          "value": Variable {
            "curly": false,
            "kind": "variable",
            "name": "param",
          },
        },
      ],
      "kind": "namespace",
      "name": Array [
        "",
      ],
      "withBrackets": true,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
