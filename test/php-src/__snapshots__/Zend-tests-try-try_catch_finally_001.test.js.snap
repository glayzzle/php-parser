// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Try catch finally 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [],
      "body": Array [],
      "extends": Name {
        "kind": "name",
        "name": "Exception",
        "resolution": "uqn",
      },
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "AE",
      },
    },
    Class {
      "attrGroups": Array [],
      "body": Array [],
      "extends": Name {
        "kind": "name",
        "name": "Exception",
        "resolution": "uqn",
      },
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "BE",
      },
    },
    _Function {
      "arguments": Array [],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          Try {
            "always": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"4\\"",
                      "unicode": false,
                      "value": "4",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
              ],
              "kind": "block",
            },
            "body": Block {
              "children": Array [
                Try {
                  "always": Block {
                    "children": Array [
                      Echo {
                        "expressions": Array [
                          String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"2\\"",
                            "unicode": false,
                            "value": "2",
                          },
                        ],
                        "kind": "echo",
                        "shortForm": false,
                      },
                    ],
                    "kind": "block",
                  },
                  "body": Block {
                    "children": Array [
                      Try {
                        "always": Block {
                          "children": Array [
                            Echo {
                              "expressions": Array [
                                String {
                                  "isDoubleQuote": true,
                                  "kind": "string",
                                  "raw": "\\"1\\"",
                                  "unicode": false,
                                  "value": "1",
                                },
                              ],
                              "kind": "echo",
                              "shortForm": false,
                            },
                          ],
                          "kind": "block",
                        },
                        "body": Block {
                          "children": Array [
                            Throw {
                              "kind": "throw",
                              "what": New {
                                "arguments": Array [
                                  String {
                                    "isDoubleQuote": true,
                                    "kind": "string",
                                    "raw": "\\"try\\"",
                                    "unicode": false,
                                    "value": "try",
                                  },
                                ],
                                "kind": "new",
                                "what": Name {
                                  "kind": "name",
                                  "name": "Exception",
                                  "resolution": "uqn",
                                },
                              },
                            },
                          ],
                          "kind": "block",
                        },
                        "catches": Array [
                          Catch {
                            "body": Block {
                              "children": Array [
                                Echo {
                                  "expressions": Array [
                                    String {
                                      "isDoubleQuote": true,
                                      "kind": "string",
                                      "raw": "\\"0\\"",
                                      "unicode": false,
                                      "value": "0",
                                    },
                                  ],
                                  "kind": "echo",
                                  "shortForm": false,
                                },
                                ExpressionStatement {
                                  "expression": Exit {
                                    "expression": String {
                                      "isDoubleQuote": true,
                                      "kind": "string",
                                      "raw": "\\"error\\"",
                                      "unicode": false,
                                      "value": "error",
                                    },
                                    "kind": "exit",
                                    "useDie": true,
                                  },
                                  "kind": "expressionstatement",
                                },
                              ],
                              "kind": "block",
                            },
                            "kind": "catch",
                            "variable": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "e",
                            },
                            "what": Array [
                              Name {
                                "kind": "name",
                                "name": "AE",
                                "resolution": "uqn",
                              },
                            ],
                          },
                        ],
                        "kind": "try",
                      },
                    ],
                    "kind": "block",
                  },
                  "catches": Array [],
                  "kind": "try",
                },
              ],
              "kind": "block",
            },
            "catches": Array [
              Catch {
                "body": Block {
                  "children": Array [
                    ExpressionStatement {
                      "expression": Exit {
                        "expression": String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"error\\"",
                          "unicode": false,
                          "value": "error",
                        },
                        "kind": "exit",
                        "useDie": true,
                      },
                      "kind": "expressionstatement",
                    },
                  ],
                  "kind": "block",
                },
                "kind": "catch",
                "variable": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "e",
                },
                "what": Array [
                  Name {
                    "kind": "name",
                    "name": "BE",
                    "resolution": "uqn",
                  },
                ],
              },
              Catch {
                "body": Block {
                  "children": Array [
                    Echo {
                      "expressions": Array [
                        String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"3\\"",
                          "unicode": false,
                          "value": "3",
                        },
                      ],
                      "kind": "echo",
                      "shortForm": false,
                    },
                  ],
                  "kind": "block",
                },
                "kind": "catch",
                "variable": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "e",
                },
                "what": Array [
                  Name {
                    "kind": "name",
                    "name": "Exception",
                    "resolution": "uqn",
                  },
                ],
              },
            ],
            "kind": "try",
          },
          Return {
            "expr": Number {
              "kind": "number",
              "value": "1",
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "foo",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "foo",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
