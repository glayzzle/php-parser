// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #71509 Zip problem with swedish letters in filename. 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": false,
        "target": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Magic {
              "kind": "magic",
              "raw": "__DIR__",
              "value": "__DIR__",
            },
            "right": Name {
              "kind": "name",
              "name": "DIRECTORY_SEPARATOR",
              "resolution": "uqn",
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"util.inc\\"",
            "unicode": false,
            "value": "util.inc",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "item",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"ISO-8859-1\\"",
              "unicode": false,
              "value": "ISO-8859-1",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"UTF-8\\"",
              "unicode": false,
              "value": "UTF-8",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"R�d_Statistics\\"",
              "unicode": false,
              "value": "R�d_Statistics",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "iconv",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "prefix",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"bug71509\\"",
              "unicode": false,
              "value": "bug71509",
            },
            Encapsed {
              "kind": "encapsed",
              "raw": "\\"$item.txt\\"",
              "type": "string",
              "value": Array [
                EncapsedPart {
                  "curly": false,
                  "expression": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "item",
                  },
                  "kind": "encapsedpart",
                  "syntax": "simple",
                },
                EncapsedPart {
                  "curly": false,
                  "expression": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": ".txt",
                    "unicode": false,
                    "value": ".txt",
                  },
                  "kind": "encapsedpart",
                  "syntax": null,
                },
              ],
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "create_data",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "testfile_zip",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "prefix",
            },
            "right": Name {
              "kind": "name",
              "name": "DIRECTORY_SEPARATOR",
              "resolution": "uqn",
            },
            "type": ".",
          },
          "right": Encapsed {
            "kind": "encapsed",
            "raw": "\\"$item.txt\\"",
            "type": "string",
            "value": Array [
              EncapsedPart {
                "curly": false,
                "expression": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "item",
                },
                "kind": "encapsedpart",
                "syntax": "simple",
              },
              EncapsedPart {
                "curly": false,
                "expression": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": ".txt",
                  "unicode": false,
                  "value": ".txt",
                },
                "kind": "encapsedpart",
                "syntax": null,
              },
            ],
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "outputfile_zip",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "prefix",
            },
            "right": Name {
              "kind": "name",
              "name": "DIRECTORY_SEPARATOR",
              "resolution": "uqn",
            },
            "type": ".",
          },
          "right": Encapsed {
            "kind": "encapsed",
            "raw": "\\"$item.zip\\"",
            "type": "string",
            "value": Array [
              EncapsedPart {
                "curly": false,
                "expression": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "item",
                },
                "kind": "encapsedpart",
                "syntax": "simple",
              },
              EncapsedPart {
                "curly": false,
                "expression": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": ".zip",
                  "unicode": false,
                  "value": ".zip",
                },
                "kind": "encapsedpart",
                "syntax": null,
              },
            ],
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "testfile_zip",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "file_exists",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "zipfile",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "ZipArchive",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "return_code",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "outputfile_zip",
            },
            StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "CREATE",
              },
              "what": Name {
                "kind": "name",
                "name": "ZipArchive",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "open",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "zipfile",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Exit {
          "expression": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"Failed to open file: \\"",
              "unicode": false,
              "value": "Failed to open file: ",
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "return_code",
            },
            "type": ".",
          },
          "kind": "exit",
          "useDie": true,
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "return_code",
        },
        "right": Boolean {
          "kind": "boolean",
          "raw": "true",
          "value": true,
        },
        "type": "!=",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "return_code",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "testfile_zip",
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "testfile_zip",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "basename",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "addfile",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "zipfile",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Print {
          "expression": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"Failed to add file: \\"",
              "unicode": false,
              "value": "Failed to add file: ",
            },
            "parenthesizedExpression": true,
            "right": Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "getStatusString",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "zipfile",
                },
              },
            },
            "type": ".",
          },
          "kind": "print",
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "return_code",
        },
        "right": Boolean {
          "kind": "boolean",
          "raw": "true",
          "value": true,
        },
        "type": "!=",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "return_code",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "close",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "zipfile",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Exit {
          "expression": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"Failed to close archive: \\"",
              "unicode": false,
              "value": "Failed to close archive: ",
            },
            "right": Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "getStatusString",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "zipfile",
                },
              },
            },
            "type": ".",
          },
          "kind": "exit",
          "useDie": true,
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "return_code",
        },
        "right": Boolean {
          "kind": "boolean",
          "raw": "true",
          "value": true,
        },
        "type": "!=",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "outputfile_zip",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "file_exists",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"bug71509\\"",
            "unicode": false,
            "value": "bug71509",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "remove_data",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
