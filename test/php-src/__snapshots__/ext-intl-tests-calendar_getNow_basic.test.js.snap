// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests IntlCalendar::getNow() basic test 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"intl.error_level\\"",
            "unicode": false,
            "value": "intl.error_level",
          },
          Name {
            "kind": "name",
            "name": "E_WARNING",
            "resolution": "uqn",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "ini_set",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"intl.default_locale\\"",
            "unicode": false,
            "value": "intl.default_locale",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"nl\\"",
            "unicode": false,
            "value": "nl",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "ini_set",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "now",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "getNow",
            },
            "what": Name {
              "kind": "name",
              "name": "IntlCalendar",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "proc_now",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "intlcal_get_now",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "time",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "time",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Bin {
                  "kind": "bin",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "now",
                  },
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "proc_now",
                  },
                  "type": "-",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "abs",
                "resolution": "uqn",
              },
            },
            "right": Number {
              "kind": "number",
              "value": "500",
            },
            "type": "<",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                Bin {
                  "kind": "bin",
                  "left": Bin {
                    "kind": "bin",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "time",
                    },
                    "right": Number {
                      "kind": "number",
                      "value": "1000",
                    },
                    "type": "*",
                  },
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "proc_now",
                  },
                  "type": "-",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "abs",
                "resolution": "uqn",
              },
            },
            "right": Number {
              "kind": "number",
              "value": "2000",
            },
            "type": "<",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
