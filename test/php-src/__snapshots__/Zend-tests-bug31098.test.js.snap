// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #31098 (isset() / empty() incorrectly returns true in dereference of a wrong type) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "''",
          "unicode": false,
          "value": "",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Isset {
            "kind": "isset",
            "variables": Array [
              PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "b",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "a",
                },
              },
            ],
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'a'",
          "unicode": false,
          "value": "a",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Isset {
            "kind": "isset",
            "variables": Array [
              PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "b",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "a",
                },
              },
            ],
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'0'",
          "unicode": false,
          "value": "0",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Isset {
            "kind": "isset",
            "variables": Array [
              PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "b",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "a",
                },
              },
            ],
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "''",
          "unicode": false,
          "value": "",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Isset {
            "kind": "isset",
            "variables": Array [
              OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'b'",
                  "unicode": false,
                  "value": "b",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "a",
                },
              },
            ],
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'a'",
          "unicode": false,
          "value": "a",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Isset {
            "kind": "isset",
            "variables": Array [
              OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'b'",
                  "unicode": false,
                  "value": "b",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "a",
                },
              },
            ],
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'0'",
          "unicode": false,
          "value": "0",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Isset {
            "kind": "isset",
            "variables": Array [
              OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'b'",
                  "unicode": false,
                  "value": "b",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "a",
                },
              },
            ],
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "simpleString",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Bogus String Text\\"",
          "unicode": false,
          "value": "Bogus String Text",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        RetIf {
          "falseExpr": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"ok\\\\n\\"",
            "unicode": false,
            "value": "ok
",
          },
          "kind": "retif",
          "test": Isset {
            "kind": "isset",
            "variables": Array [
              PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "wrong",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "simpleString",
                },
              },
            ],
          },
          "trueExpr": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"bug\\\\n\\"",
            "unicode": false,
            "value": "bug
",
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              RetIf {
                "falseExpr": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"ok\\\\n\\"",
                  "unicode": false,
                  "value": "ok
",
                },
                "kind": "retif",
                "test": Isset {
                  "kind": "isset",
                  "variables": Array [
                    OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"wrong\\"",
                        "unicode": false,
                        "value": "wrong",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "simpleString",
                      },
                    },
                  ],
                },
                "trueExpr": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"bug\\\\n\\"",
                  "unicode": false,
                  "value": "bug
",
                },
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getMessage",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "e",
                        },
                      },
                    },
                    "right": Name {
                      "kind": "name",
                      "name": "\\\\PHP_EOL",
                      "resolution": "fqn",
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "\\\\TypeError",
              "resolution": "fqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    Echo {
      "expressions": Array [
        RetIf {
          "falseExpr": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"ok\\\\n\\"",
            "unicode": false,
            "value": "ok
",
          },
          "kind": "retif",
          "test": Isset {
            "kind": "isset",
            "variables": Array [
              OffsetLookup {
                "kind": "offsetlookup",
                "offset": Unary {
                  "kind": "unary",
                  "type": "-",
                  "what": Number {
                    "kind": "number",
                    "value": "20",
                  },
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "simpleString",
                },
              },
            ],
          },
          "trueExpr": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"bug\\\\n\\"",
            "unicode": false,
            "value": "bug
",
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        RetIf {
          "falseExpr": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"bug\\\\n\\"",
            "unicode": false,
            "value": "bug
",
          },
          "kind": "retif",
          "test": Isset {
            "kind": "isset",
            "variables": Array [
              OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "0",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "simpleString",
                },
              },
            ],
          },
          "trueExpr": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"ok\\\\n\\"",
            "unicode": false,
            "value": "ok
",
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        RetIf {
          "falseExpr": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"bug\\\\n\\"",
            "unicode": false,
            "value": "bug
",
          },
          "kind": "retif",
          "test": Isset {
            "kind": "isset",
            "variables": Array [
              OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"0\\"",
                  "unicode": false,
                  "value": "0",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "simpleString",
                },
              },
            ],
          },
          "trueExpr": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"ok\\\\n\\"",
            "unicode": false,
            "value": "ok
",
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        RetIf {
          "falseExpr": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"bug\\\\n\\"",
            "unicode": false,
            "value": "bug
",
          },
          "kind": "retif",
          "test": Isset {
            "kind": "isset",
            "variables": Array [
              OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"16\\"",
                  "unicode": false,
                  "value": "16",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "simpleString",
                },
              },
            ],
          },
          "trueExpr": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"ok\\\\n\\"",
            "unicode": false,
            "value": "ok
",
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        RetIf {
          "falseExpr": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"ok\\\\n\\"",
            "unicode": false,
            "value": "ok
",
          },
          "kind": "retif",
          "test": Isset {
            "kind": "isset",
            "variables": Array [
              OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"17\\"",
                  "unicode": false,
                  "value": "17",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "simpleString",
                },
              },
            ],
          },
          "trueExpr": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"bug\\\\n\\"",
            "unicode": false,
            "value": "bug
",
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        RetIf {
          "falseExpr": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"bug\\\\n\\"",
            "unicode": false,
            "value": "bug
",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "wrong",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "simpleString",
              },
            },
            "right": NullKeyword {
              "kind": "nullkeyword",
              "raw": "null",
            },
            "type": "===",
          },
          "trueExpr": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"ok\\\\n\\"",
            "unicode": false,
            "value": "ok
",
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              RetIf {
                "falseExpr": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"bug\\\\n\\"",
                  "unicode": false,
                  "value": "bug
",
                },
                "kind": "retif",
                "test": Bin {
                  "kind": "bin",
                  "left": OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"wrong\\"",
                      "unicode": false,
                      "value": "wrong",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "simpleString",
                    },
                  },
                  "right": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"B\\"",
                    "unicode": false,
                    "value": "B",
                  },
                  "type": "===",
                },
                "trueExpr": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"ok\\\\n\\"",
                  "unicode": false,
                  "value": "ok
",
                },
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getMessage",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "e",
                        },
                      },
                    },
                    "right": Name {
                      "kind": "name",
                      "name": "\\\\PHP_EOL",
                      "resolution": "fqn",
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "\\\\TypeError",
              "resolution": "fqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    Echo {
      "expressions": Array [
        RetIf {
          "falseExpr": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"bug\\\\n\\"",
            "unicode": false,
            "value": "bug
",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"0\\"",
                "unicode": false,
                "value": "0",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "simpleString",
              },
            },
            "right": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"B\\"",
              "unicode": false,
              "value": "B",
            },
            "type": "===",
          },
          "trueExpr": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"ok\\\\n\\"",
            "unicode": false,
            "value": "ok
",
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"wrong\\"",
                  "unicode": false,
                  "value": "wrong",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "simpleString",
                },
              },
              "operator": "=",
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"f\\"",
                "unicode": false,
                "value": "f",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getMessage",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "e",
                        },
                      },
                    },
                    "right": Name {
                      "kind": "name",
                      "name": "\\\\PHP_EOL",
                      "resolution": "fqn",
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "\\\\TypeError",
              "resolution": "fqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    Echo {
      "expressions": Array [
        RetIf {
          "falseExpr": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"bug\\\\n\\"",
            "unicode": false,
            "value": "bug
",
          },
          "kind": "retif",
          "test": Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"0\\"",
                "unicode": false,
                "value": "0",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "simpleString",
              },
            },
            "right": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"B\\"",
              "unicode": false,
              "value": "B",
            },
            "type": "===",
          },
          "trueExpr": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"ok\\\\n\\"",
            "unicode": false,
            "value": "ok
",
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
