// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #81037 PDO discards error message text from prepared statement 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": true,
        "target": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Magic {
              "kind": "magic",
              "raw": "__DIR__",
              "value": "__DIR__",
            },
            "right": Name {
              "kind": "name",
              "name": "DIRECTORY_SEPARATOR",
              "resolution": "uqn",
            },
            "type": ".",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'mysql_pdo_test.inc'",
            "unicode": false,
            "value": "mysql_pdo_test.inc",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "pdo",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "factory",
            },
            "what": Name {
              "kind": "name",
              "name": "MySQLPDOTest",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "ATTR_ERRMODE",
            },
            "what": Name {
              "kind": "name",
              "name": "PDO",
              "resolution": "uqn",
            },
          },
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "ERRMODE_EXCEPTION",
            },
            "what": Name {
              "kind": "name",
              "name": "PDO",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "setAttribute",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "pdo",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "ATTR_EMULATE_PREPARES",
            },
            "what": Name {
              "kind": "name",
              "name": "PDO",
              "resolution": "uqn",
            },
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "setAttribute",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "pdo",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "pdo",
          },
        ],
        "kind": "call",
        "what": StaticLookup {
          "kind": "staticlookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "createTestTable",
          },
          "what": Name {
            "kind": "name",
            "name": "MySQLPDOTest",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "sql",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"SELECT id FROM test WHERE label = :par\\"",
          "unicode": false,
          "value": "SELECT id FROM test WHERE label = :par",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "stmt",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "sql",
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "prepare",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "pdo",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "execute",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Call {
                    "arguments": Array [],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "getMessage",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "e",
                      },
                    },
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"\\\\n\\"",
                    "unicode": false,
                    "value": "
",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "PDOException",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "data",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "FETCH_ASSOC",
              },
              "what": Name {
                "kind": "name",
                "name": "PDO",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "fetchAll",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "stmt",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
