// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests int socket_send ( resource $socket , string $buf , int $len , int $flags ); 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "port",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "80",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "host",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"yahoo.com\\"",
          "unicode": false,
          "value": "yahoo.com",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "stringSocket",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"send_socket_to_connected_socket\\"",
          "unicode": false,
          "value": "send_socket_to_connected_socket",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "stringSocketLength",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "stringSocket",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "strlen",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "socket",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Name {
              "kind": "name",
              "name": "AF_INET",
              "resolution": "uqn",
            },
            Name {
              "kind": "name",
              "name": "SOCK_STREAM",
              "resolution": "uqn",
            },
            Name {
              "kind": "name",
              "name": "SOL_TCP",
              "resolution": "uqn",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "socket_create",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "socketConn",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "socket",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "host",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "port",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "socket_connect",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Print {
              "expression": String {
                "isDoubleQuote": true,
                "kind": "string",
                "parenthesizedExpression": true,
                "raw": "\\"okey\\\\n\\"",
                "unicode": false,
                "value": "okey
",
              },
              "kind": "print",
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "socket",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "stringSocket",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "stringSocketLength",
            },
            Name {
              "kind": "name",
              "name": "MSG_OOB",
              "resolution": "uqn",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "socket_send",
            "resolution": "uqn",
          },
        },
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "stringSocketLength",
        },
        "type": "===",
      },
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Print {
              "expression": String {
                "isDoubleQuote": true,
                "kind": "string",
                "parenthesizedExpression": true,
                "raw": "\\"okey\\\\n\\"",
                "unicode": false,
                "value": "okey
",
              },
              "kind": "print",
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'MSG_EOR'",
                "unicode": false,
                "value": "MSG_EOR",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "defined",
              "resolution": "uqn",
            },
          },
        },
        "right": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "socket",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "stringSocket",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "stringSocketLength",
              },
              Name {
                "kind": "name",
                "name": "MSG_EOR",
                "resolution": "uqn",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "socket_send",
              "resolution": "uqn",
            },
          },
          "right": Variable {
            "curly": false,
            "kind": "variable",
            "name": "stringSocketLength",
          },
          "type": "===",
        },
        "type": "||",
      },
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Print {
              "expression": String {
                "isDoubleQuote": true,
                "kind": "string",
                "parenthesizedExpression": true,
                "raw": "\\"okey\\\\n\\"",
                "unicode": false,
                "value": "okey
",
              },
              "kind": "print",
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'MSG_EOF'",
                "unicode": false,
                "value": "MSG_EOF",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "defined",
              "resolution": "uqn",
            },
          },
        },
        "right": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "socket",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "stringSocket",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "stringSocketLength",
              },
              Name {
                "kind": "name",
                "name": "MSG_EOF",
                "resolution": "uqn",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "socket_send",
              "resolution": "uqn",
            },
          },
          "right": Variable {
            "curly": false,
            "kind": "variable",
            "name": "stringSocketLength",
          },
          "type": "===",
        },
        "type": "||",
      },
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Print {
              "expression": String {
                "isDoubleQuote": true,
                "kind": "string",
                "parenthesizedExpression": true,
                "raw": "\\"okey\\\\n\\"",
                "unicode": false,
                "value": "okey
",
              },
              "kind": "print",
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "socket",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "stringSocket",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "stringSocketLength",
            },
            Name {
              "kind": "name",
              "name": "MSG_DONTROUTE",
              "resolution": "uqn",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "socket_send",
            "resolution": "uqn",
          },
        },
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "stringSocketLength",
        },
        "type": "===",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "socket",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "socket_close",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Unset {
      "kind": "unset",
      "variables": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "port",
        },
      ],
    },
    Unset {
      "kind": "unset",
      "variables": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "host",
        },
      ],
    },
    Unset {
      "kind": "unset",
      "variables": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "stringSocket",
        },
      ],
    },
    Unset {
      "kind": "unset",
      "variables": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "stringSocketLength",
        },
      ],
    },
    Unset {
      "kind": "unset",
      "variables": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "socket",
        },
      ],
    },
    Unset {
      "kind": "unset",
      "variables": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "socketConn",
        },
      ],
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
