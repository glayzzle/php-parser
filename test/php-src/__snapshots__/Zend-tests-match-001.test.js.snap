// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Basic match expression functionality test 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "x",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          Return {
            "expr": Match {
              "arms": Array [
                MatchArm {
                  "body": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'Zero'",
                    "unicode": false,
                    "value": "Zero",
                  },
                  "conds": Array [
                    Number {
                      "kind": "number",
                      "value": "0",
                    },
                  ],
                  "kind": "matcharm",
                },
                MatchArm {
                  "body": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'One'",
                    "unicode": false,
                    "value": "One",
                  },
                  "conds": Array [
                    Number {
                      "kind": "number",
                      "value": "1",
                    },
                  ],
                  "kind": "matcharm",
                },
                MatchArm {
                  "body": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'Two'",
                    "unicode": false,
                    "value": "Two",
                  },
                  "conds": Array [
                    Number {
                      "kind": "number",
                      "value": "2",
                    },
                  ],
                  "kind": "matcharm",
                },
                MatchArm {
                  "body": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'Three'",
                    "unicode": false,
                    "value": "Three",
                  },
                  "conds": Array [
                    Number {
                      "kind": "number",
                      "value": "3",
                    },
                  ],
                  "kind": "matcharm",
                },
                MatchArm {
                  "body": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'Four'",
                    "unicode": false,
                    "value": "Four",
                  },
                  "conds": Array [
                    Number {
                      "kind": "number",
                      "value": "4",
                    },
                  ],
                  "kind": "matcharm",
                },
                MatchArm {
                  "body": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'Five'",
                    "unicode": false,
                    "value": "Five",
                  },
                  "conds": Array [
                    Number {
                      "kind": "number",
                      "value": "5",
                    },
                  ],
                  "kind": "matcharm",
                },
                MatchArm {
                  "body": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'Six'",
                    "unicode": false,
                    "value": "Six",
                  },
                  "conds": Array [
                    Number {
                      "kind": "number",
                      "value": "6",
                    },
                  ],
                  "kind": "matcharm",
                },
                MatchArm {
                  "body": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'Seven'",
                    "unicode": false,
                    "value": "Seven",
                  },
                  "conds": Array [
                    Number {
                      "kind": "number",
                      "value": "7",
                    },
                  ],
                  "kind": "matcharm",
                },
                MatchArm {
                  "body": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'Eight'",
                    "unicode": false,
                    "value": "Eight",
                  },
                  "conds": Array [
                    Number {
                      "kind": "number",
                      "value": "8",
                    },
                  ],
                  "kind": "matcharm",
                },
                MatchArm {
                  "body": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'Nine'",
                    "unicode": false,
                    "value": "Nine",
                  },
                  "conds": Array [
                    Number {
                      "kind": "number",
                      "value": "9",
                    },
                  ],
                  "kind": "matcharm",
                },
              ],
              "cond": Variable {
                "curly": false,
                "kind": "variable",
                "name": "x",
              },
              "kind": "match",
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "wordify",
      },
      "nullable": false,
      "type": null,
    },
    For {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Print {
              "expression": Bin {
                "kind": "bin",
                "left": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "i",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "wordify",
                    "resolution": "uqn",
                  },
                },
                "right": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"\\\\n\\"",
                  "unicode": false,
                  "value": "
",
                },
                "type": ".",
              },
              "kind": "print",
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "increment": Array [
        Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "0",
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "right": Number {
            "kind": "number",
            "value": "9",
          },
          "type": "<=",
        },
      ],
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
