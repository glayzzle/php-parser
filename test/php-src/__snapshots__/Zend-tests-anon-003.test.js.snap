// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests reusing anonymous classes 1`] = `
Program {
  "children": Array [
    While {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                New {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "i",
                    },
                  ],
                  "kind": "new",
                  "what": Class {
                    "attrGroups": Array [],
                    "body": Array [
                      Method {
                        "arguments": Array [
                          Parameter {
                            "attrGroups": Array [],
                            "byref": false,
                            "flags": 0,
                            "kind": "parameter",
                            "name": Identifier {
                              "kind": "identifier",
                              "name": "i",
                            },
                            "nullable": false,
                            "readonly": false,
                            "type": null,
                            "value": null,
                            "variadic": false,
                          },
                        ],
                        "attrGroups": Array [],
                        "body": Block {
                          "children": Array [
                            ExpressionStatement {
                              "expression": Assign {
                                "kind": "assign",
                                "left": PropertyLookup {
                                  "kind": "propertylookup",
                                  "offset": Identifier {
                                    "kind": "identifier",
                                    "name": "i",
                                  },
                                  "what": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "this",
                                  },
                                },
                                "operator": "=",
                                "right": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "i",
                                },
                              },
                              "kind": "expressionstatement",
                            },
                          ],
                          "kind": "block",
                        },
                        "byref": false,
                        "isAbstract": false,
                        "isFinal": false,
                        "isStatic": false,
                        "kind": "method",
                        "name": Identifier {
                          "kind": "identifier",
                          "name": "__construct",
                        },
                        "nullable": false,
                        "type": null,
                        "visibility": "public",
                      },
                    ],
                    "extends": null,
                    "implements": null,
                    "isAbstract": false,
                    "isAnonymous": true,
                    "isFinal": false,
                    "kind": "class",
                    "name": null,
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "while",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Silent {
          "expr": Post {
            "kind": "post",
            "type": "+",
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "i",
            },
          },
          "kind": "silent",
        },
        "right": Number {
          "kind": "number",
          "value": "10",
        },
        "type": "<",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
