// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Use enum as WeakMap key 1`] = `
Program {
  "children": Array [
    Enum {
      "attrGroups": Array [],
      "body": Array [
        EnumCase {
          "kind": "enumcase",
          "name": Identifier {
            "kind": "identifier",
            "name": "A",
          },
          "value": null,
        },
      ],
      "implements": null,
      "kind": "enum",
      "name": Identifier {
        "kind": "identifier",
        "name": "TestEnum",
      },
      "valueType": null,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "map",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "WeakMap",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "A",
            },
            "what": Name {
              "kind": "name",
              "name": "TestEnum",
              "resolution": "uqn",
            },
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "map",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'a string'",
          "unicode": false,
          "value": "a string",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "A",
              },
              "what": Name {
                "kind": "name",
                "name": "TestEnum",
                "resolution": "uqn",
              },
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "map",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "A",
              },
              "what": Name {
                "kind": "name",
                "name": "TestEnum",
                "resolution": "uqn",
              },
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "map",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
