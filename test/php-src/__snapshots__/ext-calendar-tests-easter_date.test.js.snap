// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests easter_date() 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'TZ=UTC'",
            "unicode": false,
            "value": "TZ=UTC",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "putenv",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Y-m-d\\"",
                "unicode": false,
                "value": "Y-m-d",
              },
              Call {
                "arguments": Array [
                  Number {
                    "kind": "number",
                    "value": "2000",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "easter_date",
                  "resolution": "uqn",
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "date",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Y-m-d\\"",
                "unicode": false,
                "value": "Y-m-d",
              },
              Call {
                "arguments": Array [
                  Number {
                    "kind": "number",
                    "value": "2001",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "easter_date",
                  "resolution": "uqn",
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "date",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Y-m-d\\"",
                "unicode": false,
                "value": "Y-m-d",
              },
              Call {
                "arguments": Array [
                  Number {
                    "kind": "number",
                    "value": "2002",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "easter_date",
                  "resolution": "uqn",
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "date",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Number {
                  "kind": "number",
                  "value": "1492",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "easter_date",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Encapsed {
                    "kind": "encapsed",
                    "raw": "\\"{$ex->getMessage()}\\\\n\\"",
                    "type": "string",
                    "value": Array [
                      EncapsedPart {
                        "curly": false,
                        "expression": Call {
                          "arguments": Array [],
                          "kind": "call",
                          "what": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "getMessage",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "ex",
                            },
                          },
                        },
                        "kind": "encapsedpart",
                        "syntax": "complex",
                      },
                      EncapsedPart {
                        "curly": false,
                        "expression": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "\\\\n",
                          "unicode": false,
                          "value": "",
                        },
                        "kind": "encapsedpart",
                        "syntax": null,
                      },
                    ],
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "ex",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "ValueError",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
