// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Interface of the class mysqli_driver 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "driver",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "mysqli_driver",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"Parent class:\\\\n\\"",
            "unicode": false,
            "value": "Parent class:
",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "driver",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "get_parent_class",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\nMethods:\\\\n\\"",
            "unicode": false,
            "value": "
Methods:
",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "methods",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "driver",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "get_class_methods",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "expected_methods",
        },
        "operator": "=",
        "right": Array {
          "items": Array [],
          "kind": "array",
          "shortForm": true,
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                Unset {
                  "kind": "unset",
                  "variables": Array [
                    OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "method",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "expected_methods",
                      },
                    },
                    OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "k",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "methods",
                      },
                    },
                  ],
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Isset {
              "kind": "isset",
              "variables": Array [
                OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "method",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "expected_methods",
                  },
                },
              ],
            },
          },
        ],
        "kind": "block",
      },
      "key": Variable {
        "curly": false,
        "kind": "variable",
        "name": "k",
      },
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "methods",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "method",
      },
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"Dumping list of missing methods.\\\\n\\"",
                  "unicode": false,
                  "value": "Dumping list of missing methods.
",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "printf",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "expected_methods",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected_methods",
          },
          "kind": "empty",
        },
      },
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"Dumping list of unexpected methods.\\\\n\\"",
                  "unicode": false,
                  "value": "Dumping list of unexpected methods.
",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "printf",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "methods",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "methods",
          },
          "kind": "empty",
        },
      },
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"ok\\\\n\\"",
                  "unicode": false,
                  "value": "ok
",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "printf",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected_methods",
          },
          "kind": "empty",
        },
        "right": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "methods",
          },
          "kind": "empty",
        },
        "type": "&&",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\nClass variables:\\\\n\\"",
            "unicode": false,
            "value": "
Class variables:
",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "variables",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Call {
              "arguments": Array [
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "driver",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "get_class",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "get_class_vars",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "array_keys",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "variables",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "sort",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"%s\\\\n\\"",
                  "unicode": false,
                  "value": "%s
",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "var",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "printf",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "variables",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "var",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\nObject variables:\\\\n\\"",
            "unicode": false,
            "value": "
Object variables:
",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "variables",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "driver",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "get_object_vars",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "array_keys",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"%s\\\\n\\"",
                  "unicode": false,
                  "value": "%s
",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "var",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "printf",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "variables",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "var",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\nMagic, magic properties:\\\\n\\"",
            "unicode": false,
            "value": "
Magic, magic properties:
",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_get_client_info",
                "resolution": "uqn",
              },
            },
            "right": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "client_info",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "driver",
              },
            },
            "type": "===",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "assert",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"driver->client_info = '%s'\\\\n\\"",
            "unicode": false,
            "value": "driver->client_info = '%s'
",
          },
          PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "client_info",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "driver",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_get_client_version",
                "resolution": "uqn",
              },
            },
            "right": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "client_version",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "driver",
              },
            },
            "type": "===",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "assert",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"driver->client_version = '%s'\\\\n\\"",
            "unicode": false,
            "value": "driver->client_version = '%s'
",
          },
          PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "client_version",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "driver",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"driver->driver_version = '%s'\\\\n\\"",
            "unicode": false,
            "value": "driver->driver_version = '%s'
",
          },
          PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "driver_version",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "driver",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "report_mode",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "driver",
                },
              },
              Array {
                "items": Array [
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": Name {
                      "kind": "name",
                      "name": "MYSQLI_REPORT_ALL",
                      "resolution": "uqn",
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": Name {
                      "kind": "name",
                      "name": "MYSQLI_REPORT_STRICT",
                      "resolution": "uqn",
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": Bin {
                      "kind": "bin",
                      "left": Name {
                        "kind": "name",
                        "name": "MYSQLI_REPORT_STRICT",
                        "resolution": "uqn",
                      },
                      "right": Name {
                        "kind": "name",
                        "name": "MYSQLI_REPORT_ERROR",
                        "resolution": "uqn",
                      },
                      "type": "|",
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": Bin {
                      "kind": "bin",
                      "left": Name {
                        "kind": "name",
                        "name": "MYSQLI_REPORT_STRICT",
                        "resolution": "uqn",
                      },
                      "right": Name {
                        "kind": "name",
                        "name": "MYSQLI_REPORT_INDEX",
                        "resolution": "uqn",
                      },
                      "type": "|",
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": Name {
                      "kind": "name",
                      "name": "MYSQLI_REPORT_ERROR",
                      "resolution": "uqn",
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": Bin {
                      "kind": "bin",
                      "left": Name {
                        "kind": "name",
                        "name": "MYSQLI_REPORT_ERROR",
                        "resolution": "uqn",
                      },
                      "right": Name {
                        "kind": "name",
                        "name": "MYSQLI_REPORT_INDEX",
                        "resolution": "uqn",
                      },
                      "type": "|",
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": Name {
                      "kind": "name",
                      "name": "MYSQLI_REPORT_INDEX",
                      "resolution": "uqn",
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": Name {
                      "kind": "name",
                      "name": "MYSQLI_REPORT_OFF",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "array",
                "shortForm": true,
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "in_array",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "assert",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"driver->report_mode = '%s'\\\\n\\"",
            "unicode": false,
            "value": "driver->report_mode = '%s'
",
          },
          PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "report_mode",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "driver",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "report_mode",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "driver",
          },
        },
        "operator": "=",
        "right": Name {
          "kind": "name",
          "name": "MYSQLI_REPORT_STRICT",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "report_mode",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "driver",
              },
            },
            "right": Name {
              "kind": "name",
              "name": "MYSQLI_REPORT_STRICT",
              "resolution": "uqn",
            },
            "type": "===",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "assert",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"driver->reconnect = '%s'\\\\n\\"",
            "unicode": false,
            "value": "driver->reconnect = '%s'
",
          },
          PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "reconnect",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "driver",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\nAccess to undefined properties:\\\\n\\"",
            "unicode": false,
            "value": "
Access to undefined properties:
",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"driver->unknown = '%s'\\\\n\\"",
            "unicode": false,
            "value": "driver->unknown = '%s'
",
          },
          Silent {
            "expr": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "unknown",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "driver",
              },
            },
            "kind": "silent",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"done!\\"",
          "unicode": false,
          "value": "done!",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
