// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests openssl_public_encrypt() tests 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "data",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Testing openssl_public_encrypt()\\"",
          "unicode": false,
          "value": "Testing openssl_public_encrypt()",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "privkey",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"file://\\"",
              "unicode": false,
              "value": "file://",
            },
            "right": Magic {
              "kind": "magic",
              "raw": "__DIR__",
              "value": "__DIR__",
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"/private_rsa_1024.key\\"",
            "unicode": false,
            "value": "/private_rsa_1024.key",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "pubkey",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"file://\\"",
              "unicode": false,
              "value": "file://",
            },
            "right": Magic {
              "kind": "magic",
              "raw": "__DIR__",
              "value": "__DIR__",
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"/public.key\\"",
            "unicode": false,
            "value": "/public.key",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "wrong",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"wrong\\"",
          "unicode": false,
          "value": "wrong",
        },
      },
      "kind": "expressionstatement",
    },
    Class {
      "attrGroups": Array [],
      "body": Array [
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Return {
                "expr": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"test\\"",
                  "unicode": false,
                  "value": "test",
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "__toString",
          },
          "nullable": false,
          "type": null,
          "visibility": "",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "test",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "obj",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "test",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "data",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "encrypted",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "pubkey",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "openssl_public_encrypt",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "data",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "encrypted",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "privkey",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "openssl_public_encrypt",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "data",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "encrypted",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "wrong",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "openssl_public_encrypt",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "data",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "encrypted",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "obj",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "openssl_public_encrypt",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "obj",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "encrypted",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "pubkey",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "openssl_public_encrypt",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "encrypted",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "output",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "privkey",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "openssl_private_decrypt",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "output",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
