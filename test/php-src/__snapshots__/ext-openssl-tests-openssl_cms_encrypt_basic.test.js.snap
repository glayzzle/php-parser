// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests openssl_cms_encrypt() tests 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "infile",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Magic {
            "kind": "magic",
            "raw": "__DIR__",
            "value": "__DIR__",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"/plain.txt\\"",
            "unicode": false,
            "value": "/plain.txt",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "outfile",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "sys_get_temp_dir",
                "resolution": "uqn",
              },
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"cms_enc_basic\\"",
              "unicode": false,
              "value": "cms_enc_basic",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "tempnam",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Exit {
          "expression": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"failed to get a temporary filename!\\"",
            "unicode": false,
            "value": "failed to get a temporary filename!",
          },
          "kind": "exit",
          "useDie": true,
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "outfile",
        },
        "right": Boolean {
          "kind": "boolean",
          "raw": "false",
          "value": false,
        },
        "type": "===",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "outfile2",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "outfile",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\".out\\"",
            "unicode": false,
            "value": ".out",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "single_cert",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"file://\\"",
              "unicode": false,
              "value": "file://",
            },
            "right": Magic {
              "kind": "magic",
              "raw": "__DIR__",
              "value": "__DIR__",
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"/cert.crt\\"",
            "unicode": false,
            "value": "/cert.crt",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "privkey",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"file://\\"",
              "unicode": false,
              "value": "file://",
            },
            "right": Magic {
              "kind": "magic",
              "raw": "__DIR__",
              "value": "__DIR__",
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"/private_rsa_1024.key\\"",
            "unicode": false,
            "value": "/private_rsa_1024.key",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "wrongkey",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"file://\\"",
              "unicode": false,
              "value": "file://",
            },
            "right": Magic {
              "kind": "magic",
              "raw": "__DIR__",
              "value": "__DIR__",
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"/private_rsa_2048.key\\"",
            "unicode": false,
            "value": "/private_rsa_2048.key",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "multi_certs",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "name": "single_cert",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "name": "single_cert",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "assoc_headers",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"To\\"",
                "unicode": false,
                "value": "To",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"test@test\\"",
                "unicode": false,
                "value": "test@test",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Subject\\"",
                "unicode": false,
                "value": "Subject",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"testing openssl_cms_encrypt()\\"",
                "unicode": false,
                "value": "testing openssl_cms_encrypt()",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "headers",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"test@test\\"",
                "unicode": false,
                "value": "test@test",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"testing openssl_cms_encrypt()\\"",
                "unicode": false,
                "value": "testing openssl_cms_encrypt()",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "empty_headers",
        },
        "operator": "=",
        "right": Array {
          "items": Array [],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "wrong",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"wrong\\"",
          "unicode": false,
          "value": "wrong",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "empty",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\"",
          "unicode": false,
          "value": "",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "cipher",
        },
        "operator": "=",
        "right": Name {
          "kind": "name",
          "name": "OPENSSL_CIPHER_AES_128_CBC",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "infile",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "outfile",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "single_cert",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "headers",
              },
              namedargument {
                "kind": "namedargument",
                "name": "cipher_algo",
                "value": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "cipher",
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "openssl_cms_encrypt",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "infile",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "outfile",
              },
              Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "single_cert",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "openssl_x509_read",
                  "resolution": "uqn",
                },
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "headers",
              },
              namedargument {
                "kind": "namedargument",
                "name": "cipher_algo",
                "value": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "cipher",
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "openssl_cms_encrypt",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "outfile",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "outfile2",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "single_cert",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "privkey",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "openssl_cms_decrypt",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "outfile2",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "readfile",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "infile",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "outfile",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "single_cert",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "assoc_headers",
              },
              namedargument {
                "kind": "namedargument",
                "name": "cipher_algo",
                "value": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "cipher",
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "openssl_cms_encrypt",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "infile",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "outfile",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "single_cert",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "empty_headers",
              },
              namedargument {
                "kind": "namedargument",
                "name": "cipher_algo",
                "value": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "cipher",
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "openssl_cms_encrypt",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "wrong",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "outfile",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "single_cert",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "headers",
              },
              namedargument {
                "kind": "namedargument",
                "name": "cipher_algo",
                "value": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "cipher",
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "openssl_cms_encrypt",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "empty",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "outfile",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "single_cert",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "headers",
              },
              namedargument {
                "kind": "namedargument",
                "name": "cipher_algo",
                "value": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "cipher",
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "openssl_cms_encrypt",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "infile",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "empty",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "single_cert",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "headers",
              },
              namedargument {
                "kind": "namedargument",
                "name": "cipher_algo",
                "value": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "cipher",
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "openssl_cms_encrypt",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "infile",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "outfile",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "wrong",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "headers",
              },
              namedargument {
                "kind": "namedargument",
                "name": "cipher_algo",
                "value": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "cipher",
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "openssl_cms_encrypt",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "infile",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "outfile",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "empty",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "headers",
              },
              namedargument {
                "kind": "namedargument",
                "name": "cipher_algo",
                "value": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "cipher",
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "openssl_cms_encrypt",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "infile",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "outfile",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "multi_certs",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "headers",
              },
              namedargument {
                "kind": "namedargument",
                "name": "cipher_algo",
                "value": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "cipher",
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "openssl_cms_encrypt",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "infile",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "outfile",
              },
              Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'openssl_x509_read'",
                    "unicode": false,
                    "value": "openssl_x509_read",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "multi_certs",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "array_map",
                  "resolution": "uqn",
                },
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "headers",
              },
              namedargument {
                "kind": "namedargument",
                "name": "cipher_algo",
                "value": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "cipher",
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "openssl_cms_encrypt",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"true\\\\n\\"",
                "unicode": false,
                "value": "true
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "outfile",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "unlink",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "outfile",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "file_exists",
          "resolution": "uqn",
        },
      },
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"true\\\\n\\"",
                "unicode": false,
                "value": "true
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "outfile2",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "unlink",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "outfile2",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "file_exists",
          "resolution": "uqn",
        },
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
