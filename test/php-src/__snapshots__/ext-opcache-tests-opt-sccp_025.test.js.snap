// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests SCCP 025: ADD_ARRAY_ELEMENT against an existing const array 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "phpEx",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "expected_data_sets",
              },
              "operator": "=",
              "right": Array {
                "items": Array [
                  Entry {
                    "byRef": false,
                    "key": Number {
                      "kind": "number",
                      "value": "1",
                    },
                    "kind": "entry",
                    "unpack": false,
                    "value": Array {
                      "items": Array [
                        Entry {
                          "byRef": false,
                          "key": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'id'",
                            "unicode": false,
                            "value": "id",
                          },
                          "kind": "entry",
                          "unpack": false,
                          "value": Number {
                            "kind": "number",
                            "value": "1",
                          },
                        },
                      ],
                      "kind": "array",
                      "shortForm": false,
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": Number {
                      "kind": "number",
                      "value": "6",
                    },
                    "kind": "entry",
                    "unpack": false,
                    "value": Array {
                      "items": Array [
                        Entry {
                          "byRef": false,
                          "key": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'viewtopic'",
                            "unicode": false,
                            "value": "viewtopic",
                          },
                          "kind": "entry",
                          "unpack": false,
                          "value": Call {
                            "arguments": Array [
                              Encapsed {
                                "kind": "encapsed",
                                "raw": "\\"phpBB/viewtopic.$phpEx\\"",
                                "type": "string",
                                "value": Array [
                                  EncapsedPart {
                                    "curly": false,
                                    "expression": String {
                                      "isDoubleQuote": false,
                                      "kind": "string",
                                      "raw": "phpBB/viewtopic.",
                                      "unicode": false,
                                      "value": "phpBB/viewtopic.",
                                    },
                                    "kind": "encapsedpart",
                                    "syntax": null,
                                  },
                                  EncapsedPart {
                                    "curly": false,
                                    "expression": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "phpEx",
                                    },
                                    "kind": "encapsedpart",
                                    "syntax": "simple",
                                  },
                                ],
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "strval",
                              "resolution": "uqn",
                            },
                          },
                        },
                      ],
                      "kind": "array",
                      "shortForm": false,
                    },
                  },
                ],
                "kind": "array",
                "shortForm": false,
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test_cases",
              },
              "operator": "=",
              "right": Array {
                "items": Array [
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": Array {
                      "items": Array [
                        Entry {
                          "byRef": false,
                          "key": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'expected'",
                            "unicode": false,
                            "value": "expected",
                          },
                          "kind": "entry",
                          "unpack": false,
                          "value": Array {
                            "items": Array [
                              Entry {
                                "byRef": false,
                                "key": null,
                                "kind": "entry",
                                "unpack": false,
                                "value": Number {
                                  "kind": "number",
                                  "value": "6",
                                },
                              },
                            ],
                            "kind": "array",
                            "shortForm": false,
                          },
                        },
                      ],
                      "kind": "array",
                      "shortForm": false,
                    },
                  },
                ],
                "kind": "array",
                "shortForm": false,
              },
            },
            "kind": "expressionstatement",
          },
          Foreach {
            "body": Block {
              "children": Array [
                Foreach {
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": OffsetLookup {
                            "kind": "offsetlookup",
                            "offset": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "data_set",
                            },
                            "what": OffsetLookup {
                              "kind": "offsetlookup",
                              "offset": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'expected'",
                                "unicode": false,
                                "value": "expected",
                              },
                              "what": OffsetLookup {
                                "kind": "offsetlookup",
                                "offset": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "case",
                                },
                                "what": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "test_cases",
                                },
                              },
                            },
                          },
                          "operator": "=",
                          "right": OffsetLookup {
                            "kind": "offsetlookup",
                            "offset": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "expected",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "expected_data_sets",
                            },
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "key": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "data_set",
                  },
                  "kind": "foreach",
                  "shortForm": false,
                  "source": OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'expected'",
                      "unicode": false,
                      "value": "expected",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "case_data",
                    },
                  },
                  "value": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "expected",
                  },
                },
              ],
              "kind": "block",
            },
            "key": Variable {
              "curly": false,
              "kind": "variable",
              "name": "case",
            },
            "kind": "foreach",
            "shortForm": false,
            "source": Variable {
              "curly": false,
              "kind": "variable",
              "name": "test_cases",
            },
            "value": Variable {
              "curly": false,
              "kind": "variable",
              "name": "case_data",
            },
          },
          Return {
            "expr": Variable {
              "curly": false,
              "kind": "variable",
              "name": "test_cases",
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "test",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"xxx\\"",
                "unicode": false,
                "value": "xxx",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "test",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
