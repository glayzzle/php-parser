// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests opendir() with 'ftps://' stream. 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "ssl",
        },
        "operator": "=",
        "right": Boolean {
          "kind": "boolean",
          "raw": "true",
          "value": true,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": true,
        "target": Bin {
          "kind": "bin",
          "left": Magic {
            "kind": "magic",
            "raw": "__DIR__",
            "value": "__DIR__",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"/../../../ftp/tests/server.inc\\"",
            "unicode": false,
            "value": "/../../../ftp/tests/server.inc",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "path",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"ftps://127.0.0.1:\\"",
              "unicode": false,
              "value": "ftps://127.0.0.1:",
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "port",
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"/bogusdir\\"",
            "unicode": false,
            "value": "/bogusdir",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "context",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Array {
              "items": Array [
                Entry {
                  "byRef": false,
                  "key": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'ssl'",
                    "unicode": false,
                    "value": "ssl",
                  },
                  "kind": "entry",
                  "unpack": false,
                  "value": Array {
                    "items": Array [
                      Entry {
                        "byRef": false,
                        "key": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'cafile'",
                          "unicode": false,
                          "value": "cafile",
                        },
                        "kind": "entry",
                        "unpack": false,
                        "value": Bin {
                          "kind": "bin",
                          "left": Magic {
                            "kind": "magic",
                            "raw": "__DIR__",
                            "value": "__DIR__",
                          },
                          "right": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'/../../../ftp/tests/cert.pem'",
                            "unicode": false,
                            "value": "/../../../ftp/tests/cert.pem",
                          },
                          "type": ".",
                        },
                      },
                    ],
                    "kind": "array",
                    "shortForm": false,
                  },
                },
              ],
              "kind": "array",
              "shortForm": false,
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "stream_context_create",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "path",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "context",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "opendir",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
