// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test match default breakpoint with static variable assignment 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [],
      "body": Array [
        PropertyStatement {
          "isStatic": true,
          "kind": "propertystatement",
          "properties": Array [
            Property {
              "attrGroups": Array [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "bar",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
            },
          ],
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "Foo",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": StaticLookup {
          "kind": "staticlookup",
          "offset": Variable {
            "curly": false,
            "kind": "variable",
            "name": "bar",
          },
          "what": Name {
            "kind": "name",
            "name": "Foo",
            "resolution": "uqn",
          },
        },
        "operator": "=",
        "right": Match {
          "arms": Array [
            MatchArm {
              "body": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'foo'",
                "unicode": false,
                "value": "foo",
              },
              "conds": Array [
                Number {
                  "kind": "number",
                  "value": "0",
                },
              ],
              "kind": "matcharm",
            },
            MatchArm {
              "body": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'bar'",
                "unicode": false,
                "value": "bar",
              },
              "conds": null,
              "kind": "matcharm",
            },
          ],
          "cond": Number {
            "kind": "number",
            "value": "0",
          },
          "kind": "match",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": StaticLookup {
          "kind": "staticlookup",
          "offset": Variable {
            "curly": false,
            "kind": "variable",
            "name": "bar",
          },
          "what": Name {
            "kind": "name",
            "name": "Foo",
            "resolution": "uqn",
          },
        },
        "operator": "=",
        "right": Match {
          "arms": Array [
            MatchArm {
              "body": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'foo'",
                "unicode": false,
                "value": "foo",
              },
              "conds": Array [
                Number {
                  "kind": "number",
                  "value": "0",
                },
              ],
              "kind": "matcharm",
            },
            MatchArm {
              "body": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'bar'",
                "unicode": false,
                "value": "bar",
              },
              "conds": null,
              "kind": "matcharm",
            },
          ],
          "cond": Number {
            "kind": "number",
            "value": "1",
          },
          "kind": "match",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
