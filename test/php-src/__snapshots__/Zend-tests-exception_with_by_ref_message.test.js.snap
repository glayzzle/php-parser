// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Exception with by-ref message 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [],
      "body": Array [
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": true,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "msg",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": AssignRef {
                  "kind": "assignref",
                  "left": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "message",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "this",
                    },
                  },
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "msg",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "__construct",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
      ],
      "extends": Name {
        "kind": "name",
        "name": "Exception",
        "resolution": "uqn",
      },
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "MyException",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "msg",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'Message'",
          "unicode": false,
          "value": "Message",
        },
      },
      "kind": "expressionstatement",
    },
    Throw {
      "kind": "throw",
      "what": New {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "msg",
          },
        ],
        "kind": "new",
        "what": Name {
          "kind": "name",
          "name": "MyException",
          "resolution": "uqn",
        },
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
