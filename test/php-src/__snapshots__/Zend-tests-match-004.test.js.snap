// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Match expression with true as expression 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "i",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          Return {
            "expr": Match {
              "arms": Array [
                MatchArm {
                  "body": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'50+'",
                    "unicode": false,
                    "value": "50+",
                  },
                  "conds": Array [
                    Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "i",
                      },
                      "right": Number {
                        "kind": "number",
                        "value": "50",
                      },
                      "type": ">=",
                    },
                  ],
                  "kind": "matcharm",
                },
                MatchArm {
                  "body": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'40-50'",
                    "unicode": false,
                    "value": "40-50",
                  },
                  "conds": Array [
                    Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "i",
                      },
                      "right": Number {
                        "kind": "number",
                        "value": "40",
                      },
                      "type": ">=",
                    },
                  ],
                  "kind": "matcharm",
                },
                MatchArm {
                  "body": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'30-40'",
                    "unicode": false,
                    "value": "30-40",
                  },
                  "conds": Array [
                    Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "i",
                      },
                      "right": Number {
                        "kind": "number",
                        "value": "30",
                      },
                      "type": ">=",
                    },
                  ],
                  "kind": "matcharm",
                },
                MatchArm {
                  "body": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'20-30'",
                    "unicode": false,
                    "value": "20-30",
                  },
                  "conds": Array [
                    Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "i",
                      },
                      "right": Number {
                        "kind": "number",
                        "value": "20",
                      },
                      "type": ">=",
                    },
                  ],
                  "kind": "matcharm",
                },
                MatchArm {
                  "body": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'10-20'",
                    "unicode": false,
                    "value": "10-20",
                  },
                  "conds": Array [
                    Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "i",
                      },
                      "right": Number {
                        "kind": "number",
                        "value": "10",
                      },
                      "type": ">=",
                    },
                  ],
                  "kind": "matcharm",
                },
                MatchArm {
                  "body": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'0-10'",
                    "unicode": false,
                    "value": "0-10",
                  },
                  "conds": null,
                  "kind": "matcharm",
                },
              ],
              "cond": Boolean {
                "kind": "boolean",
                "raw": "true",
                "value": true,
              },
              "kind": "match",
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "get_range",
      },
      "nullable": false,
      "type": null,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Number {
                "kind": "number",
                "value": "22",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "get_range",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Number {
                "kind": "number",
                "value": "0",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "get_range",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Number {
                "kind": "number",
                "value": "59",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "get_range",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Number {
                "kind": "number",
                "value": "13",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "get_range",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Number {
                "kind": "number",
                "value": "39",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "get_range",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              Number {
                "kind": "number",
                "value": "40",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "get_range",
              "resolution": "uqn",
            },
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
