// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #81342: New ampersand token parsing depends on new line after it 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "tokens",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'<?php $x & $x; $x &
    $baz;
'",
              "unicode": false,
              "value": "<?php $x & $x; $x &
    $baz;
",
            },
          ],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "tokenize",
            },
            "what": Name {
              "kind": "name",
              "name": "PhpToken",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              Call {
                "arguments": Array [],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "getTokenName",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "token",
                  },
                },
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\n\\"",
                "unicode": false,
                "value": "
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "tokens",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "token",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
