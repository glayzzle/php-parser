// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests jump 02: goto forward 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "n",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "1",
        },
      },
      "kind": "expressionstatement",
    },
    Label {
      "kind": "label",
      "name": Identifier {
        "kind": "identifier",
        "name": "L1",
      },
    },
    If {
      "alternate": null,
      "body": Goto {
        "kind": "goto",
        "label": Identifier {
          "kind": "identifier",
          "name": "L2",
        },
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "n",
        },
        "right": Number {
          "kind": "number",
          "value": "3",
        },
        "type": ">",
      },
    },
    Echo {
      "expressions": Array [
        Encapsed {
          "kind": "encapsed",
          "raw": "\\"$n: ok\\\\n\\"",
          "type": "string",
          "value": Array [
            EncapsedPart {
              "curly": false,
              "expression": Variable {
                "curly": false,
                "kind": "variable",
                "name": "n",
              },
              "kind": "encapsedpart",
              "syntax": "simple",
            },
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": ": ok\\\\n",
                "unicode": false,
                "value": ": ok",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
          ],
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Post {
        "kind": "post",
        "type": "+",
        "what": Variable {
          "curly": false,
          "kind": "variable",
          "name": "n",
        },
      },
      "kind": "expressionstatement",
    },
    Goto {
      "kind": "goto",
      "label": Identifier {
        "kind": "identifier",
        "name": "L1",
      },
    },
    Label {
      "kind": "label",
      "name": Identifier {
        "kind": "identifier",
        "name": "L2",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
