// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests SimpleXML: Entities 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "xml",
        },
        "operator": "=",
        "right": Encapsed {
          "kind": "encapsed",
          "label": "EOF",
          "raw": "<<<EOF
<?xml version='1.0'?>
<!DOCTYPE sxe SYSTEM \\"notfound.dtd\\" [
<!ENTITY included-entity \\"This is text included from an entity\\">
]>
<sxe id=\\"elem1\\">
 Plain text.
 <elem1 attr1='first'>
  <!-- comment -->
  <elem2>
   <elem3>
    &included-entity;
    <elem4>
     <?test processing instruction ?>
    </elem4>
   </elem3>
  </elem2>
 </elem1>
</sxe>
EOF",
          "type": "heredoc",
          "value": Array [
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "<?xml version='1.0'?>
<!DOCTYPE sxe SYSTEM \\"notfound.dtd\\" [
<!ENTITY included-entity \\"This is text included from an entity\\">
]>
<sxe id=\\"elem1\\">
 Plain text.
 <elem1 attr1='first'>
  <!-- comment -->
  <elem2>
   <elem3>
    &included-entity;
    <elem4>
     <?test processing instruction ?>
    </elem4>
   </elem3>
  </elem2>
 </elem1>
</sxe>
",
                "unicode": false,
                "value": "<?xml version='1.0'?>
<!DOCTYPE sxe SYSTEM \\"notfound.dtd\\" [
<!ENTITY included-entity \\"This is text included from an entity\\">
]>
<sxe id=\\"elem1\\">
 Plain text.
 <elem1 attr1='first'>
  <!-- comment -->
  <elem2>
   <elem3>
    &included-entity;
    <elem4>
     <?test processing instruction ?>
    </elem4>
   </elem3>
  </elem2>
 </elem1>
</sxe>",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
          ],
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "xml",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "simplexml_load_string",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
