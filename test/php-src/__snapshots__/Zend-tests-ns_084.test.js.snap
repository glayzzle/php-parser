// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests 084: unbracketed namespace with nested bracketed namespace 1`] = `
Program {
  "children": Array [
    Namespace {
      "children": Array [
        UseGroup {
          "items": Array [
            UseItem {
              "alias": null,
              "kind": "useitem",
              "name": "\\\\foo",
              "type": null,
            },
          ],
          "kind": "usegroup",
          "name": null,
          "type": null,
        },
        Class {
          "attrGroups": Array [],
          "body": Array [
            Method {
              "arguments": Array [],
              "attrGroups": Array [],
              "body": Block {
                "children": Array [
                  Echo {
                    "expressions": Array [
                      Magic {
                        "kind": "magic",
                        "raw": "__METHOD__",
                        "value": "__METHOD__",
                      },
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"\\\\n\\"",
                        "unicode": false,
                        "value": "
",
                      },
                    ],
                    "kind": "echo",
                    "shortForm": false,
                  },
                ],
                "kind": "block",
              },
              "byref": false,
              "isAbstract": false,
              "isFinal": false,
              "isStatic": false,
              "kind": "method",
              "name": Identifier {
                "kind": "identifier",
                "name": "__construct",
              },
              "nullable": false,
              "type": null,
              "visibility": "",
            },
          ],
          "extends": null,
          "implements": null,
          "isAbstract": false,
          "isAnonymous": false,
          "isFinal": false,
          "kind": "class",
          "name": Identifier {
            "kind": "identifier",
            "name": "bar",
          },
        },
        ExpressionStatement {
          "expression": New {
            "arguments": Array [],
            "kind": "new",
            "what": Name {
              "kind": "name",
              "name": "foo",
              "resolution": "uqn",
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": New {
            "arguments": Array [],
            "kind": "new",
            "what": Name {
              "kind": "name",
              "name": "bar",
              "resolution": "uqn",
            },
          },
          "kind": "expressionstatement",
        },
        Namespace {
          "children": Array [
            Class {
              "attrGroups": Array [],
              "body": Array [
                Method {
                  "arguments": Array [],
                  "attrGroups": Array [],
                  "body": Block {
                    "children": Array [
                      Echo {
                        "expressions": Array [
                          Magic {
                            "kind": "magic",
                            "raw": "__METHOD__",
                            "value": "__METHOD__",
                          },
                          String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"\\\\n\\"",
                            "unicode": false,
                            "value": "
",
                          },
                        ],
                        "kind": "echo",
                        "shortForm": false,
                      },
                    ],
                    "kind": "block",
                  },
                  "byref": false,
                  "isAbstract": false,
                  "isFinal": false,
                  "isStatic": false,
                  "kind": "method",
                  "name": Identifier {
                    "kind": "identifier",
                    "name": "__construct",
                  },
                  "nullable": false,
                  "type": null,
                  "visibility": "",
                },
              ],
              "extends": null,
              "implements": null,
              "isAbstract": false,
              "isAnonymous": false,
              "isFinal": false,
              "kind": "class",
              "name": Identifier {
                "kind": "identifier",
                "name": "foo",
              },
            },
            UseGroup {
              "items": Array [
                UseItem {
                  "alias": Identifier {
                    "kind": "identifier",
                    "name": "foo1",
                  },
                  "kind": "useitem",
                  "name": "foo\\\\bar",
                  "type": null,
                },
              ],
              "kind": "usegroup",
              "name": null,
              "type": null,
            },
            ExpressionStatement {
              "expression": New {
                "arguments": Array [],
                "kind": "new",
                "what": Name {
                  "kind": "name",
                  "name": "foo1",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            ExpressionStatement {
              "expression": New {
                "arguments": Array [],
                "kind": "new",
                "what": Name {
                  "kind": "name",
                  "name": "foo",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
          ],
          "kind": "namespace",
          "name": "oops",
          "withBrackets": true,
        },
        Inline {
          "kind": "inline",
          "raw": "
===DONE===",
          "value": "===DONE===",
        },
      ],
      "kind": "namespace",
      "name": "foo",
      "withBrackets": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
