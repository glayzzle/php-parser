// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests htmlentities() / htmlspecialchars() ENT_DISALLOWED with entities and no double encode 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "tests",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"&#0;\\"",
                "unicode": false,
                "value": "&#0;",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"&#1;\\"",
                "unicode": false,
                "value": "&#1;",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"&#x09;\\"",
                "unicode": false,
                "value": "&#x09;",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"&#x0A;\\"",
                "unicode": false,
                "value": "&#x0A;",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"&#x0B;\\"",
                "unicode": false,
                "value": "&#x0B;",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"&#x0C;\\"",
                "unicode": false,
                "value": "&#x0C;",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"&#x0D;\\"",
                "unicode": false,
                "value": "&#x0D;",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"&#x0E;\\"",
                "unicode": false,
                "value": "&#x0E;",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"&#x1F;\\"",
                "unicode": false,
                "value": "&#x1F;",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"&#x20;\\"",
                "unicode": false,
                "value": "&#x20;",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"&#x7F;\\"",
                "unicode": false,
                "value": "&#x7F;",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"&#x80;\\"",
                "unicode": false,
                "value": "&#x80;",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"&#x9F;\\"",
                "unicode": false,
                "value": "&#x9F;",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"&#xA0;\\"",
                "unicode": false,
                "value": "&#xA0;",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"&#xD7FF;\\"",
                "unicode": false,
                "value": "&#xD7FF;",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"&#xD800;\\"",
                "unicode": false,
                "value": "&#xD800;",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"&#xDFFF;\\"",
                "unicode": false,
                "value": "&#xDFFF;",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"&#xE000;\\"",
                "unicode": false,
                "value": "&#xE000;",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"&#xFFFE;\\"",
                "unicode": false,
                "value": "&#xFFFE;",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"&#xFFFF;\\"",
                "unicode": false,
                "value": "&#xFFFF;",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"&#xFDCF;\\"",
                "unicode": false,
                "value": "&#xFDCF;",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"&#xFDD0;\\"",
                "unicode": false,
                "value": "&#xFDD0;",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"&#xFDEF;\\"",
                "unicode": false,
                "value": "&#xFDEF;",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"&#xFDF0;\\"",
                "unicode": false,
                "value": "&#xFDF0;",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"&#x2FFFE;\\"",
                "unicode": false,
                "value": "&#x2FFFE;",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"&#x2FFFF;\\"",
                "unicode": false,
                "value": "&#x2FFFF;",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"&#x110000;\\"",
                "unicode": false,
                "value": "&#x110000;",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "flag",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "flag2",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": Name {
            "kind": "name",
            "name": "ENT_DISALLOWED",
            "resolution": "uqn",
          },
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "charset",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"UTF-8\\"",
            "unicode": false,
            "value": "UTF-8",
          },
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          Global {
            "items": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "tests",
              },
            ],
            "kind": "global",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "i",
              },
              "operator": "=",
              "right": Unary {
                "kind": "unary",
                "type": "-",
                "what": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
            },
            "kind": "expressionstatement",
          },
          Foreach {
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Post {
                    "kind": "post",
                    "type": "+",
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "i",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "a",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "test",
                        },
                        Bin {
                          "kind": "bin",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "flag",
                          },
                          "right": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "flag2",
                          },
                          "type": "|",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "charset",
                        },
                        Boolean {
                          "kind": "boolean",
                          "raw": "FALSE",
                          "value": false,
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "htmlentities",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "b",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "test",
                        },
                        Bin {
                          "kind": "bin",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "flag",
                          },
                          "right": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "flag2",
                          },
                          "type": "|",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "charset",
                        },
                        Boolean {
                          "kind": "boolean",
                          "raw": "FALSE",
                          "value": false,
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "htmlspecialchars",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                If {
                  "alternate": Echo {
                    "expressions": Array [
                      Call {
                        "arguments": Array [
                          String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"%s\\\\tCHANGED (%s, %s)\\"",
                            "unicode": false,
                            "value": "%s	CHANGED (%s, %s)",
                          },
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "test",
                          },
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "a",
                          },
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "b",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "sprintf",
                          "resolution": "uqn",
                        },
                      },
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"\\\\n\\"",
                        "unicode": false,
                        "value": "
",
                      },
                    ],
                    "kind": "echo",
                    "shortForm": false,
                  },
                  "body": Echo {
                    "expressions": Array [
                      Call {
                        "arguments": Array [
                          String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"%s\\\\t%s\\"",
                            "unicode": false,
                            "value": "%s	%s",
                          },
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "test",
                          },
                          RetIf {
                            "falseExpr": String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"CHANGED\\"",
                              "unicode": false,
                              "value": "CHANGED",
                            },
                            "kind": "retif",
                            "test": Bin {
                              "kind": "bin",
                              "left": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "a",
                              },
                              "right": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "test",
                              },
                              "type": "==",
                            },
                            "trueExpr": String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"NOT CHANGED\\"",
                              "unicode": false,
                              "value": "NOT CHANGED",
                            },
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "sprintf",
                          "resolution": "uqn",
                        },
                      },
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"\\\\n\\"",
                        "unicode": false,
                        "value": "
",
                      },
                    ],
                    "kind": "echo",
                    "shortForm": false,
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "a",
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "b",
                    },
                    "type": "==",
                  },
                },
              ],
              "kind": "block",
            },
            "key": null,
            "kind": "foreach",
            "shortForm": false,
            "source": Variable {
              "curly": false,
              "kind": "variable",
              "name": "tests",
            },
            "value": Variable {
              "curly": false,
              "kind": "variable",
              "name": "test",
            },
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "test",
      },
      "nullable": false,
      "type": null,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"*** Testing HTML 4.01 ***\\\\n\\"",
          "unicode": false,
          "value": "*** Testing HTML 4.01 ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Name {
            "kind": "name",
            "name": "ENT_HTML401",
            "resolution": "uqn",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n*** Testing XHTML 1.0 ***\\\\n\\"",
          "unicode": false,
          "value": "
*** Testing XHTML 1.0 ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Name {
            "kind": "name",
            "name": "ENT_XHTML",
            "resolution": "uqn",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n*** Testing HTML 5 ***\\\\n\\"",
          "unicode": false,
          "value": "
*** Testing HTML 5 ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Name {
            "kind": "name",
            "name": "ENT_HTML5",
            "resolution": "uqn",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n*** Testing XML 1.0 ***\\\\n\\"",
          "unicode": false,
          "value": "
*** Testing XML 1.0 ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Name {
            "kind": "name",
            "name": "ENT_XML1",
            "resolution": "uqn",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n*** Testing 5 without the flag ***\\\\n\\"",
          "unicode": false,
          "value": "
*** Testing 5 without the flag ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Name {
            "kind": "name",
            "name": "ENT_HTML5",
            "resolution": "uqn",
          },
          Number {
            "kind": "number",
            "value": "0",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n*** Testing HTML 5 with another single-byte encoding ***\\\\n\\"",
          "unicode": false,
          "value": "
*** Testing HTML 5 with another single-byte encoding ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Name {
            "kind": "name",
            "name": "ENT_HTML5",
            "resolution": "uqn",
          },
          Name {
            "kind": "name",
            "name": "ENT_DISALLOWED",
            "resolution": "uqn",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"Windows-1251\\"",
            "unicode": false,
            "value": "Windows-1251",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n*** Testing HTML 5 with another multibyte-byte encoding ***\\\\n\\"",
          "unicode": false,
          "value": "
*** Testing HTML 5 with another multibyte-byte encoding ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Name {
            "kind": "name",
            "name": "ENT_HTML5",
            "resolution": "uqn",
          },
          Name {
            "kind": "name",
            "name": "ENT_DISALLOWED",
            "resolution": "uqn",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"SJIS\\"",
            "unicode": false,
            "value": "SJIS",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
