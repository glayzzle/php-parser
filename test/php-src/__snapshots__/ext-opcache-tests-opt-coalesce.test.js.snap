// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests COALESCE optimization 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test",
              },
              "operator": "=",
              "right": Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "test",
                },
                "right": Boolean {
                  "kind": "boolean",
                  "raw": "true",
                  "value": true,
                },
                "type": "??",
              },
            },
            "kind": "expressionstatement",
          },
          Return {
            "expr": Variable {
              "curly": false,
              "kind": "variable",
              "name": "test",
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "a",
      },
      "nullable": false,
      "type": null,
    },
    _Function {
      "arguments": Array [],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "test",
              },
              "operator": "??=",
              "right": Boolean {
                "kind": "boolean",
                "raw": "true",
                "value": true,
              },
            },
            "kind": "expressionstatement",
          },
          Return {
            "expr": Variable {
              "curly": false,
              "kind": "variable",
              "name": "test",
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "b",
      },
      "nullable": false,
      "type": null,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
