// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests ?: operator 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          RetIf {
            "falseExpr": Boolean {
              "kind": "boolean",
              "raw": "false",
              "value": false,
            },
            "kind": "retif",
            "test": Boolean {
              "kind": "boolean",
              "raw": "true",
              "value": true,
            },
            "trueExpr": null,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          RetIf {
            "falseExpr": Boolean {
              "kind": "boolean",
              "raw": "true",
              "value": true,
            },
            "kind": "retif",
            "test": Boolean {
              "kind": "boolean",
              "raw": "false",
              "value": false,
            },
            "trueExpr": null,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          RetIf {
            "falseExpr": Number {
              "kind": "number",
              "value": "42",
            },
            "kind": "retif",
            "test": Number {
              "kind": "number",
              "value": "23",
            },
            "trueExpr": null,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          RetIf {
            "falseExpr": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"bar\\"",
              "unicode": false,
              "value": "bar",
            },
            "kind": "retif",
            "test": Number {
              "kind": "number",
              "value": "0",
            },
            "trueExpr": null,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "23",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "b",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "0",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "c",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\"",
          "unicode": false,
          "value": "",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "d",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "23.5",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          RetIf {
            "falseExpr": Variable {
              "curly": false,
              "kind": "variable",
              "name": "b",
            },
            "kind": "retif",
            "test": Variable {
              "curly": false,
              "kind": "variable",
              "name": "a",
            },
            "trueExpr": null,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          RetIf {
            "falseExpr": Variable {
              "curly": false,
              "kind": "variable",
              "name": "d",
            },
            "kind": "retif",
            "test": Variable {
              "curly": false,
              "kind": "variable",
              "name": "c",
            },
            "trueExpr": null,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          RetIf {
            "falseExpr": Print {
              "expression": Number {
                "kind": "number",
                "parenthesizedExpression": true,
                "value": "2",
              },
              "kind": "print",
            },
            "kind": "retif",
            "test": Number {
              "kind": "number",
              "value": "1",
            },
            "trueExpr": null,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "e",
        },
        "operator": "=",
        "right": Array {
          "items": Array [],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'e'",
            "unicode": false,
            "value": "e",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'e'",
          "unicode": false,
          "value": "e",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'e'",
            "unicode": false,
            "value": "e",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
        },
        "operator": "=",
        "right": RetIf {
          "falseExpr": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'e'",
            "unicode": false,
            "value": "e",
          },
          "kind": "retif",
          "test": OffsetLookup {
            "kind": "offsetlookup",
            "offset": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'e'",
              "unicode": false,
              "value": "e",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "e",
            },
          },
          "trueExpr": null,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "print_r",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
