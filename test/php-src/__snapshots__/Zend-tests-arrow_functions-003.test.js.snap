// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Variable-variables inside arrow functions 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "1",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "var",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"a\\"",
          "unicode": false,
          "value": "a",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "fn",
        },
        "operator": "=",
        "right": Closure {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Variable {
            "curly": false,
            "kind": "variable",
            "name": Variable {
              "curly": false,
              "kind": "variable",
              "name": "var",
            },
          },
          "byref": false,
          "isStatic": false,
          "kind": "arrowfunc",
          "nullable": false,
          "type": null,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "fn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": true,
          "kind": "variable",
          "name": Number {
            "kind": "number",
            "value": "5",
          },
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "2",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "fn",
        },
        "operator": "=",
        "right": Closure {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Variable {
            "curly": true,
            "kind": "variable",
            "name": Number {
              "kind": "number",
              "value": "5",
            },
          },
          "byref": false,
          "isStatic": false,
          "kind": "arrowfunc",
          "nullable": false,
          "type": null,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "fn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
