// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Request #50698_3 (SoapClient should handle wsdls with some incompatible endpoints -- EDGECASE: Large set of endpoints all incompatible.) 1`] = `
Program {
  "children": Array [
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": New {
              "arguments": Array [
                Bin {
                  "kind": "bin",
                  "left": Magic {
                    "kind": "magic",
                    "raw": "__DIR__",
                    "value": "__DIR__",
                  },
                  "right": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'/bug50698_3.wsdl'",
                    "unicode": false,
                    "value": "/bug50698_3.wsdl",
                  },
                  "type": ".",
                },
              ],
              "kind": "new",
              "what": Name {
                "kind": "name",
                "name": "SoapClient",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Call: \\\\\\"new SoapClient(__DIR__.'/bug50698_3.wsdl');\\\\\\" should throw an exception of type 'SoapFault'\\"",
                "unicode": false,
                "value": "Call: \\"new SoapClient(__DIR__.'/bug50698_3.wsdl');\\\\\\" should throw an exception of type 'SoapFault'",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              If {
                "alternate": Block {
                  "children": Array [
                    Echo {
                      "expressions": Array [
                        String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"Call: \\\\\\"new SoapClient(__DIR__.'/bug50698_3.wsdl');\\\\\\" threw a SoapFault with an incorrect faultcode or faultmessage.\\"",
                          "unicode": false,
                          "value": "Call: \\"new SoapClient(__DIR__.'/bug50698_3.wsdl');\\\\\\" threw a SoapFault with an incorrect faultcode or faultmessage.",
                        },
                      ],
                      "kind": "echo",
                      "shortForm": false,
                    },
                    ExpressionStatement {
                      "expression": Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "e",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "print_r",
                          "resolution": "uqn",
                        },
                      },
                      "kind": "expressionstatement",
                    },
                  ],
                  "kind": "block",
                },
                "body": Block {
                  "children": Array [
                    Echo {
                      "expressions": Array [
                        String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"ok\\\\n\\"",
                          "unicode": false,
                          "value": "ok
",
                        },
                      ],
                      "kind": "echo",
                      "shortForm": false,
                    },
                  ],
                  "kind": "block",
                },
                "kind": "if",
                "shortForm": false,
                "test": Bin {
                  "kind": "bin",
                  "left": Bin {
                    "kind": "bin",
                    "left": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "faultcode",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "e",
                      },
                    },
                    "right": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'WSDL'",
                      "unicode": false,
                      "value": "WSDL",
                    },
                    "type": "==",
                  },
                  "right": Bin {
                    "kind": "bin",
                    "left": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "faultstring",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "e",
                      },
                    },
                    "right": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'SOAP-ERROR: Parsing WSDL: Could not find any usable binding services in WSDL.'",
                      "unicode": false,
                      "value": "SOAP-ERROR: Parsing WSDL: Could not find any usable binding services in WSDL.",
                    },
                    "type": "==",
                  },
                  "type": "&&",
                },
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "SoapFault",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
