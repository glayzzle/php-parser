// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests FFI Double linked lists 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [],
      "body": Array [
        PropertyStatement {
          "isStatic": true,
          "kind": "propertystatement",
          "properties": Array [
            Property {
              "attrGroups": Array [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "ffi",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": NullKeyword {
                "kind": "nullkeyword",
                "raw": "null",
              },
            },
          ],
          "visibility": "private",
        },
        PropertyStatement {
          "isStatic": false,
          "kind": "propertystatement",
          "properties": Array [
            Property {
              "attrGroups": Array [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "root",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
            },
          ],
          "visibility": "private",
        },
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              If {
                "alternate": null,
                "body": Block {
                  "children": Array [
                    ExpressionStatement {
                      "expression": Assign {
                        "kind": "assign",
                        "left": StaticLookup {
                          "kind": "staticlookup",
                          "offset": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "ffi",
                          },
                          "what": SelfReference {
                            "kind": "selfreference",
                            "raw": "self",
                          },
                        },
                        "operator": "=",
                        "right": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"
                    typedef struct _dlist dlist;
                    struct _dlist {
                        int data;
                        dlist *prev;
                        dlist *next;
                    };
                \\"",
                              "unicode": false,
                              "value": "
                    typedef struct _dlist dlist;
                    struct _dlist {
                        int data;
                        dlist *prev;
                        dlist *next;
                    };
                ",
                            },
                          ],
                          "kind": "call",
                          "what": StaticLookup {
                            "kind": "staticlookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "cdef",
                            },
                            "what": Name {
                              "kind": "name",
                              "name": "FFI",
                              "resolution": "uqn",
                            },
                          },
                        },
                      },
                      "kind": "expressionstatement",
                    },
                  ],
                  "kind": "block",
                },
                "kind": "if",
                "shortForm": false,
                "test": Call {
                  "arguments": Array [
                    StaticLookup {
                      "kind": "staticlookup",
                      "offset": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "ffi",
                      },
                      "what": SelfReference {
                        "kind": "selfreference",
                        "raw": "self",
                      },
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "is_null",
                    "resolution": "uqn",
                  },
                },
              },
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "node",
                  },
                  "operator": "=",
                  "right": Call {
                    "arguments": Array [
                      Call {
                        "arguments": Array [
                          String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"dlist\\"",
                            "unicode": false,
                            "value": "dlist",
                          },
                          Boolean {
                            "kind": "boolean",
                            "raw": "false",
                            "value": false,
                          },
                        ],
                        "kind": "call",
                        "what": PropertyLookup {
                          "kind": "propertylookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "new",
                          },
                          "what": StaticLookup {
                            "kind": "staticlookup",
                            "offset": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "ffi",
                            },
                            "what": SelfReference {
                              "kind": "selfreference",
                              "raw": "self",
                            },
                          },
                        },
                      },
                    ],
                    "kind": "call",
                    "what": StaticLookup {
                      "kind": "staticlookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "addr",
                      },
                      "what": Name {
                        "kind": "name",
                        "name": "FFI",
                        "resolution": "uqn",
                      },
                    },
                  },
                },
                "kind": "expressionstatement",
              },
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "data",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "node",
                    },
                  },
                  "operator": "=",
                  "right": Number {
                    "kind": "number",
                    "value": "0",
                  },
                },
                "kind": "expressionstatement",
              },
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "next",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "node",
                    },
                  },
                  "operator": "=",
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "node",
                  },
                },
                "kind": "expressionstatement",
              },
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "prev",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "node",
                    },
                  },
                  "operator": "=",
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "node",
                  },
                },
                "kind": "expressionstatement",
              },
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "root",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "this",
                    },
                  },
                  "operator": "=",
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "node",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "__construct",
          },
          "nullable": false,
          "type": null,
          "visibility": "",
        },
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "root",
                  },
                  "operator": "=",
                  "right": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "root",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "this",
                    },
                  },
                },
                "kind": "expressionstatement",
              },
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "node",
                  },
                  "operator": "=",
                  "right": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "next",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "root",
                    },
                  },
                },
                "kind": "expressionstatement",
              },
              While {
                "body": Block {
                  "children": Array [
                    ExpressionStatement {
                      "expression": Assign {
                        "kind": "assign",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "prev",
                        },
                        "operator": "=",
                        "right": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "node",
                        },
                      },
                      "kind": "expressionstatement",
                    },
                    ExpressionStatement {
                      "expression": Assign {
                        "kind": "assign",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "node",
                        },
                        "operator": "=",
                        "right": PropertyLookup {
                          "kind": "propertylookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "next",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "node",
                          },
                        },
                      },
                      "kind": "expressionstatement",
                    },
                    ExpressionStatement {
                      "expression": Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "prev",
                          },
                        ],
                        "kind": "call",
                        "what": StaticLookup {
                          "kind": "staticlookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "free",
                          },
                          "what": Name {
                            "kind": "name",
                            "name": "FFI",
                            "resolution": "uqn",
                          },
                        },
                      },
                      "kind": "expressionstatement",
                    },
                  ],
                  "kind": "block",
                },
                "kind": "while",
                "shortForm": false,
                "test": Bin {
                  "kind": "bin",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "node",
                  },
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "root",
                  },
                  "type": "!=",
                },
              },
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "root",
                    },
                  ],
                  "kind": "call",
                  "what": StaticLookup {
                    "kind": "staticlookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "free",
                    },
                    "what": Name {
                      "kind": "name",
                      "name": "FFI",
                      "resolution": "uqn",
                    },
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "__destruct",
          },
          "nullable": false,
          "type": null,
          "visibility": "",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "data",
              },
              "nullable": false,
              "readonly": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "int",
                "raw": "int",
              },
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "node",
                  },
                  "operator": "=",
                  "right": Call {
                    "arguments": Array [
                      Call {
                        "arguments": Array [
                          String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"dlist\\"",
                            "unicode": false,
                            "value": "dlist",
                          },
                          Boolean {
                            "kind": "boolean",
                            "raw": "false",
                            "value": false,
                          },
                        ],
                        "kind": "call",
                        "what": PropertyLookup {
                          "kind": "propertylookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "new",
                          },
                          "what": StaticLookup {
                            "kind": "staticlookup",
                            "offset": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "ffi",
                            },
                            "what": SelfReference {
                              "kind": "selfreference",
                              "raw": "self",
                            },
                          },
                        },
                      },
                    ],
                    "kind": "call",
                    "what": StaticLookup {
                      "kind": "staticlookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "addr",
                      },
                      "what": Name {
                        "kind": "name",
                        "name": "FFI",
                        "resolution": "uqn",
                      },
                    },
                  },
                },
                "kind": "expressionstatement",
              },
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "data",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "node",
                    },
                  },
                  "operator": "=",
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "data",
                  },
                },
                "kind": "expressionstatement",
              },
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "next",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "node",
                    },
                  },
                  "operator": "=",
                  "right": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "root",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "this",
                    },
                  },
                },
                "kind": "expressionstatement",
              },
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "prev",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "node",
                    },
                  },
                  "operator": "=",
                  "right": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "prev",
                    },
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "root",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "this",
                      },
                    },
                  },
                },
                "kind": "expressionstatement",
              },
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "next",
                    },
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "prev",
                      },
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "root",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "this",
                        },
                      },
                    },
                  },
                  "operator": "=",
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "node",
                  },
                },
                "kind": "expressionstatement",
              },
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "prev",
                    },
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "root",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "this",
                      },
                    },
                  },
                  "operator": "=",
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "node",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "add",
          },
          "nullable": false,
          "type": null,
          "visibility": "",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "data",
              },
              "nullable": false,
              "readonly": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "int",
                "raw": "int",
              },
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "root",
                  },
                  "operator": "=",
                  "right": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "root",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "this",
                    },
                  },
                },
                "kind": "expressionstatement",
              },
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "node",
                  },
                  "operator": "=",
                  "right": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "next",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "root",
                    },
                  },
                },
                "kind": "expressionstatement",
              },
              While {
                "body": Block {
                  "children": Array [
                    If {
                      "alternate": null,
                      "body": Block {
                        "children": Array [
                          ExpressionStatement {
                            "expression": Assign {
                              "kind": "assign",
                              "left": PropertyLookup {
                                "kind": "propertylookup",
                                "offset": Identifier {
                                  "kind": "identifier",
                                  "name": "next",
                                },
                                "what": PropertyLookup {
                                  "kind": "propertylookup",
                                  "offset": Identifier {
                                    "kind": "identifier",
                                    "name": "prev",
                                  },
                                  "what": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "node",
                                  },
                                },
                              },
                              "operator": "=",
                              "right": PropertyLookup {
                                "kind": "propertylookup",
                                "offset": Identifier {
                                  "kind": "identifier",
                                  "name": "next",
                                },
                                "what": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "node",
                                },
                              },
                            },
                            "kind": "expressionstatement",
                          },
                          ExpressionStatement {
                            "expression": Assign {
                              "kind": "assign",
                              "left": PropertyLookup {
                                "kind": "propertylookup",
                                "offset": Identifier {
                                  "kind": "identifier",
                                  "name": "prev",
                                },
                                "what": PropertyLookup {
                                  "kind": "propertylookup",
                                  "offset": Identifier {
                                    "kind": "identifier",
                                    "name": "next",
                                  },
                                  "what": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "node",
                                  },
                                },
                              },
                              "operator": "=",
                              "right": PropertyLookup {
                                "kind": "propertylookup",
                                "offset": Identifier {
                                  "kind": "identifier",
                                  "name": "prev",
                                },
                                "what": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "node",
                                },
                              },
                            },
                            "kind": "expressionstatement",
                          },
                          ExpressionStatement {
                            "expression": Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "node",
                                },
                              ],
                              "kind": "call",
                              "what": StaticLookup {
                                "kind": "staticlookup",
                                "offset": Identifier {
                                  "kind": "identifier",
                                  "name": "free",
                                },
                                "what": Name {
                                  "kind": "name",
                                  "name": "FFI",
                                  "resolution": "uqn",
                                },
                              },
                            },
                            "kind": "expressionstatement",
                          },
                          Break {
                            "kind": "break",
                            "level": null,
                          },
                        ],
                        "kind": "block",
                      },
                      "kind": "if",
                      "shortForm": false,
                      "test": Bin {
                        "kind": "bin",
                        "left": PropertyLookup {
                          "kind": "propertylookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "data",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "node",
                          },
                        },
                        "right": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "data",
                        },
                        "type": "==",
                      },
                    },
                    ExpressionStatement {
                      "expression": Assign {
                        "kind": "assign",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "node",
                        },
                        "operator": "=",
                        "right": PropertyLookup {
                          "kind": "propertylookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "next",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "node",
                          },
                        },
                      },
                      "kind": "expressionstatement",
                    },
                  ],
                  "kind": "block",
                },
                "kind": "while",
                "shortForm": false,
                "test": Bin {
                  "kind": "bin",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "node",
                  },
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "root",
                  },
                  "type": "!=",
                },
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "del",
          },
          "nullable": false,
          "type": null,
          "visibility": "",
        },
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[\\"",
                    "unicode": false,
                    "value": "[",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "first",
                  },
                  "operator": "=",
                  "right": Boolean {
                    "kind": "boolean",
                    "raw": "true",
                    "value": true,
                  },
                },
                "kind": "expressionstatement",
              },
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "root",
                  },
                  "operator": "=",
                  "right": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "root",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "this",
                    },
                  },
                },
                "kind": "expressionstatement",
              },
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "node",
                  },
                  "operator": "=",
                  "right": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "next",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "root",
                    },
                  },
                },
                "kind": "expressionstatement",
              },
              While {
                "body": Block {
                  "children": Array [
                    If {
                      "alternate": Block {
                        "children": Array [
                          ExpressionStatement {
                            "expression": Assign {
                              "kind": "assign",
                              "left": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "first",
                              },
                              "operator": "=",
                              "right": Boolean {
                                "kind": "boolean",
                                "raw": "false",
                                "value": false,
                              },
                            },
                            "kind": "expressionstatement",
                          },
                        ],
                        "kind": "block",
                      },
                      "body": Block {
                        "children": Array [
                          Echo {
                            "expressions": Array [
                              String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\", \\"",
                                "unicode": false,
                                "value": ", ",
                              },
                            ],
                            "kind": "echo",
                            "shortForm": false,
                          },
                        ],
                        "kind": "block",
                      },
                      "kind": "if",
                      "shortForm": false,
                      "test": Unary {
                        "kind": "unary",
                        "type": "!",
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "first",
                        },
                      },
                    },
                    Echo {
                      "expressions": Array [
                        PropertyLookup {
                          "kind": "propertylookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "data",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "node",
                          },
                        },
                      ],
                      "kind": "echo",
                      "shortForm": false,
                    },
                    ExpressionStatement {
                      "expression": Assign {
                        "kind": "assign",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "node",
                        },
                        "operator": "=",
                        "right": PropertyLookup {
                          "kind": "propertylookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "next",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "node",
                          },
                        },
                      },
                      "kind": "expressionstatement",
                    },
                  ],
                  "kind": "block",
                },
                "kind": "while",
                "shortForm": false,
                "test": Bin {
                  "kind": "bin",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "node",
                  },
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "root",
                  },
                  "type": "!=",
                },
              },
              Echo {
                "expressions": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"]\\\\n\\"",
                    "unicode": false,
                    "value": "]
",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "print",
          },
          "nullable": false,
          "type": null,
          "visibility": "",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "DList",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "dlist",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "Dlist",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "1",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "add",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "dlist",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "3",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "add",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "dlist",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "5",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "add",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "dlist",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "print",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "dlist",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "3",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "del",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "dlist",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "print",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "dlist",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"OK\\\\n\\"",
          "unicode": false,
          "value": "OK
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
