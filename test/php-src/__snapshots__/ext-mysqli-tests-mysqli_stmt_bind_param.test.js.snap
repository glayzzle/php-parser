// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests mysqli_stmt_bind_param() 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": true,
        "target": String {
          "isDoubleQuote": true,
          "kind": "string",
          "parenthesizedExpression": true,
          "raw": "\\"connect.inc\\"",
          "unicode": false,
          "value": "connect.inc",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": true,
        "target": String {
          "isDoubleQuote": false,
          "kind": "string",
          "parenthesizedExpression": true,
          "raw": "'table.inc'",
          "unicode": false,
          "value": "table.inc",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "stmt",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "link",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_stmt_init",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[003] [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[003] [%d] %s
",
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "stmt",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"INSERT INTO test(id, label) VALUES (?, ?)\\"",
              "unicode": false,
              "value": "INSERT INTO test(id, label) VALUES (?, ?)",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_stmt_prepare",
            "resolution": "uqn",
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "id",
        },
        "operator": "=",
        "right": NullKeyword {
          "kind": "nullkeyword",
          "raw": "null",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "label",
        },
        "operator": "=",
        "right": NullKeyword {
          "kind": "nullkeyword",
          "raw": "null",
        },
      },
      "kind": "expressionstatement",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[003d] Expecting boolean/false, got %s/%s\\\\n\\"",
                    "unicode": false,
                    "value": "[003d] Expecting boolean/false, got %s/%s
",
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "tmp",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "gettype",
                      "resolution": "uqn",
                    },
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "tmp",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Unary {
                "kind": "unary",
                "type": "!",
                "what": Boolean {
                  "kind": "boolean",
                  "raw": "false",
                  "value": false,
                },
              },
              "right": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "tmp",
                },
                "operator": "=",
                "parenthesizedExpression": true,
                "right": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "stmt",
                    },
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\" \\"",
                      "unicode": false,
                      "value": " ",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "tmp",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_stmt_bind_param",
                    "resolution": "uqn",
                  },
                },
              },
              "type": "===",
            },
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getMessage",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "e",
                        },
                      },
                    },
                    "right": Name {
                      "kind": "name",
                      "name": "\\\\PHP_EOL",
                      "resolution": "fqn",
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "\\\\ArgumentCountError",
              "resolution": "fqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[003a] Expecting boolean/false, got %s/%s\\\\n\\"",
                    "unicode": false,
                    "value": "[003a] Expecting boolean/false, got %s/%s
",
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "tmp",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "gettype",
                      "resolution": "uqn",
                    },
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "tmp",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Unary {
                "kind": "unary",
                "type": "!",
                "what": Boolean {
                  "kind": "boolean",
                  "raw": "false",
                  "value": false,
                },
              },
              "right": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "tmp",
                },
                "operator": "=",
                "parenthesizedExpression": true,
                "right": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "stmt",
                    },
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"\\"",
                      "unicode": false,
                      "value": "",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "id",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "label",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_stmt_bind_param",
                    "resolution": "uqn",
                  },
                },
              },
              "type": "===",
            },
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getMessage",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "e",
                        },
                      },
                    },
                    "right": Name {
                      "kind": "name",
                      "name": "\\\\PHP_EOL",
                      "resolution": "fqn",
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "\\\\ValueError",
              "resolution": "fqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "param",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "name": "id",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[003b] Expecting boolean/false, got %s/%s\\\\n\\"",
                    "unicode": false,
                    "value": "[003b] Expecting boolean/false, got %s/%s
",
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "tmp",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "gettype",
                      "resolution": "uqn",
                    },
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "tmp",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Unary {
                "kind": "unary",
                "type": "!",
                "what": Boolean {
                  "kind": "boolean",
                  "raw": "false",
                  "value": false,
                },
              },
              "right": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "tmp",
                },
                "operator": "=",
                "parenthesizedExpression": true,
                "right": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "stmt",
                    },
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"is\\"",
                      "unicode": false,
                      "value": "is",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "param",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_stmt_bind_param",
                    "resolution": "uqn",
                  },
                },
              },
              "type": "===",
            },
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getMessage",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "e",
                        },
                      },
                    },
                    "right": Name {
                      "kind": "name",
                      "name": "\\\\PHP_EOL",
                      "resolution": "fqn",
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "\\\\ArgumentCountError",
              "resolution": "fqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "param",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "name": "id",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "name": "label",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "name": "id",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[003d] Expecting boolean/false, got %s/%s\\\\n\\"",
                    "unicode": false,
                    "value": "[003d] Expecting boolean/false, got %s/%s
",
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "tmp",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "gettype",
                      "resolution": "uqn",
                    },
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "tmp",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Unary {
                "kind": "unary",
                "type": "!",
                "what": Boolean {
                  "kind": "boolean",
                  "raw": "false",
                  "value": false,
                },
              },
              "right": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "tmp",
                },
                "operator": "=",
                "parenthesizedExpression": true,
                "right": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "stmt",
                    },
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\" \\"",
                      "unicode": false,
                      "value": " ",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "tmp",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_stmt_bind_param",
                    "resolution": "uqn",
                  },
                },
              },
              "type": "===",
            },
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getMessage",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "e",
                        },
                      },
                    },
                    "right": Name {
                      "kind": "name",
                      "name": "\\\\PHP_EOL",
                      "resolution": "fqn",
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "\\\\ArgumentCountError",
              "resolution": "fqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[003c] Expecting boolean/false, got %s/%s\\\\n\\"",
                    "unicode": false,
                    "value": "[003c] Expecting boolean/false, got %s/%s
",
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "tmp",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "gettype",
                      "resolution": "uqn",
                    },
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "tmp",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Unary {
                "kind": "unary",
                "type": "!",
                "what": Boolean {
                  "kind": "boolean",
                  "raw": "false",
                  "value": false,
                },
              },
              "right": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "tmp",
                },
                "operator": "=",
                "parenthesizedExpression": true,
                "right": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "stmt",
                    },
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"is\\"",
                      "unicode": false,
                      "value": "is",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "param",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_stmt_bind_param",
                    "resolution": "uqn",
                  },
                },
              },
              "type": "===",
            },
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getMessage",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "e",
                        },
                      },
                    },
                    "right": Name {
                      "kind": "name",
                      "name": "\\\\PHP_EOL",
                      "resolution": "fqn",
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "\\\\ArgumentCountError",
              "resolution": "fqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[004] Expecting boolean/false, got %s/%s\\\\n\\"",
                    "unicode": false,
                    "value": "[004] Expecting boolean/false, got %s/%s
",
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "tmp",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "gettype",
                      "resolution": "uqn",
                    },
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "tmp",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Unary {
                "kind": "unary",
                "type": "!",
                "what": Boolean {
                  "kind": "boolean",
                  "raw": "false",
                  "value": false,
                },
              },
              "right": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "tmp",
                },
                "operator": "=",
                "parenthesizedExpression": true,
                "right": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "stmt",
                    },
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"a\\"",
                      "unicode": false,
                      "value": "a",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "id",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_stmt_bind_param",
                    "resolution": "uqn",
                  },
                },
              },
              "type": "===",
            },
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getMessage",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "e",
                        },
                      },
                    },
                    "right": Name {
                      "kind": "name",
                      "name": "\\\\PHP_EOL",
                      "resolution": "fqn",
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "\\\\ArgumentCountError",
              "resolution": "fqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[005] Expecting boolean/false, got %s/%s\\\\n\\"",
                    "unicode": false,
                    "value": "[005] Expecting boolean/false, got %s/%s
",
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "tmp",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "gettype",
                      "resolution": "uqn",
                    },
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "tmp",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Unary {
                "kind": "unary",
                "type": "!",
                "what": Boolean {
                  "kind": "boolean",
                  "raw": "false",
                  "value": false,
                },
              },
              "right": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "tmp",
                },
                "operator": "=",
                "parenthesizedExpression": true,
                "right": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "stmt",
                    },
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"a\\"",
                      "unicode": false,
                      "value": "a",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "id",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "label",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_stmt_bind_param",
                    "resolution": "uqn",
                  },
                },
              },
              "type": "===",
            },
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getMessage",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "e",
                        },
                      },
                    },
                    "right": Name {
                      "kind": "name",
                      "name": "\\\\PHP_EOL",
                      "resolution": "fqn",
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "\\\\ArgumentCountError",
              "resolution": "fqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"aa\\"",
                  "unicode": false,
                  "value": "aa",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "id",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "label",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_bind_param",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getMessage",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "e",
                        },
                      },
                    },
                    "right": Name {
                      "kind": "name",
                      "name": "\\\\PHP_EOL",
                      "resolution": "fqn",
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "ValueError",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"ia\\"",
                  "unicode": false,
                  "value": "ia",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "id",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "label",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_bind_param",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getMessage",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "e",
                        },
                      },
                    },
                    "right": Name {
                      "kind": "name",
                      "name": "\\\\PHP_EOL",
                      "resolution": "fqn",
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "ValueError",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[008] Expecting boolean/false, got %s/%s\\\\n\\"",
                    "unicode": false,
                    "value": "[008] Expecting boolean/false, got %s/%s
",
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "tmp",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "gettype",
                      "resolution": "uqn",
                    },
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "tmp",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Unary {
                "kind": "unary",
                "type": "!",
                "what": Boolean {
                  "kind": "boolean",
                  "raw": "true",
                  "value": true,
                },
              },
              "right": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "tmp",
                },
                "operator": "=",
                "parenthesizedExpression": true,
                "right": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "stmt",
                    },
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"is\\"",
                      "unicode": false,
                      "value": "is",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "id",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "label",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_stmt_bind_param",
                    "resolution": "uqn",
                  },
                },
              },
              "type": "===",
            },
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getMessage",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "e",
                        },
                      },
                    },
                    "right": Name {
                      "kind": "name",
                      "name": "\\\\PHP_EOL",
                      "resolution": "fqn",
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "\\\\ArgumentCountError",
              "resolution": "fqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "mem",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "memory_get_usage",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          For {
            "body": Block {
              "children": Array [
                If {
                  "alternate": null,
                  "body": ExpressionStatement {
                    "expression": Call {
                      "arguments": Array [
                        Encapsed {
                          "kind": "encapsed",
                          "raw": "\\"[008][$i] Expecting boolean/false, got %s/%s\\\\n\\"",
                          "type": "string",
                          "value": Array [
                            EncapsedPart {
                              "curly": false,
                              "expression": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "[008][",
                                "unicode": false,
                                "value": "[008][",
                              },
                              "kind": "encapsedpart",
                              "syntax": null,
                            },
                            EncapsedPart {
                              "curly": false,
                              "expression": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "i",
                              },
                              "kind": "encapsedpart",
                              "syntax": "simple",
                            },
                            EncapsedPart {
                              "curly": false,
                              "expression": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "] Expecting boolean/false, got %s/%s\\\\n",
                                "unicode": false,
                                "value": "] Expecting boolean/false, got %s/%s",
                              },
                              "kind": "encapsedpart",
                              "syntax": null,
                            },
                          ],
                        },
                        Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "tmp",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "gettype",
                            "resolution": "uqn",
                          },
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "tmp",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "printf",
                        "resolution": "uqn",
                      },
                    },
                    "kind": "expressionstatement",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Unary {
                      "kind": "unary",
                      "type": "!",
                      "what": Boolean {
                        "kind": "boolean",
                        "raw": "true",
                        "value": true,
                      },
                    },
                    "right": Assign {
                      "kind": "assign",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "tmp",
                      },
                      "operator": "=",
                      "parenthesizedExpression": true,
                      "right": Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "stmt",
                          },
                          String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"is\\"",
                            "unicode": false,
                            "value": "is",
                          },
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "id",
                          },
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "label",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_stmt_bind_param",
                          "resolution": "uqn",
                        },
                      },
                    },
                    "type": "===",
                  },
                },
              ],
              "kind": "block",
            },
            "increment": Array [
              Post {
                "kind": "post",
                "type": "+",
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
              },
            ],
            "init": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
                "operator": "=",
                "right": Number {
                  "kind": "number",
                  "value": "0",
                },
              },
            ],
            "kind": "for",
            "shortForm": false,
            "test": Array [
              Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
                "right": Number {
                  "kind": "number",
                  "value": "20000",
                },
                "type": "<",
              },
            ],
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[009] Function seems to be leaking, because it used %d bytes. During tests it used only 92 bytes.\\"",
                    "unicode": false,
                    "value": "[009] Function seems to be leaking, because it used %d bytes. During tests it used only 92 bytes.",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "tmp",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "tmp",
                },
                "operator": "=",
                "parenthesizedExpression": true,
                "right": Bin {
                  "kind": "bin",
                  "left": Call {
                    "arguments": Array [],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "memory_get_usage",
                      "resolution": "uqn",
                    },
                  },
                  "parenthesizedExpression": true,
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "mem",
                  },
                  "type": "-",
                },
              },
              "right": Number {
                "kind": "number",
                "value": "600",
              },
              "type": ">",
            },
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"memory_get_usage\\"",
            "unicode": false,
            "value": "memory_get_usage",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "function_exists",
          "resolution": "uqn",
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "id",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "100",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "label",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"z\\"",
          "unicode": false,
          "value": "z",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[010] [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[010] [%d] %s
",
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "stmt",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_stmt_execute",
            "resolution": "uqn",
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "stmt",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_stmt_close",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[011] [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[011] [%d] %s
",
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "res",
          },
          "operator": "=",
          "parenthesizedExpression": true,
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "link",
              },
              Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"SELECT id, label FROM test WHERE id = \\"",
                  "unicode": false,
                  "value": "SELECT id, label FROM test WHERE id = ",
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "id",
                },
                "type": ".",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_query",
              "resolution": "uqn",
            },
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "row",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "res",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_fetch_assoc",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[012] Expecting '%s'/%s', got '%s'/%s'!\\\\n\\"",
              "unicode": false,
              "value": "[012] Expecting '%s'/%s', got '%s'/%s'!
",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "id",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "label",
            },
            OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'id'",
                "unicode": false,
                "value": "id",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "row",
              },
            },
            OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'label'",
                "unicode": false,
                "value": "label",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "row",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Bin {
          "kind": "bin",
          "left": OffsetLookup {
            "kind": "offsetlookup",
            "offset": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'id'",
              "unicode": false,
              "value": "id",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "row",
            },
          },
          "parenthesizedExpression": true,
          "right": Variable {
            "curly": false,
            "kind": "variable",
            "name": "id",
          },
          "type": "!=",
        },
        "right": Bin {
          "kind": "bin",
          "left": OffsetLookup {
            "kind": "offsetlookup",
            "offset": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'label'",
              "unicode": false,
              "value": "label",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "row",
            },
          },
          "parenthesizedExpression": true,
          "right": Variable {
            "curly": false,
            "kind": "variable",
            "name": "label",
          },
          "type": "!=",
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "res",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_free_result",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "link",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "engine",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "bind_type",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "sql_type",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "bind_value",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "offset",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "alternative",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": NullKeyword {
            "kind": "nullkeyword",
            "raw": "null",
          },
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%03d] [%d] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[%03d] [%d] %s
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "offset",
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_errno",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_error",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "link",
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"DROP TABLE IF EXISTS test\\"",
                    "unicode": false,
                    "value": "DROP TABLE IF EXISTS test",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_query",
                  "resolution": "uqn",
                },
              },
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "link",
                  },
                  Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"CREATE TABLE test(id INT NOT NULL, label %s, PRIMARY KEY(id)) ENGINE = %s\\"",
                        "unicode": false,
                        "value": "CREATE TABLE test(id INT NOT NULL, label %s, PRIMARY KEY(id)) ENGINE = %s",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "sql_type",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "engine",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "sprintf",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_query",
                  "resolution": "uqn",
                },
              },
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%03d] [%d] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[%03d] [%d] %s
",
                      },
                      Bin {
                        "kind": "bin",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "offset",
                        },
                        "right": Number {
                          "kind": "number",
                          "value": "1",
                        },
                        "type": "+",
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_errno",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_error",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "link",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_stmt_init",
                    "resolution": "uqn",
                  },
                },
              },
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%03d] [%d] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[%03d] [%d] %s
",
                      },
                      Bin {
                        "kind": "bin",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "offset",
                        },
                        "right": Number {
                          "kind": "number",
                          "value": "2",
                        },
                        "type": "+",
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "stmt",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_stmt_errno",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "stmt",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_stmt_error",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"INSERT INTO test(id, label) VALUE (?, ?)\\"",
                    "unicode": false,
                    "value": "INSERT INTO test(id, label) VALUE (?, ?)",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_stmt_prepare",
                  "resolution": "uqn",
                },
              },
            },
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "id",
              },
              "operator": "=",
              "right": Number {
                "kind": "number",
                "value": "1",
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%03d] [%d] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[%03d] [%d] %s
",
                      },
                      Bin {
                        "kind": "bin",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "offset",
                        },
                        "right": Number {
                          "kind": "number",
                          "value": "3",
                        },
                        "type": "+",
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "stmt",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_stmt_errno",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "stmt",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_stmt_error",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                  Bin {
                    "kind": "bin",
                    "left": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"i\\"",
                      "unicode": false,
                      "value": "i",
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "bind_type",
                    },
                    "type": ".",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "id",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "bind_value",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_stmt_bind_param",
                  "resolution": "uqn",
                },
              },
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%03d] [%d] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[%03d] [%d] %s
",
                      },
                      Bin {
                        "kind": "bin",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "offset",
                        },
                        "right": Number {
                          "kind": "number",
                          "value": "4",
                        },
                        "type": "+",
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "stmt",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_stmt_errno",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "stmt",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_stmt_error",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_stmt_execute",
                  "resolution": "uqn",
                },
              },
            },
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_close",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%03d] [%d] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[%03d] [%d] %s
",
                      },
                      Bin {
                        "kind": "bin",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "offset",
                        },
                        "right": Number {
                          "kind": "number",
                          "value": "5",
                        },
                        "type": "+",
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_errno",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_error",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "res",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "link",
                    },
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"SELECT id, label FROM test\\"",
                      "unicode": false,
                      "value": "SELECT id, label FROM test",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_query",
                    "resolution": "uqn",
                  },
                },
              },
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%03d] [%d] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[%03d] [%d] %s
",
                      },
                      Bin {
                        "kind": "bin",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "offset",
                        },
                        "right": Number {
                          "kind": "number",
                          "value": "5",
                        },
                        "type": "+",
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_errno",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_error",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "row",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "res",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_fetch_assoc",
                    "resolution": "uqn",
                  },
                },
              },
            },
          },
          If {
            "alternate": Block {
              "children": Array [
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"[%03d] Testing '%s', '%s': expecting '%s'/'%s', got '%s'/'%s'\\\\n\\"",
                              "unicode": false,
                              "value": "[%03d] Testing '%s', '%s': expecting '%s'/'%s', got '%s'/'%s'
",
                            },
                            Bin {
                              "kind": "bin",
                              "left": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "offset",
                              },
                              "right": Number {
                                "kind": "number",
                                "value": "6",
                              },
                              "type": "+",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "bind_type",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "sql_type",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "id",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "bind_value",
                            },
                            OffsetLookup {
                              "kind": "offsetlookup",
                              "offset": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'id'",
                                "unicode": false,
                                "value": "id",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "row",
                              },
                            },
                            OffsetLookup {
                              "kind": "offsetlookup",
                              "offset": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'label'",
                                "unicode": false,
                                "value": "label",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "row",
                              },
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "printf",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      Return {
                        "expr": Boolean {
                          "kind": "boolean",
                          "raw": "false",
                          "value": false,
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": OffsetLookup {
                        "kind": "offsetlookup",
                        "offset": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'id'",
                          "unicode": false,
                          "value": "id",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "row",
                        },
                      },
                      "parenthesizedExpression": true,
                      "right": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "id",
                      },
                      "type": "!=",
                    },
                    "right": Bin {
                      "kind": "bin",
                      "left": OffsetLookup {
                        "kind": "offsetlookup",
                        "offset": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'label'",
                          "unicode": false,
                          "value": "label",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "row",
                        },
                      },
                      "parenthesizedExpression": true,
                      "right": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "bind_value",
                      },
                      "type": "!=",
                    },
                    "type": "||",
                  },
                },
              ],
              "kind": "block",
            },
            "body": Block {
              "children": Array [
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"[%03d] Testing '%s', '%s': expecting '%s'/'%s' (%s), got '%s'/'%s'\\\\n\\"",
                              "unicode": false,
                              "value": "[%03d] Testing '%s', '%s': expecting '%s'/'%s' (%s), got '%s'/'%s'
",
                            },
                            Bin {
                              "kind": "bin",
                              "left": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "offset",
                              },
                              "right": Number {
                                "kind": "number",
                                "value": "6",
                              },
                              "type": "+",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "bind_type",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "sql_type",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "id",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "bind_value",
                            },
                            Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "bind_value",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "gettype",
                                "resolution": "uqn",
                              },
                            },
                            OffsetLookup {
                              "kind": "offsetlookup",
                              "offset": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'id'",
                                "unicode": false,
                                "value": "id",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "row",
                              },
                            },
                            OffsetLookup {
                              "kind": "offsetlookup",
                              "offset": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'label'",
                                "unicode": false,
                                "value": "label",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "row",
                              },
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "printf",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      Return {
                        "expr": Boolean {
                          "kind": "boolean",
                          "raw": "false",
                          "value": false,
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": OffsetLookup {
                        "kind": "offsetlookup",
                        "offset": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'id'",
                          "unicode": false,
                          "value": "id",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "row",
                        },
                      },
                      "parenthesizedExpression": true,
                      "right": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "id",
                      },
                      "type": "!=",
                    },
                    "right": Bin {
                      "kind": "bin",
                      "left": Bin {
                        "kind": "bin",
                        "left": OffsetLookup {
                          "kind": "offsetlookup",
                          "offset": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'label'",
                            "unicode": false,
                            "value": "label",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "row",
                          },
                        },
                        "parenthesizedExpression": true,
                        "right": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "bind_value",
                        },
                        "type": "!=",
                      },
                      "parenthesizedExpression": true,
                      "right": Bin {
                        "kind": "bin",
                        "left": OffsetLookup {
                          "kind": "offsetlookup",
                          "offset": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'label'",
                            "unicode": false,
                            "value": "label",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "row",
                          },
                        },
                        "parenthesizedExpression": true,
                        "right": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "alternative",
                        },
                        "type": "!=",
                      },
                      "type": "&&",
                    },
                    "type": "||",
                  },
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Variable {
              "curly": false,
              "kind": "variable",
              "name": "alternative",
            },
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "res",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_free_result",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          Return {
            "expr": Boolean {
              "kind": "boolean",
              "raw": "true",
              "value": true,
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "func_mysqli_stmt_bind_datatype",
      },
      "nullable": false,
      "type": null,
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "len",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "ret",
              },
              "operator": "=",
              "right": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "''",
                "unicode": false,
                "value": "",
              },
            },
            "kind": "expressionstatement",
          },
          For {
            "body": ExpressionStatement {
              "expression": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "ret",
                },
                "operator": ".=",
                "right": Call {
                  "arguments": Array [
                    Call {
                      "arguments": Array [
                        Number {
                          "kind": "number",
                          "value": "65",
                        },
                        Number {
                          "kind": "number",
                          "value": "90",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "mt_rand",
                        "resolution": "uqn",
                      },
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "chr",
                    "resolution": "uqn",
                  },
                },
              },
              "kind": "expressionstatement",
            },
            "increment": Array [
              Post {
                "kind": "post",
                "type": "+",
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
              },
            ],
            "init": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
                "operator": "=",
                "right": Number {
                  "kind": "number",
                  "value": "0",
                },
              },
            ],
            "kind": "for",
            "shortForm": false,
            "test": Array [
              Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "len",
                },
                "type": "<",
              },
            ],
          },
          Return {
            "expr": Variable {
              "curly": false,
              "kind": "variable",
              "name": "ret",
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "func_mysqli_stmt_bind_make_string",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"i\\"",
            "unicode": false,
            "value": "i",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"TINYINT\\"",
            "unicode": false,
            "value": "TINYINT",
          },
          Unary {
            "kind": "unary",
            "type": "-",
            "what": Number {
              "kind": "number",
              "value": "11",
            },
          },
          Number {
            "kind": "number",
            "value": "20",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"i\\"",
            "unicode": false,
            "value": "i",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"TINYINT\\"",
            "unicode": false,
            "value": "TINYINT",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          Number {
            "kind": "number",
            "value": "30",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"i\\"",
            "unicode": false,
            "value": "i",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"TINYINT UNSIGNED\\"",
            "unicode": false,
            "value": "TINYINT UNSIGNED",
          },
          Number {
            "kind": "number",
            "value": "1",
          },
          Number {
            "kind": "number",
            "value": "40",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"i\\"",
            "unicode": false,
            "value": "i",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"TINYINT UNSIGNED\\"",
            "unicode": false,
            "value": "TINYINT UNSIGNED",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          Number {
            "kind": "number",
            "value": "50",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"i\\"",
            "unicode": false,
            "value": "i",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"BOOL\\"",
            "unicode": false,
            "value": "BOOL",
          },
          Number {
            "kind": "number",
            "value": "1",
          },
          Number {
            "kind": "number",
            "value": "60",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"i\\"",
            "unicode": false,
            "value": "i",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"BOOL\\"",
            "unicode": false,
            "value": "BOOL",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          Number {
            "kind": "number",
            "value": "70",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"i\\"",
            "unicode": false,
            "value": "i",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"BOOLEAN\\"",
            "unicode": false,
            "value": "BOOLEAN",
          },
          Number {
            "kind": "number",
            "value": "0",
          },
          Number {
            "kind": "number",
            "value": "80",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"i\\"",
            "unicode": false,
            "value": "i",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"BOOLEAN\\"",
            "unicode": false,
            "value": "BOOLEAN",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          Number {
            "kind": "number",
            "value": "90",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"i\\"",
            "unicode": false,
            "value": "i",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"SMALLINT\\"",
            "unicode": false,
            "value": "SMALLINT",
          },
          Unary {
            "kind": "unary",
            "type": "-",
            "what": Number {
              "kind": "number",
              "value": "32768",
            },
          },
          Number {
            "kind": "number",
            "value": "100",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"i\\"",
            "unicode": false,
            "value": "i",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"SMALLINT\\"",
            "unicode": false,
            "value": "SMALLINT",
          },
          Number {
            "kind": "number",
            "value": "32767",
          },
          Number {
            "kind": "number",
            "value": "110",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"i\\"",
            "unicode": false,
            "value": "i",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"SMALLINT\\"",
            "unicode": false,
            "value": "SMALLINT",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          Number {
            "kind": "number",
            "value": "120",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"i\\"",
            "unicode": false,
            "value": "i",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"SMALLINT UNSIGNED\\"",
            "unicode": false,
            "value": "SMALLINT UNSIGNED",
          },
          Number {
            "kind": "number",
            "value": "65535",
          },
          Number {
            "kind": "number",
            "value": "130",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"i\\"",
            "unicode": false,
            "value": "i",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"SMALLINT UNSIGNED\\"",
            "unicode": false,
            "value": "SMALLINT UNSIGNED",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          Number {
            "kind": "number",
            "value": "140",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"i\\"",
            "unicode": false,
            "value": "i",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"MEDIUMINT\\"",
            "unicode": false,
            "value": "MEDIUMINT",
          },
          Unary {
            "kind": "unary",
            "type": "-",
            "what": Number {
              "kind": "number",
              "value": "8388608",
            },
          },
          Number {
            "kind": "number",
            "value": "150",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"i\\"",
            "unicode": false,
            "value": "i",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"MEDIUMINT\\"",
            "unicode": false,
            "value": "MEDIUMINT",
          },
          Number {
            "kind": "number",
            "value": "8388607",
          },
          Number {
            "kind": "number",
            "value": "160",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"i\\"",
            "unicode": false,
            "value": "i",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"MEDIUMINT\\"",
            "unicode": false,
            "value": "MEDIUMINT",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          Number {
            "kind": "number",
            "value": "170",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"i\\"",
            "unicode": false,
            "value": "i",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"MEDIUMINT UNSIGNED\\"",
            "unicode": false,
            "value": "MEDIUMINT UNSIGNED",
          },
          Number {
            "kind": "number",
            "value": "16777215",
          },
          Number {
            "kind": "number",
            "value": "180",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"i\\"",
            "unicode": false,
            "value": "i",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"MEDIUMINT UNSIGNED\\"",
            "unicode": false,
            "value": "MEDIUMINT UNSIGNED",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          Number {
            "kind": "number",
            "value": "190",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"i\\"",
            "unicode": false,
            "value": "i",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"INTEGER\\"",
            "unicode": false,
            "value": "INTEGER",
          },
          Unary {
            "kind": "unary",
            "type": "-",
            "what": Number {
              "kind": "number",
              "value": "2147483648",
            },
          },
          Number {
            "kind": "number",
            "value": "200",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"i\\"",
            "unicode": false,
            "value": "i",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"INTEGER\\"",
            "unicode": false,
            "value": "INTEGER",
          },
          Number {
            "kind": "number",
            "value": "2147483647",
          },
          Number {
            "kind": "number",
            "value": "210",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"i\\"",
            "unicode": false,
            "value": "i",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"INTEGER\\"",
            "unicode": false,
            "value": "INTEGER",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          Number {
            "kind": "number",
            "value": "220",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"i\\"",
            "unicode": false,
            "value": "i",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"INTEGER UNSIGNED\\"",
            "unicode": false,
            "value": "INTEGER UNSIGNED",
          },
          RetIf {
            "falseExpr": Number {
              "kind": "number",
              "value": "1",
            },
            "kind": "retif",
            "test": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"PHP_INT_MAX\\"",
                  "unicode": false,
                  "value": "PHP_INT_MAX",
                },
              ],
              "kind": "call",
              "parenthesizedExpression": true,
              "what": Name {
                "kind": "name",
                "name": "defined",
                "resolution": "uqn",
              },
            },
            "trueExpr": Call {
              "arguments": Array [
                Number {
                  "kind": "number",
                  "value": "4294967295",
                },
                Name {
                  "kind": "name",
                  "name": "PHP_INT_MAX",
                  "resolution": "uqn",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "min",
                "resolution": "uqn",
              },
            },
          },
          Number {
            "kind": "number",
            "value": "230",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"d\\"",
            "unicode": false,
            "value": "d",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"INTEGER UNSIGNED\\"",
            "unicode": false,
            "value": "INTEGER UNSIGNED",
          },
          Number {
            "kind": "number",
            "value": "4294967295",
          },
          Number {
            "kind": "number",
            "value": "240",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"i\\"",
            "unicode": false,
            "value": "i",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"INTEGER UNSIGNED\\"",
            "unicode": false,
            "value": "INTEGER UNSIGNED",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          Number {
            "kind": "number",
            "value": "250",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"i\\"",
            "unicode": false,
            "value": "i",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"BIGINT\\"",
            "unicode": false,
            "value": "BIGINT",
          },
          Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": Unary {
                "kind": "unary",
                "type": "-",
                "what": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
              "right": Name {
                "kind": "name",
                "name": "PHP_INT_MAX",
                "resolution": "uqn",
              },
              "type": "*",
            },
            "right": Number {
              "kind": "number",
              "value": "1",
            },
            "type": "+",
          },
          Number {
            "kind": "number",
            "value": "260",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"i\\"",
            "unicode": false,
            "value": "i",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"BIGINT\\"",
            "unicode": false,
            "value": "BIGINT",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          Number {
            "kind": "number",
            "value": "270",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"i\\"",
            "unicode": false,
            "value": "i",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"BIGINT\\"",
            "unicode": false,
            "value": "BIGINT",
          },
          Name {
            "kind": "name",
            "name": "PHP_INT_MAX",
            "resolution": "uqn",
          },
          Number {
            "kind": "number",
            "value": "280",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"i\\"",
            "unicode": false,
            "value": "i",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"BIGINT UNSIGNED\\"",
            "unicode": false,
            "value": "BIGINT UNSIGNED",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          Number {
            "kind": "number",
            "value": "290",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"BIGINT\\"",
            "unicode": false,
            "value": "BIGINT",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"-9223372036854775808\\"",
            "unicode": false,
            "value": "-9223372036854775808",
          },
          Number {
            "kind": "number",
            "value": "900",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"BIGINT UNSIGNED\\"",
            "unicode": false,
            "value": "BIGINT UNSIGNED",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"18446744073709551615\\"",
            "unicode": false,
            "value": "18446744073709551615",
          },
          Number {
            "kind": "number",
            "value": "920",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"d\\"",
            "unicode": false,
            "value": "d",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"FLOAT\\"",
            "unicode": false,
            "value": "FLOAT",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          Number {
            "kind": "number",
            "value": "310",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"d\\"",
            "unicode": false,
            "value": "d",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"FLOAT UNSIGNED \\"",
            "unicode": false,
            "value": "FLOAT UNSIGNED ",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          Number {
            "kind": "number",
            "value": "330",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "engine",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"d\\"",
                  "unicode": false,
                  "value": "d",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"FLOAT UNSIGNED\\"",
                  "unicode": false,
                  "value": "FLOAT UNSIGNED",
                },
                Name {
                  "kind": "name",
                  "name": "PHP_INT_MAX",
                  "resolution": "uqn",
                },
                Number {
                  "kind": "number",
                  "value": "930",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'2.14748e+09'",
                  "unicode": false,
                  "value": "2.14748e+09",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "func_mysqli_stmt_bind_datatype",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "engine",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"d\\"",
                  "unicode": false,
                  "value": "d",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"FLOAT\\"",
                  "unicode": false,
                  "value": "FLOAT",
                },
                Bin {
                  "kind": "bin",
                  "left": Bin {
                    "kind": "bin",
                    "left": Unary {
                      "kind": "unary",
                      "type": "-",
                      "what": Number {
                        "kind": "number",
                        "value": "1",
                      },
                    },
                    "right": Name {
                      "kind": "name",
                      "name": "PHP_INT_MAX",
                      "resolution": "uqn",
                    },
                    "type": "*",
                  },
                  "right": Number {
                    "kind": "number",
                    "value": "1",
                  },
                  "type": "+",
                },
                Number {
                  "kind": "number",
                  "value": "940",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'-2.14748e+09'",
                  "unicode": false,
                  "value": "-2.14748e+09",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "func_mysqli_stmt_bind_datatype",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Number {
          "kind": "number",
          "value": "2147483647",
        },
        "right": Name {
          "kind": "name",
          "name": "PHP_INT_MAX",
          "resolution": "uqn",
        },
        "type": "==",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"FLOAT\\"",
            "unicode": false,
            "value": "FLOAT",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"-9223372036854775808\\"",
            "unicode": false,
            "value": "-9223372036854775808",
          },
          Number {
            "kind": "number",
            "value": "300",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'-9.22337e+18'",
            "unicode": false,
            "value": "-9.22337e+18",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"FLOAT UNSIGNED\\"",
            "unicode": false,
            "value": "FLOAT UNSIGNED",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"18446744073709551615\\"",
            "unicode": false,
            "value": "18446744073709551615",
          },
          Number {
            "kind": "number",
            "value": "320",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1.84467e+19'",
            "unicode": false,
            "value": "1.84467e+19",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"d\\"",
            "unicode": false,
            "value": "d",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"FLOAT\\"",
            "unicode": false,
            "value": "FLOAT",
          },
          Unary {
            "kind": "unary",
            "type": "-",
            "what": Number {
              "kind": "number",
              "value": "10.01",
            },
          },
          Number {
            "kind": "number",
            "value": "950",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"d\\"",
            "unicode": false,
            "value": "d",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"FLOAT UNSIGNED\\"",
            "unicode": false,
            "value": "FLOAT UNSIGNED",
          },
          Number {
            "kind": "number",
            "value": "10.01",
          },
          Number {
            "kind": "number",
            "value": "960",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"d\\"",
            "unicode": false,
            "value": "d",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"DOUBLE(10,2)\\"",
            "unicode": false,
            "value": "DOUBLE(10,2)",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          Number {
            "kind": "number",
            "value": "350",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"d\\"",
            "unicode": false,
            "value": "d",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"DOUBLE(10,2) UNSIGNED\\"",
            "unicode": false,
            "value": "DOUBLE(10,2) UNSIGNED",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          Number {
            "kind": "number",
            "value": "370",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"d\\"",
            "unicode": false,
            "value": "d",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"DOUBLE(10,2)\\"",
            "unicode": false,
            "value": "DOUBLE(10,2)",
          },
          Unary {
            "kind": "unary",
            "type": "-",
            "what": Number {
              "kind": "number",
              "value": "99999999.99",
            },
          },
          Number {
            "kind": "number",
            "value": "340",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"d\\"",
            "unicode": false,
            "value": "d",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"DOUBLE(10,2) UNSIGNED\\"",
            "unicode": false,
            "value": "DOUBLE(10,2) UNSIGNED",
          },
          Number {
            "kind": "number",
            "value": "99999999.99",
          },
          Number {
            "kind": "number",
            "value": "360",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"d\\"",
            "unicode": false,
            "value": "d",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"DECIMAL(10,2)\\"",
            "unicode": false,
            "value": "DECIMAL(10,2)",
          },
          Unary {
            "kind": "unary",
            "type": "-",
            "what": Number {
              "kind": "number",
              "value": "99999999.99",
            },
          },
          Number {
            "kind": "number",
            "value": "380",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"d\\"",
            "unicode": false,
            "value": "d",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"DECIMAL(10,2)\\"",
            "unicode": false,
            "value": "DECIMAL(10,2)",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          Number {
            "kind": "number",
            "value": "390",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"d\\"",
            "unicode": false,
            "value": "d",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"DECIMAL(10,2)\\"",
            "unicode": false,
            "value": "DECIMAL(10,2)",
          },
          Number {
            "kind": "number",
            "value": "99999999.99",
          },
          Number {
            "kind": "number",
            "value": "400",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"d\\"",
            "unicode": false,
            "value": "d",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"DECIMAL(10,2)\\"",
            "unicode": false,
            "value": "DECIMAL(10,2)",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          Number {
            "kind": "number",
            "value": "410",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"DATE\\"",
            "unicode": false,
            "value": "DATE",
          },
          Silent {
            "expr": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'Y-m-d'",
                  "unicode": false,
                  "value": "Y-m-d",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "date",
                "resolution": "uqn",
              },
            },
            "kind": "silent",
          },
          Number {
            "kind": "number",
            "value": "420",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"DATE NOT NULL\\"",
            "unicode": false,
            "value": "DATE NOT NULL",
          },
          Silent {
            "expr": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'Y-m-d'",
                  "unicode": false,
                  "value": "Y-m-d",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "date",
                "resolution": "uqn",
              },
            },
            "kind": "silent",
          },
          Number {
            "kind": "number",
            "value": "430",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"DATE\\"",
            "unicode": false,
            "value": "DATE",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          Number {
            "kind": "number",
            "value": "440",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"DATETIME\\"",
            "unicode": false,
            "value": "DATETIME",
          },
          Silent {
            "expr": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'Y-m-d H:i:s'",
                  "unicode": false,
                  "value": "Y-m-d H:i:s",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "date",
                "resolution": "uqn",
              },
            },
            "kind": "silent",
          },
          Number {
            "kind": "number",
            "value": "450",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"DATETIME NOT NULL\\"",
            "unicode": false,
            "value": "DATETIME NOT NULL",
          },
          Silent {
            "expr": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'Y-m-d H:i:s'",
                  "unicode": false,
                  "value": "Y-m-d H:i:s",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "date",
                "resolution": "uqn",
              },
            },
            "kind": "silent",
          },
          Number {
            "kind": "number",
            "value": "460",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"DATETIME\\"",
            "unicode": false,
            "value": "DATETIME",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          Number {
            "kind": "number",
            "value": "470",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"TIMESTAMP\\"",
            "unicode": false,
            "value": "TIMESTAMP",
          },
          Silent {
            "expr": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'Y-m-d H:i:s'",
                  "unicode": false,
                  "value": "Y-m-d H:i:s",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "date",
                "resolution": "uqn",
              },
            },
            "kind": "silent",
          },
          Number {
            "kind": "number",
            "value": "480",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"TIME\\"",
            "unicode": false,
            "value": "TIME",
          },
          Silent {
            "expr": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'H:i:s'",
                  "unicode": false,
                  "value": "H:i:s",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "date",
                "resolution": "uqn",
              },
            },
            "kind": "silent",
          },
          Number {
            "kind": "number",
            "value": "490",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"TIME NOT NULL\\"",
            "unicode": false,
            "value": "TIME NOT NULL",
          },
          Silent {
            "expr": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'H:i:s'",
                  "unicode": false,
                  "value": "H:i:s",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "date",
                "resolution": "uqn",
              },
            },
            "kind": "silent",
          },
          Number {
            "kind": "number",
            "value": "500",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"TIME\\"",
            "unicode": false,
            "value": "TIME",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          Number {
            "kind": "number",
            "value": "510",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"YEAR\\"",
            "unicode": false,
            "value": "YEAR",
          },
          Silent {
            "expr": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'Y'",
                  "unicode": false,
                  "value": "Y",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "date",
                "resolution": "uqn",
              },
            },
            "kind": "silent",
          },
          Number {
            "kind": "number",
            "value": "520",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"YEAR NOT NULL\\"",
            "unicode": false,
            "value": "YEAR NOT NULL",
          },
          Silent {
            "expr": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'Y'",
                  "unicode": false,
                  "value": "Y",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "date",
                "resolution": "uqn",
              },
            },
            "kind": "silent",
          },
          Number {
            "kind": "number",
            "value": "530",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"YEAR\\"",
            "unicode": false,
            "value": "YEAR",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          Number {
            "kind": "number",
            "value": "540",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "string255",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Number {
              "kind": "number",
              "value": "255",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "func_mysqli_stmt_bind_make_string",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"CHAR(1)\\"",
            "unicode": false,
            "value": "CHAR(1)",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"a\\"",
            "unicode": false,
            "value": "a",
          },
          Number {
            "kind": "number",
            "value": "550",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"CHAR(255)\\"",
            "unicode": false,
            "value": "CHAR(255)",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "string255",
          },
          Number {
            "kind": "number",
            "value": "560",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"CHAR(1) NOT NULL\\"",
            "unicode": false,
            "value": "CHAR(1) NOT NULL",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"a\\"",
            "unicode": false,
            "value": "a",
          },
          Number {
            "kind": "number",
            "value": "570",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"CHAR(1)\\"",
            "unicode": false,
            "value": "CHAR(1)",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          Number {
            "kind": "number",
            "value": "580",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "string65k",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Number {
              "kind": "number",
              "value": "65535",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "func_mysqli_stmt_bind_make_string",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"VARCHAR(1)\\"",
            "unicode": false,
            "value": "VARCHAR(1)",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"a\\"",
            "unicode": false,
            "value": "a",
          },
          Number {
            "kind": "number",
            "value": "590",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"VARCHAR(255)\\"",
            "unicode": false,
            "value": "VARCHAR(255)",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "string255",
          },
          Number {
            "kind": "number",
            "value": "600",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"VARCHAR(65635)\\"",
            "unicode": false,
            "value": "VARCHAR(65635)",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "string65k",
          },
          Number {
            "kind": "number",
            "value": "610",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"VARCHAR(1) NOT NULL\\"",
            "unicode": false,
            "value": "VARCHAR(1) NOT NULL",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"a\\"",
            "unicode": false,
            "value": "a",
          },
          Number {
            "kind": "number",
            "value": "620",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"VARCHAR(1)\\"",
            "unicode": false,
            "value": "VARCHAR(1)",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          Number {
            "kind": "number",
            "value": "630",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"BINARY(1)\\"",
            "unicode": false,
            "value": "BINARY(1)",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"a\\"",
            "unicode": false,
            "value": "a",
          },
          Number {
            "kind": "number",
            "value": "640",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"BINARY(1)\\"",
            "unicode": false,
            "value": "BINARY(1)",
          },
          Call {
            "arguments": Array [
              Number {
                "kind": "number",
                "value": "0",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "chr",
              "resolution": "uqn",
            },
          },
          Number {
            "kind": "number",
            "value": "650",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"BINARY(1) NOT NULL\\"",
            "unicode": false,
            "value": "BINARY(1) NOT NULL",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"b\\"",
            "unicode": false,
            "value": "b",
          },
          Number {
            "kind": "number",
            "value": "660",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"BINARY(1)\\"",
            "unicode": false,
            "value": "BINARY(1)",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          Number {
            "kind": "number",
            "value": "670",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"VARBINARY(1)\\"",
            "unicode": false,
            "value": "VARBINARY(1)",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"a\\"",
            "unicode": false,
            "value": "a",
          },
          Number {
            "kind": "number",
            "value": "680",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"VARBINARY(1)\\"",
            "unicode": false,
            "value": "VARBINARY(1)",
          },
          Call {
            "arguments": Array [
              Number {
                "kind": "number",
                "value": "0",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "chr",
              "resolution": "uqn",
            },
          },
          Number {
            "kind": "number",
            "value": "690",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"VARBINARY(1) NOT NULL\\"",
            "unicode": false,
            "value": "VARBINARY(1) NOT NULL",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"b\\"",
            "unicode": false,
            "value": "b",
          },
          Number {
            "kind": "number",
            "value": "700",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"VARBINARY(1)\\"",
            "unicode": false,
            "value": "VARBINARY(1)",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          Number {
            "kind": "number",
            "value": "710",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"TINYBLOB\\"",
            "unicode": false,
            "value": "TINYBLOB",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"a\\"",
            "unicode": false,
            "value": "a",
          },
          Number {
            "kind": "number",
            "value": "720",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"TINYBLOB\\"",
            "unicode": false,
            "value": "TINYBLOB",
          },
          Call {
            "arguments": Array [
              Number {
                "kind": "number",
                "value": "0",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "chr",
              "resolution": "uqn",
            },
          },
          Number {
            "kind": "number",
            "value": "730",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"TINYBLOB NOT NULL\\"",
            "unicode": false,
            "value": "TINYBLOB NOT NULL",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"b\\"",
            "unicode": false,
            "value": "b",
          },
          Number {
            "kind": "number",
            "value": "740",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"TINYBLOB\\"",
            "unicode": false,
            "value": "TINYBLOB",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          Number {
            "kind": "number",
            "value": "750",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"TINYTEXT\\"",
            "unicode": false,
            "value": "TINYTEXT",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"a\\"",
            "unicode": false,
            "value": "a",
          },
          Number {
            "kind": "number",
            "value": "760",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"TINYTEXT NOT NULL\\"",
            "unicode": false,
            "value": "TINYTEXT NOT NULL",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"a\\"",
            "unicode": false,
            "value": "a",
          },
          Number {
            "kind": "number",
            "value": "770",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"TINYTEXT\\"",
            "unicode": false,
            "value": "TINYTEXT",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          Number {
            "kind": "number",
            "value": "780",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"b\\"",
            "unicode": false,
            "value": "b",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"BLOB\\"",
            "unicode": false,
            "value": "BLOB",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\"",
            "unicode": false,
            "value": "",
          },
          Number {
            "kind": "number",
            "value": "790",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"b\\"",
            "unicode": false,
            "value": "b",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"TEXT\\"",
            "unicode": false,
            "value": "TEXT",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\"",
            "unicode": false,
            "value": "",
          },
          Number {
            "kind": "number",
            "value": "800",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"b\\"",
            "unicode": false,
            "value": "b",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"MEDIUMBLOB\\"",
            "unicode": false,
            "value": "MEDIUMBLOB",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\"",
            "unicode": false,
            "value": "",
          },
          Number {
            "kind": "number",
            "value": "810",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"b\\"",
            "unicode": false,
            "value": "b",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"MEDIUMTEXT\\"",
            "unicode": false,
            "value": "MEDIUMTEXT",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\"",
            "unicode": false,
            "value": "",
          },
          Number {
            "kind": "number",
            "value": "820",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"b\\"",
            "unicode": false,
            "value": "b",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"LONGBLOB\\"",
            "unicode": false,
            "value": "LONGBLOB",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\"",
            "unicode": false,
            "value": "",
          },
          Number {
            "kind": "number",
            "value": "830",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"b\\"",
            "unicode": false,
            "value": "b",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"LONGTEXT\\"",
            "unicode": false,
            "value": "LONGTEXT",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\"",
            "unicode": false,
            "value": "",
          },
          Number {
            "kind": "number",
            "value": "840",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"ENUM('a', 'b')\\"",
            "unicode": false,
            "value": "ENUM('a', 'b')",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"a\\"",
            "unicode": false,
            "value": "a",
          },
          Number {
            "kind": "number",
            "value": "850",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"ENUM('a', 'b')\\"",
            "unicode": false,
            "value": "ENUM('a', 'b')",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          Number {
            "kind": "number",
            "value": "860",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"SET('a', 'b')\\"",
            "unicode": false,
            "value": "SET('a', 'b')",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"a\\"",
            "unicode": false,
            "value": "a",
          },
          Number {
            "kind": "number",
            "value": "870",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "engine",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"s\\"",
            "unicode": false,
            "value": "s",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"SET('a', 'b')\\"",
            "unicode": false,
            "value": "SET('a', 'b')",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          Number {
            "kind": "number",
            "value": "880",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "func_mysqli_stmt_bind_datatype",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "link",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "engine",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"s\\"",
              "unicode": false,
              "value": "s",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"TIME\\"",
              "unicode": false,
              "value": "TIME",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"13:27:34.123456\\"",
              "unicode": false,
              "value": "13:27:34.123456",
            },
            Number {
              "kind": "number",
              "value": "890",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"13:27:34\\"",
              "unicode": false,
              "value": "13:27:34",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "func_mysqli_stmt_bind_datatype",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "link",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_get_server_version",
            "resolution": "uqn",
          },
        },
        "right": Number {
          "kind": "number",
          "value": "50600",
        },
        "type": ">=",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "stmt",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "link",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_stmt_init",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[2000] [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[2000] [%d] %s
",
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "stmt",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"INSERT INTO test(id, label) VALUES (?, ?)\\"",
              "unicode": false,
              "value": "INSERT INTO test(id, label) VALUES (?, ?)",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_stmt_prepare",
            "resolution": "uqn",
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "id",
        },
        "operator": "=",
        "right": NullKeyword {
          "kind": "nullkeyword",
          "raw": "null",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "label",
        },
        "operator": "=",
        "right": NullKeyword {
          "kind": "nullkeyword",
          "raw": "null",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[2001] [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[2001] [%d] %s
",
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Boolean {
          "kind": "boolean",
          "raw": "true",
          "value": true,
        },
        "right": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "tmp",
          },
          "operator": "=",
          "parenthesizedExpression": true,
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "stmt",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"is\\"",
                "unicode": false,
                "value": "is",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "id",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "label",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_stmt_bind_param",
              "resolution": "uqn",
            },
          },
        },
        "type": "!==",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "stmt",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_stmt_execute",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[2002] [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[2002] [%d] %s
",
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Boolean {
          "kind": "boolean",
          "raw": "true",
          "value": true,
        },
        "right": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "tmp",
          },
          "operator": "=",
          "parenthesizedExpression": true,
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "stmt",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"is\\"",
                "unicode": false,
                "value": "is",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "id",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "label",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_stmt_bind_param",
              "resolution": "uqn",
            },
          },
        },
        "type": "!==",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "stmt",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_stmt_close",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": false,
        "target": String {
          "isDoubleQuote": true,
          "kind": "string",
          "parenthesizedExpression": true,
          "raw": "\\"table.inc\\"",
          "unicode": false,
          "value": "table.inc",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[2003] [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[2003] [%d] %s
",
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "stmt",
          },
          "operator": "=",
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "link",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_stmt_init",
              "resolution": "uqn",
            },
          },
        },
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[2004] [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[2004] [%d] %s
",
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "stmt",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"INSERT INTO test(id, label) VALUES (?, ?)\\"",
              "unicode": false,
              "value": "INSERT INTO test(id, label) VALUES (?, ?)",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_stmt_prepare",
            "resolution": "uqn",
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "id",
        },
        "operator": "=",
        "right": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "label",
          },
          "operator": "=",
          "right": NullKeyword {
            "kind": "nullkeyword",
            "raw": "null",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[2005] Expecting boolean/true got %s/%s, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[2005] Expecting boolean/true got %s/%s, [%d] %s
",
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "tmp",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "gettype",
                "resolution": "uqn",
              },
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "tmp",
            },
            PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "errno",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "stmt",
              },
            },
            PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "error",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "stmt",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Boolean {
          "kind": "boolean",
          "raw": "true",
          "value": true,
        },
        "right": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "tmp",
          },
          "operator": "=",
          "parenthesizedExpression": true,
          "right": Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'is'",
                "unicode": false,
                "value": "is",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "id",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "label",
              },
            ],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "bind_param",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "stmt",
              },
            },
          },
        },
        "type": "!==",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "id",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "100",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "label",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'z'",
          "unicode": false,
          "value": "z",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[2006] [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[2006] [%d] %s
",
            },
            PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "errno",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "stmt",
              },
            },
            PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "error",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "stmt",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "execute",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "stmt",
            },
          },
        },
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[2007] Expecting record 100/z, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[2007] Expecting record 100/z, [%d] %s
",
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "res",
          },
          "operator": "=",
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "link",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"SELECT id, label FROM test WHERE id = 100\\"",
                "unicode": false,
                "value": "SELECT id, label FROM test WHERE id = 100",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_query",
              "resolution": "uqn",
            },
          },
        },
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[2008] Expecting row, [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[2008] Expecting row, [%d] %s
",
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "row",
          },
          "operator": "=",
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "res",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_fetch_assoc",
              "resolution": "uqn",
            },
          },
        },
      },
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"[2009] Row seems wrong, dumping record\\\\n\\"",
                  "unicode": false,
                  "value": "[2009] Row seems wrong, dumping record
",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "printf",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "row",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Bin {
          "kind": "bin",
          "left": OffsetLookup {
            "kind": "offsetlookup",
            "offset": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'id'",
              "unicode": false,
              "value": "id",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "row",
            },
          },
          "right": Number {
            "kind": "number",
            "value": "100",
          },
          "type": "!=",
        },
        "right": Bin {
          "kind": "bin",
          "left": OffsetLookup {
            "kind": "offsetlookup",
            "offset": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'label'",
              "unicode": false,
              "value": "label",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "row",
            },
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'z'",
            "unicode": false,
            "value": "z",
          },
          "type": "!=",
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "res",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_free_result",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "value_list",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Array {
                "items": Array [
                  Entry {
                    "byRef": false,
                    "key": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'id'",
                      "unicode": false,
                      "value": "id",
                    },
                    "kind": "entry",
                    "unpack": false,
                    "value": Number {
                      "kind": "number",
                      "value": "101",
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'label'",
                      "unicode": false,
                      "value": "label",
                    },
                    "kind": "entry",
                    "unpack": false,
                    "value": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'a'",
                      "unicode": false,
                      "value": "a",
                    },
                  },
                ],
                "kind": "array",
                "shortForm": false,
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Array {
                "items": Array [
                  Entry {
                    "byRef": false,
                    "key": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'id'",
                      "unicode": false,
                      "value": "id",
                    },
                    "kind": "entry",
                    "unpack": false,
                    "value": Number {
                      "kind": "number",
                      "value": "102",
                    },
                  },
                  Entry {
                    "byRef": false,
                    "key": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'label'",
                      "unicode": false,
                      "value": "label",
                    },
                    "kind": "entry",
                    "unpack": false,
                    "value": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'b'",
                      "unicode": false,
                      "value": "b",
                    },
                  },
                ],
                "kind": "array",
                "shortForm": false,
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[2010] [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[2010] [%d] %s
",
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "stmt",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"INSERT INTO test(id, label) VALUES (?, ?)\\"",
              "unicode": false,
              "value": "INSERT INTO test(id, label) VALUES (?, ?)",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_stmt_prepare",
            "resolution": "uqn",
          },
        },
      },
    },
    Foreach {
      "body": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[2011] bind_param() failed for id = %d, [%d] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[2011] bind_param() failed for id = %d, [%d] %s
",
                      },
                      OffsetLookup {
                        "kind": "offsetlookup",
                        "offset": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'id'",
                          "unicode": false,
                          "value": "id",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "values",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "stmt",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_stmt_errno",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "stmt",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_stmt_error",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Continue {
                  "kind": "continue",
                  "level": null,
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'is'",
                    "unicode": false,
                    "value": "is",
                  },
                  OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'id'",
                      "unicode": false,
                      "value": "id",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "values",
                    },
                  },
                  OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'label'",
                      "unicode": false,
                      "value": "label",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "values",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_stmt_bind_param",
                  "resolution": "uqn",
                },
              },
            },
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[2012] [%d] execute() failed for id = %d, [%d] %s\\\\n\\"",
                    "unicode": false,
                    "value": "[2012] [%d] execute() failed for id = %d, [%d] %s
",
                  },
                  OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'id'",
                      "unicode": false,
                      "value": "id",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "values",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "stmt",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_stmt_errno",
                      "resolution": "uqn",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "stmt",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_stmt_error",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "execute",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                },
              },
            },
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[2013] [%d] %s\\\\n\\"",
                    "unicode": false,
                    "value": "[2013] [%d] %s
",
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "link",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_errno",
                      "resolution": "uqn",
                    },
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "link",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_error",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "res",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "link",
                    },
                    Call {
                      "arguments": Array [
                        String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"SELECT label FROM test WHERE id = %d\\"",
                          "unicode": false,
                          "value": "SELECT label FROM test WHERE id = %d",
                        },
                        OffsetLookup {
                          "kind": "offsetlookup",
                          "offset": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'id'",
                            "unicode": false,
                            "value": "id",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "values",
                          },
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "sprintf",
                        "resolution": "uqn",
                      },
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_query",
                    "resolution": "uqn",
                  },
                },
              },
            },
          },
          If {
            "alternate": If {
              "alternate": null,
              "body": ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"[2015] Expecting label = %s, got label = %s\\\\n\\"",
                      "unicode": false,
                      "value": "[2015] Expecting label = %s, got label = %s
",
                    },
                    OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'label'",
                        "unicode": false,
                        "value": "label",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "values",
                      },
                    },
                    OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'label'",
                        "unicode": false,
                        "value": "label",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "row",
                      },
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "printf",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
              "kind": "if",
              "shortForm": false,
              "test": Bin {
                "kind": "bin",
                "left": Isset {
                  "kind": "isset",
                  "variables": Array [
                    OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'label'",
                        "unicode": false,
                        "value": "label",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "row",
                      },
                    },
                  ],
                },
                "right": Bin {
                  "kind": "bin",
                  "left": OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'label'",
                      "unicode": false,
                      "value": "label",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "values",
                    },
                  },
                  "parenthesizedExpression": true,
                  "right": OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'label'",
                      "unicode": false,
                      "value": "label",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "row",
                    },
                  },
                  "type": "!=",
                },
                "type": "&&",
              },
            },
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[2014] Cannot find row id = %d\\\\n\\"",
                    "unicode": false,
                    "value": "[2014] Cannot find row id = %d
",
                  },
                  OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'id'",
                      "unicode": false,
                      "value": "id",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "values",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "row",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "res",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_fetch_assoc",
                    "resolution": "uqn",
                  },
                },
              },
            },
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "res",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_free_result",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "key": Variable {
        "curly": false,
        "kind": "variable",
        "name": "k",
      },
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "value_list",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "values",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "stmt",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_stmt_close",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_close",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"done!\\"",
          "unicode": false,
          "value": "done!",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
