// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Phar object: entry & openFile() 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": true,
        "target": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'files/phar_oo_test.inc'",
          "unicode": false,
          "value": "files/phar_oo_test.inc",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "phar",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "fname",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "Phar",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "setInfoClass",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "phar",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "getFilename",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "ent",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Call {
                        "arguments": Array [],
                        "kind": "call",
                        "what": PropertyLookup {
                          "kind": "propertylookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "fgets",
                          },
                          "what": Call {
                            "arguments": Array [],
                            "kind": "call",
                            "what": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "openFile",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "ent",
                              },
                            },
                          },
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Include {
                    "kind": "include",
                    "once": false,
                    "require": false,
                    "target": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getPathName",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "ent",
                        },
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'DIR'",
                        "unicode": false,
                        "value": "DIR",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "isDir",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "ent",
                },
              },
            },
          },
        ],
        "kind": "block",
      },
      "key": Variable {
        "curly": false,
        "kind": "variable",
        "name": "name",
      },
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "phar",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "ent",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
