// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests XMLWriter: libxml2 XML Writer, membuffer, flush 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "xw",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "XMLWriter",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "openMemory",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "xw",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'1.0'",
            "unicode": false,
            "value": "1.0",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'UTF-8'",
            "unicode": false,
            "value": "UTF-8",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'standalone'",
            "unicode": false,
            "value": "standalone",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "startDocument",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "xw",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"tag1\\"",
            "unicode": false,
            "value": "tag1",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "startElement",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "xw",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "endDocument",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "xw",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Call {
          "arguments": Array [
            Boolean {
              "kind": "boolean",
              "raw": "true",
              "value": true,
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "flush",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "xw",
            },
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
