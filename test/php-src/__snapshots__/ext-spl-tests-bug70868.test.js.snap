// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #70868, with PCRE JIT 1`] = `
Program {
  "children": Array [
    Namespace {
      "children": Array [
        ExpressionStatement {
          "expression": Assign {
            "kind": "assign",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "iterator",
            },
            "operator": "=",
            "right": New {
              "arguments": Array [
                New {
                  "arguments": Array [
                    Array {
                      "items": Array [
                        Entry {
                          "byRef": false,
                          "key": null,
                          "kind": "entry",
                          "unpack": false,
                          "value": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'A.phpt'",
                            "unicode": false,
                            "value": "A.phpt",
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": null,
                          "kind": "entry",
                          "unpack": false,
                          "value": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'B.phpt'",
                            "unicode": false,
                            "value": "B.phpt",
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": null,
                          "kind": "entry",
                          "unpack": false,
                          "value": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'C.phpt'",
                            "unicode": false,
                            "value": "C.phpt",
                          },
                        },
                      ],
                      "kind": "array",
                      "shortForm": true,
                    },
                  ],
                  "kind": "new",
                  "what": Name {
                    "kind": "name",
                    "name": "\\\\ArrayIterator",
                    "resolution": "fqn",
                  },
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'/\\\\.phpt$/'",
                  "unicode": false,
                  "value": "/\\\\.phpt$/",
                },
              ],
              "kind": "new",
              "what": Name {
                "kind": "name",
                "name": "\\\\RegexIterator",
                "resolution": "fqn",
              },
            },
          },
          "kind": "expressionstatement",
        },
        Foreach {
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "foo",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "var_dump",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'/\\\\.phpt$/'",
                      "unicode": false,
                      "value": "/\\\\.phpt$/",
                    },
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "''",
                      "unicode": false,
                      "value": "",
                    },
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "''",
                      "unicode": false,
                      "value": "",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "preg_replace",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "key": null,
          "kind": "foreach",
          "shortForm": false,
          "source": Variable {
            "curly": false,
            "kind": "variable",
            "name": "iterator",
          },
          "value": Variable {
            "curly": false,
            "kind": "variable",
            "name": "foo",
          },
        },
        Echo {
          "expressions": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"Done\\"",
              "unicode": false,
              "value": "Done",
            },
            Name {
              "kind": "name",
              "name": "PHP_EOL",
              "resolution": "uqn",
            },
          ],
          "kind": "echo",
          "shortForm": false,
        },
      ],
      "kind": "namespace",
      "name": "X",
      "withBrackets": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
