// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test session_set_save_handler() function: interface 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "ob_start",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"*** Testing session_set_save_handler() function: interface ***\\\\n\\"",
          "unicode": false,
          "value": "*** Testing session_set_save_handler() function: interface ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Class {
      "attrGroups": Array [],
      "body": Array [
        PropertyStatement {
          "isStatic": false,
          "kind": "propertystatement",
          "properties": Array [
            Property {
              "attrGroups": Array [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "path",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
            },
          ],
          "visibility": "public",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "path",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "name",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              If {
                "alternate": null,
                "body": Block {
                  "children": Array [
                    ExpressionStatement {
                      "expression": Assign {
                        "kind": "assign",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "path",
                        },
                        "operator": "=",
                        "right": Call {
                          "arguments": Array [],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "sys_get_temp_dir",
                            "resolution": "uqn",
                          },
                        },
                      },
                      "kind": "expressionstatement",
                    },
                  ],
                  "kind": "block",
                },
                "kind": "if",
                "shortForm": false,
                "test": Unary {
                  "kind": "unary",
                  "type": "!",
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "path",
                  },
                },
              },
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "path",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "this",
                    },
                  },
                  "operator": "=",
                  "right": Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "path",
                      },
                      "right": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'/u_sess_'",
                        "unicode": false,
                        "value": "/u_sess_",
                      },
                      "type": ".",
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "name",
                    },
                    "type": ".",
                  },
                },
                "kind": "expressionstatement",
              },
              Return {
                "expr": Boolean {
                  "kind": "boolean",
                  "raw": "true",
                  "value": true,
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "open",
          },
          "nullable": false,
          "type": TypeReference {
            "kind": "typereference",
            "name": "bool",
            "raw": "bool",
          },
          "visibility": "public",
        },
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Return {
                "expr": Boolean {
                  "kind": "boolean",
                  "raw": "true",
                  "value": true,
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "close",
          },
          "nullable": false,
          "type": TypeReference {
            "kind": "typereference",
            "name": "bool",
            "raw": "bool",
          },
          "visibility": "public",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "id",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Return {
                "expr": Cast {
                  "expr": Silent {
                    "expr": Call {
                      "arguments": Array [
                        Bin {
                          "kind": "bin",
                          "left": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "path",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "this",
                            },
                          },
                          "right": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "id",
                          },
                          "type": ".",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "file_get_contents",
                        "resolution": "uqn",
                      },
                    },
                    "kind": "silent",
                  },
                  "kind": "cast",
                  "raw": "(string)",
                  "type": "string",
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "read",
          },
          "nullable": false,
          "type": UnionType {
            "kind": "uniontype",
            "name": null,
            "types": Array [
              TypeReference {
                "kind": "typereference",
                "name": "string",
                "raw": "string",
              },
              Name {
                "kind": "name",
                "name": "false",
                "resolution": "uqn",
              },
            ],
          },
          "visibility": "public",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "id",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "data",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Return {
                "expr": Cast {
                  "expr": Call {
                    "arguments": Array [
                      Bin {
                        "kind": "bin",
                        "left": PropertyLookup {
                          "kind": "propertylookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "path",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "this",
                          },
                        },
                        "right": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "id",
                        },
                        "type": ".",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "data",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "file_put_contents",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "cast",
                  "raw": "(bool)",
                  "type": "bool",
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "write",
          },
          "nullable": false,
          "type": TypeReference {
            "kind": "typereference",
            "name": "bool",
            "raw": "bool",
          },
          "visibility": "public",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "id",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Silent {
                  "expr": Call {
                    "arguments": Array [
                      Bin {
                        "kind": "bin",
                        "left": PropertyLookup {
                          "kind": "propertylookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "path",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "this",
                          },
                        },
                        "right": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "id",
                        },
                        "type": ".",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "unlink",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "silent",
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "destroy",
          },
          "nullable": false,
          "type": TypeReference {
            "kind": "typereference",
            "name": "bool",
            "raw": "bool",
          },
          "visibility": "public",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "maxlifetime",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Foreach {
                "body": Block {
                  "children": Array [
                    If {
                      "alternate": null,
                      "body": Block {
                        "children": Array [
                          ExpressionStatement {
                            "expression": Silent {
                              "expr": Call {
                                "arguments": Array [
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "filename",
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "unlink",
                                  "resolution": "uqn",
                                },
                              },
                              "kind": "silent",
                            },
                            "kind": "expressionstatement",
                          },
                        ],
                        "kind": "block",
                      },
                      "kind": "if",
                      "shortForm": false,
                      "test": Bin {
                        "kind": "bin",
                        "left": Bin {
                          "kind": "bin",
                          "left": Call {
                            "arguments": Array [
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "filename",
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "filemtime",
                              "resolution": "uqn",
                            },
                          },
                          "right": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "maxlifetime",
                          },
                          "type": "+",
                        },
                        "right": Call {
                          "arguments": Array [],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "time",
                            "resolution": "uqn",
                          },
                        },
                        "type": "<",
                      },
                    },
                  ],
                  "kind": "block",
                },
                "key": null,
                "kind": "foreach",
                "shortForm": false,
                "source": Call {
                  "arguments": Array [
                    Bin {
                      "kind": "bin",
                      "left": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "path",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "this",
                        },
                      },
                      "right": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'*'",
                        "unicode": false,
                        "value": "*",
                      },
                      "type": ".",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "glob",
                    "resolution": "uqn",
                  },
                },
                "value": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "filename",
                },
              },
              Return {
                "expr": Boolean {
                  "kind": "boolean",
                  "raw": "true",
                  "value": true,
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "gc",
          },
          "nullable": false,
          "type": UnionType {
            "kind": "uniontype",
            "name": null,
            "types": Array [
              TypeReference {
                "kind": "typereference",
                "name": "int",
                "raw": "int",
              },
              Name {
                "kind": "name",
                "name": "false",
                "resolution": "uqn",
              },
            ],
          },
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": Array [
        Name {
          "kind": "name",
          "name": "SessionHandlerInterface",
          "resolution": "uqn",
        },
      ],
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "MySession2",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "handler",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "MySession2",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Array {
            "items": Array [
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "handler",
                },
              },
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'open'",
                  "unicode": false,
                  "value": "open",
                },
              },
            ],
            "kind": "array",
            "shortForm": false,
          },
          Array {
            "items": Array [
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "handler",
                },
              },
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'close'",
                  "unicode": false,
                  "value": "close",
                },
              },
            ],
            "kind": "array",
            "shortForm": false,
          },
          Array {
            "items": Array [
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "handler",
                },
              },
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'read'",
                  "unicode": false,
                  "value": "read",
                },
              },
            ],
            "kind": "array",
            "shortForm": false,
          },
          Array {
            "items": Array [
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "handler",
                },
              },
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'write'",
                  "unicode": false,
                  "value": "write",
                },
              },
            ],
            "kind": "array",
            "shortForm": false,
          },
          Array {
            "items": Array [
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "handler",
                },
              },
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'destroy'",
                  "unicode": false,
                  "value": "destroy",
                },
              },
            ],
            "kind": "array",
            "shortForm": false,
          },
          Array {
            "items": Array [
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "handler",
                },
              },
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'gc'",
                  "unicode": false,
                  "value": "gc",
                },
              },
            ],
            "kind": "array",
            "shortForm": false,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "session_set_save_handler",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "session_start",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'foo'",
            "unicode": false,
            "value": "foo",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "_SESSION",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"hello\\"",
          "unicode": false,
          "value": "hello",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "session_id",
              "resolution": "uqn",
            },
          },
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'session.save_handler'",
                "unicode": false,
                "value": "session.save_handler",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "ini_get",
              "resolution": "uqn",
            },
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "_SESSION",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "session_write_close",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "session_unset",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "session_start",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "_SESSION",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "session_write_close",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "session_unset",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "handler",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "session_set_save_handler",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "session_start",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'foo'",
            "unicode": false,
            "value": "foo",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "_SESSION",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"hello\\"",
          "unicode": false,
          "value": "hello",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "session_id",
              "resolution": "uqn",
            },
          },
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'session.save_handler'",
                "unicode": false,
                "value": "session.save_handler",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "ini_get",
              "resolution": "uqn",
            },
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "_SESSION",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "session_write_close",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "session_unset",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "session_start",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "_SESSION",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "session_write_close",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "session_unset",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
