// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test setlocale() function : usage variations - passing multiple valid/invalid locales as argument 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "ob_start",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'locale -a'",
                  "unicode": false,
                  "value": "locale -a",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "system",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "all_locales",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "ob_get_contents",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "ob_end_clean",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "system_locales",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"\\\\n\\"",
                    "unicode": false,
                    "value": "
",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "all_locales",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "explode",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          Return {
            "expr": Variable {
              "curly": false,
              "kind": "variable",
              "name": "system_locales",
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "list_system_locales",
      },
      "nullable": false,
      "type": null,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"*** Testing setlocale() by passing multiple valid/invalid locales as argument ***\\\\n\\"",
          "unicode": false,
          "value": "*** Testing setlocale() by passing multiple valid/invalid locales as argument ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "currency_symbol",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"en_US.utf8\\"",
                "unicode": false,
                "value": "en_US.utf8",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"USD\\"",
                "unicode": false,
                "value": "USD",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"en_AU.utf8\\"",
                "unicode": false,
                "value": "en_AU.utf8",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"AUD\\"",
                "unicode": false,
                "value": "AUD",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"ko_KR.utf8\\"",
                "unicode": false,
                "value": "ko_KR.utf8",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"KRW\\"",
                "unicode": false,
                "value": "KRW",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"zh_CN.utf8\\"",
                "unicode": false,
                "value": "zh_CN.utf8",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"CNY\\"",
                "unicode": false,
                "value": "CNY",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"de_DE.utf8\\"",
                "unicode": false,
                "value": "de_DE.utf8",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"EUR\\"",
                "unicode": false,
                "value": "EUR",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"es_EC.utf8\\"",
                "unicode": false,
                "value": "es_EC.utf8",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"USD\\"",
                "unicode": false,
                "value": "USD",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"fr_FR.utf8\\"",
                "unicode": false,
                "value": "fr_FR.utf8",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"EUR\\"",
                "unicode": false,
                "value": "EUR",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"ja_JP.utf8\\"",
                "unicode": false,
                "value": "ja_JP.utf8",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"JPY\\"",
                "unicode": false,
                "value": "JPY",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"el_GR.utf8\\"",
                "unicode": false,
                "value": "el_GR.utf8",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"EUR\\"",
                "unicode": false,
                "value": "EUR",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"nl_NL.utf8\\"",
                "unicode": false,
                "value": "nl_NL.utf8",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"EUR\\"",
                "unicode": false,
                "value": "EUR",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "all_system_locales",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "list_system_locales",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"-- Testing setlocale() by giving 'category' as LC_ALL & multiple locales(en_US.invalid, en_US.utf8, Ko_KR.utf8, KO_KR.invalid, zh_CN.utf8) --\\\\n\\"",
                "unicode": false,
                "value": "-- Testing setlocale() by giving 'category' as LC_ALL & multiple locales(en_US.invalid, en_US.utf8, Ko_KR.utf8, KO_KR.invalid, zh_CN.utf8) --
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "new_locale",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Name {
                    "kind": "name",
                    "name": "LC_ALL",
                    "resolution": "uqn",
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"en_US.invalid\\"",
                    "unicode": false,
                    "value": "en_US.invalid",
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"en_US.utf8\\"",
                    "unicode": false,
                    "value": "en_US.utf8",
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"Ko_KR.utf8\\"",
                    "unicode": false,
                    "value": "Ko_KR.utf8",
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"KO_KR.invalid\\"",
                    "unicode": false,
                    "value": "KO_KR.invalid",
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"zh_CN.utf8\\"",
                    "unicode": false,
                    "value": "zh_CN.utf8",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "setlocale",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "new_locale",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "locale_info",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "localeconv",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "new_currency",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'int_curr_symbol'",
                      "unicode": false,
                      "value": "int_curr_symbol",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "locale_info",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "trim",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          Echo {
            "expressions": Array [
              Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"Checking currency settings in the new locale, expected: \\"",
                        "unicode": false,
                        "value": "Checking currency settings in the new locale, expected: ",
                      },
                      "right": OffsetLookup {
                        "kind": "offsetlookup",
                        "offset": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "new_locale",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "currency_symbol",
                        },
                      },
                      "type": ".",
                    },
                    "right": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\", Found: \\"",
                      "unicode": false,
                      "value": ", Found: ",
                    },
                    "type": ".",
                  },
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "new_currency",
                  },
                  "type": ".",
                },
                "right": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"\\\\n\\"",
                  "unicode": false,
                  "value": "
",
                },
                "type": ".",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Test \\"",
                "unicode": false,
                "value": "Test ",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          If {
            "alternate": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"FAILED.\\\\n\\"",
                      "unicode": false,
                      "value": "FAILED.
",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
              ],
              "kind": "block",
            },
            "body": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"PASSED.\\\\n\\"",
                      "unicode": false,
                      "value": "PASSED.
",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Call {
                "arguments": Array [
                  OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "new_locale",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "currency_symbol",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "trim",
                  "resolution": "uqn",
                },
              },
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "new_currency",
              },
              "type": "==",
            },
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Bin {
          "kind": "bin",
          "left": Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"en_US.utf8\\"",
                "unicode": false,
                "value": "en_US.utf8",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "all_system_locales",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "in_array",
              "resolution": "uqn",
            },
          },
          "right": Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Ko_KR.utf8\\"",
                "unicode": false,
                "value": "Ko_KR.utf8",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "all_system_locales",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "in_array",
              "resolution": "uqn",
            },
          },
          "type": "||",
        },
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"zh_CN.utf8\\"",
              "unicode": false,
              "value": "zh_CN.utf8",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "all_system_locales",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "in_array",
            "resolution": "uqn",
          },
        },
        "type": "||",
      },
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Done\\\\n\\"",
          "unicode": false,
          "value": "Done
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
