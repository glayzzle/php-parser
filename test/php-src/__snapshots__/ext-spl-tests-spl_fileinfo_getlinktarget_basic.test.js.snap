// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests SPL: Spl File Info test getLinkTarget 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "link",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Magic {
            "kind": "magic",
            "raw": "__DIR__",
            "value": "__DIR__",
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'/test_link'",
            "unicode": false,
            "value": "/test_link",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Magic {
            "kind": "magic",
            "raw": "__FILE__",
            "value": "__FILE__",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "symlink",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "fileInfo",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "link",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "SplFileInfo",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              RetIf {
                "falseExpr": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'different'",
                  "unicode": false,
                  "value": "different",
                },
                "kind": "retif",
                "test": Bin {
                  "kind": "bin",
                  "left": Call {
                    "arguments": Array [],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "getLinkTarget",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "fileInfo",
                      },
                    },
                  },
                  "right": Magic {
                    "kind": "magic",
                    "raw": "__FILE__",
                    "value": "__FILE__",
                  },
                  "type": "==",
                },
                "trueExpr": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'same'",
                  "unicode": false,
                  "value": "same",
                },
              },
              Name {
                "kind": "name",
                "name": "PHP_EOL",
                "resolution": "uqn",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "isLink",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "fileInfo",
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "link",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "unlink",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
