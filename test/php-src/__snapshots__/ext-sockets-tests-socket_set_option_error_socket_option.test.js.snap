// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test if socket_set_option() returns 'Unable to set socket option' failure for invalid options 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "socket",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Name {
              "kind": "name",
              "name": "AF_INET",
              "resolution": "uqn",
            },
            Name {
              "kind": "name",
              "name": "SOCK_STREAM",
              "resolution": "uqn",
            },
            Name {
              "kind": "name",
              "name": "SOL_TCP",
              "resolution": "uqn",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "socket_create",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Exit {
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'Unable to create AF_INET socket [socket]'",
                "unicode": false,
                "value": "Unable to create AF_INET socket [socket]",
              },
              "kind": "exit",
              "useDie": true,
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Variable {
          "curly": false,
          "kind": "variable",
          "name": "socket",
        },
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "socket",
          },
          Name {
            "kind": "name",
            "name": "SOL_SOCKET",
            "resolution": "uqn",
          },
          Number {
            "kind": "number",
            "value": "1",
          },
          Number {
            "kind": "number",
            "value": "1",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "socket_set_option",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "socket",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "socket_close",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
