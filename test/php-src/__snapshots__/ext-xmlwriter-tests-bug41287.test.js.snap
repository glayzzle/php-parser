// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #41287 (Namespace functions don't allow xmlns definition to be optional) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "xw",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "xmlwriter_open_memory",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "xw",
          },
          Boolean {
            "kind": "boolean",
            "raw": "true",
            "value": true,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "xmlwriter_set_indent",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "xw",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "xmlwriter_start_document",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "xw",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'test'",
            "unicode": false,
            "value": "test",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'test'",
            "unicode": false,
            "value": "test",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'urn:x-test:'",
            "unicode": false,
            "value": "urn:x-test:",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "xmlwriter_start_element_ns",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "xw",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'test'",
            "unicode": false,
            "value": "test",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'foo'",
            "unicode": false,
            "value": "foo",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "null",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "''",
            "unicode": false,
            "value": "",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "xmlwriter_write_element_ns",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "xw",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "null",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bar'",
            "unicode": false,
            "value": "bar",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'urn:x-test:'",
            "unicode": false,
            "value": "urn:x-test:",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "''",
            "unicode": false,
            "value": "",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "xmlwriter_write_element_ns",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "xw",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "null",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bar'",
            "unicode": false,
            "value": "bar",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "''",
            "unicode": false,
            "value": "",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "''",
            "unicode": false,
            "value": "",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "xmlwriter_write_element_ns",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "xw",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "xmlwriter_end_element",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "xw",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "xmlwriter_end_document",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "xw",
            },
            Boolean {
              "kind": "boolean",
              "raw": "true",
              "value": true,
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "xmlwriter_flush",
            "resolution": "uqn",
          },
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "xw",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "XMLWriter",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "openMemory",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "xw",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Boolean {
            "kind": "boolean",
            "raw": "true",
            "value": true,
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "setIndent",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "xw",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "startDocument",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "xw",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'test'",
            "unicode": false,
            "value": "test",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'test'",
            "unicode": false,
            "value": "test",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'urn:x-test:'",
            "unicode": false,
            "value": "urn:x-test:",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "startElementNS",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "xw",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'test'",
            "unicode": false,
            "value": "test",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'foo'",
            "unicode": false,
            "value": "foo",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "null",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "''",
            "unicode": false,
            "value": "",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "writeElementNS",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "xw",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "null",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bar'",
            "unicode": false,
            "value": "bar",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'urn:x-test:'",
            "unicode": false,
            "value": "urn:x-test:",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "''",
            "unicode": false,
            "value": "",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "writeElementNS",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "xw",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "null",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'bar'",
            "unicode": false,
            "value": "bar",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "''",
            "unicode": false,
            "value": "",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "''",
            "unicode": false,
            "value": "",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "writeElementNS",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "xw",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "endElement",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "xw",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "endDocument",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "xw",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Call {
          "arguments": Array [
            Boolean {
              "kind": "boolean",
              "raw": "true",
              "value": true,
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "flush",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "xw",
            },
          },
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
