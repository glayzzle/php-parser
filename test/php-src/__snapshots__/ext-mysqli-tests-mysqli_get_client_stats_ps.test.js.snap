// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests mysqli_get_client_stats() - PS 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": true,
        "target": String {
          "isDoubleQuote": false,
          "kind": "string",
          "parenthesizedExpression": true,
          "raw": "'connect.inc'",
          "unicode": false,
          "value": "connect.inc",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": true,
        "target": String {
          "isDoubleQuote": false,
          "kind": "string",
          "parenthesizedExpression": true,
          "raw": "'table.inc'",
          "unicode": false,
          "value": "table.inc",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "stats",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_get_client_stats",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"BEGINNING: rows_fetched_from_client_ps_unbuffered = %d\\\\n\\"",
            "unicode": false,
            "value": "BEGINNING: rows_fetched_from_client_ps_unbuffered = %d
",
          },
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'rows_fetched_from_client_ps_unbuffered'",
              "unicode": false,
              "value": "rows_fetched_from_client_ps_unbuffered",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "stats",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"BEGINNING: rows_fetched_from_client_ps_buffered = %d\\\\n\\"",
            "unicode": false,
            "value": "BEGINNING: rows_fetched_from_client_ps_buffered = %d
",
          },
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'rows_fetched_from_client_ps_buffered'",
              "unicode": false,
              "value": "rows_fetched_from_client_ps_buffered",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "stats",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"BEGINNING: rows_fetched_from_client_ps_cursor = %d\\\\n\\"",
            "unicode": false,
            "value": "BEGINNING: rows_fetched_from_client_ps_cursor = %d
",
          },
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'rows_fetched_from_client_ps_cursor'",
              "unicode": false,
              "value": "rows_fetched_from_client_ps_cursor",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "stats",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[001] [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[001] [%d] %s
",
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "stmt",
          },
          "operator": "=",
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "link",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_stmt_init",
              "resolution": "uqn",
            },
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "id",
        },
        "operator": "=",
        "right": NullKeyword {
          "kind": "nullkeyword",
          "raw": "null",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[002] [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[002] [%d] %s
",
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'SELECT id FROM test'",
                    "unicode": false,
                    "value": "SELECT id FROM test",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_stmt_prepare",
                  "resolution": "uqn",
                },
              },
            },
            "right": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_stmt_execute",
                  "resolution": "uqn",
                },
              },
            },
            "type": "||",
          },
          "right": Unary {
            "kind": "unary",
            "type": "!",
            "what": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_store_result",
                "resolution": "uqn",
              },
            },
          },
          "type": "||",
        },
        "right": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "stmt",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "id",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_stmt_bind_result",
              "resolution": "uqn",
            },
          },
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "num_rows",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "0",
        },
      },
      "kind": "expressionstatement",
    },
    While {
      "body": ExpressionStatement {
        "expression": Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "num_rows",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "while",
      "shortForm": false,
      "test": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "stmt",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_stmt_fetch",
          "resolution": "uqn",
        },
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "stmt",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_stmt_free_result",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "after",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_get_client_stats",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[003] Unbuffered rows got increased after buffered PS, expecting %d got %d.\\\\n\\"",
              "unicode": false,
              "value": "[003] Unbuffered rows got increased after buffered PS, expecting %d got %d.
",
            },
            OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'rows_fetched_from_client_ps_unbuffered'",
                "unicode": false,
                "value": "rows_fetched_from_client_ps_unbuffered",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "stats",
              },
            },
            OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'rows_fetched_from_client_ps_unbuffered'",
                "unicode": false,
                "value": "rows_fetched_from_client_ps_unbuffered",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "after",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_client_ps_unbuffered'",
            "unicode": false,
            "value": "rows_fetched_from_client_ps_unbuffered",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "after",
          },
        },
        "right": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_client_ps_unbuffered'",
            "unicode": false,
            "value": "rows_fetched_from_client_ps_unbuffered",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "stats",
          },
        },
        "type": "!=",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_client_ps_buffered'",
            "unicode": false,
            "value": "rows_fetched_from_client_ps_buffered",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "stats",
          },
        },
        "operator": "+=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "num_rows",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[005] Buffered rows should be %d got %d.\\\\n\\"",
              "unicode": false,
              "value": "[005] Buffered rows should be %d got %d.
",
            },
            OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'rows_fetched_from_client_ps_buffered'",
                "unicode": false,
                "value": "rows_fetched_from_client_ps_buffered",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "stats",
              },
            },
            OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'rows_fetched_from_client_ps_buffered'",
                "unicode": false,
                "value": "rows_fetched_from_client_ps_buffered",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "after",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_client_ps_buffered'",
            "unicode": false,
            "value": "rows_fetched_from_client_ps_buffered",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "after",
          },
        },
        "right": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_client_ps_buffered'",
            "unicode": false,
            "value": "rows_fetched_from_client_ps_buffered",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "stats",
          },
        },
        "type": "!=",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "stats",
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "after",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"BUFFERED: rows_fetched_from_client_ps_unbuffered = %d\\\\n\\"",
            "unicode": false,
            "value": "BUFFERED: rows_fetched_from_client_ps_unbuffered = %d
",
          },
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'rows_fetched_from_client_ps_unbuffered'",
              "unicode": false,
              "value": "rows_fetched_from_client_ps_unbuffered",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "stats",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"BUFFERED: rows_fetched_from_client_ps_buffered = %d\\\\n\\"",
            "unicode": false,
            "value": "BUFFERED: rows_fetched_from_client_ps_buffered = %d
",
          },
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'rows_fetched_from_client_ps_buffered'",
              "unicode": false,
              "value": "rows_fetched_from_client_ps_buffered",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "stats",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"BUFFERED: rows_fetched_from_client_ps_cursor = %d\\\\n\\"",
            "unicode": false,
            "value": "BUFFERED: rows_fetched_from_client_ps_cursor = %d
",
          },
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'rows_fetched_from_client_ps_cursor'",
              "unicode": false,
              "value": "rows_fetched_from_client_ps_cursor",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "stats",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "id",
        },
        "operator": "=",
        "right": NullKeyword {
          "kind": "nullkeyword",
          "raw": "null",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[006] [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[006] [%d] %s
",
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Bin {
          "kind": "bin",
          "left": Unary {
            "kind": "unary",
            "type": "!",
            "what": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'SELECT id FROM test'",
                  "unicode": false,
                  "value": "SELECT id FROM test",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_prepare",
                "resolution": "uqn",
              },
            },
          },
          "right": Unary {
            "kind": "unary",
            "type": "!",
            "what": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_execute",
                "resolution": "uqn",
              },
            },
          },
          "type": "||",
        },
        "right": Unary {
          "kind": "unary",
          "type": "!",
          "what": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "stmt",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "id",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_stmt_bind_result",
              "resolution": "uqn",
            },
          },
        },
        "type": "||",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "num_rows",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "0",
        },
      },
      "kind": "expressionstatement",
    },
    While {
      "body": ExpressionStatement {
        "expression": Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "num_rows",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "while",
      "shortForm": false,
      "test": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "stmt",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_stmt_fetch",
          "resolution": "uqn",
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "after",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_get_client_stats",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_client_ps_unbuffered'",
            "unicode": false,
            "value": "rows_fetched_from_client_ps_unbuffered",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "stats",
          },
        },
        "operator": "+=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "num_rows",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[007] Unbuffered rows should be %d got %d.\\\\n\\"",
              "unicode": false,
              "value": "[007] Unbuffered rows should be %d got %d.
",
            },
            OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'rows_fetched_from_client_ps_unbuffered'",
                "unicode": false,
                "value": "rows_fetched_from_client_ps_unbuffered",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "stats",
              },
            },
            OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'rows_fetched_from_client_ps_unbuffered'",
                "unicode": false,
                "value": "rows_fetched_from_client_ps_unbuffered",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "after",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_client_ps_unbuffered'",
            "unicode": false,
            "value": "rows_fetched_from_client_ps_unbuffered",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "after",
          },
        },
        "right": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_client_ps_unbuffered'",
            "unicode": false,
            "value": "rows_fetched_from_client_ps_unbuffered",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "stats",
          },
        },
        "type": "!=",
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[005] Buffered rows should be unchanged, expecting %d got %d.\\\\n\\"",
              "unicode": false,
              "value": "[005] Buffered rows should be unchanged, expecting %d got %d.
",
            },
            OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'rows_fetched_from_client_ps_buffered'",
                "unicode": false,
                "value": "rows_fetched_from_client_ps_buffered",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "stats",
              },
            },
            OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'rows_fetched_from_client_ps_buffered'",
                "unicode": false,
                "value": "rows_fetched_from_client_ps_buffered",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "after",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_client_ps_buffered'",
            "unicode": false,
            "value": "rows_fetched_from_client_ps_buffered",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "after",
          },
        },
        "right": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'rows_fetched_from_client_ps_buffered'",
            "unicode": false,
            "value": "rows_fetched_from_client_ps_buffered",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "stats",
          },
        },
        "type": "!=",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "stmt",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_stmt_free_result",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "stmt",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_stmt_close",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "stats",
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "after",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"UNBUFFERED: rows_fetched_from_client_ps_unbuffered = %d\\\\n\\"",
            "unicode": false,
            "value": "UNBUFFERED: rows_fetched_from_client_ps_unbuffered = %d
",
          },
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'rows_fetched_from_client_ps_unbuffered'",
              "unicode": false,
              "value": "rows_fetched_from_client_ps_unbuffered",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "stats",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"UNBUFFERED: rows_fetched_from_client_ps_buffered = %d\\\\n\\"",
            "unicode": false,
            "value": "UNBUFFERED: rows_fetched_from_client_ps_buffered = %d
",
          },
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'rows_fetched_from_client_ps_buffered'",
              "unicode": false,
              "value": "rows_fetched_from_client_ps_buffered",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "stats",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"UNBUFFERED: rows_fetched_from_client_ps_cursor = %d\\\\n\\"",
            "unicode": false,
            "value": "UNBUFFERED: rows_fetched_from_client_ps_cursor = %d
",
          },
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'rows_fetched_from_client_ps_cursor'",
              "unicode": false,
              "value": "rows_fetched_from_client_ps_cursor",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "stats",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_close",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"done!\\"",
          "unicode": false,
          "value": "done!",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
