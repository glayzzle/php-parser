// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test mb_substr_count() function : basic functionality 1`] = `
Program {
  "children": Array [
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"*** Testing mb_substr_count() : basic functionality ***\\\\n\\"",
          "unicode": false,
          "value": "*** Testing mb_substr_count() : basic functionality ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "string_ascii",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'This is an English string. 0123456789.'",
          "unicode": false,
          "value": "This is an English string. 0123456789.",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "string_mb",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'5pel5pys6Kqe44OG44Kt44K544OI44Gn44GZ44CCMDEyMzTvvJXvvJbvvJfvvJjvvJnjgII='",
              "unicode": false,
              "value": "5pel5pys6Kqe44OG44Kt44K544OI44Gn44GZ44CCMDEyMzTvvJXvvJbvvJfvvJjvvJnjgII=",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "base64_decode",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "needle_mb1",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'44CC'",
              "unicode": false,
              "value": "44CC",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "base64_decode",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "needle_mb2",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'44GT44KT44Gr44Gh44Gv44CB5LiW55WM'",
              "unicode": false,
              "value": "44GT44KT44Gr44Gh44Gv44CB5LiW55WM",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "base64_decode",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n-- ASCII String --\\\\n\\"",
          "unicode": false,
          "value": "
-- ASCII String --
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "string_ascii",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'is'",
                "unicode": false,
                "value": "is",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_substr_count",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "string_ascii",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'hello, world'",
                "unicode": false,
                "value": "hello, world",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_substr_count",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n-- Multibyte String --\\\\n\\"",
          "unicode": false,
          "value": "
-- Multibyte String --
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "string_mb",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "needle_mb1",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_substr_count",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "string_mb",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "needle_mb2",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mb_substr_count",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Done\\"",
          "unicode": false,
          "value": "Done",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
