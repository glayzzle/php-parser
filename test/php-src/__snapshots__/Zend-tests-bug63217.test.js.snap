// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #63217 (Constant numeric strings become integers when used as ArrayAccess offset) 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [],
      "body": Array [
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "offset",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"offsetExists given \\"",
                    "unicode": false,
                    "value": "offsetExists given ",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "offset",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "var_dump",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
              Return {
                "expr": Boolean {
                  "kind": "boolean",
                  "raw": "true",
                  "value": true,
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "offsetExists",
          },
          "nullable": false,
          "type": TypeReference {
            "kind": "typereference",
            "name": "bool",
            "raw": "bool",
          },
          "visibility": "public",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "offset",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"offsetUnset given \\"",
                    "unicode": false,
                    "value": "offsetUnset given ",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "offset",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "var_dump",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "offsetUnset",
          },
          "nullable": false,
          "type": TypeReference {
            "kind": "typereference",
            "name": "void",
            "raw": "void",
          },
          "visibility": "public",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "offset",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "value",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"offsetSet given \\"",
                    "unicode": false,
                    "value": "offsetSet given ",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "offset",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "var_dump",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "offsetSet",
          },
          "nullable": false,
          "type": TypeReference {
            "kind": "typereference",
            "name": "void",
            "raw": "void",
          },
          "visibility": "public",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "offset",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"offsetGet given \\"",
                    "unicode": false,
                    "value": "offsetGet given ",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "offset",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "var_dump",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
              Return {
                "expr": NullKeyword {
                  "kind": "nullkeyword",
                  "raw": "null",
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "offsetGet",
          },
          "nullable": false,
          "type": Name {
            "kind": "name",
            "name": "mixed",
            "resolution": "uqn",
          },
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": Array [
        Name {
          "kind": "name",
          "name": "ArrayAccess",
          "resolution": "uqn",
        },
      ],
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "Test",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "test",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "Test",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Isset {
        "kind": "isset",
        "variables": Array [
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'0'",
              "unicode": false,
              "value": "0",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "test",
            },
          },
        ],
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Isset {
        "kind": "isset",
        "variables": Array [
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'123'",
              "unicode": false,
              "value": "123",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "test",
            },
          },
        ],
      },
      "kind": "expressionstatement",
    },
    Unset {
      "kind": "unset",
      "variables": Array [
        OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "test",
          },
        },
      ],
    },
    Unset {
      "kind": "unset",
      "variables": Array [
        OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'123'",
            "unicode": false,
            "value": "123",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "test",
          },
        },
      ],
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "test",
          },
        },
        "operator": "=",
        "right": Boolean {
          "kind": "boolean",
          "raw": "true",
          "value": true,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'123'",
            "unicode": false,
            "value": "123",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "test",
          },
        },
        "operator": "=",
        "right": Boolean {
          "kind": "boolean",
          "raw": "true",
          "value": true,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "foo",
        },
        "operator": "=",
        "right": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'0'",
            "unicode": false,
            "value": "0",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "test",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "foo",
        },
        "operator": "=",
        "right": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'123'",
            "unicode": false,
            "value": "123",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "test",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Isset {
        "kind": "isset",
        "variables": Array [
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": Cast {
              "expr": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'0'",
                "unicode": false,
                "value": "0",
              },
              "kind": "cast",
              "raw": "(string)",
              "type": "string",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "test",
            },
          },
        ],
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Isset {
        "kind": "isset",
        "variables": Array [
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": Cast {
              "expr": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'123'",
                "unicode": false,
                "value": "123",
              },
              "kind": "cast",
              "raw": "(string)",
              "type": "string",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "test",
            },
          },
        ],
      },
      "kind": "expressionstatement",
    },
    Unset {
      "kind": "unset",
      "variables": Array [
        OffsetLookup {
          "kind": "offsetlookup",
          "offset": Cast {
            "expr": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'0'",
              "unicode": false,
              "value": "0",
            },
            "kind": "cast",
            "raw": "(string)",
            "type": "string",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "test",
          },
        },
      ],
    },
    Unset {
      "kind": "unset",
      "variables": Array [
        OffsetLookup {
          "kind": "offsetlookup",
          "offset": Cast {
            "expr": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'123'",
              "unicode": false,
              "value": "123",
            },
            "kind": "cast",
            "raw": "(string)",
            "type": "string",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "test",
          },
        },
      ],
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Cast {
            "expr": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'0'",
              "unicode": false,
              "value": "0",
            },
            "kind": "cast",
            "raw": "(string)",
            "type": "string",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "test",
          },
        },
        "operator": "=",
        "right": Boolean {
          "kind": "boolean",
          "raw": "true",
          "value": true,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Cast {
            "expr": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'123'",
              "unicode": false,
              "value": "123",
            },
            "kind": "cast",
            "raw": "(string)",
            "type": "string",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "test",
          },
        },
        "operator": "=",
        "right": Boolean {
          "kind": "boolean",
          "raw": "true",
          "value": true,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "foo",
        },
        "operator": "=",
        "right": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Cast {
            "expr": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'0'",
              "unicode": false,
              "value": "0",
            },
            "kind": "cast",
            "raw": "(string)",
            "type": "string",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "test",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "foo",
        },
        "operator": "=",
        "right": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Cast {
            "expr": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'123'",
              "unicode": false,
              "value": "123",
            },
            "kind": "cast",
            "raw": "(string)",
            "type": "string",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "test",
          },
        },
      },
      "kind": "expressionstatement",
    },
    _Function {
      "arguments": Array [],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"10\\"",
                  "unicode": false,
                  "value": "10",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "array",
                },
              },
              "operator": "=",
              "right": Number {
                "kind": "number",
                "value": "42",
              },
            },
            "kind": "expressionstatement",
          },
          Foreach {
            "body": Block {
              "children": Array [
                Return {
                  "expr": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "key",
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "key": Variable {
              "curly": false,
              "kind": "variable",
              "name": "key",
            },
            "kind": "foreach",
            "shortForm": false,
            "source": Variable {
              "curly": false,
              "kind": "variable",
              "name": "array",
            },
            "value": Variable {
              "curly": false,
              "kind": "variable",
              "name": "value",
            },
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "test",
      },
      "nullable": false,
      "type": TypeReference {
        "kind": "typereference",
        "name": "string",
        "raw": "string",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "test",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "array",
        },
        "operator": "=",
        "right": Array {
          "items": Array [],
          "kind": "array",
          "shortForm": true,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "key",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'123'",
          "unicode": false,
          "value": "123",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Variable {
            "curly": false,
            "kind": "variable",
            "name": "key",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "array",
          },
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "1",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'321'",
            "unicode": false,
            "value": "321",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "array",
          },
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "2",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'abc'",
            "unicode": false,
            "value": "abc",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "array",
          },
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "3",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "array",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "ao",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "ArrayObject",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "key",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'123'",
          "unicode": false,
          "value": "123",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "ao",
        },
        "operator": "=",
        "right": Array {
          "items": Array [],
          "kind": "array",
          "shortForm": true,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Variable {
            "curly": false,
            "kind": "variable",
            "name": "key",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "ao",
          },
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "1",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'321'",
            "unicode": false,
            "value": "321",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "ao",
          },
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "2",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'abc'",
            "unicode": false,
            "value": "abc",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "ao",
          },
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "3",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "ao",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
