// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Switch where all targets, including default, coincide 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "foo",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "42.0",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "bar",
        },
        "operator": "=",
        "right": Boolean {
          "kind": "boolean",
          "raw": "true",
          "value": true,
        },
      },
      "kind": "expressionstatement",
    },
    Switch {
      "body": Block {
        "children": Array [
          Case {
            "body": Block {
              "children": Array [],
              "kind": "block",
            },
            "kind": "case",
            "test": null,
          },
          Case {
            "body": Block {
              "children": Array [],
              "kind": "block",
            },
            "kind": "case",
            "test": Number {
              "kind": "number",
              "value": "0",
            },
          },
          Case {
            "body": Block {
              "children": Array [],
              "kind": "block",
            },
            "kind": "case",
            "test": Number {
              "kind": "number",
              "value": "1",
            },
          },
          Case {
            "body": Block {
              "children": Array [],
              "kind": "block",
            },
            "kind": "case",
            "test": Number {
              "kind": "number",
              "value": "2",
            },
          },
          Case {
            "body": Block {
              "children": Array [
                If {
                  "alternate": Block {
                    "children": Array [
                      Echo {
                        "expressions": Array [
                          String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"false\\\\n\\"",
                            "unicode": false,
                            "value": "false
",
                          },
                        ],
                        "kind": "echo",
                        "shortForm": false,
                      },
                    ],
                    "kind": "block",
                  },
                  "body": Block {
                    "children": Array [
                      Echo {
                        "expressions": Array [
                          String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"true\\\\n\\"",
                            "unicode": false,
                            "value": "true
",
                          },
                        ],
                        "kind": "echo",
                        "shortForm": false,
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "bar",
                  },
                },
              ],
              "kind": "block",
            },
            "kind": "case",
            "test": Number {
              "kind": "number",
              "value": "3",
            },
          },
        ],
        "kind": "block",
      },
      "kind": "switch",
      "shortForm": false,
      "test": Variable {
        "curly": false,
        "kind": "variable",
        "name": "foo",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
