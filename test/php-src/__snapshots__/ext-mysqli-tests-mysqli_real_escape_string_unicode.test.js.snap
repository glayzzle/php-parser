// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests mysqli_real_escape_string() 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": true,
        "target": String {
          "isDoubleQuote": true,
          "kind": "string",
          "parenthesizedExpression": true,
          "raw": "\\"connect.inc\\"",
          "unicode": false,
          "value": "connect.inc",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": true,
        "target": String {
          "isDoubleQuote": false,
          "kind": "string",
          "parenthesizedExpression": true,
          "raw": "'table.inc'",
          "unicode": false,
          "value": "table.inc",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[004] Expecting фу\\\\\\\\\\\\\\\\бар, got %s\\\\n\\"",
              "unicode": false,
              "value": "[004] Expecting фу\\\\\\\\бар, got %s
",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "tmp",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'фу\\\\\\\\\\\\\\\\бар'",
          "unicode": false,
          "value": "фу\\\\\\\\бар",
        },
        "right": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "tmp",
          },
          "operator": "=",
          "parenthesizedExpression": true,
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "link",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'фу\\\\\\\\бар'",
                "unicode": false,
                "value": "фу\\\\бар",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_real_escape_string",
              "resolution": "uqn",
            },
          },
        },
        "type": "!==",
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[005] Expecting бар\\\\\\"фус, got %s\\\\n\\"",
              "unicode": false,
              "value": "[005] Expecting бар\\"фус, got %s
",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "tmp",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'бар\\\\\\"фус'",
          "unicode": false,
          "value": "бар\\\\\\"фус",
        },
        "right": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "tmp",
          },
          "operator": "=",
          "parenthesizedExpression": true,
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "link",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'бар\\"фус'",
                "unicode": false,
                "value": "бар\\"фус",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_real_escape_string",
              "resolution": "uqn",
            },
          },
        },
        "type": "!==",
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[006] Expecting лала'лали, got %s\\\\n\\"",
              "unicode": false,
              "value": "[006] Expecting лала'лали, got %s
",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "tmp",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"лала\\\\'лали\\"",
          "unicode": false,
          "value": "лала\\\\'лали",
        },
        "right": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "tmp",
          },
          "operator": "=",
          "parenthesizedExpression": true,
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "link",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"лала'лали\\"",
                "unicode": false,
                "value": "лала'лали",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_real_escape_string",
              "resolution": "uqn",
            },
          },
        },
        "type": "!==",
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[007] Expecting абра\\\\\\\\nкадабра, got %s\\\\n\\"",
              "unicode": false,
              "value": "[007] Expecting абра\\\\nкадабра, got %s
",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "tmp",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"абра\\\\\\\\nкадабра\\"",
          "unicode": false,
          "value": "абра\\\\nкадабра",
        },
        "right": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "tmp",
          },
          "operator": "=",
          "parenthesizedExpression": true,
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "link",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"абра\\\\nкадабра\\"",
                "unicode": false,
                "value": "абра
кадабра",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_real_escape_string",
              "resolution": "uqn",
            },
          },
        },
        "type": "!==",
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[008] Expecting \\\\\\\\r, got %s\\\\n\\"",
              "unicode": false,
              "value": "[008] Expecting \\\\r, got %s
",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "tmp",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"манда\\\\\\\\rин\\"",
          "unicode": false,
          "value": "манда\\\\rин",
        },
        "right": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "tmp",
          },
          "operator": "=",
          "parenthesizedExpression": true,
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "link",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"манда\\\\rин\\"",
                "unicode": false,
                "value": "манда
ин",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_real_escape_string",
              "resolution": "uqn",
            },
          },
        },
        "type": "!==",
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[009] Expecting %s, got %s\\\\n\\"",
              "unicode": false,
              "value": "[009] Expecting %s, got %s
",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"иху\\\\\\\\0аху\\"",
              "unicode": false,
              "value": "иху\\\\0аху",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "tmp",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"иху\\\\\\\\0аху\\"",
          "unicode": false,
          "value": "иху\\\\0аху",
        },
        "right": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "tmp",
          },
          "operator": "=",
          "parenthesizedExpression": true,
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "link",
              },
              Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"иху\\"",
                    "unicode": false,
                    "value": "иху",
                  },
                  "right": Call {
                    "arguments": Array [
                      Number {
                        "kind": "number",
                        "value": "0",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "chr",
                      "resolution": "uqn",
                    },
                  },
                  "type": ".",
                },
                "right": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"аху\\"",
                  "unicode": false,
                  "value": "аху",
                },
                "type": ".",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_real_escape_string",
              "resolution": "uqn",
            },
          },
        },
        "type": "!==",
      },
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"[010] Expecting %s, got %s\\\\n\\"",
                  "unicode": false,
                  "value": "[010] Expecting %s, got %s
",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "exp",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "tmp",
                },
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "exp",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "tmp",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "var_dump",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "printf",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "exp",
          },
          "operator": "=",
          "parenthesizedExpression": true,
          "right": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'абра\\\\\\\\\\\\\\\\ка\\\\\\"да\\\\\\\\'",
                "unicode": false,
                "value": "абра\\\\\\\\ка\\\\\\"да\\\\",
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"'\\"",
                "unicode": false,
                "value": "'",
              },
              "type": ".",
            },
            "right": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'бра\\\\Zсим\\\\\\\\nсала\\\\\\\\rби\\\\\\\\0м'",
              "unicode": false,
              "value": "бра\\\\Zсим\\\\nсала\\\\rби\\\\0м",
            },
            "type": ".",
          },
        },
        "right": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "tmp",
          },
          "operator": "=",
          "parenthesizedExpression": true,
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "link",
              },
              Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"абра\\\\\\\\ка\\\\\\"да'бра\\\\032сим\\\\nсала\\\\rби\\"",
                    "unicode": false,
                    "value": "абра\\\\ка\\"да'брасим
сала
би",
                  },
                  "right": Call {
                    "arguments": Array [
                      Number {
                        "kind": "number",
                        "value": "0",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "chr",
                      "resolution": "uqn",
                    },
                  },
                  "type": ".",
                },
                "right": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"м\\"",
                  "unicode": false,
                  "value": "м",
                },
                "type": ".",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_real_escape_string",
              "resolution": "uqn",
            },
          },
        },
        "type": "!==",
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[011] Expecting 富\\\\\\\\\\\\\\\\酒吧, got %s\\\\n\\"",
              "unicode": false,
              "value": "[011] Expecting 富\\\\\\\\酒吧, got %s
",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "tmp",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'富\\\\\\\\\\\\\\\\酒吧'",
          "unicode": false,
          "value": "富\\\\\\\\酒吧",
        },
        "right": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "tmp",
          },
          "operator": "=",
          "parenthesizedExpression": true,
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "link",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'富\\\\\\\\酒吧'",
                "unicode": false,
                "value": "富\\\\酒吧",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_real_escape_string",
              "resolution": "uqn",
            },
          },
        },
        "type": "!==",
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[012] Expecting 酒吧\\\\\\"小题大做, got %s\\\\n\\"",
              "unicode": false,
              "value": "[012] Expecting 酒吧\\"小题大做, got %s
",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "tmp",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'酒吧\\\\\\"小题大做'",
          "unicode": false,
          "value": "酒吧\\\\\\"小题大做",
        },
        "right": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "tmp",
          },
          "operator": "=",
          "parenthesizedExpression": true,
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "link",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'酒吧\\"小题大做'",
                "unicode": false,
                "value": "酒吧\\"小题大做",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_real_escape_string",
              "resolution": "uqn",
            },
          },
        },
        "type": "!==",
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[013] Expecting 拉拉'西雅图, got %s\\\\n\\"",
              "unicode": false,
              "value": "[013] Expecting 拉拉'西雅图, got %s
",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "tmp",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"拉拉\\\\'西雅图\\"",
          "unicode": false,
          "value": "拉拉\\\\'西雅图",
        },
        "right": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "tmp",
          },
          "operator": "=",
          "parenthesizedExpression": true,
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "link",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"拉拉'西雅图\\"",
                "unicode": false,
                "value": "拉拉'西雅图",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_real_escape_string",
              "resolution": "uqn",
            },
          },
        },
        "type": "!==",
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[014] Expecting 阿卜拉\\\\\\\\n轻, got %s\\\\n\\"",
              "unicode": false,
              "value": "[014] Expecting 阿卜拉\\\\n轻, got %s
",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "tmp",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"阿卜拉\\\\\\\\n轻\\"",
          "unicode": false,
          "value": "阿卜拉\\\\n轻",
        },
        "right": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "tmp",
          },
          "operator": "=",
          "parenthesizedExpression": true,
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "link",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"阿卜拉\\\\n轻\\"",
                "unicode": false,
                "value": "阿卜拉
轻",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_real_escape_string",
              "resolution": "uqn",
            },
          },
        },
        "type": "!==",
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[015] Expecting 张明安\\\\\\\\r在, got %s\\\\n\\"",
              "unicode": false,
              "value": "[015] Expecting 张明安\\\\r在, got %s
",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "tmp",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"张明安\\\\\\\\r在\\"",
          "unicode": false,
          "value": "张明安\\\\r在",
        },
        "right": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "tmp",
          },
          "operator": "=",
          "parenthesizedExpression": true,
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "link",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"张明安\\\\r在\\"",
                "unicode": false,
                "value": "张明安
在",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_real_escape_string",
              "resolution": "uqn",
            },
          },
        },
        "type": "!==",
      },
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[016] Expecting %s, got %s\\\\n\\"",
              "unicode": false,
              "value": "[016] Expecting %s, got %s
",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"竺可桢\\\\\\\\0空调器\\"",
              "unicode": false,
              "value": "竺可桢\\\\0空调器",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "tmp",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"竺可桢\\\\\\\\0空调器\\"",
          "unicode": false,
          "value": "竺可桢\\\\0空调器",
        },
        "right": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "tmp",
          },
          "operator": "=",
          "parenthesizedExpression": true,
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "link",
              },
              Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"竺可桢\\"",
                    "unicode": false,
                    "value": "竺可桢",
                  },
                  "right": Call {
                    "arguments": Array [
                      Number {
                        "kind": "number",
                        "value": "0",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "chr",
                      "resolution": "uqn",
                    },
                  },
                  "type": ".",
                },
                "right": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"空调器\\"",
                  "unicode": false,
                  "value": "空调器",
                },
                "type": ".",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_real_escape_string",
              "resolution": "uqn",
            },
          },
        },
        "type": "!==",
      },
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"[017] Expecting %s, got %s\\\\n\\"",
                  "unicode": false,
                  "value": "[017] Expecting %s, got %s
",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "exp",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "tmp",
                },
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "exp",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "tmp",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "var_dump",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "printf",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "exp",
          },
          "operator": "=",
          "parenthesizedExpression": true,
          "right": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'阿卜拉\\\\\\\\\\\\\\\\嘉\\\\\\"达丰\\\\\\\\'",
                "unicode": false,
                "value": "阿卜拉\\\\\\\\嘉\\\\\\"达丰\\\\",
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"'\\"",
                "unicode": false,
                "value": "'",
              },
              "type": ".",
            },
            "right": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'乳罩\\\\Z辛\\\\\\\\n萨拉\\\\\\\\r毕\\\\\\\\0米'",
              "unicode": false,
              "value": "乳罩\\\\Z辛\\\\n萨拉\\\\r毕\\\\0米",
            },
            "type": ".",
          },
        },
        "right": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "tmp",
          },
          "operator": "=",
          "parenthesizedExpression": true,
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "link",
              },
              Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"阿卜拉\\\\\\\\嘉\\\\\\"达丰'乳罩\\\\032辛\\\\n萨拉\\\\r毕\\"",
                    "unicode": false,
                    "value": "阿卜拉\\\\嘉\\"达丰'乳罩辛
萨拉
毕",
                  },
                  "right": Call {
                    "arguments": Array [
                      Number {
                        "kind": "number",
                        "value": "0",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "chr",
                      "resolution": "uqn",
                    },
                  },
                  "type": ".",
                },
                "right": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"米\\"",
                  "unicode": false,
                  "value": "米",
                },
                "type": ".",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_real_escape_string",
              "resolution": "uqn",
            },
          },
        },
        "type": "!==",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_close",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "link",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'foo'",
                  "unicode": false,
                  "value": "foo",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_real_escape_string",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getMessage",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "exception",
                        },
                      },
                    },
                    "right": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"\\\\n\\"",
                      "unicode": false,
                      "value": "
",
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "exception",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "Error",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"done!\\"",
          "unicode": false,
          "value": "done!",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
