// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Named params in new in const expr 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [],
      "body": Array [
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 1,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "x",
              },
              "nullable": false,
              "readonly": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "float",
                "raw": "float",
              },
              "value": null,
              "variadic": false,
            },
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 1,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "y",
              },
              "nullable": false,
              "readonly": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "float",
                "raw": "float",
              },
              "value": null,
              "variadic": false,
            },
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 1,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "z",
              },
              "nullable": false,
              "readonly": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "float",
                "raw": "float",
              },
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "__construct",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "Vec",
      },
    },
    Static {
      "kind": "static",
      "variables": Array [
        StaticVariable {
          "defaultValue": New {
            "arguments": Array [
              namedargument {
                "kind": "namedargument",
                "name": "x",
                "value": Number {
                  "kind": "number",
                  "value": "0.0",
                },
              },
              namedargument {
                "kind": "namedargument",
                "name": "y",
                "value": Number {
                  "kind": "number",
                  "value": "1.0",
                },
              },
              namedargument {
                "kind": "namedargument",
                "name": "z",
                "value": Number {
                  "kind": "number",
                  "value": "2.0",
                },
              },
            ],
            "kind": "new",
            "what": Name {
              "kind": "name",
              "name": "Vec",
              "resolution": "uqn",
            },
          },
          "kind": "staticvariable",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "a",
          },
        },
      ],
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "a",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Static {
      "kind": "static",
      "variables": Array [
        StaticVariable {
          "defaultValue": New {
            "arguments": Array [
              namedargument {
                "kind": "namedargument",
                "name": "z",
                "value": Number {
                  "kind": "number",
                  "value": "0.0",
                },
              },
              namedargument {
                "kind": "namedargument",
                "name": "y",
                "value": Number {
                  "kind": "number",
                  "value": "1.0",
                },
              },
              namedargument {
                "kind": "namedargument",
                "name": "x",
                "value": Number {
                  "kind": "number",
                  "value": "2.0",
                },
              },
            ],
            "kind": "new",
            "what": Name {
              "kind": "name",
              "name": "Vec",
              "resolution": "uqn",
            },
          },
          "kind": "staticvariable",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "b",
          },
        },
      ],
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "b",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Static {
      "kind": "static",
      "variables": Array [
        StaticVariable {
          "defaultValue": New {
            "arguments": Array [
              Number {
                "kind": "number",
                "value": "0.0",
              },
              namedargument {
                "kind": "namedargument",
                "name": "z",
                "value": Number {
                  "kind": "number",
                  "value": "1.0",
                },
              },
              namedargument {
                "kind": "namedargument",
                "name": "y",
                "value": Number {
                  "kind": "number",
                  "value": "2.0",
                },
              },
            ],
            "kind": "new",
            "what": Name {
              "kind": "name",
              "name": "Vec",
              "resolution": "uqn",
            },
          },
          "kind": "staticvariable",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "c",
          },
        },
      ],
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "c",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Eval {
              "kind": "eval",
              "source": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'static $d = new Vec(x: 0.0, x: 1.0);'",
                "unicode": false,
                "value": "static $d = new Vec(x: 0.0, x: 1.0);",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Call {
                    "arguments": Array [],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "getMessage",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "e",
                      },
                    },
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"\\\\n\\"",
                    "unicode": false,
                    "value": "
",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "Error",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
