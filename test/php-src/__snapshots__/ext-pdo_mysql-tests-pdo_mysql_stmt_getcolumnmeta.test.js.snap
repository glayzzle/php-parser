// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests MySQL: PDOStatement->getColumnMeta() 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": true,
        "target": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Magic {
              "kind": "magic",
              "raw": "__DIR__",
              "value": "__DIR__",
            },
            "right": Name {
              "kind": "name",
              "name": "DIRECTORY_SEPARATOR",
              "resolution": "uqn",
            },
            "type": ".",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'mysql_pdo_test.inc'",
            "unicode": false,
            "value": "mysql_pdo_test.inc",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "db",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "factory",
            },
            "what": Name {
              "kind": "name",
              "name": "MySQLPDOTest",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "ATTR_STRINGIFY_FETCHES",
            },
            "what": Name {
              "kind": "name",
              "name": "PDO",
              "resolution": "uqn",
            },
          },
          Boolean {
            "kind": "boolean",
            "raw": "true",
            "value": true,
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "setAttribute",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
        ],
        "kind": "call",
        "what": StaticLookup {
          "kind": "staticlookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "createTestTable",
          },
          "what": Name {
            "kind": "name",
            "name": "MySQLPDOTest",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "stmt",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'SELECT id FROM test ORDER BY id ASC'",
                    "unicode": false,
                    "value": "SELECT id FROM test ORDER BY id ASC",
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "prepare",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "db",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[002] Expecting false got %s\\\\n\\"",
                    "unicode": false,
                    "value": "[002] Expecting false got %s
",
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "tmp",
                      },
                      Boolean {
                        "kind": "boolean",
                        "raw": "true",
                        "value": true,
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_export",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Boolean {
                "kind": "boolean",
                "raw": "false",
                "value": false,
              },
              "right": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "tmp",
                },
                "operator": "=",
                "parenthesizedExpression": true,
                "right": Call {
                  "arguments": Array [
                    Number {
                      "kind": "number",
                      "value": "0",
                    },
                  ],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "getColumnMeta",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "stmt",
                    },
                  },
                },
              },
              "type": "!==",
            },
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "execute",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              },
            },
            "kind": "expressionstatement",
          },
          Try {
            "always": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Unary {
                        "kind": "unary",
                        "type": "-",
                        "what": Number {
                          "kind": "number",
                          "value": "1",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "getColumnMeta",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "stmt",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "catches": Array [
              Catch {
                "body": Block {
                  "children": Array [
                    Echo {
                      "expressions": Array [
                        Call {
                          "arguments": Array [],
                          "kind": "call",
                          "what": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "getMessage",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "e",
                            },
                          },
                        },
                        Name {
                          "kind": "name",
                          "name": "\\\\PHP_EOL",
                          "resolution": "fqn",
                        },
                      ],
                      "kind": "echo",
                      "shortForm": false,
                    },
                  ],
                  "kind": "block",
                },
                "kind": "catch",
                "variable": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "e",
                },
                "what": Array [
                  Name {
                    "kind": "name",
                    "name": "\\\\ValueError",
                    "resolution": "fqn",
                  },
                ],
              },
            ],
            "kind": "try",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "emulated",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Number {
                    "kind": "number",
                    "value": "0",
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "getColumnMeta",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"Testing native PS...\\\\n\\"",
                  "unicode": false,
                  "value": "Testing native PS...
",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "printf",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "MYSQL_ATTR_DIRECT_QUERY",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
                Number {
                  "kind": "number",
                  "value": "0",
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "setAttribute",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[007] Unable to turn off emulated prepared statements\\\\n\\"",
                    "unicode": false,
                    "value": "[007] Unable to turn off emulated prepared statements
",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Number {
                "kind": "number",
                "value": "0",
              },
              "right": Call {
                "arguments": Array [
                  StaticLookup {
                    "kind": "staticlookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "MYSQL_ATTR_DIRECT_QUERY",
                    },
                    "what": Name {
                      "kind": "name",
                      "name": "PDO",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "getAttribute",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "db",
                  },
                },
              },
              "type": "!=",
            },
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "stmt",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'SELECT id FROM test ORDER BY id ASC'",
                    "unicode": false,
                    "value": "SELECT id FROM test ORDER BY id ASC",
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "prepare",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "db",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "execute",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "native",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Number {
                    "kind": "number",
                    "value": "0",
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "getColumnMeta",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[008] Meta data seems wrong, %s / %s\\\\n\\"",
                        "unicode": false,
                        "value": "[008] Meta data seems wrong, %s / %s
",
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "native",
                          },
                          Boolean {
                            "kind": "boolean",
                            "raw": "true",
                            "value": true,
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "var_export",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "emulated",
                          },
                          Boolean {
                            "kind": "boolean",
                            "raw": "true",
                            "value": true,
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "var_export",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "native",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "count",
                  "resolution": "uqn",
                },
              },
              "right": Number {
                "kind": "number",
                "value": "0",
              },
              "type": "==",
            },
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[009] Expecting false because of invalid offset got %s\\\\n\\"",
                    "unicode": false,
                    "value": "[009] Expecting false because of invalid offset got %s
",
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "tmp",
                      },
                      Boolean {
                        "kind": "boolean",
                        "raw": "true",
                        "value": true,
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_export",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Boolean {
                "kind": "boolean",
                "raw": "false",
                "value": false,
              },
              "right": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "tmp",
                },
                "operator": "=",
                "parenthesizedExpression": true,
                "right": Call {
                  "arguments": Array [
                    Number {
                      "kind": "number",
                      "value": "1",
                    },
                  ],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "getColumnMeta",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "stmt",
                    },
                  },
                },
              },
              "type": "!==",
            },
          },
          _Function {
            "arguments": Array [
              Parameter {
                "attrGroups": Array [],
                "byref": true,
                "flags": 0,
                "kind": "parameter",
                "name": Identifier {
                  "kind": "identifier",
                  "name": "db",
                },
                "nullable": false,
                "readonly": false,
                "type": null,
                "value": null,
                "variadic": false,
              },
              Parameter {
                "attrGroups": Array [],
                "byref": false,
                "flags": 0,
                "kind": "parameter",
                "name": Identifier {
                  "kind": "identifier",
                  "name": "offset",
                },
                "nullable": false,
                "readonly": false,
                "type": null,
                "value": null,
                "variadic": false,
              },
              Parameter {
                "attrGroups": Array [],
                "byref": false,
                "flags": 0,
                "kind": "parameter",
                "name": Identifier {
                  "kind": "identifier",
                  "name": "sql_type",
                },
                "nullable": false,
                "readonly": false,
                "type": null,
                "value": null,
                "variadic": false,
              },
              Parameter {
                "attrGroups": Array [],
                "byref": false,
                "flags": 0,
                "kind": "parameter",
                "name": Identifier {
                  "kind": "identifier",
                  "name": "value",
                },
                "nullable": false,
                "readonly": false,
                "type": null,
                "value": null,
                "variadic": false,
              },
              Parameter {
                "attrGroups": Array [],
                "byref": false,
                "flags": 0,
                "kind": "parameter",
                "name": Identifier {
                  "kind": "identifier",
                  "name": "native_type",
                },
                "nullable": false,
                "readonly": false,
                "type": null,
                "value": null,
                "variadic": false,
              },
              Parameter {
                "attrGroups": Array [],
                "byref": false,
                "flags": 0,
                "kind": "parameter",
                "name": Identifier {
                  "kind": "identifier",
                  "name": "pdo_type",
                },
                "nullable": false,
                "readonly": false,
                "type": null,
                "value": null,
                "variadic": false,
              },
            ],
            "attrGroups": Array [],
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'DROP TABLE IF EXISTS test'",
                        "unicode": false,
                        "value": "DROP TABLE IF EXISTS test",
                      },
                    ],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "exec",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "db",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "sql",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'CREATE TABLE test(id INT, label %s) ENGINE=%s'",
                          "unicode": false,
                          "value": "CREATE TABLE test(id INT, label %s) ENGINE=%s",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "sql_type",
                        },
                        Call {
                          "arguments": Array [],
                          "kind": "call",
                          "what": StaticLookup {
                            "kind": "staticlookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "getTableEngine",
                            },
                            "what": Name {
                              "kind": "name",
                              "name": "MySQLPDOTest",
                              "resolution": "uqn",
                            },
                          },
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "sprintf",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      Return {
                        "expr": Boolean {
                          "kind": "boolean",
                          "raw": "true",
                          "value": true,
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Unary {
                      "kind": "unary",
                      "type": "!",
                      "what": Assign {
                        "kind": "assign",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "stmt",
                        },
                        "operator": "=",
                        "parenthesizedExpression": true,
                        "right": Silent {
                          "expr": Call {
                            "arguments": Array [
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "sql",
                              },
                            ],
                            "kind": "call",
                            "what": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "prepare",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "db",
                              },
                            },
                          },
                          "kind": "silent",
                        },
                      },
                    },
                    "right": Unary {
                      "kind": "unary",
                      "parenthesizedExpression": true,
                      "type": "!",
                      "what": Silent {
                        "expr": Call {
                          "arguments": Array [],
                          "kind": "call",
                          "what": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "execute",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "stmt",
                            },
                          },
                        },
                        "kind": "silent",
                      },
                    },
                    "type": "||",
                  },
                },
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"[%03d] + 1] Insert failed, %d - %s\\\\n\\"",
                              "unicode": false,
                              "value": "[%03d] + 1] Insert failed, %d - %s
",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "offset",
                            },
                            Call {
                              "arguments": Array [],
                              "kind": "call",
                              "what": PropertyLookup {
                                "kind": "propertylookup",
                                "offset": Identifier {
                                  "kind": "identifier",
                                  "name": "errorCode",
                                },
                                "what": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "db",
                                },
                              },
                            },
                            Call {
                              "arguments": Array [
                                Call {
                                  "arguments": Array [],
                                  "kind": "call",
                                  "what": PropertyLookup {
                                    "kind": "propertylookup",
                                    "offset": Identifier {
                                      "kind": "identifier",
                                      "name": "errorInfo",
                                    },
                                    "what": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "db",
                                    },
                                  },
                                },
                                Boolean {
                                  "kind": "boolean",
                                  "raw": "true",
                                  "value": true,
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "var_export",
                                "resolution": "uqn",
                              },
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "printf",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      Return {
                        "expr": Boolean {
                          "kind": "boolean",
                          "raw": "false",
                          "value": false,
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Unary {
                    "kind": "unary",
                    "type": "!",
                    "what": Call {
                      "arguments": Array [
                        Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"INSERT INTO test(id, label) VALUES (1, '%s')\\"",
                              "unicode": false,
                              "value": "INSERT INTO test(id, label) VALUES (1, '%s')",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "value",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "sprintf",
                            "resolution": "uqn",
                          },
                        },
                      ],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "exec",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "db",
                        },
                      },
                    },
                  },
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "stmt",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'SELECT id, label FROM test'",
                          "unicode": false,
                          "value": "SELECT id, label FROM test",
                        },
                      ],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "prepare",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "db",
                        },
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "execute",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "stmt",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "meta",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Number {
                          "kind": "number",
                          "value": "1",
                        },
                      ],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getColumnMeta",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "stmt",
                        },
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "row",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        StaticLookup {
                          "kind": "staticlookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "FETCH_ASSOC",
                          },
                          "what": Name {
                            "kind": "name",
                            "name": "PDO",
                            "resolution": "uqn",
                          },
                        },
                      ],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "fetch",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "stmt",
                        },
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"[%03d + 2] getColumnMeta() failed, %d - %s\\\\n\\"",
                              "unicode": false,
                              "value": "[%03d + 2] getColumnMeta() failed, %d - %s
",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "offset",
                            },
                            Call {
                              "arguments": Array [],
                              "kind": "call",
                              "what": PropertyLookup {
                                "kind": "propertylookup",
                                "offset": Identifier {
                                  "kind": "identifier",
                                  "name": "errorCode",
                                },
                                "what": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "stmt",
                                },
                              },
                            },
                            Call {
                              "arguments": Array [
                                Call {
                                  "arguments": Array [],
                                  "kind": "call",
                                  "what": PropertyLookup {
                                    "kind": "propertylookup",
                                    "offset": Identifier {
                                      "kind": "identifier",
                                      "name": "errorInfo",
                                    },
                                    "what": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "stmt",
                                    },
                                  },
                                },
                                Boolean {
                                  "kind": "boolean",
                                  "raw": "true",
                                  "value": true,
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "var_export",
                                "resolution": "uqn",
                              },
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "printf",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      Return {
                        "expr": Boolean {
                          "kind": "boolean",
                          "raw": "false",
                          "value": false,
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Empty {
                    "expression": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "meta",
                    },
                    "kind": "empty",
                  },
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "elements",
                    },
                    "operator": "=",
                    "right": Array {
                      "items": Array [
                        Entry {
                          "byRef": false,
                          "key": null,
                          "kind": "entry",
                          "unpack": false,
                          "value": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'flags'",
                            "unicode": false,
                            "value": "flags",
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": null,
                          "kind": "entry",
                          "unpack": false,
                          "value": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'table'",
                            "unicode": false,
                            "value": "table",
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": null,
                          "kind": "entry",
                          "unpack": false,
                          "value": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'name'",
                            "unicode": false,
                            "value": "name",
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": null,
                          "kind": "entry",
                          "unpack": false,
                          "value": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'len'",
                            "unicode": false,
                            "value": "len",
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": null,
                          "kind": "entry",
                          "unpack": false,
                          "value": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'precision'",
                            "unicode": false,
                            "value": "precision",
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": null,
                          "kind": "entry",
                          "unpack": false,
                          "value": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'pdo_type'",
                            "unicode": false,
                            "value": "pdo_type",
                          },
                        },
                      ],
                      "kind": "array",
                      "shortForm": false,
                    },
                  },
                  "kind": "expressionstatement",
                },
                Foreach {
                  "body": If {
                    "alternate": null,
                    "body": Block {
                      "children": Array [
                        ExpressionStatement {
                          "expression": Call {
                            "arguments": Array [
                              String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"[%03d + 3] Element %s missing, %s\\\\n\\"",
                                "unicode": false,
                                "value": "[%03d + 3] Element %s missing, %s
",
                              },
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "offset",
                              },
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "element",
                              },
                              Call {
                                "arguments": Array [
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "meta",
                                  },
                                  Boolean {
                                    "kind": "boolean",
                                    "raw": "true",
                                    "value": true,
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "var_export",
                                  "resolution": "uqn",
                                },
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "printf",
                              "resolution": "uqn",
                            },
                          },
                          "kind": "expressionstatement",
                        },
                        Return {
                          "expr": Boolean {
                            "kind": "boolean",
                            "raw": "false",
                            "value": false,
                          },
                          "kind": "return",
                        },
                      ],
                      "kind": "block",
                    },
                    "kind": "if",
                    "shortForm": false,
                    "test": Unary {
                      "kind": "unary",
                      "type": "!",
                      "what": Isset {
                        "kind": "isset",
                        "variables": Array [
                          OffsetLookup {
                            "kind": "offsetlookup",
                            "offset": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "element",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "meta",
                            },
                          },
                        ],
                      },
                    },
                  },
                  "key": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "k",
                  },
                  "kind": "foreach",
                  "shortForm": false,
                  "source": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "elements",
                  },
                  "value": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "element",
                  },
                },
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"[%03d + 4] Table or field name is wrong, %s\\\\n\\"",
                              "unicode": false,
                              "value": "[%03d + 4] Table or field name is wrong, %s
",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "offset",
                            },
                            Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "meta",
                                },
                                Boolean {
                                  "kind": "boolean",
                                  "raw": "true",
                                  "value": true,
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "var_export",
                                "resolution": "uqn",
                              },
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "printf",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      Return {
                        "expr": Boolean {
                          "kind": "boolean",
                          "raw": "false",
                          "value": false,
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": OffsetLookup {
                        "kind": "offsetlookup",
                        "offset": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'table'",
                          "unicode": false,
                          "value": "table",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "meta",
                        },
                      },
                      "parenthesizedExpression": true,
                      "right": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'test'",
                        "unicode": false,
                        "value": "test",
                      },
                      "type": "!=",
                    },
                    "right": Bin {
                      "kind": "bin",
                      "left": OffsetLookup {
                        "kind": "offsetlookup",
                        "offset": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'name'",
                          "unicode": false,
                          "value": "name",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "meta",
                        },
                      },
                      "parenthesizedExpression": true,
                      "right": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'label'",
                        "unicode": false,
                        "value": "label",
                      },
                      "type": "!=",
                    },
                    "type": "||",
                  },
                },
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      If {
                        "alternate": null,
                        "body": Block {
                          "children": Array [
                            ExpressionStatement {
                              "expression": Call {
                                "arguments": Array [
                                  String {
                                    "isDoubleQuote": true,
                                    "kind": "string",
                                    "raw": "\\"[%03d + 5] Element native_type missing, %s\\\\n\\"",
                                    "unicode": false,
                                    "value": "[%03d + 5] Element native_type missing, %s
",
                                  },
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "offset",
                                  },
                                  Call {
                                    "arguments": Array [
                                      Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "meta",
                                      },
                                      Boolean {
                                        "kind": "boolean",
                                        "raw": "true",
                                        "value": true,
                                      },
                                    ],
                                    "kind": "call",
                                    "what": Name {
                                      "kind": "name",
                                      "name": "var_export",
                                      "resolution": "uqn",
                                    },
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "printf",
                                  "resolution": "uqn",
                                },
                              },
                              "kind": "expressionstatement",
                            },
                            Return {
                              "expr": Boolean {
                                "kind": "boolean",
                                "raw": "false",
                                "value": false,
                              },
                              "kind": "return",
                            },
                          ],
                          "kind": "block",
                        },
                        "kind": "if",
                        "shortForm": false,
                        "test": Unary {
                          "kind": "unary",
                          "type": "!",
                          "what": Isset {
                            "kind": "isset",
                            "variables": Array [
                              OffsetLookup {
                                "kind": "offsetlookup",
                                "offset": String {
                                  "isDoubleQuote": false,
                                  "kind": "string",
                                  "raw": "'native_type'",
                                  "unicode": false,
                                  "value": "native_type",
                                },
                                "what": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "meta",
                                },
                              },
                            ],
                          },
                        },
                      },
                      If {
                        "alternate": null,
                        "body": ExpressionStatement {
                          "expression": Assign {
                            "kind": "assign",
                            "left": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "native_type",
                            },
                            "operator": "=",
                            "right": Array {
                              "items": Array [
                                Entry {
                                  "byRef": false,
                                  "key": null,
                                  "kind": "entry",
                                  "unpack": false,
                                  "value": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "native_type",
                                  },
                                },
                              ],
                              "kind": "array",
                              "shortForm": false,
                            },
                          },
                          "kind": "expressionstatement",
                        },
                        "kind": "if",
                        "shortForm": false,
                        "test": Unary {
                          "kind": "unary",
                          "type": "!",
                          "what": Call {
                            "arguments": Array [
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "native_type",
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "is_array",
                              "resolution": "uqn",
                            },
                          },
                        },
                      },
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "found",
                          },
                          "operator": "=",
                          "right": Boolean {
                            "kind": "boolean",
                            "raw": "false",
                            "value": false,
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      Foreach {
                        "body": Block {
                          "children": Array [
                            If {
                              "alternate": null,
                              "body": Block {
                                "children": Array [
                                  ExpressionStatement {
                                    "expression": Assign {
                                      "kind": "assign",
                                      "left": Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "found",
                                      },
                                      "operator": "=",
                                      "right": Boolean {
                                        "kind": "boolean",
                                        "raw": "true",
                                        "value": true,
                                      },
                                    },
                                    "kind": "expressionstatement",
                                  },
                                  Break {
                                    "kind": "break",
                                    "level": null,
                                  },
                                ],
                                "kind": "block",
                              },
                              "kind": "if",
                              "shortForm": false,
                              "test": Bin {
                                "kind": "bin",
                                "left": OffsetLookup {
                                  "kind": "offsetlookup",
                                  "offset": String {
                                    "isDoubleQuote": false,
                                    "kind": "string",
                                    "raw": "'native_type'",
                                    "unicode": false,
                                    "value": "native_type",
                                  },
                                  "what": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "meta",
                                  },
                                },
                                "right": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "type",
                                },
                                "type": "==",
                              },
                            },
                          ],
                          "kind": "block",
                        },
                        "key": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "k",
                        },
                        "kind": "foreach",
                        "shortForm": false,
                        "source": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "native_type",
                        },
                        "value": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "type",
                        },
                      },
                      If {
                        "alternate": null,
                        "body": Block {
                          "children": Array [
                            ExpressionStatement {
                              "expression": Call {
                                "arguments": Array [
                                  String {
                                    "isDoubleQuote": true,
                                    "kind": "string",
                                    "raw": "\\"[%03d + 6] Expecting native type %s, %s\\\\n\\"",
                                    "unicode": false,
                                    "value": "[%03d + 6] Expecting native type %s, %s
",
                                  },
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "offset",
                                  },
                                  Call {
                                    "arguments": Array [
                                      Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "native_type",
                                      },
                                      Boolean {
                                        "kind": "boolean",
                                        "raw": "true",
                                        "value": true,
                                      },
                                    ],
                                    "kind": "call",
                                    "what": Name {
                                      "kind": "name",
                                      "name": "var_export",
                                      "resolution": "uqn",
                                    },
                                  },
                                  Call {
                                    "arguments": Array [
                                      Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "meta",
                                      },
                                      Boolean {
                                        "kind": "boolean",
                                        "raw": "true",
                                        "value": true,
                                      },
                                    ],
                                    "kind": "call",
                                    "what": Name {
                                      "kind": "name",
                                      "name": "var_export",
                                      "resolution": "uqn",
                                    },
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "printf",
                                  "resolution": "uqn",
                                },
                              },
                              "kind": "expressionstatement",
                            },
                            Return {
                              "expr": Boolean {
                                "kind": "boolean",
                                "raw": "false",
                                "value": false,
                              },
                              "kind": "return",
                            },
                          ],
                          "kind": "block",
                        },
                        "kind": "if",
                        "shortForm": false,
                        "test": Unary {
                          "kind": "unary",
                          "type": "!",
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "found",
                          },
                        },
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Unary {
                    "kind": "unary",
                    "type": "!",
                    "what": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "native_type",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "is_null",
                        "resolution": "uqn",
                      },
                    },
                  },
                },
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"[%03d + 6] Expecting PDO type %s got %s (%s)\\\\n\\"",
                              "unicode": false,
                              "value": "[%03d + 6] Expecting PDO type %s got %s (%s)
",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "offset",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "pdo_type",
                            },
                            Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "meta",
                                },
                                Boolean {
                                  "kind": "boolean",
                                  "raw": "true",
                                  "value": true,
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "var_export",
                                "resolution": "uqn",
                              },
                            },
                            Call {
                              "arguments": Array [
                                OffsetLookup {
                                  "kind": "offsetlookup",
                                  "offset": String {
                                    "isDoubleQuote": false,
                                    "kind": "string",
                                    "raw": "'native_type'",
                                    "unicode": false,
                                    "value": "native_type",
                                  },
                                  "what": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "meta",
                                  },
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "var_export",
                                "resolution": "uqn",
                              },
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "printf",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      Return {
                        "expr": Boolean {
                          "kind": "boolean",
                          "raw": "false",
                          "value": false,
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Unary {
                      "kind": "unary",
                      "type": "!",
                      "what": Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "pdo_type",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "is_null",
                          "resolution": "uqn",
                        },
                      },
                    },
                    "right": Bin {
                      "kind": "bin",
                      "left": OffsetLookup {
                        "kind": "offsetlookup",
                        "offset": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'pdo_type'",
                          "unicode": false,
                          "value": "pdo_type",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "meta",
                        },
                      },
                      "parenthesizedExpression": true,
                      "right": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "pdo_type",
                      },
                      "type": "!=",
                    },
                    "type": "&&",
                  },
                },
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "true",
                    "value": true,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "byref": false,
            "kind": "function",
            "name": Identifier {
              "kind": "identifier",
              "name": "test_meta",
            },
            "nullable": false,
            "type": null,
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "stmt",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'SELECT @@sql_mode AS _mode'",
                    "unicode": false,
                    "value": "SELECT @@sql_mode AS _mode",
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "prepare",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "db",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "execute",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "row",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  StaticLookup {
                    "kind": "staticlookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "FETCH_ASSOC",
                    },
                    "what": Name {
                      "kind": "name",
                      "name": "PDO",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "fetch",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "real_as_float",
              },
              "operator": "=",
              "right": RetIf {
                "falseExpr": Boolean {
                  "kind": "boolean",
                  "raw": "true",
                  "value": true,
                },
                "kind": "retif",
                "test": Bin {
                  "kind": "bin",
                  "left": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "parenthesizedExpression": true,
                  "right": Call {
                    "arguments": Array [
                      OffsetLookup {
                        "kind": "offsetlookup",
                        "offset": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'_mode'",
                          "unicode": false,
                          "value": "_mode",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "row",
                        },
                      },
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"REAL_AS_FLOAT\\"",
                        "unicode": false,
                        "value": "REAL_AS_FLOAT",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "stristr",
                      "resolution": "uqn",
                    },
                  },
                  "type": "===",
                },
                "trueExpr": Boolean {
                  "kind": "boolean",
                  "raw": "false",
                  "value": false,
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "ATTR_STRINGIFY_FETCHES",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
                Boolean {
                  "kind": "boolean",
                  "raw": "false",
                  "value": false,
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "setAttribute",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "20",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'BIT(8)'",
                  "unicode": false,
                  "value": "BIT(8)",
                },
                Number {
                  "kind": "number",
                  "value": "1",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'BIT'",
                  "unicode": false,
                  "value": "BIT",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_INT",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "30",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'TINYINT'",
                  "unicode": false,
                  "value": "TINYINT",
                },
                Unary {
                  "kind": "unary",
                  "type": "-",
                  "what": Number {
                    "kind": "number",
                    "value": "127",
                  },
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'TINY'",
                  "unicode": false,
                  "value": "TINY",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_INT",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "40",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'TINYINT UNSIGNED'",
                  "unicode": false,
                  "value": "TINYINT UNSIGNED",
                },
                Number {
                  "kind": "number",
                  "value": "255",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'TINY'",
                  "unicode": false,
                  "value": "TINY",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_INT",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "50",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'BOOLEAN'",
                  "unicode": false,
                  "value": "BOOLEAN",
                },
                Number {
                  "kind": "number",
                  "value": "1",
                },
                NullKeyword {
                  "kind": "nullkeyword",
                  "raw": "NULL",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_INT",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "60",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'SMALLINT'",
                  "unicode": false,
                  "value": "SMALLINT",
                },
                Unary {
                  "kind": "unary",
                  "type": "-",
                  "what": Number {
                    "kind": "number",
                    "value": "32768",
                  },
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'SHORT'",
                  "unicode": false,
                  "value": "SHORT",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_INT",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "70",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'SMALLINT UNSIGNED'",
                  "unicode": false,
                  "value": "SMALLINT UNSIGNED",
                },
                Number {
                  "kind": "number",
                  "value": "65535",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'SHORT'",
                  "unicode": false,
                  "value": "SHORT",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_INT",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "80",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'MEDIUMINT'",
                  "unicode": false,
                  "value": "MEDIUMINT",
                },
                Unary {
                  "kind": "unary",
                  "type": "-",
                  "what": Number {
                    "kind": "number",
                    "value": "8388608",
                  },
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'INT24'",
                  "unicode": false,
                  "value": "INT24",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_INT",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "90",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'MEDIUMINT UNSIGNED'",
                  "unicode": false,
                  "value": "MEDIUMINT UNSIGNED",
                },
                Number {
                  "kind": "number",
                  "value": "16777215",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'INT24'",
                  "unicode": false,
                  "value": "INT24",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_INT",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "100",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'INT'",
                  "unicode": false,
                  "value": "INT",
                },
                Unary {
                  "kind": "unary",
                  "type": "-",
                  "what": Number {
                    "kind": "number",
                    "value": "2147483648",
                  },
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'LONG'",
                  "unicode": false,
                  "value": "LONG",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_INT",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "110",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'INT UNSIGNED'",
                  "unicode": false,
                  "value": "INT UNSIGNED",
                },
                Number {
                  "kind": "number",
                  "value": "4294967295",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'LONG'",
                  "unicode": false,
                  "value": "LONG",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_INT",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "120",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'BIGINT'",
                  "unicode": false,
                  "value": "BIGINT",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'-9223372036854775808'",
                  "unicode": false,
                  "value": "-9223372036854775808",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'LONGLONG'",
                  "unicode": false,
                  "value": "LONGLONG",
                },
                RetIf {
                  "falseExpr": StaticLookup {
                    "kind": "staticlookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "PARAM_INT",
                    },
                    "what": Name {
                      "kind": "name",
                      "name": "PDO",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "retif",
                  "test": Bin {
                    "kind": "bin",
                    "left": Name {
                      "kind": "name",
                      "name": "PHP_INT_SIZE",
                      "resolution": "uqn",
                    },
                    "parenthesizedExpression": true,
                    "right": Number {
                      "kind": "number",
                      "value": "4",
                    },
                    "type": "==",
                  },
                  "trueExpr": StaticLookup {
                    "kind": "staticlookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "PARAM_STR",
                    },
                    "what": Name {
                      "kind": "name",
                      "name": "PDO",
                      "resolution": "uqn",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "130",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'BIGINT UNSIGNED'",
                  "unicode": false,
                  "value": "BIGINT UNSIGNED",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'18446744073709551615'",
                  "unicode": false,
                  "value": "18446744073709551615",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'LONGLONG'",
                  "unicode": false,
                  "value": "LONGLONG",
                },
                RetIf {
                  "falseExpr": StaticLookup {
                    "kind": "staticlookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "PARAM_INT",
                    },
                    "what": Name {
                      "kind": "name",
                      "name": "PDO",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "retif",
                  "test": Bin {
                    "kind": "bin",
                    "left": Name {
                      "kind": "name",
                      "name": "PHP_INT_SIZE",
                      "resolution": "uqn",
                    },
                    "parenthesizedExpression": true,
                    "right": Number {
                      "kind": "number",
                      "value": "4",
                    },
                    "type": "==",
                  },
                  "trueExpr": StaticLookup {
                    "kind": "staticlookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "PARAM_STR",
                    },
                    "what": Name {
                      "kind": "name",
                      "name": "PDO",
                      "resolution": "uqn",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "130",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'REAL'",
                  "unicode": false,
                  "value": "REAL",
                },
                Unary {
                  "kind": "unary",
                  "type": "-",
                  "what": Number {
                    "kind": "number",
                    "value": "1.01",
                  },
                },
                RetIf {
                  "falseExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'DOUBLE'",
                    "unicode": false,
                    "value": "DOUBLE",
                  },
                  "kind": "retif",
                  "test": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "real_as_float",
                    "parenthesizedExpression": true,
                  },
                  "trueExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'FLOAT'",
                    "unicode": false,
                    "value": "FLOAT",
                  },
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "140",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'REAL UNSIGNED'",
                  "unicode": false,
                  "value": "REAL UNSIGNED",
                },
                Number {
                  "kind": "number",
                  "value": "1.01",
                },
                RetIf {
                  "falseExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'DOUBLE'",
                    "unicode": false,
                    "value": "DOUBLE",
                  },
                  "kind": "retif",
                  "test": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "real_as_float",
                    "parenthesizedExpression": true,
                  },
                  "trueExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'FLOAT'",
                    "unicode": false,
                    "value": "FLOAT",
                  },
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "150",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'REAL ZEROFILL'",
                  "unicode": false,
                  "value": "REAL ZEROFILL",
                },
                Number {
                  "kind": "number",
                  "value": "1.01",
                },
                RetIf {
                  "falseExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'DOUBLE'",
                    "unicode": false,
                    "value": "DOUBLE",
                  },
                  "kind": "retif",
                  "test": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "real_as_float",
                    "parenthesizedExpression": true,
                  },
                  "trueExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'FLOAT'",
                    "unicode": false,
                    "value": "FLOAT",
                  },
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "160",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'REAL UNSIGNED ZEROFILL'",
                  "unicode": false,
                  "value": "REAL UNSIGNED ZEROFILL",
                },
                Number {
                  "kind": "number",
                  "value": "1.01",
                },
                RetIf {
                  "falseExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'DOUBLE'",
                    "unicode": false,
                    "value": "DOUBLE",
                  },
                  "kind": "retif",
                  "test": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "real_as_float",
                    "parenthesizedExpression": true,
                  },
                  "trueExpr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'FLOAT'",
                    "unicode": false,
                    "value": "FLOAT",
                  },
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "170",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'DOUBLE'",
                  "unicode": false,
                  "value": "DOUBLE",
                },
                Unary {
                  "kind": "unary",
                  "type": "-",
                  "what": Number {
                    "kind": "number",
                    "value": "1.01",
                  },
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'DOUBLE'",
                  "unicode": false,
                  "value": "DOUBLE",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "180",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'DOUBLE UNSIGNED'",
                  "unicode": false,
                  "value": "DOUBLE UNSIGNED",
                },
                Number {
                  "kind": "number",
                  "value": "1.01",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'DOUBLE'",
                  "unicode": false,
                  "value": "DOUBLE",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "190",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'DOUBLE ZEROFILL'",
                  "unicode": false,
                  "value": "DOUBLE ZEROFILL",
                },
                Number {
                  "kind": "number",
                  "value": "1.01",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'DOUBLE'",
                  "unicode": false,
                  "value": "DOUBLE",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "200",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'DOUBLE UNSIGNED ZEROFILL'",
                  "unicode": false,
                  "value": "DOUBLE UNSIGNED ZEROFILL",
                },
                Number {
                  "kind": "number",
                  "value": "1.01",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'DOUBLE'",
                  "unicode": false,
                  "value": "DOUBLE",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "210",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'FLOAT'",
                  "unicode": false,
                  "value": "FLOAT",
                },
                Unary {
                  "kind": "unary",
                  "type": "-",
                  "what": Number {
                    "kind": "number",
                    "value": "1.01",
                  },
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'FLOAT'",
                  "unicode": false,
                  "value": "FLOAT",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "220",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'FLOAT UNSIGNED'",
                  "unicode": false,
                  "value": "FLOAT UNSIGNED",
                },
                Number {
                  "kind": "number",
                  "value": "1.01",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'FLOAT'",
                  "unicode": false,
                  "value": "FLOAT",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "230",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'FLOAT ZEROFILL'",
                  "unicode": false,
                  "value": "FLOAT ZEROFILL",
                },
                Number {
                  "kind": "number",
                  "value": "1.01",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'FLOAT'",
                  "unicode": false,
                  "value": "FLOAT",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "240",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'FLOAT UNSIGNED ZEROFILL'",
                  "unicode": false,
                  "value": "FLOAT UNSIGNED ZEROFILL",
                },
                Number {
                  "kind": "number",
                  "value": "1.01",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'FLOAT'",
                  "unicode": false,
                  "value": "FLOAT",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "250",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'DECIMAL'",
                  "unicode": false,
                  "value": "DECIMAL",
                },
                Unary {
                  "kind": "unary",
                  "type": "-",
                  "what": Number {
                    "kind": "number",
                    "value": "1.01",
                  },
                },
                Array {
                  "items": Array [
                    Entry {
                      "byRef": false,
                      "key": null,
                      "kind": "entry",
                      "unpack": false,
                      "value": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'DECIMAL'",
                        "unicode": false,
                        "value": "DECIMAL",
                      },
                    },
                    Entry {
                      "byRef": false,
                      "key": null,
                      "kind": "entry",
                      "unpack": false,
                      "value": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'NEWDECIMAL'",
                        "unicode": false,
                        "value": "NEWDECIMAL",
                      },
                    },
                  ],
                  "kind": "array",
                  "shortForm": false,
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "260",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'DECIMAL UNSIGNED'",
                  "unicode": false,
                  "value": "DECIMAL UNSIGNED",
                },
                Number {
                  "kind": "number",
                  "value": "1.01",
                },
                Array {
                  "items": Array [
                    Entry {
                      "byRef": false,
                      "key": null,
                      "kind": "entry",
                      "unpack": false,
                      "value": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'DECIMAL'",
                        "unicode": false,
                        "value": "DECIMAL",
                      },
                    },
                    Entry {
                      "byRef": false,
                      "key": null,
                      "kind": "entry",
                      "unpack": false,
                      "value": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'NEWDECIMAL'",
                        "unicode": false,
                        "value": "NEWDECIMAL",
                      },
                    },
                  ],
                  "kind": "array",
                  "shortForm": false,
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "270",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'DECIMAL ZEROFILL'",
                  "unicode": false,
                  "value": "DECIMAL ZEROFILL",
                },
                Number {
                  "kind": "number",
                  "value": "1.01",
                },
                Array {
                  "items": Array [
                    Entry {
                      "byRef": false,
                      "key": null,
                      "kind": "entry",
                      "unpack": false,
                      "value": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'DECIMAL'",
                        "unicode": false,
                        "value": "DECIMAL",
                      },
                    },
                    Entry {
                      "byRef": false,
                      "key": null,
                      "kind": "entry",
                      "unpack": false,
                      "value": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'NEWDECIMAL'",
                        "unicode": false,
                        "value": "NEWDECIMAL",
                      },
                    },
                  ],
                  "kind": "array",
                  "shortForm": false,
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "280",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'DECIMAL UNSIGNED ZEROFILL'",
                  "unicode": false,
                  "value": "DECIMAL UNSIGNED ZEROFILL",
                },
                Number {
                  "kind": "number",
                  "value": "1.01",
                },
                Array {
                  "items": Array [
                    Entry {
                      "byRef": false,
                      "key": null,
                      "kind": "entry",
                      "unpack": false,
                      "value": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'DECIMAL'",
                        "unicode": false,
                        "value": "DECIMAL",
                      },
                    },
                    Entry {
                      "byRef": false,
                      "key": null,
                      "kind": "entry",
                      "unpack": false,
                      "value": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'NEWDECIMAL'",
                        "unicode": false,
                        "value": "NEWDECIMAL",
                      },
                    },
                  ],
                  "kind": "array",
                  "shortForm": false,
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "290",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'NUMERIC'",
                  "unicode": false,
                  "value": "NUMERIC",
                },
                Unary {
                  "kind": "unary",
                  "type": "-",
                  "what": Number {
                    "kind": "number",
                    "value": "1.01",
                  },
                },
                Array {
                  "items": Array [
                    Entry {
                      "byRef": false,
                      "key": null,
                      "kind": "entry",
                      "unpack": false,
                      "value": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'DECIMAL'",
                        "unicode": false,
                        "value": "DECIMAL",
                      },
                    },
                    Entry {
                      "byRef": false,
                      "key": null,
                      "kind": "entry",
                      "unpack": false,
                      "value": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'NEWDECIMAL'",
                        "unicode": false,
                        "value": "NEWDECIMAL",
                      },
                    },
                  ],
                  "kind": "array",
                  "shortForm": false,
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "300",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'NUMERIC UNSIGNED'",
                  "unicode": false,
                  "value": "NUMERIC UNSIGNED",
                },
                Number {
                  "kind": "number",
                  "value": "1.01",
                },
                Array {
                  "items": Array [
                    Entry {
                      "byRef": false,
                      "key": null,
                      "kind": "entry",
                      "unpack": false,
                      "value": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'DECIMAL'",
                        "unicode": false,
                        "value": "DECIMAL",
                      },
                    },
                    Entry {
                      "byRef": false,
                      "key": null,
                      "kind": "entry",
                      "unpack": false,
                      "value": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'NEWDECIMAL'",
                        "unicode": false,
                        "value": "NEWDECIMAL",
                      },
                    },
                  ],
                  "kind": "array",
                  "shortForm": false,
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "310",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'NUMERIC ZEROFILL'",
                  "unicode": false,
                  "value": "NUMERIC ZEROFILL",
                },
                Number {
                  "kind": "number",
                  "value": "1.01",
                },
                Array {
                  "items": Array [
                    Entry {
                      "byRef": false,
                      "key": null,
                      "kind": "entry",
                      "unpack": false,
                      "value": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'DECIMAL'",
                        "unicode": false,
                        "value": "DECIMAL",
                      },
                    },
                    Entry {
                      "byRef": false,
                      "key": null,
                      "kind": "entry",
                      "unpack": false,
                      "value": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'NEWDECIMAL'",
                        "unicode": false,
                        "value": "NEWDECIMAL",
                      },
                    },
                  ],
                  "kind": "array",
                  "shortForm": false,
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "320",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'NUMERIC UNSIGNED ZEROFILL'",
                  "unicode": false,
                  "value": "NUMERIC UNSIGNED ZEROFILL",
                },
                Number {
                  "kind": "number",
                  "value": "1.01",
                },
                Array {
                  "items": Array [
                    Entry {
                      "byRef": false,
                      "key": null,
                      "kind": "entry",
                      "unpack": false,
                      "value": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'DECIMAL'",
                        "unicode": false,
                        "value": "DECIMAL",
                      },
                    },
                    Entry {
                      "byRef": false,
                      "key": null,
                      "kind": "entry",
                      "unpack": false,
                      "value": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'NEWDECIMAL'",
                        "unicode": false,
                        "value": "NEWDECIMAL",
                      },
                    },
                  ],
                  "kind": "array",
                  "shortForm": false,
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "330",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'DATE'",
                  "unicode": false,
                  "value": "DATE",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'2008-04-23'",
                  "unicode": false,
                  "value": "2008-04-23",
                },
                Array {
                  "items": Array [
                    Entry {
                      "byRef": false,
                      "key": null,
                      "kind": "entry",
                      "unpack": false,
                      "value": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'DATE'",
                        "unicode": false,
                        "value": "DATE",
                      },
                    },
                    Entry {
                      "byRef": false,
                      "key": null,
                      "kind": "entry",
                      "unpack": false,
                      "value": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'NEWDATE'",
                        "unicode": false,
                        "value": "NEWDATE",
                      },
                    },
                  ],
                  "kind": "array",
                  "shortForm": false,
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "340",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'TIME'",
                  "unicode": false,
                  "value": "TIME",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'14:37:00'",
                  "unicode": false,
                  "value": "14:37:00",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'TIME'",
                  "unicode": false,
                  "value": "TIME",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "350",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'TIMESTAMP'",
                  "unicode": false,
                  "value": "TIMESTAMP",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'2008-03-23 14:38:00'",
                  "unicode": false,
                  "value": "2008-03-23 14:38:00",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'TIMESTAMP'",
                  "unicode": false,
                  "value": "TIMESTAMP",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "360",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'DATETIME'",
                  "unicode": false,
                  "value": "DATETIME",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'2008-03-23 14:38:00'",
                  "unicode": false,
                  "value": "2008-03-23 14:38:00",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'DATETIME'",
                  "unicode": false,
                  "value": "DATETIME",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "370",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'YEAR'",
                  "unicode": false,
                  "value": "YEAR",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'2008'",
                  "unicode": false,
                  "value": "2008",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'YEAR'",
                  "unicode": false,
                  "value": "YEAR",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_INT",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "380",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'CHAR(1)'",
                  "unicode": false,
                  "value": "CHAR(1)",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'a'",
                  "unicode": false,
                  "value": "a",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'STRING'",
                  "unicode": false,
                  "value": "STRING",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "390",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'CHAR(10)'",
                  "unicode": false,
                  "value": "CHAR(10)",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'0123456789'",
                  "unicode": false,
                  "value": "0123456789",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'STRING'",
                  "unicode": false,
                  "value": "STRING",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "400",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'CHAR(255)'",
                  "unicode": false,
                  "value": "CHAR(255)",
                },
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'z'",
                      "unicode": false,
                      "value": "z",
                    },
                    Number {
                      "kind": "number",
                      "value": "255",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "str_repeat",
                    "resolution": "uqn",
                  },
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'STRING'",
                  "unicode": false,
                  "value": "STRING",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "410",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'VARCHAR(1)'",
                  "unicode": false,
                  "value": "VARCHAR(1)",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'a'",
                  "unicode": false,
                  "value": "a",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'VAR_STRING'",
                  "unicode": false,
                  "value": "VAR_STRING",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "420",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'VARCHAR(10)'",
                  "unicode": false,
                  "value": "VARCHAR(10)",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'0123456789'",
                  "unicode": false,
                  "value": "0123456789",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'VAR_STRING'",
                  "unicode": false,
                  "value": "VAR_STRING",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "430",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'VARCHAR(255)'",
                  "unicode": false,
                  "value": "VARCHAR(255)",
                },
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'z'",
                      "unicode": false,
                      "value": "z",
                    },
                    Number {
                      "kind": "number",
                      "value": "255",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "str_repeat",
                    "resolution": "uqn",
                  },
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'VAR_STRING'",
                  "unicode": false,
                  "value": "VAR_STRING",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "440",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'BINARY(1)'",
                  "unicode": false,
                  "value": "BINARY(1)",
                },
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'a'",
                      "unicode": false,
                      "value": "a",
                    },
                    Number {
                      "kind": "number",
                      "value": "1",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "str_repeat",
                    "resolution": "uqn",
                  },
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'STRING'",
                  "unicode": false,
                  "value": "STRING",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "450",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'BINARY(255)'",
                  "unicode": false,
                  "value": "BINARY(255)",
                },
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'b'",
                      "unicode": false,
                      "value": "b",
                    },
                    Number {
                      "kind": "number",
                      "value": "255",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "str_repeat",
                    "resolution": "uqn",
                  },
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'STRING'",
                  "unicode": false,
                  "value": "STRING",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "460",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'VARBINARY(1)'",
                  "unicode": false,
                  "value": "VARBINARY(1)",
                },
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'a'",
                      "unicode": false,
                      "value": "a",
                    },
                    Number {
                      "kind": "number",
                      "value": "1",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "str_repeat",
                    "resolution": "uqn",
                  },
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'VAR_STRING'",
                  "unicode": false,
                  "value": "VAR_STRING",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "470",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'VARBINARY(255)'",
                  "unicode": false,
                  "value": "VARBINARY(255)",
                },
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'b'",
                      "unicode": false,
                      "value": "b",
                    },
                    Number {
                      "kind": "number",
                      "value": "255",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "str_repeat",
                    "resolution": "uqn",
                  },
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'VAR_STRING'",
                  "unicode": false,
                  "value": "VAR_STRING",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "480",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'TINYBLOB'",
                  "unicode": false,
                  "value": "TINYBLOB",
                },
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'b'",
                      "unicode": false,
                      "value": "b",
                    },
                    Number {
                      "kind": "number",
                      "value": "255",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "str_repeat",
                    "resolution": "uqn",
                  },
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'BLOB'",
                  "unicode": false,
                  "value": "BLOB",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "490",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'BLOB'",
                  "unicode": false,
                  "value": "BLOB",
                },
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'b'",
                      "unicode": false,
                      "value": "b",
                    },
                    Number {
                      "kind": "number",
                      "value": "256",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "str_repeat",
                    "resolution": "uqn",
                  },
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'BLOB'",
                  "unicode": false,
                  "value": "BLOB",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "500",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'MEDIUMBLOB'",
                  "unicode": false,
                  "value": "MEDIUMBLOB",
                },
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'b'",
                      "unicode": false,
                      "value": "b",
                    },
                    Number {
                      "kind": "number",
                      "value": "256",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "str_repeat",
                    "resolution": "uqn",
                  },
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'BLOB'",
                  "unicode": false,
                  "value": "BLOB",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "510",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'LONGBLOB'",
                  "unicode": false,
                  "value": "LONGBLOB",
                },
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'b'",
                      "unicode": false,
                      "value": "b",
                    },
                    Number {
                      "kind": "number",
                      "value": "256",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "str_repeat",
                    "resolution": "uqn",
                  },
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'BLOB'",
                  "unicode": false,
                  "value": "BLOB",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "520",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'TINYTEXT'",
                  "unicode": false,
                  "value": "TINYTEXT",
                },
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'b'",
                      "unicode": false,
                      "value": "b",
                    },
                    Number {
                      "kind": "number",
                      "value": "255",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "str_repeat",
                    "resolution": "uqn",
                  },
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'BLOB'",
                  "unicode": false,
                  "value": "BLOB",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "530",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'TINYTEXT BINARY'",
                  "unicode": false,
                  "value": "TINYTEXT BINARY",
                },
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'b'",
                      "unicode": false,
                      "value": "b",
                    },
                    Number {
                      "kind": "number",
                      "value": "255",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "str_repeat",
                    "resolution": "uqn",
                  },
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'BLOB'",
                  "unicode": false,
                  "value": "BLOB",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "560",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'TEXT'",
                  "unicode": false,
                  "value": "TEXT",
                },
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'b'",
                      "unicode": false,
                      "value": "b",
                    },
                    Number {
                      "kind": "number",
                      "value": "256",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "str_repeat",
                    "resolution": "uqn",
                  },
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'BLOB'",
                  "unicode": false,
                  "value": "BLOB",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "570",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'TEXT BINARY'",
                  "unicode": false,
                  "value": "TEXT BINARY",
                },
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'b'",
                      "unicode": false,
                      "value": "b",
                    },
                    Number {
                      "kind": "number",
                      "value": "256",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "str_repeat",
                    "resolution": "uqn",
                  },
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'BLOB'",
                  "unicode": false,
                  "value": "BLOB",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "580",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'MEDIUMTEXT'",
                  "unicode": false,
                  "value": "MEDIUMTEXT",
                },
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'b'",
                      "unicode": false,
                      "value": "b",
                    },
                    Number {
                      "kind": "number",
                      "value": "256",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "str_repeat",
                    "resolution": "uqn",
                  },
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'BLOB'",
                  "unicode": false,
                  "value": "BLOB",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "590",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'MEDIUMTEXT BINARY'",
                  "unicode": false,
                  "value": "MEDIUMTEXT BINARY",
                },
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'b'",
                      "unicode": false,
                      "value": "b",
                    },
                    Number {
                      "kind": "number",
                      "value": "256",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "str_repeat",
                    "resolution": "uqn",
                  },
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'BLOB'",
                  "unicode": false,
                  "value": "BLOB",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "600",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'LONGTEXT'",
                  "unicode": false,
                  "value": "LONGTEXT",
                },
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'b'",
                      "unicode": false,
                      "value": "b",
                    },
                    Number {
                      "kind": "number",
                      "value": "256",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "str_repeat",
                    "resolution": "uqn",
                  },
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'BLOB'",
                  "unicode": false,
                  "value": "BLOB",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "610",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'LONGTEXT BINARY'",
                  "unicode": false,
                  "value": "LONGTEXT BINARY",
                },
                Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'b'",
                      "unicode": false,
                      "value": "b",
                    },
                    Number {
                      "kind": "number",
                      "value": "256",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "str_repeat",
                    "resolution": "uqn",
                  },
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'BLOB'",
                  "unicode": false,
                  "value": "BLOB",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "620",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"ENUM('yes', 'no') DEFAULT 'yes'\\"",
                  "unicode": false,
                  "value": "ENUM('yes', 'no') DEFAULT 'yes'",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'no'",
                  "unicode": false,
                  "value": "no",
                },
                NullKeyword {
                  "kind": "nullkeyword",
                  "raw": "NULL",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
                Number {
                  "kind": "number",
                  "value": "630",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"SET('yes', 'no') DEFAULT 'yes'\\"",
                  "unicode": false,
                  "value": "SET('yes', 'no') DEFAULT 'yes'",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'no'",
                  "unicode": false,
                  "value": "no",
                },
                NullKeyword {
                  "kind": "nullkeyword",
                  "raw": "NULL",
                },
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "PARAM_STR",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test_meta",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'DROP TABLE IF EXISTS test'",
                  "unicode": false,
                  "value": "DROP TABLE IF EXISTS test",
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "exec",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "sql",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'CREATE TABLE test(id INT, label INT UNIQUE) ENGINE = %s'",
                    "unicode": false,
                    "value": "CREATE TABLE test(id INT, label INT UNIQUE) ENGINE = %s",
                  },
                  Call {
                    "arguments": Array [],
                    "kind": "call",
                    "what": StaticLookup {
                      "kind": "staticlookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "getTableEngine",
                      },
                      "what": Name {
                        "kind": "name",
                        "name": "MySQLPDOTest",
                        "resolution": "uqn",
                      },
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "sprintf",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'INSERT INTO test(id, label) VALUES (1, 2)'",
                        "unicode": false,
                        "value": "INSERT INTO test(id, label) VALUES (1, 2)",
                      },
                    ],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "exec",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "db",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "stmt",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'SELECT id, label FROM test'",
                          "unicode": false,
                          "value": "SELECT id, label FROM test",
                        },
                      ],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "query",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "db",
                        },
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "meta",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Number {
                          "kind": "number",
                          "value": "1",
                        },
                      ],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getColumnMeta",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "stmt",
                        },
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                If {
                  "alternate": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "flags",
                          },
                          "operator": "=",
                          "right": OffsetLookup {
                            "kind": "offsetlookup",
                            "offset": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "'flags'",
                              "unicode": false,
                              "value": "flags",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "meta",
                            },
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "found",
                          },
                          "operator": "=",
                          "right": Boolean {
                            "kind": "boolean",
                            "raw": "false",
                            "value": false,
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      Foreach {
                        "body": Block {
                          "children": Array [
                            If {
                              "alternate": null,
                              "body": ExpressionStatement {
                                "expression": Assign {
                                  "kind": "assign",
                                  "left": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "found",
                                  },
                                  "operator": "=",
                                  "right": Boolean {
                                    "kind": "boolean",
                                    "raw": "true",
                                    "value": true,
                                  },
                                },
                                "kind": "expressionstatement",
                              },
                              "kind": "if",
                              "shortForm": false,
                              "test": Bin {
                                "kind": "bin",
                                "left": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "flag",
                                },
                                "right": String {
                                  "isDoubleQuote": false,
                                  "kind": "string",
                                  "raw": "'unique_key'",
                                  "unicode": false,
                                  "value": "unique_key",
                                },
                                "type": "==",
                              },
                            },
                          ],
                          "kind": "block",
                        },
                        "key": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "k",
                        },
                        "kind": "foreach",
                        "shortForm": false,
                        "source": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "flags",
                        },
                        "value": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "flag",
                        },
                      },
                      If {
                        "alternate": null,
                        "body": ExpressionStatement {
                          "expression": Call {
                            "arguments": Array [
                              String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"[1001] Flags seem wrong %s\\\\n\\"",
                                "unicode": false,
                                "value": "[1001] Flags seem wrong %s
",
                              },
                              Call {
                                "arguments": Array [
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "meta",
                                  },
                                  Boolean {
                                    "kind": "boolean",
                                    "raw": "true",
                                    "value": true,
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "var_export",
                                  "resolution": "uqn",
                                },
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "printf",
                              "resolution": "uqn",
                            },
                          },
                          "kind": "expressionstatement",
                        },
                        "kind": "if",
                        "shortForm": false,
                        "test": Unary {
                          "kind": "unary",
                          "type": "!",
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "found",
                          },
                        },
                      },
                    ],
                    "kind": "block",
                  },
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"[1000] No flags contained in metadata %s\\\\n\\"",
                              "unicode": false,
                              "value": "[1000] No flags contained in metadata %s
",
                            },
                            Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "meta",
                                },
                                Boolean {
                                  "kind": "boolean",
                                  "raw": "true",
                                  "value": true,
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "var_export",
                                "resolution": "uqn",
                              },
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "printf",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Unary {
                    "kind": "unary",
                    "type": "!",
                    "what": Isset {
                      "kind": "isset",
                      "variables": Array [
                        OffsetLookup {
                          "kind": "offsetlookup",
                          "offset": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'flags'",
                            "unicode": false,
                            "value": "flags",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "meta",
                          },
                        },
                      ],
                    },
                  },
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
                "operator": "=",
                "parenthesizedExpression": true,
                "right": Silent {
                  "expr": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "sql",
                      },
                    ],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "prepare",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "db",
                      },
                    },
                  },
                  "kind": "silent",
                },
              },
              "right": Silent {
                "expr": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "execute",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "stmt",
                    },
                  },
                },
                "kind": "silent",
              },
              "type": "&&",
            },
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'DROP TABLE IF EXISTS test'",
                  "unicode": false,
                  "value": "DROP TABLE IF EXISTS test",
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "exec",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "sql",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'CREATE TABLE test(id INT PRIMARY KEY NOT NULL AUTO_INCREMENT) ENGINE = %s'",
                    "unicode": false,
                    "value": "CREATE TABLE test(id INT PRIMARY KEY NOT NULL AUTO_INCREMENT) ENGINE = %s",
                  },
                  Call {
                    "arguments": Array [],
                    "kind": "call",
                    "what": StaticLookup {
                      "kind": "staticlookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "getTableEngine",
                      },
                      "what": Name {
                        "kind": "name",
                        "name": "MySQLPDOTest",
                        "resolution": "uqn",
                      },
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "sprintf",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'INSERT INTO test(id) VALUES (1)'",
                        "unicode": false,
                        "value": "INSERT INTO test(id) VALUES (1)",
                      },
                    ],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "exec",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "db",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "stmt",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'SELECT id FROM test'",
                          "unicode": false,
                          "value": "SELECT id FROM test",
                        },
                      ],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "query",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "db",
                        },
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "meta",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Number {
                          "kind": "number",
                          "value": "0",
                        },
                      ],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getColumnMeta",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "stmt",
                        },
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                If {
                  "alternate": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "flags",
                          },
                          "operator": "=",
                          "right": OffsetLookup {
                            "kind": "offsetlookup",
                            "offset": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "'flags'",
                              "unicode": false,
                              "value": "flags",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "meta",
                            },
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "found",
                          },
                          "operator": "=",
                          "right": Boolean {
                            "kind": "boolean",
                            "raw": "false",
                            "value": false,
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      Foreach {
                        "body": Block {
                          "children": Array [
                            If {
                              "alternate": null,
                              "body": ExpressionStatement {
                                "expression": Assign {
                                  "kind": "assign",
                                  "left": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "found",
                                  },
                                  "operator": "=",
                                  "right": Boolean {
                                    "kind": "boolean",
                                    "raw": "true",
                                    "value": true,
                                  },
                                },
                                "kind": "expressionstatement",
                              },
                              "kind": "if",
                              "shortForm": false,
                              "test": Bin {
                                "kind": "bin",
                                "left": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "flag",
                                },
                                "right": String {
                                  "isDoubleQuote": false,
                                  "kind": "string",
                                  "raw": "'primary_key'",
                                  "unicode": false,
                                  "value": "primary_key",
                                },
                                "type": "==",
                              },
                            },
                          ],
                          "kind": "block",
                        },
                        "key": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "k",
                        },
                        "kind": "foreach",
                        "shortForm": false,
                        "source": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "flags",
                        },
                        "value": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "flag",
                        },
                      },
                      If {
                        "alternate": null,
                        "body": ExpressionStatement {
                          "expression": Call {
                            "arguments": Array [
                              String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"[1003] Flags seem wrong %s\\\\n\\"",
                                "unicode": false,
                                "value": "[1003] Flags seem wrong %s
",
                              },
                              Call {
                                "arguments": Array [
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "meta",
                                  },
                                  Boolean {
                                    "kind": "boolean",
                                    "raw": "true",
                                    "value": true,
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "var_export",
                                  "resolution": "uqn",
                                },
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "printf",
                              "resolution": "uqn",
                            },
                          },
                          "kind": "expressionstatement",
                        },
                        "kind": "if",
                        "shortForm": false,
                        "test": Unary {
                          "kind": "unary",
                          "type": "!",
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "found",
                          },
                        },
                      },
                    ],
                    "kind": "block",
                  },
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"[1002] No flags contained in metadata %s\\\\n\\"",
                              "unicode": false,
                              "value": "[1002] No flags contained in metadata %s
",
                            },
                            Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "meta",
                                },
                                Boolean {
                                  "kind": "boolean",
                                  "raw": "true",
                                  "value": true,
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "var_export",
                                "resolution": "uqn",
                              },
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "printf",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Unary {
                    "kind": "unary",
                    "type": "!",
                    "what": Isset {
                      "kind": "isset",
                      "variables": Array [
                        OffsetLookup {
                          "kind": "offsetlookup",
                          "offset": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'flags'",
                            "unicode": false,
                            "value": "flags",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "meta",
                          },
                        },
                      ],
                    },
                  },
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
                "operator": "=",
                "parenthesizedExpression": true,
                "right": Silent {
                  "expr": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "sql",
                      },
                    ],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "prepare",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "db",
                      },
                    },
                  },
                  "kind": "silent",
                },
              },
              "right": Silent {
                "expr": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "execute",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "stmt",
                    },
                  },
                },
                "kind": "silent",
              },
              "type": "&&",
            },
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'DROP TABLE IF EXISTS test'",
                  "unicode": false,
                  "value": "DROP TABLE IF EXISTS test",
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "exec",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "sql",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'CREATE TABLE test(id INT, label1 INT, label2 INT, INDEX idx1(label1, label2)) ENGINE = %s'",
                    "unicode": false,
                    "value": "CREATE TABLE test(id INT, label1 INT, label2 INT, INDEX idx1(label1, label2)) ENGINE = %s",
                  },
                  Call {
                    "arguments": Array [],
                    "kind": "call",
                    "what": StaticLookup {
                      "kind": "staticlookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "getTableEngine",
                      },
                      "what": Name {
                        "kind": "name",
                        "name": "MySQLPDOTest",
                        "resolution": "uqn",
                      },
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "sprintf",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'INSERT INTO test(id, label1, label2) VALUES (1, 2, 3)'",
                        "unicode": false,
                        "value": "INSERT INTO test(id, label1, label2) VALUES (1, 2, 3)",
                      },
                    ],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "exec",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "db",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "stmt",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'SELECT id, label1, label2 FROM test'",
                          "unicode": false,
                          "value": "SELECT id, label1, label2 FROM test",
                        },
                      ],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "query",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "db",
                        },
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "meta",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Number {
                          "kind": "number",
                          "value": "1",
                        },
                      ],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getColumnMeta",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "stmt",
                        },
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                If {
                  "alternate": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "flags",
                          },
                          "operator": "=",
                          "right": OffsetLookup {
                            "kind": "offsetlookup",
                            "offset": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "'flags'",
                              "unicode": false,
                              "value": "flags",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "meta",
                            },
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "found",
                          },
                          "operator": "=",
                          "right": Boolean {
                            "kind": "boolean",
                            "raw": "false",
                            "value": false,
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      Foreach {
                        "body": Block {
                          "children": Array [
                            If {
                              "alternate": null,
                              "body": ExpressionStatement {
                                "expression": Assign {
                                  "kind": "assign",
                                  "left": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "found",
                                  },
                                  "operator": "=",
                                  "right": Boolean {
                                    "kind": "boolean",
                                    "raw": "true",
                                    "value": true,
                                  },
                                },
                                "kind": "expressionstatement",
                              },
                              "kind": "if",
                              "shortForm": false,
                              "test": Bin {
                                "kind": "bin",
                                "left": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "flag",
                                },
                                "right": String {
                                  "isDoubleQuote": false,
                                  "kind": "string",
                                  "raw": "'multiple_key'",
                                  "unicode": false,
                                  "value": "multiple_key",
                                },
                                "type": "==",
                              },
                            },
                          ],
                          "kind": "block",
                        },
                        "key": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "k",
                        },
                        "kind": "foreach",
                        "shortForm": false,
                        "source": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "flags",
                        },
                        "value": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "flag",
                        },
                      },
                      If {
                        "alternate": null,
                        "body": ExpressionStatement {
                          "expression": Call {
                            "arguments": Array [
                              String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"[1005] Flags seem wrong %s\\\\n\\"",
                                "unicode": false,
                                "value": "[1005] Flags seem wrong %s
",
                              },
                              Call {
                                "arguments": Array [
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "meta",
                                  },
                                  Boolean {
                                    "kind": "boolean",
                                    "raw": "true",
                                    "value": true,
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "var_export",
                                  "resolution": "uqn",
                                },
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "printf",
                              "resolution": "uqn",
                            },
                          },
                          "kind": "expressionstatement",
                        },
                        "kind": "if",
                        "shortForm": false,
                        "test": Unary {
                          "kind": "unary",
                          "type": "!",
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "found",
                          },
                        },
                      },
                    ],
                    "kind": "block",
                  },
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"[1004] No flags contained in metadata %s\\\\n\\"",
                              "unicode": false,
                              "value": "[1004] No flags contained in metadata %s
",
                            },
                            Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "meta",
                                },
                                Boolean {
                                  "kind": "boolean",
                                  "raw": "true",
                                  "value": true,
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "var_export",
                                "resolution": "uqn",
                              },
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "printf",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Unary {
                    "kind": "unary",
                    "type": "!",
                    "what": Isset {
                      "kind": "isset",
                      "variables": Array [
                        OffsetLookup {
                          "kind": "offsetlookup",
                          "offset": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'flags'",
                            "unicode": false,
                            "value": "flags",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "meta",
                          },
                        },
                      ],
                    },
                  },
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
                "operator": "=",
                "parenthesizedExpression": true,
                "right": Silent {
                  "expr": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "sql",
                      },
                    ],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "prepare",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "db",
                      },
                    },
                  },
                  "kind": "silent",
                },
              },
              "right": Silent {
                "expr": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "execute",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "stmt",
                    },
                  },
                },
                "kind": "silent",
              },
              "type": "&&",
            },
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "stmt",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'SELECT NULL AS col1'",
                    "unicode": false,
                    "value": "SELECT NULL AS col1",
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "query",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "db",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "meta",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Number {
                    "kind": "number",
                    "value": "0",
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "getColumnMeta",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": ExpressionStatement {
              "expression": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"[1006] Expecting NULL got %s\\\\n\\"",
                    "unicode": false,
                    "value": "[1006] Expecting NULL got %s
",
                  },
                  OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'native_type'",
                      "unicode": false,
                      "value": "native_type",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "meta",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "printf",
                  "resolution": "uqn",
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'NULL'",
                "unicode": false,
                "value": "NULL",
              },
              "right": OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'native_type'",
                  "unicode": false,
                  "value": "native_type",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "meta",
                },
              },
              "type": "!==",
            },
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"[001] %s, [%s} %s\\\\n\\"",
                      "unicode": false,
                      "value": "[001] %s, [%s} %s
",
                    },
                    Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getMessage",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "e",
                        },
                      },
                    },
                    Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "errorInfo",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "db",
                        },
                      },
                    },
                    Call {
                      "arguments": Array [
                        String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "' '",
                          "unicode": false,
                          "value": " ",
                        },
                        Call {
                          "arguments": Array [],
                          "kind": "call",
                          "what": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "errorInfo",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "db",
                            },
                          },
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "implode",
                        "resolution": "uqn",
                      },
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "printf",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "PDOException",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'DROP TABLE IF EXISTS test'",
            "unicode": false,
            "value": "DROP TABLE IF EXISTS test",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "exec",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"done!\\"",
          "unicode": false,
          "value": "done!",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
