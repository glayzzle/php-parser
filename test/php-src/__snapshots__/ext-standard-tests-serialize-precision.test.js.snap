// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Default precision is sufficient to serialize all the information in floats 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "numbers",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"0000000000000000\\"",
                "unicode": false,
                "value": "0000000000000000",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"2d431cebe2362a3f\\"",
                "unicode": false,
                "value": "2d431cebe2362a3f",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"2e431cebe2362a3f\\"",
                "unicode": false,
                "value": "2e431cebe2362a3f",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"0000000000001000\\"",
                "unicode": false,
                "value": "0000000000001000",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"0100000000001000\\"",
                "unicode": false,
                "value": "0100000000001000",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"ffffffffffffef7f\\"",
                "unicode": false,
                "value": "ffffffffffffef7f",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"feffffffffffef7f\\"",
                "unicode": false,
                "value": "feffffffffffef7f",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"0100000000000000\\"",
                "unicode": false,
                "value": "0100000000000000",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"0200000000000000\\"",
                "unicode": false,
                "value": "0200000000000000",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"fffffffffffff000\\"",
                "unicode": false,
                "value": "fffffffffffff000",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"fefffffffffff000\\"",
                "unicode": false,
                "value": "fefffffffffff000",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"0000000000000f7f\\"",
                "unicode": false,
                "value": "0000000000000f7f",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"0000000000000fff\\"",
                "unicode": false,
                "value": "0000000000000fff",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "num",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"d\\"",
                    "unicode": false,
                    "value": "d",
                  },
                  Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"H*\\"",
                        "unicode": false,
                        "value": "H*",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "ns",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "pack",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "unpack",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "num",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "num",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "reset",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"number: \\"",
                "unicode": false,
                "value": "number: ",
              },
              Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"%.17e\\"",
                    "unicode": false,
                    "value": "%.17e",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "num",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "sprintf",
                  "resolution": "uqn",
                },
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"... \\"",
                "unicode": false,
                "value": "... ",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "num2",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "num",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "serialize",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "unserialize",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "repr",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"H*\\"",
                    "unicode": false,
                    "value": "H*",
                  },
                  Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"d\\"",
                        "unicode": false,
                        "value": "d",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "num2",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "pack",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "unpack",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "repr",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "repr",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "reset",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": Echo {
              "expressions": Array [
                Encapsed {
                  "kind": "encapsed",
                  "raw": "\\"mismatch\\\\n\\\\twas:    $ns\\\\n\\\\tbecame: $repr\\\\n\\"",
                  "type": "string",
                  "value": Array [
                    EncapsedPart {
                      "curly": false,
                      "expression": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "mismatch\\\\n\\\\twas:    ",
                        "unicode": false,
                        "value": "mismatch
	was:    ",
                      },
                      "kind": "encapsedpart",
                      "syntax": null,
                    },
                    EncapsedPart {
                      "curly": false,
                      "expression": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "ns",
                      },
                      "kind": "encapsedpart",
                      "syntax": "simple",
                    },
                    EncapsedPart {
                      "curly": false,
                      "expression": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "\\\\n\\\\tbecame: ",
                        "unicode": false,
                        "value": "
	became: ",
                      },
                      "kind": "encapsedpart",
                      "syntax": null,
                    },
                    EncapsedPart {
                      "curly": false,
                      "expression": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "repr",
                      },
                      "kind": "encapsedpart",
                      "syntax": "simple",
                    },
                    EncapsedPart {
                      "curly": false,
                      "expression": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "\\\\n",
                        "unicode": false,
                        "value": "",
                      },
                      "kind": "encapsedpart",
                      "syntax": null,
                    },
                  ],
                },
              ],
              "kind": "echo",
              "shortForm": false,
            },
            "body": Echo {
              "expressions": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"OK\\\\n\\"",
                  "unicode": false,
                  "value": "OK
",
                },
              ],
              "kind": "echo",
              "shortForm": false,
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "repr",
              },
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "ns",
              },
              "type": "==",
            },
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "numbers",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "ns",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
