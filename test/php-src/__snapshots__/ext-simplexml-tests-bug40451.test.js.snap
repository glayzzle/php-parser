// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #40451 (addAttribute() may crash when used with non-existent child node) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "string",
        },
        "operator": "=",
        "right": Encapsed {
          "kind": "encapsed",
          "label": "XML",
          "raw": "<<<XML
<?xml version=\\"1.0\\"?>
    <Host enable=\\"true\\">
     <Name>host.server.com</Name>
     </Host>
XML",
          "type": "heredoc",
          "value": Array [
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "<?xml version=\\"1.0\\"?>
    <Host enable=\\"true\\">
     <Name>host.server.com</Name>
     </Host>
",
                "unicode": false,
                "value": "<?xml version=\\"1.0\\"?>
    <Host enable=\\"true\\">
     <Name>host.server.com</Name>
     </Host>",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
          ],
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "xml",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "string",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "simplexml_load_string",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "add",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'Host'",
              "unicode": false,
              "value": "Host",
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "addChild",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "xml",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'enable'",
            "unicode": false,
            "value": "enable",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'true'",
            "unicode": false,
            "value": "true",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "addAttribute",
          },
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "Host",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "add",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
