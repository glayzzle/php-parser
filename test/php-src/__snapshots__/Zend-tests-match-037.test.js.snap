// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test match jumptable with only one arm 1`] = `
Program {
  "children": Array [
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Match {
                  "arms": Array [
                    MatchArm {
                      "body": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'foo'",
                        "unicode": false,
                        "value": "foo",
                      },
                      "conds": Array [
                        Number {
                          "kind": "number",
                          "value": "1",
                        },
                        Number {
                          "kind": "number",
                          "value": "2",
                        },
                        Number {
                          "kind": "number",
                          "value": "3",
                        },
                        Number {
                          "kind": "number",
                          "value": "4",
                        },
                        Number {
                          "kind": "number",
                          "value": "5",
                        },
                      ],
                      "kind": "matcharm",
                    },
                  ],
                  "cond": Boolean {
                    "kind": "boolean",
                    "raw": "true",
                    "value": true,
                  },
                  "kind": "match",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    Cast {
                      "expr": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "e",
                      },
                      "kind": "cast",
                      "raw": "(string)",
                      "type": "string",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "var_dump",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "Error",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Match {
                  "arms": Array [
                    MatchArm {
                      "body": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'foo'",
                        "unicode": false,
                        "value": "foo",
                      },
                      "conds": Array [
                        Number {
                          "kind": "number",
                          "value": "1",
                        },
                        Number {
                          "kind": "number",
                          "value": "2",
                        },
                        Number {
                          "kind": "number",
                          "value": "3",
                        },
                        Number {
                          "kind": "number",
                          "value": "4",
                        },
                        Number {
                          "kind": "number",
                          "value": "5",
                        },
                      ],
                      "kind": "matcharm",
                    },
                  ],
                  "cond": Number {
                    "kind": "number",
                    "value": "6",
                  },
                  "kind": "match",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    Cast {
                      "expr": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "e",
                      },
                      "kind": "cast",
                      "raw": "(string)",
                      "type": "string",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "var_dump",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "Error",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Match {
                  "arms": Array [
                    MatchArm {
                      "body": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'foo'",
                        "unicode": false,
                        "value": "foo",
                      },
                      "conds": Array [
                        Number {
                          "kind": "number",
                          "value": "1",
                        },
                        Number {
                          "kind": "number",
                          "value": "2",
                        },
                        Number {
                          "kind": "number",
                          "value": "3",
                        },
                        Number {
                          "kind": "number",
                          "value": "4",
                        },
                        Number {
                          "kind": "number",
                          "value": "5",
                        },
                      ],
                      "kind": "matcharm",
                    },
                  ],
                  "cond": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'3'",
                    "unicode": false,
                    "value": "3",
                  },
                  "kind": "match",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    Cast {
                      "expr": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "e",
                      },
                      "kind": "cast",
                      "raw": "(string)",
                      "type": "string",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "var_dump",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "Error",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Match {
            "arms": Array [
              MatchArm {
                "body": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'foo'",
                  "unicode": false,
                  "value": "foo",
                },
                "conds": Array [
                  Number {
                    "kind": "number",
                    "value": "1",
                  },
                  Number {
                    "kind": "number",
                    "value": "2",
                  },
                  Number {
                    "kind": "number",
                    "value": "3",
                  },
                  Number {
                    "kind": "number",
                    "value": "4",
                  },
                  Number {
                    "kind": "number",
                    "value": "5",
                  },
                ],
                "kind": "matcharm",
              },
            ],
            "cond": Number {
              "kind": "number",
              "value": "3",
            },
            "kind": "match",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Match {
            "arms": Array [
              MatchArm {
                "body": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'foo'",
                  "unicode": false,
                  "value": "foo",
                },
                "conds": Array [
                  Number {
                    "kind": "number",
                    "value": "1",
                  },
                  Number {
                    "kind": "number",
                    "value": "2",
                  },
                  Number {
                    "kind": "number",
                    "value": "3",
                  },
                  Number {
                    "kind": "number",
                    "value": "4",
                  },
                  Number {
                    "kind": "number",
                    "value": "5",
                  },
                ],
                "kind": "matcharm",
              },
              MatchArm {
                "body": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'bar'",
                  "unicode": false,
                  "value": "bar",
                },
                "conds": null,
                "kind": "matcharm",
              },
            ],
            "cond": Boolean {
              "kind": "boolean",
              "raw": "true",
              "value": true,
            },
            "kind": "match",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Match {
            "arms": Array [
              MatchArm {
                "body": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'foo'",
                  "unicode": false,
                  "value": "foo",
                },
                "conds": Array [
                  Number {
                    "kind": "number",
                    "value": "1",
                  },
                  Number {
                    "kind": "number",
                    "value": "2",
                  },
                  Number {
                    "kind": "number",
                    "value": "3",
                  },
                  Number {
                    "kind": "number",
                    "value": "4",
                  },
                  Number {
                    "kind": "number",
                    "value": "5",
                  },
                ],
                "kind": "matcharm",
              },
              MatchArm {
                "body": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'bar'",
                  "unicode": false,
                  "value": "bar",
                },
                "conds": null,
                "kind": "matcharm",
              },
            ],
            "cond": Number {
              "kind": "number",
              "value": "6",
            },
            "kind": "match",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Match {
            "arms": Array [
              MatchArm {
                "body": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'foo'",
                  "unicode": false,
                  "value": "foo",
                },
                "conds": Array [
                  Number {
                    "kind": "number",
                    "value": "1",
                  },
                  Number {
                    "kind": "number",
                    "value": "2",
                  },
                  Number {
                    "kind": "number",
                    "value": "3",
                  },
                  Number {
                    "kind": "number",
                    "value": "4",
                  },
                  Number {
                    "kind": "number",
                    "value": "5",
                  },
                ],
                "kind": "matcharm",
              },
              MatchArm {
                "body": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'bar'",
                  "unicode": false,
                  "value": "bar",
                },
                "conds": null,
                "kind": "matcharm",
              },
            ],
            "cond": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'3'",
              "unicode": false,
              "value": "3",
            },
            "kind": "match",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Match {
            "arms": Array [
              MatchArm {
                "body": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'foo'",
                  "unicode": false,
                  "value": "foo",
                },
                "conds": Array [
                  Number {
                    "kind": "number",
                    "value": "1",
                  },
                  Number {
                    "kind": "number",
                    "value": "2",
                  },
                  Number {
                    "kind": "number",
                    "value": "3",
                  },
                  Number {
                    "kind": "number",
                    "value": "4",
                  },
                  Number {
                    "kind": "number",
                    "value": "5",
                  },
                ],
                "kind": "matcharm",
              },
              MatchArm {
                "body": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'bar'",
                  "unicode": false,
                  "value": "bar",
                },
                "conds": null,
                "kind": "matcharm",
              },
            ],
            "cond": Number {
              "kind": "number",
              "value": "3",
            },
            "kind": "match",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
