// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Exception in finally inside finally following try/catch containing throwing try/finally 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          Try {
            "always": Block {
              "children": Array [
                Try {
                  "always": null,
                  "body": Block {
                    "children": Array [
                      Try {
                        "always": Block {
                          "children": Array [
                            Throw {
                              "kind": "throw",
                              "what": New {
                                "arguments": Array [
                                  Number {
                                    "kind": "number",
                                    "value": "2",
                                  },
                                ],
                                "kind": "new",
                                "what": Name {
                                  "kind": "name",
                                  "name": "Exception",
                                  "resolution": "uqn",
                                },
                              },
                            },
                          ],
                          "kind": "block",
                        },
                        "body": Block {
                          "children": Array [],
                          "kind": "block",
                        },
                        "catches": Array [],
                        "kind": "try",
                      },
                    ],
                    "kind": "block",
                  },
                  "catches": Array [
                    Catch {
                      "body": Block {
                        "children": Array [],
                        "kind": "block",
                      },
                      "kind": "catch",
                      "variable": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "e",
                      },
                      "what": Array [
                        Name {
                          "kind": "name",
                          "name": "Exception",
                          "resolution": "uqn",
                        },
                      ],
                    },
                  ],
                  "kind": "try",
                },
                Try {
                  "always": Block {
                    "children": Array [
                      Throw {
                        "kind": "throw",
                        "what": New {
                          "arguments": Array [
                            Number {
                              "kind": "number",
                              "value": "3",
                            },
                          ],
                          "kind": "new",
                          "what": Name {
                            "kind": "name",
                            "name": "Exception",
                            "resolution": "uqn",
                          },
                        },
                      },
                    ],
                    "kind": "block",
                  },
                  "body": Block {
                    "children": Array [],
                    "kind": "block",
                  },
                  "catches": Array [],
                  "kind": "try",
                },
              ],
              "kind": "block",
            },
            "body": Block {
              "children": Array [
                Throw {
                  "kind": "throw",
                  "what": New {
                    "arguments": Array [
                      Number {
                        "kind": "number",
                        "value": "1",
                      },
                    ],
                    "kind": "new",
                    "what": Name {
                      "kind": "name",
                      "name": "Exception",
                      "resolution": "uqn",
                    },
                  },
                },
              ],
              "kind": "block",
            },
            "catches": Array [],
            "kind": "try",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "test",
      },
      "nullable": false,
      "type": null,
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "test",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "e",
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"\\\\n\\"",
                    "unicode": false,
                    "value": "
",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "Exception",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
