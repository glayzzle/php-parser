// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #39297 (Memory corryption because of indirect modification of overloaded array) 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": true,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "first",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": true,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "second",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          Return {
            "expr": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "first",
              },
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "second",
              },
              "type": "===",
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "compareByRef",
      },
      "nullable": false,
      "type": null,
    },
    Class {
      "attrGroups": Array [],
      "body": Array [
        PropertyStatement {
          "isStatic": false,
          "kind": "propertystatement",
          "properties": Array [
            Property {
              "attrGroups": Array [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "parent",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
            },
          ],
          "visibility": "public",
        },
        PropertyStatement {
          "isStatic": false,
          "kind": "propertystatement",
          "properties": Array [
            Property {
              "attrGroups": Array [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "children",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": Array {
                "items": Array [],
                "kind": "array",
                "shortForm": false,
              },
            },
          ],
          "visibility": "public",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "offset",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "offsetExists",
          },
          "nullable": false,
          "type": TypeReference {
            "kind": "typereference",
            "name": "bool",
            "raw": "bool",
          },
          "visibility": "public",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "offset",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "offsetUnset",
          },
          "nullable": false,
          "type": TypeReference {
            "kind": "typereference",
            "name": "void",
            "raw": "void",
          },
          "visibility": "public",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "offset",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "value",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"offsetSet()\\\\n\\"",
                    "unicode": false,
                    "value": "offsetSet()
",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "cannonicalName",
                  },
                  "operator": "=",
                  "right": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "offset",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "strtolower",
                      "resolution": "uqn",
                    },
                  },
                },
                "kind": "expressionstatement",
              },
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "cannonicalName",
                    },
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "children",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "this",
                      },
                    },
                  },
                  "operator": "=",
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "value",
                  },
                },
                "kind": "expressionstatement",
              },
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "parent",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "value",
                    },
                  },
                  "operator": "=",
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "this",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "offsetSet",
          },
          "nullable": false,
          "type": TypeReference {
            "kind": "typereference",
            "name": "void",
            "raw": "void",
          },
          "visibility": "public",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "offset",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"offsetGet()\\\\n\\"",
                    "unicode": false,
                    "value": "offsetGet()
",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "cannonicalName",
                  },
                  "operator": "=",
                  "right": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "offset",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "strtolower",
                      "resolution": "uqn",
                    },
                  },
                },
                "kind": "expressionstatement",
              },
              Return {
                "expr": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "cannonicalName",
                  },
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "children",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "this",
                    },
                  },
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "offsetGet",
          },
          "nullable": false,
          "type": Name {
            "kind": "name",
            "name": "mixed",
            "resolution": "uqn",
          },
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": Array [
        Name {
          "kind": "name",
          "name": "ArrayAccess",
          "resolution": "uqn",
        },
      ],
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "MyTree",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "id",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'Test'",
          "unicode": false,
          "value": "Test",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "root",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "MyTree",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "child",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "MyTree",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Variable {
            "curly": false,
            "kind": "variable",
            "name": "id",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "root",
          },
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "child",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              OffsetLookup {
                "kind": "offsetlookup",
                "offset": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "id",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "root",
                },
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "child",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "compareByRef",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
