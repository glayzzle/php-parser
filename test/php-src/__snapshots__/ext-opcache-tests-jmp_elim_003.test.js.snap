// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Incorrect empty basic block elimination 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [],
      "body": Array [
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "args",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": Array {
                "items": Array [],
                "kind": "array",
                "shortForm": false,
              },
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              If {
                "alternate": null,
                "body": Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
                "kind": "if",
                "shortForm": false,
                "test": Unary {
                  "kind": "unary",
                  "type": "!",
                  "what": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'stream_socket_client'",
                        "unicode": false,
                        "value": "stream_socket_client",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "function_exists",
                      "resolution": "uqn",
                    },
                  },
                },
              },
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "is_ssl",
                  },
                  "operator": "=",
                  "right": Bin {
                    "kind": "bin",
                    "left": Isset {
                      "kind": "isset",
                      "variables": Array [
                        OffsetLookup {
                          "kind": "offsetlookup",
                          "offset": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'ssl'",
                            "unicode": false,
                            "value": "ssl",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "args",
                          },
                        },
                      ],
                    },
                    "right": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'ssl'",
                        "unicode": false,
                        "value": "ssl",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "args",
                      },
                    },
                    "type": "&&",
                  },
                },
                "kind": "expressionstatement",
              },
              If {
                "alternate": null,
                "body": Block {
                  "children": Array [
                    If {
                      "alternate": null,
                      "body": Return {
                        "expr": Boolean {
                          "kind": "boolean",
                          "raw": "false",
                          "value": false,
                        },
                        "kind": "return",
                      },
                      "kind": "if",
                      "shortForm": false,
                      "test": Unary {
                        "kind": "unary",
                        "type": "!",
                        "what": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "'openssl'",
                              "unicode": false,
                              "value": "openssl",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "extension_loaded",
                            "resolution": "uqn",
                          },
                        },
                      },
                    },
                    If {
                      "alternate": null,
                      "body": Return {
                        "expr": Boolean {
                          "kind": "boolean",
                          "raw": "false",
                          "value": false,
                        },
                        "kind": "return",
                      },
                      "kind": "if",
                      "shortForm": false,
                      "test": Unary {
                        "kind": "unary",
                        "type": "!",
                        "what": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "'openssl_x509_parse'",
                              "unicode": false,
                              "value": "openssl_x509_parse",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "function_exists",
                            "resolution": "uqn",
                          },
                        },
                      },
                    },
                  ],
                  "kind": "block",
                },
                "kind": "if",
                "shortForm": false,
                "test": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "is_ssl",
                },
              },
              Return {
                "expr": Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'use_streams_transport'",
                      "unicode": false,
                      "value": "use_streams_transport",
                    },
                    Boolean {
                      "kind": "boolean",
                      "raw": "true",
                      "value": true,
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "args",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "apply_filters",
                    "resolution": "uqn",
                  },
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": true,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "test",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "A",
      },
    },
    Inline {
      "kind": "inline",
      "raw": "
OK",
      "value": "OK",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
