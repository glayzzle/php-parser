// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Stringable is automatically implemented 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [],
      "body": Array [
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Return {
                "expr": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"foo\\"",
                  "unicode": false,
                  "value": "foo",
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "__toString",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "Test",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": New {
              "arguments": Array [],
              "kind": "new",
              "what": Name {
                "kind": "name",
                "name": "Test",
                "resolution": "uqn",
              },
            },
            "right": Name {
              "kind": "name",
              "name": "Stringable",
              "resolution": "uqn",
            },
            "type": "instanceof",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "getInterfaceNames",
              },
              "what": New {
                "arguments": Array [
                  StaticLookup {
                    "kind": "staticlookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "class",
                    },
                    "what": Name {
                      "kind": "name",
                      "name": "Test",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "new",
                "parenthesizedExpression": true,
                "what": Name {
                  "kind": "name",
                  "name": "ReflectionClass",
                  "resolution": "uqn",
                },
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Class {
      "attrGroups": Array [],
      "body": Array [
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Return {
                "expr": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"bar\\"",
                  "unicode": false,
                  "value": "bar",
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "__toString",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
      ],
      "extends": Name {
        "kind": "name",
        "name": "Test",
        "resolution": "uqn",
      },
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "Test2",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": New {
              "arguments": Array [],
              "kind": "new",
              "what": Name {
                "kind": "name",
                "name": "Test2",
                "resolution": "uqn",
              },
            },
            "right": Name {
              "kind": "name",
              "name": "Stringable",
              "resolution": "uqn",
            },
            "type": "instanceof",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "getInterfaceNames",
              },
              "what": New {
                "arguments": Array [
                  StaticLookup {
                    "kind": "staticlookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "class",
                    },
                    "what": Name {
                      "kind": "name",
                      "name": "Test2",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "new",
                "parenthesizedExpression": true,
                "what": Name {
                  "kind": "name",
                  "name": "ReflectionClass",
                  "resolution": "uqn",
                },
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
