// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests JIT CMP: 008 Wrong range inference for comparison between IS_LONG and IS_FALSE/IS_TRUE 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          For {
            "body": Block {
              "children": Array [],
              "kind": "block",
            },
            "increment": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
                "operator": "%=",
                "right": Bin {
                  "kind": "bin",
                  "left": Unary {
                    "kind": "unary",
                    "type": "-",
                    "what": Number {
                      "kind": "number",
                      "value": "4",
                    },
                  },
                  "right": Bin {
                    "kind": "bin",
                    "left": Unary {
                      "kind": "unary",
                      "type": "-",
                      "what": Number {
                        "kind": "number",
                        "value": "4",
                      },
                    },
                    "right": Assign {
                      "kind": "assign",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "a",
                      },
                      "operator": "=",
                      "parenthesizedExpression": true,
                      "right": Bin {
                        "kind": "bin",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "a",
                        },
                        "right": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "a",
                        },
                        "type": "+",
                      },
                    },
                    "type": "<",
                  },
                  "type": "!=",
                },
              },
            ],
            "init": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
                "operator": "=",
                "right": Number {
                  "kind": "number",
                  "value": "0",
                },
              },
            ],
            "kind": "for",
            "shortForm": false,
            "test": Array [
              Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
                "right": Number {
                  "kind": "number",
                  "value": "10",
                },
                "type": "<",
              },
            ],
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "test",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
