// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #65769 localeconv() broken in TS builds 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "locales",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'sve'",
                "unicode": false,
                "value": "sve",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'french'",
                "unicode": false,
                "value": "french",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'us'",
                "unicode": false,
                "value": "us",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'ru'",
                "unicode": false,
                "value": "ru",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'czech'",
                "unicode": false,
                "value": "czech",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'serbian'",
                "unicode": false,
                "value": "serbian",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "locale",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Name {
                    "kind": "name",
                    "name": "LC_ALL",
                    "resolution": "uqn",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "locale",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "setlocale",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "lconv",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "localeconv",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "locale",
                },
                OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'decimal_point'",
                    "unicode": false,
                    "value": "decimal_point",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "lconv",
                  },
                },
                OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'thousands_sep'",
                    "unicode": false,
                    "value": "thousands_sep",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "lconv",
                  },
                },
                OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'int_curr_symbol'",
                    "unicode": false,
                    "value": "int_curr_symbol",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "lconv",
                  },
                },
                OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'currency_symbol'",
                    "unicode": false,
                    "value": "currency_symbol",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "lconv",
                  },
                },
                OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'mon_decimal_point'",
                    "unicode": false,
                    "value": "mon_decimal_point",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "lconv",
                  },
                },
                OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'mon_thousands_sep'",
                    "unicode": false,
                    "value": "mon_thousands_sep",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "lconv",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Call {
                        "arguments": Array [
                          OffsetLookup {
                            "kind": "offsetlookup",
                            "offset": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "'mon_thousands_sep'",
                              "unicode": false,
                              "value": "mon_thousands_sep",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "lconv",
                            },
                          },
                          Array {
                            "items": Array [
                              Entry {
                                "byRef": false,
                                "key": null,
                                "kind": "entry",
                                "unpack": false,
                                "value": String {
                                  "isDoubleQuote": false,
                                  "kind": "string",
                                  "raw": "'.'",
                                  "unicode": false,
                                  "value": ".",
                                },
                              },
                              Entry {
                                "byRef": false,
                                "key": null,
                                "kind": "entry",
                                "unpack": false,
                                "value": String {
                                  "isDoubleQuote": false,
                                  "kind": "string",
                                  "raw": "'�'",
                                  "unicode": false,
                                  "value": "�",
                                },
                              },
                            ],
                            "kind": "array",
                            "shortForm": true,
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "in_array",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "locale",
              },
              "right": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'Swedish_Sweden.1252'",
                "unicode": false,
                "value": "Swedish_Sweden.1252",
              },
              "type": "===",
            },
          },
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'++++++++++++++++++++++'",
                "unicode": false,
                "value": "++++++++++++++++++++++",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\n\\"",
                "unicode": false,
                "value": "
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "locales",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "locale",
      },
    },
    Inline {
      "kind": "inline",
      "raw": "
+++DONE+++",
      "value": "+++DONE+++",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
