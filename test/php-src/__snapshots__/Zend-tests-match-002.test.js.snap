// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Match expression omit trailing comma 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "bool",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              Match {
                "arms": Array [
                  MatchArm {
                    "body": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"true\\\\n\\"",
                      "unicode": false,
                      "value": "true
",
                    },
                    "conds": Array [
                      Boolean {
                        "kind": "boolean",
                        "raw": "true",
                        "value": true,
                      },
                    ],
                    "kind": "matcharm",
                  },
                  MatchArm {
                    "body": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"false\\\\n\\"",
                      "unicode": false,
                      "value": "false
",
                    },
                    "conds": Array [
                      Boolean {
                        "kind": "boolean",
                        "raw": "false",
                        "value": false,
                      },
                    ],
                    "kind": "matcharm",
                  },
                ],
                "cond": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "bool",
                },
                "kind": "match",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "print_bool",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Boolean {
            "kind": "boolean",
            "raw": "true",
            "value": true,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "print_bool",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "print_bool",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
