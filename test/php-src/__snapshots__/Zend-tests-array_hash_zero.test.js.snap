// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Accept hashes being equal to zero 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "hashes",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\x8e\\\\x1a\\\\x63\\\\x0f\\\\x61\\"",
                "unicode": false,
                "value": "ยca",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "32",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\xf7\\\\x17\\\\x7f\\\\x7f\\\\x7f\\\\x7f\\\\x7f\\\\x7f\\\\x7f\\\\x6b\\\\x03\\\\x6a\\\\x13\\\\x63\\\\x17\\\\x6b\\\\x1d\\\\x67\\"",
                "unicode": false,
                "value": "รทkjckg",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "64",
              },
            },
          ],
          "kind": "array",
          "shortForm": true,
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "hash",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "hashes",
                  },
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "bits",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "key": Variable {
        "curly": false,
        "kind": "variable",
        "name": "hash",
      },
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "hashes",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "bits",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
