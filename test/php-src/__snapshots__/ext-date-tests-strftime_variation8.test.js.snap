// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test strftime() function : usage variation - Passing literal related strings to format argument. 1`] = `
Program {
  "children": Array [
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"*** Testing strftime() : usage variation ***\\\\n\\"",
          "unicode": false,
          "value": "*** Testing strftime() : usage variation ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Name {
            "kind": "name",
            "name": "LC_ALL",
            "resolution": "uqn",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"en_US\\"",
            "unicode": false,
            "value": "en_US",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "setlocale",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"Asia/Calcutta\\"",
            "unicode": false,
            "value": "Asia/Calcutta",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "date_default_timezone_set",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "timestamp",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Number {
              "kind": "number",
              "value": "8",
            },
            Number {
              "kind": "number",
              "value": "8",
            },
            Number {
              "kind": "number",
              "value": "8",
            },
            Number {
              "kind": "number",
              "value": "8",
            },
            Number {
              "kind": "number",
              "value": "8",
            },
            Number {
              "kind": "number",
              "value": "2008",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mktime",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "format",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"%%\\"",
          "unicode": false,
          "value": "%%",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n-- Testing strftime() function with a literal % character to format --\\\\n\\"",
          "unicode": false,
          "value": "
-- Testing strftime() function with a literal % character to format --
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "format",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "strftime",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "format",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "timestamp",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "strftime",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
