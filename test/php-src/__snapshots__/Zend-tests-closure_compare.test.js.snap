// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Closure comparison 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          Static {
            "kind": "static",
            "variables": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "var",
              },
            ],
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "foo",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Number {
            "kind": "number",
            "value": "0",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "closures",
          },
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'foo'",
              "unicode": false,
              "value": "foo",
            },
          ],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "fromCallable",
            },
            "what": Name {
              "kind": "name",
              "name": "Closure",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Number {
            "kind": "number",
            "value": "1",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "closures",
          },
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'foo'",
              "unicode": false,
              "value": "foo",
            },
          ],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "fromCallable",
            },
            "what": Name {
              "kind": "name",
              "name": "Closure",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"foo == foo: %s\\\\n\\"",
            "unicode": false,
            "value": "foo == foo: %s
",
          },
          RetIf {
            "falseExpr": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"FAIL\\"",
              "unicode": false,
              "value": "FAIL",
            },
            "kind": "retif",
            "test": Bin {
              "kind": "bin",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "0",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "closures",
                },
              },
              "right": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "1",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "closures",
                },
              },
              "type": "==",
            },
            "trueExpr": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"OK\\"",
              "unicode": false,
              "value": "OK",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Number {
            "kind": "number",
            "value": "0",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "closures",
          },
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'strlen'",
              "unicode": false,
              "value": "strlen",
            },
          ],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "fromCallable",
            },
            "what": Name {
              "kind": "name",
              "name": "Closure",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Number {
            "kind": "number",
            "value": "1",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "closures",
          },
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'strlen'",
              "unicode": false,
              "value": "strlen",
            },
          ],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "fromCallable",
            },
            "what": Name {
              "kind": "name",
              "name": "Closure",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"strlen == strlen: %s\\\\n\\"",
            "unicode": false,
            "value": "strlen == strlen: %s
",
          },
          RetIf {
            "falseExpr": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"FAIL\\"",
              "unicode": false,
              "value": "FAIL",
            },
            "kind": "retif",
            "test": Bin {
              "kind": "bin",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "0",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "closures",
                },
              },
              "right": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "1",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "closures",
                },
              },
              "type": "==",
            },
            "trueExpr": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"OK\\"",
              "unicode": false,
              "value": "OK",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Number {
            "kind": "number",
            "value": "0",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "closures",
          },
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'strlen'",
              "unicode": false,
              "value": "strlen",
            },
          ],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "fromCallable",
            },
            "what": Name {
              "kind": "name",
              "name": "Closure",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Number {
            "kind": "number",
            "value": "1",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "closures",
          },
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'strrev'",
              "unicode": false,
              "value": "strrev",
            },
          ],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "fromCallable",
            },
            "what": Name {
              "kind": "name",
              "name": "Closure",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"strlen != strrev: %s\\\\n\\"",
            "unicode": false,
            "value": "strlen != strrev: %s
",
          },
          RetIf {
            "falseExpr": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"FAIL\\"",
              "unicode": false,
              "value": "FAIL",
            },
            "kind": "retif",
            "test": Bin {
              "kind": "bin",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "0",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "closures",
                },
              },
              "right": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "1",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "closures",
                },
              },
              "type": "!=",
            },
            "trueExpr": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"OK\\"",
              "unicode": false,
              "value": "OK",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Trait {
      "body": Array [
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "traitMethod",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
      ],
      "kind": "trait",
      "name": Identifier {
        "kind": "identifier",
        "name": "MethodTrait",
      },
    },
    Class {
      "attrGroups": Array [],
      "body": Array [
        TraitUse {
          "adaptations": Array [
            TraitAlias {
              "as": Identifier {
                "kind": "identifier",
                "name": "aliasMethod",
              },
              "kind": "traitalias",
              "method": Identifier {
                "kind": "identifier",
                "name": "traitMethod",
              },
              "trait": Name {
                "kind": "name",
                "name": "MethodTrait",
                "resolution": "uqn",
              },
              "visibility": "",
            },
          ],
          "kind": "traituse",
          "traits": Array [
            Name {
              "kind": "name",
              "name": "MethodTrait",
              "resolution": "uqn",
            },
          ],
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "method",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "args",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "__call",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "exists",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": true,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "existsStatic",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "Foo",
      },
    },
    Class {
      "attrGroups": Array [],
      "body": Array [],
      "extends": Name {
        "kind": "name",
        "name": "Foo",
        "resolution": "uqn",
      },
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "Bar",
      },
    },
    Class {
      "attrGroups": Array [],
      "body": Array [
        TraitUse {
          "adaptations": null,
          "kind": "traituse",
          "traits": Array [
            Name {
              "kind": "name",
              "name": "MethodTrait",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "Baz",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Number {
            "kind": "number",
            "value": "0",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "closures",
          },
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Array {
              "items": Array [
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": StaticLookup {
                    "kind": "staticlookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "class",
                    },
                    "what": Name {
                      "kind": "name",
                      "name": "Foo",
                      "resolution": "uqn",
                    },
                  },
                },
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"existsStatic\\"",
                    "unicode": false,
                    "value": "existsStatic",
                  },
                },
              ],
              "kind": "array",
              "shortForm": true,
            },
          ],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "fromCallable",
            },
            "what": Name {
              "kind": "name",
              "name": "Closure",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Number {
            "kind": "number",
            "value": "1",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "closures",
          },
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Array {
              "items": Array [
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": StaticLookup {
                    "kind": "staticlookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "class",
                    },
                    "what": Name {
                      "kind": "name",
                      "name": "Bar",
                      "resolution": "uqn",
                    },
                  },
                },
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"existsStatic\\"",
                    "unicode": false,
                    "value": "existsStatic",
                  },
                },
              ],
              "kind": "array",
              "shortForm": true,
            },
          ],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "fromCallable",
            },
            "what": Name {
              "kind": "name",
              "name": "Closure",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"foo::existsStatic != bar::existsStatic: %s\\\\n\\"",
            "unicode": false,
            "value": "foo::existsStatic != bar::existsStatic: %s
",
          },
          RetIf {
            "falseExpr": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"FAIL\\"",
              "unicode": false,
              "value": "FAIL",
            },
            "kind": "retif",
            "test": Bin {
              "kind": "bin",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "0",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "closures",
                },
              },
              "right": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "1",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "closures",
                },
              },
              "type": "!=",
            },
            "trueExpr": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"OK\\"",
              "unicode": false,
              "value": "OK",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "foo",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "Foo",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Number {
            "kind": "number",
            "value": "0",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "closures",
          },
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Array {
              "items": Array [
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "foo",
                  },
                },
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"exists\\"",
                    "unicode": false,
                    "value": "exists",
                  },
                },
              ],
              "kind": "array",
              "shortForm": true,
            },
          ],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "fromCallable",
            },
            "what": Name {
              "kind": "name",
              "name": "Closure",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Number {
            "kind": "number",
            "value": "1",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "closures",
          },
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            New {
              "arguments": Array [],
              "kind": "new",
              "what": Name {
                "kind": "name",
                "name": "Foo",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "bindTo",
            },
            "what": OffsetLookup {
              "kind": "offsetlookup",
              "offset": Number {
                "kind": "number",
                "value": "0",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "closures",
              },
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"foo#0::exists != foo#1::exists: %s\\\\n\\"",
            "unicode": false,
            "value": "foo#0::exists != foo#1::exists: %s
",
          },
          RetIf {
            "falseExpr": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"FAIL\\"",
              "unicode": false,
              "value": "FAIL",
            },
            "kind": "retif",
            "test": Bin {
              "kind": "bin",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "0",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "closures",
                },
              },
              "right": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "1",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "closures",
                },
              },
              "type": "!=",
            },
            "trueExpr": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"OK\\"",
              "unicode": false,
              "value": "OK",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "baz",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "Baz",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Number {
            "kind": "number",
            "value": "0",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "closures",
          },
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Array {
              "items": Array [
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "foo",
                  },
                },
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"traitMethod\\"",
                    "unicode": false,
                    "value": "traitMethod",
                  },
                },
              ],
              "kind": "array",
              "shortForm": true,
            },
          ],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "fromCallable",
            },
            "what": Name {
              "kind": "name",
              "name": "Closure",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Number {
            "kind": "number",
            "value": "1",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "closures",
          },
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Array {
              "items": Array [
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "baz",
                  },
                },
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"traitMethod\\"",
                    "unicode": false,
                    "value": "traitMethod",
                  },
                },
              ],
              "kind": "array",
              "shortForm": true,
            },
          ],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "fromCallable",
            },
            "what": Name {
              "kind": "name",
              "name": "Closure",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"foo::traitMethod != baz::traitMethod: %s\\\\n\\"",
            "unicode": false,
            "value": "foo::traitMethod != baz::traitMethod: %s
",
          },
          RetIf {
            "falseExpr": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"FAIL\\"",
              "unicode": false,
              "value": "FAIL",
            },
            "kind": "retif",
            "test": Bin {
              "kind": "bin",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "0",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "closures",
                },
              },
              "right": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "1",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "closures",
                },
              },
              "type": "!=",
            },
            "trueExpr": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"OK\\"",
              "unicode": false,
              "value": "OK",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Number {
            "kind": "number",
            "value": "0",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "closures",
          },
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Array {
              "items": Array [
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "foo",
                  },
                },
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"traitMethod\\"",
                    "unicode": false,
                    "value": "traitMethod",
                  },
                },
              ],
              "kind": "array",
              "shortForm": true,
            },
          ],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "fromCallable",
            },
            "what": Name {
              "kind": "name",
              "name": "Closure",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Number {
            "kind": "number",
            "value": "1",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "closures",
          },
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Array {
              "items": Array [
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "foo",
                  },
                },
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"aliasMethod\\"",
                    "unicode": false,
                    "value": "aliasMethod",
                  },
                },
              ],
              "kind": "array",
              "shortForm": true,
            },
          ],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "fromCallable",
            },
            "what": Name {
              "kind": "name",
              "name": "Closure",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"foo::traitMethod != foo::aliasMethod: %s\\\\n\\"",
            "unicode": false,
            "value": "foo::traitMethod != foo::aliasMethod: %s
",
          },
          RetIf {
            "falseExpr": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"FAIL\\"",
              "unicode": false,
              "value": "FAIL",
            },
            "kind": "retif",
            "test": Bin {
              "kind": "bin",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "0",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "closures",
                },
              },
              "right": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "1",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "closures",
                },
              },
              "type": "!=",
            },
            "trueExpr": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"OK\\"",
              "unicode": false,
              "value": "OK",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Number {
            "kind": "number",
            "value": "0",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "closures",
          },
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Array {
              "items": Array [
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "foo",
                  },
                },
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"exists\\"",
                    "unicode": false,
                    "value": "exists",
                  },
                },
              ],
              "kind": "array",
              "shortForm": true,
            },
          ],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "fromCallable",
            },
            "what": Name {
              "kind": "name",
              "name": "Closure",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Number {
            "kind": "number",
            "value": "1",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "closures",
          },
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Array {
              "items": Array [
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "foo",
                  },
                },
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"exists\\"",
                    "unicode": false,
                    "value": "exists",
                  },
                },
              ],
              "kind": "array",
              "shortForm": true,
            },
          ],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "fromCallable",
            },
            "what": Name {
              "kind": "name",
              "name": "Closure",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"foo::exists == foo::exists: %s\\\\n\\"",
            "unicode": false,
            "value": "foo::exists == foo::exists: %s
",
          },
          RetIf {
            "falseExpr": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"FAIL\\"",
              "unicode": false,
              "value": "FAIL",
            },
            "kind": "retif",
            "test": Bin {
              "kind": "bin",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "0",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "closures",
                },
              },
              "right": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "1",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "closures",
                },
              },
              "type": "==",
            },
            "trueExpr": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"OK\\"",
              "unicode": false,
              "value": "OK",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Number {
            "kind": "number",
            "value": "0",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "closures",
          },
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Array {
              "items": Array [
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "foo",
                  },
                },
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"method\\"",
                    "unicode": false,
                    "value": "method",
                  },
                },
              ],
              "kind": "array",
              "shortForm": true,
            },
          ],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "fromCallable",
            },
            "what": Name {
              "kind": "name",
              "name": "Closure",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Number {
            "kind": "number",
            "value": "1",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "closures",
          },
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Array {
              "items": Array [
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "foo",
                  },
                },
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"method\\"",
                    "unicode": false,
                    "value": "method",
                  },
                },
              ],
              "kind": "array",
              "shortForm": true,
            },
          ],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "fromCallable",
            },
            "what": Name {
              "kind": "name",
              "name": "Closure",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"foo::method == foo::method: %s\\\\n\\"",
            "unicode": false,
            "value": "foo::method == foo::method: %s
",
          },
          RetIf {
            "falseExpr": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"FAIL\\"",
              "unicode": false,
              "value": "FAIL",
            },
            "kind": "retif",
            "test": Bin {
              "kind": "bin",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "0",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "closures",
                },
              },
              "right": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "1",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "closures",
                },
              },
              "type": "==",
            },
            "trueExpr": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"OK\\"",
              "unicode": false,
              "value": "OK",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Number {
            "kind": "number",
            "value": "1",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "closures",
          },
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            New {
              "arguments": Array [],
              "kind": "new",
              "what": Name {
                "kind": "name",
                "name": "Bar",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "bindTo",
            },
            "what": OffsetLookup {
              "kind": "offsetlookup",
              "offset": Number {
                "kind": "number",
                "value": "1",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "closures",
              },
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"foo::method != bar::method: %s\\\\n\\"",
            "unicode": false,
            "value": "foo::method != bar::method: %s
",
          },
          RetIf {
            "falseExpr": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"FAIL\\"",
              "unicode": false,
              "value": "FAIL",
            },
            "kind": "retif",
            "test": Bin {
              "kind": "bin",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "0",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "closures",
                },
              },
              "right": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "1",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "closures",
                },
              },
              "type": "!=",
            },
            "trueExpr": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"OK\\"",
              "unicode": false,
              "value": "OK",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Number {
            "kind": "number",
            "value": "0",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "closures",
          },
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Array {
              "items": Array [
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "foo",
                  },
                },
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"method\\"",
                    "unicode": false,
                    "value": "method",
                  },
                },
              ],
              "kind": "array",
              "shortForm": true,
            },
          ],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "fromCallable",
            },
            "what": Name {
              "kind": "name",
              "name": "Closure",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Number {
            "kind": "number",
            "value": "1",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "closures",
          },
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Array {
              "items": Array [
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "foo",
                  },
                },
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"method2\\"",
                    "unicode": false,
                    "value": "method2",
                  },
                },
              ],
              "kind": "array",
              "shortForm": true,
            },
          ],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "fromCallable",
            },
            "what": Name {
              "kind": "name",
              "name": "Closure",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"foo::method != foo::method2: %s\\\\n\\"",
            "unicode": false,
            "value": "foo::method != foo::method2: %s
",
          },
          RetIf {
            "falseExpr": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"FAIL\\"",
              "unicode": false,
              "value": "FAIL",
            },
            "kind": "retif",
            "test": Bin {
              "kind": "bin",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "0",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "closures",
                },
              },
              "right": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "1",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "closures",
                },
              },
              "type": "!=",
            },
            "trueExpr": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"OK\\"",
              "unicode": false,
              "value": "OK",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Number {
            "kind": "number",
            "value": "2",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "closures",
          },
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Array {
              "items": Array [
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": Number {
                      "kind": "number",
                      "value": "0",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "closures",
                    },
                  },
                },
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"__invoke\\"",
                    "unicode": false,
                    "value": "__invoke",
                  },
                },
              ],
              "kind": "array",
              "shortForm": true,
            },
          ],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "fromCallable",
            },
            "what": Name {
              "kind": "name",
              "name": "Closure",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Number {
            "kind": "number",
            "value": "3",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "closures",
          },
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Array {
              "items": Array [
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": Number {
                      "kind": "number",
                      "value": "1",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "closures",
                    },
                  },
                },
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"__invoke\\"",
                    "unicode": false,
                    "value": "__invoke",
                  },
                },
              ],
              "kind": "array",
              "shortForm": true,
            },
          ],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "fromCallable",
            },
            "what": Name {
              "kind": "name",
              "name": "Closure",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"Closure[0]::invoke != Closure[1]::invoke: %s\\\\n\\"",
            "unicode": false,
            "value": "Closure[0]::invoke != Closure[1]::invoke: %s
",
          },
          RetIf {
            "falseExpr": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"FAIL\\"",
              "unicode": false,
              "value": "FAIL",
            },
            "kind": "retif",
            "test": Bin {
              "kind": "bin",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "2",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "closures",
                },
              },
              "right": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "3",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "closures",
                },
              },
              "type": "!=",
            },
            "trueExpr": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"OK\\"",
              "unicode": false,
              "value": "OK",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Number {
            "kind": "number",
            "value": "2",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "closures",
          },
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Array {
              "items": Array [
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": Number {
                      "kind": "number",
                      "value": "0",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "closures",
                    },
                  },
                },
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"__invoke\\"",
                    "unicode": false,
                    "value": "__invoke",
                  },
                },
              ],
              "kind": "array",
              "shortForm": true,
            },
          ],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "fromCallable",
            },
            "what": Name {
              "kind": "name",
              "name": "Closure",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Number {
            "kind": "number",
            "value": "3",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "closures",
          },
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Array {
              "items": Array [
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": Number {
                      "kind": "number",
                      "value": "0",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "closures",
                    },
                  },
                },
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"__invoke\\"",
                    "unicode": false,
                    "value": "__invoke",
                  },
                },
              ],
              "kind": "array",
              "shortForm": true,
            },
          ],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "fromCallable",
            },
            "what": Name {
              "kind": "name",
              "name": "Closure",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"Closure[0]::invoke == Closure[0]::invoke: %s\\\\n\\"",
            "unicode": false,
            "value": "Closure[0]::invoke == Closure[0]::invoke: %s
",
          },
          RetIf {
            "falseExpr": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"FAIL\\"",
              "unicode": false,
              "value": "FAIL",
            },
            "kind": "retif",
            "test": Bin {
              "kind": "bin",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "2",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "closures",
                },
              },
              "right": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "3",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "closures",
                },
              },
              "type": "==",
            },
            "trueExpr": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"OK\\"",
              "unicode": false,
              "value": "OK",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "printf",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
