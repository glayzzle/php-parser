// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests openssl_decrypt() tests dependent on openssl_encrypt 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "data",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"openssl_encrypt() and openssl_decrypt() tests\\"",
          "unicode": false,
          "value": "openssl_encrypt() and openssl_decrypt() tests",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "method",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"AES-128-CBC\\"",
          "unicode": false,
          "value": "AES-128-CBC",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "password",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"openssl\\"",
          "unicode": false,
          "value": "openssl",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "ivlen",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "method",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "openssl_cipher_iv_length",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "iv",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "''",
          "unicode": false,
          "value": "",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "time",
                "resolution": "uqn",
              },
            },
            "right": Bin {
              "kind": "bin",
              "left": Cast {
                "expr": Bin {
                  "kind": "bin",
                  "left": Call {
                    "arguments": Array [
                      Boolean {
                        "kind": "boolean",
                        "raw": "true",
                        "value": true,
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "microtime",
                      "resolution": "uqn",
                    },
                  },
                  "parenthesizedExpression": true,
                  "right": Number {
                    "kind": "number",
                    "value": "1000000",
                  },
                  "type": "*",
                },
                "kind": "cast",
                "raw": "(int)",
                "type": "int",
              },
              "parenthesizedExpression": true,
              "right": Number {
                "kind": "number",
                "value": "1000000",
              },
              "type": "%",
            },
            "type": "+",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "srand",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    While {
      "body": ExpressionStatement {
        "expression": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "iv",
          },
          "operator": ".=",
          "right": Call {
            "arguments": Array [
              Call {
                "arguments": Array [
                  Number {
                    "kind": "number",
                    "value": "0",
                  },
                  Number {
                    "kind": "number",
                    "value": "255",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "rand",
                  "resolution": "uqn",
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "chr",
              "resolution": "uqn",
            },
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "while",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "iv",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "strlen",
            "resolution": "uqn",
          },
        },
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "ivlen",
        },
        "type": "<",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "encrypted",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "data",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "method",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "password",
            },
            Number {
              "kind": "number",
              "value": "0",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "iv",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "openssl_encrypt",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "output",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "encrypted",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "method",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "password",
            },
            Number {
              "kind": "number",
              "value": "0",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "iv",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "openssl_decrypt",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "output",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "encrypted",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "data",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "method",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "password",
            },
            Name {
              "kind": "name",
              "name": "OPENSSL_RAW_DATA",
              "resolution": "uqn",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "iv",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "openssl_encrypt",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "output",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "encrypted",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "method",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "password",
            },
            Name {
              "kind": "name",
              "name": "OPENSSL_RAW_DATA",
              "resolution": "uqn",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "iv",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "openssl_decrypt",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "output",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "padded_data",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "data",
          },
          "right": Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "' '",
                "unicode": false,
                "value": " ",
              },
              Bin {
                "kind": "bin",
                "left": Number {
                  "kind": "number",
                  "value": "16",
                },
                "right": Bin {
                  "kind": "bin",
                  "left": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "data",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "strlen",
                      "resolution": "uqn",
                    },
                  },
                  "parenthesizedExpression": true,
                  "right": Number {
                    "kind": "number",
                    "value": "16",
                  },
                  "type": "%",
                },
                "type": "-",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "str_repeat",
              "resolution": "uqn",
            },
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "encrypted",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "padded_data",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "method",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "password",
            },
            Bin {
              "kind": "bin",
              "left": Name {
                "kind": "name",
                "name": "OPENSSL_RAW_DATA",
                "resolution": "uqn",
              },
              "right": Name {
                "kind": "name",
                "name": "OPENSSL_ZERO_PADDING",
                "resolution": "uqn",
              },
              "type": "|",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "iv",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "openssl_encrypt",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "output",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "encrypted",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "method",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "password",
            },
            Bin {
              "kind": "bin",
              "left": Name {
                "kind": "name",
                "name": "OPENSSL_RAW_DATA",
                "resolution": "uqn",
              },
              "right": Name {
                "kind": "name",
                "name": "OPENSSL_ZERO_PADDING",
                "resolution": "uqn",
              },
              "type": "|",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "iv",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "openssl_decrypt",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "output",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "rtrim",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "output2",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "encrypted",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "method",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "password",
            },
            Bin {
              "kind": "bin",
              "left": Name {
                "kind": "name",
                "name": "OPENSSL_RAW_DATA",
                "resolution": "uqn",
              },
              "right": Name {
                "kind": "name",
                "name": "OPENSSL_ZERO_PADDING",
                "resolution": "uqn",
              },
              "type": "|",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "iv",
            },
            namedargument {
              "kind": "namedargument",
              "name": "tag",
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "''",
                "unicode": false,
                "value": "",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "openssl_decrypt",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "output2",
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "output",
            },
            "type": "===",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "output3",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "encrypted",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "method",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "password",
            },
            Bin {
              "kind": "bin",
              "left": Name {
                "kind": "name",
                "name": "OPENSSL_RAW_DATA",
                "resolution": "uqn",
              },
              "right": Name {
                "kind": "name",
                "name": "OPENSSL_ZERO_PADDING",
                "resolution": "uqn",
              },
              "type": "|",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "iv",
            },
            namedargument {
              "kind": "namedargument",
              "name": "tag",
              "value": NullKeyword {
                "kind": "nullkeyword",
                "raw": "null",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "openssl_decrypt",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "output3",
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "output",
            },
            "type": "===",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Boolean {
                  "kind": "boolean",
                  "raw": "true",
                  "value": true,
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "encrypted",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "data",
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"bf-ecb\\"",
                    "unicode": false,
                    "value": "bf-ecb",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "password",
                  },
                  Name {
                    "kind": "name",
                    "name": "OPENSSL_DONT_ZERO_PAD_KEY",
                    "resolution": "uqn",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "openssl_encrypt",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "output",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "encrypted",
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"bf-ecb\\"",
                    "unicode": false,
                    "value": "bf-ecb",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "password",
                  },
                  Name {
                    "kind": "name",
                    "name": "OPENSSL_DONT_ZERO_PAD_KEY",
                    "resolution": "uqn",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "openssl_decrypt",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Bin {
                  "kind": "bin",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "output",
                  },
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "data",
                  },
                  "type": "===",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"bf-ecb\\"",
            "unicode": false,
            "value": "bf-ecb",
          },
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "openssl_get_cipher_methods",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "in_array",
          "resolution": "uqn",
        },
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "data",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "method",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "password",
          },
          Number {
            "kind": "number",
            "value": "0",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "iv",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "tag",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "openssl_encrypt",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "tag",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
