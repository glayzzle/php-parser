// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests MySQL PDO->__construct(), libmysql only options 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": true,
        "target": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Magic {
              "kind": "magic",
              "raw": "__DIR__",
              "value": "__DIR__",
            },
            "right": Name {
              "kind": "name",
              "name": "DIRECTORY_SEPARATOR",
              "resolution": "uqn",
            },
            "type": ".",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'mysql_pdo_test.inc'",
            "unicode": false,
            "value": "mysql_pdo_test.inc",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "offset",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "option",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "value",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "option_desc",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "ignore_diff",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "dsn",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [],
                "kind": "call",
                "what": StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "getDSN",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "MySQLPDOTest",
                    "resolution": "uqn",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "user",
              },
              "operator": "=",
              "right": Name {
                "kind": "name",
                "name": "PDO_MYSQL_TEST_USER",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "pass",
              },
              "operator": "=",
              "right": Name {
                "kind": "name",
                "name": "PDO_MYSQL_TEST_PASS",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          Try {
            "always": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "db",
                    },
                    "operator": "=",
                    "right": New {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "dsn",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "user",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "pass",
                        },
                        Array {
                          "items": Array [
                            Entry {
                              "byRef": false,
                              "key": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "option",
                              },
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "value",
                              },
                            },
                          ],
                          "kind": "array",
                          "shortForm": false,
                        },
                      ],
                      "kind": "new",
                      "what": Name {
                        "kind": "name",
                        "name": "PDO",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                If {
                  "alternate": null,
                  "body": ExpressionStatement {
                    "expression": Call {
                      "arguments": Array [
                        String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"[%03d] Expecting '%s'/%s got '%s'/%s' for options '%s'\\\\n\\"",
                          "unicode": false,
                          "value": "[%03d] Expecting '%s'/%s got '%s'/%s' for options '%s'
",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "offset",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "value",
                        },
                        Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "value",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "gettype",
                            "resolution": "uqn",
                          },
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "tmp",
                        },
                        Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "tmp",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "gettype",
                            "resolution": "uqn",
                          },
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "option_desc",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "printf",
                        "resolution": "uqn",
                      },
                    },
                    "kind": "expressionstatement",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Unary {
                      "kind": "unary",
                      "type": "!",
                      "what": Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "db",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "is_object",
                          "resolution": "uqn",
                        },
                      },
                    },
                    "right": Bin {
                      "kind": "bin",
                      "left": Unary {
                        "kind": "unary",
                        "type": "!",
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "ignore_diff",
                        },
                      },
                      "parenthesizedExpression": true,
                      "right": Bin {
                        "kind": "bin",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "value",
                        },
                        "parenthesizedExpression": true,
                        "right": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "tmp",
                          },
                          "operator": "=",
                          "parenthesizedExpression": true,
                          "right": Silent {
                            "expr": Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "option",
                                },
                              ],
                              "kind": "call",
                              "what": PropertyLookup {
                                "kind": "propertylookup",
                                "offset": Identifier {
                                  "kind": "identifier",
                                  "name": "getAttribute",
                                },
                                "what": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "db",
                                },
                              },
                            },
                            "kind": "silent",
                          },
                        },
                        "type": "!==",
                      },
                      "type": "&&",
                    },
                    "type": "||",
                  },
                },
              ],
              "kind": "block",
            },
            "catches": Array [
              Catch {
                "body": Block {
                  "children": Array [
                    Echo {
                      "expressions": Array [
                        Encapsed {
                          "kind": "encapsed",
                          "raw": "\\"Failed to getAttribute() for $option_desc\\\\n\\"",
                          "type": "string",
                          "value": Array [
                            EncapsedPart {
                              "curly": false,
                              "expression": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "Failed to getAttribute() for ",
                                "unicode": false,
                                "value": "Failed to getAttribute() for ",
                              },
                              "kind": "encapsedpart",
                              "syntax": null,
                            },
                            EncapsedPart {
                              "curly": false,
                              "expression": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "option_desc",
                              },
                              "kind": "encapsedpart",
                              "syntax": "simple",
                            },
                            EncapsedPart {
                              "curly": false,
                              "expression": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "\\\\n",
                                "unicode": false,
                                "value": "",
                              },
                              "kind": "encapsedpart",
                              "syntax": null,
                            },
                          ],
                        },
                      ],
                      "kind": "echo",
                      "shortForm": false,
                    },
                  ],
                  "kind": "block",
                },
                "kind": "catch",
                "variable": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "e",
                },
                "what": Array [
                  Name {
                    "kind": "name",
                    "name": "PDOException",
                    "resolution": "uqn",
                  },
                ],
              },
            ],
            "kind": "try",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "set_option_and_check",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "dsn",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "getDSN",
            },
            "what": Name {
              "kind": "name",
              "name": "MySQLPDOTest",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "user",
        },
        "operator": "=",
        "right": Name {
          "kind": "name",
          "name": "PDO_MYSQL_TEST_USER",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "pass",
        },
        "operator": "=",
        "right": Name {
          "kind": "name",
          "name": "PDO_MYSQL_TEST_PASS",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "valid_options",
        },
        "operator": "=",
        "right": Array {
          "items": Array [],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "MYSQL_ATTR_MAX_BUFFER_SIZE",
            },
            "what": Name {
              "kind": "name",
              "name": "PDO",
              "resolution": "uqn",
            },
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "valid_options",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'PDO::MYSQL_ATTR_MAX_BUFFER_SIZE'",
          "unicode": false,
          "value": "PDO::MYSQL_ATTR_MAX_BUFFER_SIZE",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "MYSQL_ATTR_INIT_COMMAND",
            },
            "what": Name {
              "kind": "name",
              "name": "PDO",
              "resolution": "uqn",
            },
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "valid_options",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'PDO::MYSQL_ATTR_INIT_COMMAND'",
          "unicode": false,
          "value": "PDO::MYSQL_ATTR_INIT_COMMAND",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "MYSQL_ATTR_READ_DEFAULT_FILE",
            },
            "what": Name {
              "kind": "name",
              "name": "PDO",
              "resolution": "uqn",
            },
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "valid_options",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'PDO::MYSQL_ATTR_READ_DEFAULT_FILE'",
          "unicode": false,
          "value": "PDO::MYSQL_ATTR_READ_DEFAULT_FILE",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "MYSQL_ATTR_READ_DEFAULT_GROUP",
            },
            "what": Name {
              "kind": "name",
              "name": "PDO",
              "resolution": "uqn",
            },
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "valid_options",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'PDO::MYSQL_ATTR_READ_DEFAULT_GROUP'",
          "unicode": false,
          "value": "PDO::MYSQL_ATTR_READ_DEFAULT_GROUP",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "MYSQL_ATTR_MAX_BUFFER_SIZE",
            },
            "what": Name {
              "kind": "name",
              "name": "PDO",
              "resolution": "uqn",
            },
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "defaults",
          },
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "1048576",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "MYSQL_ATTR_INIT_COMMAND",
            },
            "what": Name {
              "kind": "name",
              "name": "PDO",
              "resolution": "uqn",
            },
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "defaults",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "''",
          "unicode": false,
          "value": "",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "MYSQL_ATTR_READ_DEFAULT_FILE",
            },
            "what": Name {
              "kind": "name",
              "name": "PDO",
              "resolution": "uqn",
            },
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "defaults",
          },
        },
        "operator": "=",
        "right": Boolean {
          "kind": "boolean",
          "raw": "false",
          "value": false,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "MYSQL_ATTR_READ_DEFAULT_GROUP",
            },
            "what": Name {
              "kind": "name",
              "name": "PDO",
              "resolution": "uqn",
            },
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "defaults",
          },
        },
        "operator": "=",
        "right": Boolean {
          "kind": "boolean",
          "raw": "false",
          "value": false,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "db",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "dsn",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "user",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "pass",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "PDO",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          Try {
            "always": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "tmp",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "option",
                        },
                      ],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getAttribute",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "db",
                        },
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                If {
                  "alternate": null,
                  "body": ExpressionStatement {
                    "expression": Call {
                      "arguments": Array [
                        String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"[001] Expecting default value for '%s' of '%s'/%s, getAttribute() reports setting '%s'/%s\\\\n\\"",
                          "unicode": false,
                          "value": "[001] Expecting default value for '%s' of '%s'/%s, getAttribute() reports setting '%s'/%s
",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "name",
                        },
                        OffsetLookup {
                          "kind": "offsetlookup",
                          "offset": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "option",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "defaults",
                          },
                        },
                        Call {
                          "arguments": Array [
                            OffsetLookup {
                              "kind": "offsetlookup",
                              "offset": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "option",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "defaults",
                              },
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "gettype",
                            "resolution": "uqn",
                          },
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "tmp",
                        },
                        Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "tmp",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "gettype",
                            "resolution": "uqn",
                          },
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "printf",
                        "resolution": "uqn",
                      },
                    },
                    "kind": "expressionstatement",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "tmp",
                    },
                    "right": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "option",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "defaults",
                      },
                    },
                    "type": "!==",
                  },
                },
              ],
              "kind": "block",
            },
            "catches": Array [
              Catch {
                "body": Block {
                  "children": Array [
                    Echo {
                      "expressions": Array [
                        Encapsed {
                          "kind": "encapsed",
                          "raw": "\\"Failed to getAttribute() for $name\\\\n\\"",
                          "type": "string",
                          "value": Array [
                            EncapsedPart {
                              "curly": false,
                              "expression": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "Failed to getAttribute() for ",
                                "unicode": false,
                                "value": "Failed to getAttribute() for ",
                              },
                              "kind": "encapsedpart",
                              "syntax": null,
                            },
                            EncapsedPart {
                              "curly": false,
                              "expression": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "name",
                              },
                              "kind": "encapsedpart",
                              "syntax": "simple",
                            },
                            EncapsedPart {
                              "curly": false,
                              "expression": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "\\\\n",
                                "unicode": false,
                                "value": "",
                              },
                              "kind": "encapsedpart",
                              "syntax": null,
                            },
                          ],
                        },
                      ],
                      "kind": "echo",
                      "shortForm": false,
                    },
                  ],
                  "kind": "block",
                },
                "kind": "catch",
                "variable": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "e",
                },
                "what": Array [
                  Name {
                    "kind": "name",
                    "name": "PDOException",
                    "resolution": "uqn",
                  },
                ],
              },
            ],
            "kind": "try",
          },
        ],
        "kind": "block",
      },
      "key": Variable {
        "curly": false,
        "kind": "variable",
        "name": "option",
      },
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "valid_options",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "name",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "26",
          },
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "MYSQL_ATTR_READ_DEFAULT_FILE",
            },
            "what": Name {
              "kind": "name",
              "name": "PDO",
              "resolution": "uqn",
            },
          },
          Boolean {
            "kind": "boolean",
            "raw": "true",
            "value": true,
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'PDO::MYSQL_ATTR_READ_DEFAULT_FILE'",
            "unicode": false,
            "value": "PDO::MYSQL_ATTR_READ_DEFAULT_FILE",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "set_option_and_check",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "27",
          },
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "MYSQL_ATTR_READ_DEFAULT_FILE",
            },
            "what": Name {
              "kind": "name",
              "name": "PDO",
              "resolution": "uqn",
            },
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'PDO::MYSQL_ATTR_READ_DEFAULT_FILE'",
            "unicode": false,
            "value": "PDO::MYSQL_ATTR_READ_DEFAULT_FILE",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "set_option_and_check",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "30",
          },
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "MYSQL_ATTR_MAX_BUFFER_SIZE",
            },
            "what": Name {
              "kind": "name",
              "name": "PDO",
              "resolution": "uqn",
            },
          },
          Unary {
            "kind": "unary",
            "type": "-",
            "what": Number {
              "kind": "number",
              "value": "1",
            },
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'PDO::MYSQL_ATTR_MAX_BUFFER_SIZE'",
            "unicode": false,
            "value": "PDO::MYSQL_ATTR_MAX_BUFFER_SIZE",
          },
          Boolean {
            "kind": "boolean",
            "raw": "true",
            "value": true,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "set_option_and_check",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "31",
          },
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "MYSQL_ATTR_MAX_BUFFER_SIZE",
            },
            "what": Name {
              "kind": "name",
              "name": "PDO",
              "resolution": "uqn",
            },
          },
          Name {
            "kind": "name",
            "name": "PHP_INT_MAX",
            "resolution": "uqn",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'PDO::MYSQL_ATTR_MAX_BUFFER_SIZE'",
            "unicode": false,
            "value": "PDO::MYSQL_ATTR_MAX_BUFFER_SIZE",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "set_option_and_check",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "32",
          },
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "MYSQL_ATTR_MAX_BUFFER_SIZE",
            },
            "what": Name {
              "kind": "name",
              "name": "PDO",
              "resolution": "uqn",
            },
          },
          Number {
            "kind": "number",
            "value": "1",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'PDO::MYSQL_ATTR_MAX_BUFFER_SIZE'",
            "unicode": false,
            "value": "PDO::MYSQL_ATTR_MAX_BUFFER_SIZE",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "set_option_and_check",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"done!\\\\n\\"",
          "unicode": false,
          "value": "done!
",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
