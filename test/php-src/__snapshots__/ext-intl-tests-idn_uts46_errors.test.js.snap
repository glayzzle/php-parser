// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests IDN UTS #46 API error tests 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"intl.error_level\\"",
            "unicode": false,
            "value": "intl.error_level",
          },
          Name {
            "kind": "name",
            "name": "E_WARNING",
            "resolution": "uqn",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "ini_set",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"=> PHP level errors\\"",
          "unicode": false,
          "value": "=> PHP level errors",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"bad variant:\\"",
          "unicode": false,
          "value": "bad variant:",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\"",
                "unicode": false,
                "value": "",
              },
              Number {
                "kind": "number",
                "value": "0",
              },
              Bin {
                "kind": "bin",
                "left": Name {
                  "kind": "name",
                  "name": "INTL_IDNA_VARIANT_UTS46",
                  "resolution": "uqn",
                },
                "right": Number {
                  "kind": "number",
                  "value": "10",
                },
                "type": "+",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "idn_to_ascii",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"empty domain:\\"",
          "unicode": false,
          "value": "empty domain:",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\"",
                "unicode": false,
                "value": "",
              },
              Number {
                "kind": "number",
                "value": "0",
              },
              Name {
                "kind": "name",
                "name": "INTL_IDNA_VARIANT_UTS46",
                "resolution": "uqn",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "idn_to_ascii",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"with error, but no details arg:\\"",
          "unicode": false,
          "value": "with error, but no details arg:",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"www.fußball.com-\\"",
                "unicode": false,
                "value": "www.fußball.com-",
              },
              Number {
                "kind": "number",
                "value": "0",
              },
              Name {
                "kind": "name",
                "name": "INTL_IDNA_VARIANT_UTS46",
                "resolution": "uqn",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "idn_to_ascii",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"with error, with details arg:\\"",
          "unicode": false,
          "value": "with error, with details arg:",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"www.fußball.com-\\"",
                "unicode": false,
                "value": "www.fußball.com-",
              },
              Name {
                "kind": "name",
                "name": "IDNA_NONTRANSITIONAL_TO_ASCII",
                "resolution": "uqn",
              },
              Name {
                "kind": "name",
                "name": "INTL_IDNA_VARIANT_UTS46",
                "resolution": "uqn",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "foo",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "idn_to_ascii",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "foo",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"with error, with details arg, contextj:\\"",
          "unicode": false,
          "value": "with error, with details arg, contextj:",
        },
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"www.a&#x200D;b.com\\"",
                    "unicode": false,
                    "value": "www.a&#x200D;b.com",
                  },
                  Number {
                    "kind": "number",
                    "value": "0",
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"UTF-8\\"",
                    "unicode": false,
                    "value": "UTF-8",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "html_entity_decode",
                  "resolution": "uqn",
                },
              },
              Bin {
                "kind": "bin",
                "left": Name {
                  "kind": "name",
                  "name": "IDNA_NONTRANSITIONAL_TO_ASCII",
                  "resolution": "uqn",
                },
                "right": Name {
                  "kind": "name",
                  "name": "IDNA_CHECK_CONTEXTJ",
                  "resolution": "uqn",
                },
                "type": "|",
              },
              Name {
                "kind": "name",
                "name": "INTL_IDNA_VARIANT_UTS46",
                "resolution": "uqn",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "foo",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "idn_to_ascii",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "foo",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"errors\\"",
                "unicode": false,
                "value": "errors",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "foo",
              },
            },
            "right": Name {
              "kind": "name",
              "name": "IDNA_ERROR_CONTEXTJ",
              "resolution": "uqn",
            },
            "type": "==",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
