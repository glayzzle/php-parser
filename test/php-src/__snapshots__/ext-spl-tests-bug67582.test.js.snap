// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #67582: Cloned SplObjectStorage with overwritten getHash fails offsetExists() 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [],
      "body": Array [
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "object",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Return {
                "expr": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "object",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "get_class",
                    "resolution": "uqn",
                  },
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "getHash",
          },
          "nullable": false,
          "type": TypeReference {
            "kind": "typereference",
            "name": "string",
            "raw": "string",
          },
          "visibility": "public",
        },
      ],
      "extends": Name {
        "kind": "name",
        "name": "SplObjectStorage",
        "resolution": "uqn",
      },
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "MyObjectStorage",
      },
    },
    Class {
      "attrGroups": Array [],
      "body": Array [],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "TestObject",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "list",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "MyObjectStorage",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          New {
            "arguments": Array [],
            "kind": "new",
            "what": Name {
              "kind": "name",
              "name": "TestObject",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "attach",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "list",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "x",
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "offsetExists",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "list",
                },
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "var_dump",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "list",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "x",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "list2",
        },
        "operator": "=",
        "right": Clone {
          "kind": "clone",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "list",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "x",
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "offsetExists",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "list2",
                },
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "var_dump",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "list2",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "x",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
