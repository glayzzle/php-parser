// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #79790: "Illegal offset type" exception during AST evaluation not handled properly 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "b",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "a",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": OffsetLookup {
            "kind": "offsetlookup",
            "offset": Array {
              "items": Array [],
              "kind": "array",
              "shortForm": false,
            },
            "what": Array {
              "items": Array [],
              "kind": "array",
              "shortForm": false,
            },
          },
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Pre {
              "kind": "pre",
              "type": "+",
              "what": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Closure {
                  "arguments": Array [],
                  "attrGroups": Array [],
                  "body": Block {
                    "children": Array [],
                    "kind": "block",
                  },
                  "byref": false,
                  "isStatic": false,
                  "kind": "closure",
                  "nullable": false,
                  "type": null,
                  "uses": Array [],
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "c",
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "b",
      },
      "nullable": false,
      "type": null,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
