// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Study regex 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/(?:(?:(?:(?:(?:(.))))))/  S'",
                "unicode": false,
                "value": "/(?:(?:(?:(?:(?:(.))))))/  S",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'aeiou'",
                "unicode": false,
                "value": "aeiou",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "dump",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "preg_match",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": Number {
              "kind": "number",
              "value": "1",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "dump",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/(?:(?:(?:(?:(?:(.))))))/'",
                "unicode": false,
                "value": "/(?:(?:(?:(?:(?:(.))))))/",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'aeiou'",
                "unicode": false,
                "value": "aeiou",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "dump",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "preg_match",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": Number {
              "kind": "number",
              "value": "1",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "dump",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/(?>..)((?:(?>.)|.|.|.|u))/S'",
                "unicode": false,
                "value": "/(?>..)((?:(?>.)|.|.|.|u))/S",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'aeiou'",
                "unicode": false,
                "value": "aeiou",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "dump",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "preg_match",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": Number {
              "kind": "number",
              "value": "1",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "dump",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/^aeiou$/S'",
                "unicode": false,
                "value": "/^aeiou$/S",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'aeiou'",
                "unicode": false,
                "value": "aeiou",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "dump",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "preg_match",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": Number {
              "kind": "number",
              "value": "0",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "dump",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/aeiou/S'",
                "unicode": false,
                "value": "/aeiou/S",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'aeiou'",
                "unicode": false,
                "value": "aeiou",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "dump",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "preg_match",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": Number {
              "kind": "number",
              "value": "0",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "dump",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
