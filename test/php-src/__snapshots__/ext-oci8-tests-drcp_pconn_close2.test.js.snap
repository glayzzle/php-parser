// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests DRCP: oci_pconnect() with oci_close() and oci8.old_oci_close_semantics OFF 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": true,
        "target": Bin {
          "kind": "bin",
          "left": Magic {
            "kind": "magic",
            "raw": "__DIR__",
            "value": "__DIR__",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"/details.inc\\"",
            "unicode": false,
            "value": "/details.inc",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"This is with a OCI_PCONNECT\\\\n\\"",
          "unicode": false,
          "value": "This is with a OCI_PCONNECT
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Assign {
            "kind": "assign",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "conn1",
            },
            "operator": "=",
            "right": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "user",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "password",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "dbase",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "oci_pconnect",
                "resolution": "uqn",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "rn1",
        },
        "operator": "=",
        "right": Cast {
          "expr": Variable {
            "curly": false,
            "kind": "variable",
            "name": "conn1",
          },
          "kind": "cast",
          "raw": "(int)",
          "type": "int",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "conn1",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_close",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Assign {
            "kind": "assign",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "conn2",
            },
            "operator": "=",
            "right": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "user",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "password",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "dbase",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "oci_pconnect",
                "resolution": "uqn",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "rn2",
        },
        "operator": "=",
        "right": Cast {
          "expr": Variable {
            "curly": false,
            "kind": "variable",
            "name": "conn2",
          },
          "kind": "cast",
          "raw": "(int)",
          "type": "int",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "conn2",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "oci_close",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": Echo {
        "expressions": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"Both connections are different : OK\\\\n\\"",
            "unicode": false,
            "value": "Both connections are different : OK
",
          },
        ],
        "kind": "echo",
        "shortForm": false,
      },
      "body": Echo {
        "expressions": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"Both connections share a resource : NOT OK\\\\n\\"",
            "unicode": false,
            "value": "Both connections share a resource : NOT OK
",
          },
        ],
        "kind": "echo",
        "shortForm": false,
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "rn1",
        },
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "rn2",
        },
        "type": "===",
      },
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Done\\\\n\\"",
          "unicode": false,
          "value": "Done
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
