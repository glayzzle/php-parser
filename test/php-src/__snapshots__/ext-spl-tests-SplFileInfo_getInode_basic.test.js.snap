// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests SPL: Spl File Info test getInode 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'SplFileInfo_getInode_basic.txt'",
            "unicode": false,
            "value": "SplFileInfo_getInode_basic.txt",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "touch",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "fileInfo",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'SplFileInfo_getInode_basic.txt'",
              "unicode": false,
              "value": "SplFileInfo_getInode_basic.txt",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "SplFileInfo",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "result",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'ls -i SplFileInfo_getInode_basic.txt'",
              "unicode": false,
              "value": "ls -i SplFileInfo_getInode_basic.txt",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "shell_exec",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "getInode",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "fileInfo",
                },
              },
            },
            "right": Cast {
              "expr": Variable {
                "curly": false,
                "kind": "variable",
                "name": "result",
              },
              "kind": "cast",
              "raw": "(int)",
              "type": "int",
            },
            "type": "==",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
