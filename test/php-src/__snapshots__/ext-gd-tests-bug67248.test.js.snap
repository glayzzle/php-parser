// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #67248 (imageaffinematrixget missing check of parameters) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": true,
        "target": Bin {
          "kind": "bin",
          "left": Magic {
            "kind": "magic",
            "raw": "__DIR__",
            "value": "__DIR__",
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'/func.inc'",
            "unicode": false,
            "value": "/func.inc",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    For {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Closure {
                  "arguments": Array [],
                  "attrGroups": Array [],
                  "body": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "i",
                      },
                      New {
                        "arguments": Array [],
                        "kind": "new",
                        "what": Name {
                          "kind": "name",
                          "name": "stdClass",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "imageaffinematrixget",
                      "resolution": "uqn",
                    },
                  },
                  "byref": false,
                  "isStatic": false,
                  "kind": "arrowfunc",
                  "nullable": false,
                  "type": null,
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "trycatch_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "increment": Array [
        Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "0",
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "right": Number {
            "kind": "number",
            "value": "7",
          },
          "type": "<",
        },
      ],
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
