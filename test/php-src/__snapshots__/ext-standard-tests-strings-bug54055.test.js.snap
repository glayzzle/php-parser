// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #54055: PHP crashes when executing strval when precision setting is very high 1`] = `
Program {
  "children": Array [
    For {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'precision'",
                  "unicode": false,
                  "value": "precision",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "ini_set",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          Echo {
            "expressions": Array [
              Encapsed {
                "kind": "encapsed",
                "raw": "\\"$i: len=\\"",
                "type": "string",
                "value": Array [
                  EncapsedPart {
                    "curly": false,
                    "expression": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "i",
                    },
                    "kind": "encapsedpart",
                    "syntax": "simple",
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": ": len=",
                      "unicode": false,
                      "value": ": len=",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                ],
              },
              Call {
                "arguments": Array [
                  Call {
                    "arguments": Array [
                      Bin {
                        "kind": "bin",
                        "left": Unary {
                          "kind": "unary",
                          "type": "-",
                          "what": Number {
                            "kind": "number",
                            "value": "1",
                          },
                        },
                        "right": Call {
                          "arguments": Array [
                            Number {
                              "kind": "number",
                              "value": "2",
                            },
                            Unary {
                              "kind": "unary",
                              "type": "-",
                              "what": Number {
                                "kind": "number",
                                "value": "1074",
                              },
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "pow",
                            "resolution": "uqn",
                          },
                        },
                        "type": "*",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "strval",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "strlen",
                  "resolution": "uqn",
                },
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\n\\"",
                "unicode": false,
                "value": "
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "increment": Array [
        Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "495",
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "right": Number {
            "kind": "number",
            "value": "1074",
          },
          "type": "<=",
        },
      ],
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
