// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests list() with keys, evaluation order 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": true,
        "target": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"list_keyed_evaluation_order.inc\\"",
          "unicode": false,
          "value": "list_keyed_evaluation_order.inc",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"A\\"",
              "unicode": false,
              "value": "A",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "StringCapable",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "c",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"C\\"",
              "unicode": false,
              "value": "C",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "StringCapable",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "e",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"E\\"",
              "unicode": false,
              "value": "E",
            },
            New {
              "arguments": Array [
                Array {
                  "items": Array [
                    Entry {
                      "byRef": false,
                      "key": String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"A\\"",
                        "unicode": false,
                        "value": "A",
                      },
                      "kind": "entry",
                      "unpack": false,
                      "value": String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"value for offset A\\"",
                        "unicode": false,
                        "value": "value for offset A",
                      },
                    },
                    Entry {
                      "byRef": false,
                      "key": String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"C\\"",
                        "unicode": false,
                        "value": "C",
                      },
                      "kind": "entry",
                      "unpack": false,
                      "value": String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"value for offset C\\"",
                        "unicode": false,
                        "value": "value for offset C",
                      },
                    },
                  ],
                  "kind": "array",
                  "shortForm": true,
                },
              ],
              "kind": "new",
              "what": Name {
                "kind": "name",
                "name": "Indexable",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "IndexableRetrievable",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "store",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            Array {
              "items": Array [],
              "kind": "array",
              "shortForm": true,
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "Indexable",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": List {
          "items": Array [
            Entry {
              "byRef": false,
              "key": Cast {
                "expr": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "a",
                },
                "kind": "cast",
                "raw": "(string)",
                "type": "string",
              },
              "kind": "entry",
              "unpack": false,
              "value": OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"B\\"",
                  "unicode": false,
                  "value": "B",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "store",
                },
              },
            },
            Entry {
              "byRef": false,
              "key": Cast {
                "expr": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "c",
                },
                "kind": "cast",
                "raw": "(string)",
                "type": "string",
              },
              "kind": "entry",
              "unpack": false,
              "value": OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"D\\"",
                  "unicode": false,
                  "value": "D",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "store",
                },
              },
            },
          ],
          "kind": "list",
          "shortForm": false,
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "getIndexable",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "e",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
