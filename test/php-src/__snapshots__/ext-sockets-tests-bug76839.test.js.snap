// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #76839: socket_recvfrom may return an invalid 'from' address on MacOS 1`] = `
Program {
  "children": Array [
    For {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "senderSocketPath",
              },
              "operator": "=",
              "right": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'/tmp/'",
                    "unicode": false,
                    "value": "/tmp/",
                  },
                  "right": Call {
                    "arguments": Array [
                      Call {
                        "arguments": Array [
                          Call {
                            "arguments": Array [],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "rand",
                              "resolution": "uqn",
                            },
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "md5",
                          "resolution": "uqn",
                        },
                      },
                      Number {
                        "kind": "number",
                        "value": "0",
                      },
                      Call {
                        "arguments": Array [
                          Number {
                            "kind": "number",
                            "value": "8",
                          },
                          Number {
                            "kind": "number",
                            "value": "16",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "rand",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "substr",
                      "resolution": "uqn",
                    },
                  },
                  "type": ".",
                },
                "right": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'.sock'",
                  "unicode": false,
                  "value": ".sock",
                },
                "type": ".",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "senderSocket",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Name {
                    "kind": "name",
                    "name": "AF_UNIX",
                    "resolution": "uqn",
                  },
                  Name {
                    "kind": "name",
                    "name": "SOCK_DGRAM",
                    "resolution": "uqn",
                  },
                  Number {
                    "kind": "number",
                    "value": "0",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "socket_create",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "senderSocket",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "senderSocketPath",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "socket_bind",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "receiverSocketPath",
              },
              "operator": "=",
              "right": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'/tmp/'",
                    "unicode": false,
                    "value": "/tmp/",
                  },
                  "right": Call {
                    "arguments": Array [
                      Call {
                        "arguments": Array [
                          Call {
                            "arguments": Array [],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "rand",
                              "resolution": "uqn",
                            },
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "md5",
                          "resolution": "uqn",
                        },
                      },
                      Number {
                        "kind": "number",
                        "value": "0",
                      },
                      Call {
                        "arguments": Array [
                          Number {
                            "kind": "number",
                            "value": "8",
                          },
                          Number {
                            "kind": "number",
                            "value": "16",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "rand",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "substr",
                      "resolution": "uqn",
                    },
                  },
                  "type": ".",
                },
                "right": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'.sock'",
                  "unicode": false,
                  "value": ".sock",
                },
                "type": ".",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "receiverSocket",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Name {
                    "kind": "name",
                    "name": "AF_UNIX",
                    "resolution": "uqn",
                  },
                  Name {
                    "kind": "name",
                    "name": "SOCK_DGRAM",
                    "resolution": "uqn",
                  },
                  Number {
                    "kind": "number",
                    "value": "0",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "socket_create",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "receiverSocket",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "receiverSocketPath",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "socket_bind",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "senderSocket",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'Ping!'",
                  "unicode": false,
                  "value": "Ping!",
                },
                Number {
                  "kind": "number",
                  "value": "5",
                },
                Number {
                  "kind": "number",
                  "value": "0",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "receiverSocketPath",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "socket_sendto",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "from",
              },
              "operator": "=",
              "right": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "''",
                "unicode": false,
                "value": "",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "message",
              },
              "operator": "=",
              "right": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "''",
                "unicode": false,
                "value": "",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "receiverSocket",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "message",
                },
                Number {
                  "kind": "number",
                  "value": "65535",
                },
                Number {
                  "kind": "number",
                  "value": "0",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "from",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "socket_recvfrom",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          Echo {
            "expressions": Array [
              Encapsed {
                "kind": "encapsed",
                "raw": "\\"Received '$message'\\\\n\\"",
                "type": "string",
                "value": Array [
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "Received '",
                      "unicode": false,
                      "value": "Received '",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "message",
                    },
                    "kind": "encapsedpart",
                    "syntax": "simple",
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'\\\\n",
                      "unicode": false,
                      "value": "'",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                ],
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "receiverSocket",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'Pong!'",
                  "unicode": false,
                  "value": "Pong!",
                },
                Number {
                  "kind": "number",
                  "value": "5",
                },
                Number {
                  "kind": "number",
                  "value": "0",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "from",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "socket_sendto",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Responded to sender with 'Pong!'\\\\n\\"",
                "unicode": false,
                "value": "Responded to sender with 'Pong!'
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "receiverSocket",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "socket_close",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "receiverSocketPath",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "unlink",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "senderSocket",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "socket_close",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "senderSocketPath",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "unlink",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "increment": Array [
        Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "0",
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "right": Number {
            "kind": "number",
            "value": "10",
          },
          "type": "<",
        },
      ],
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
