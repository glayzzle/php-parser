// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests filter_var() and double overflow/underflow 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "test",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'1e+308'",
                "unicode": false,
                "value": "1e+308",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "1e+308",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'1e+309'",
                "unicode": false,
                "value": "1e+309",
              },
              "kind": "entry",
              "unpack": false,
              "value": Boolean {
                "kind": "boolean",
                "raw": "false",
                "value": false,
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'1e-323'",
                "unicode": false,
                "value": "1e-323",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "1e-323",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'1e-324'",
                "unicode": false,
                "value": "1e-324",
              },
              "kind": "entry",
              "unpack": false,
              "value": Boolean {
                "kind": "boolean",
                "raw": "false",
                "value": false,
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "out",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "src",
                  },
                  Name {
                    "kind": "name",
                    "name": "FILTER_VALIDATE_FLOAT",
                    "resolution": "uqn",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "filter_var",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                If {
                  "alternate": If {
                    "alternate": Block {
                      "children": Array [
                        Echo {
                          "expressions": Array [
                            Encapsed {
                              "kind": "encapsed",
                              "raw": "\\"$src -> $out != $dst\\\\n\\"",
                              "type": "string",
                              "value": Array [
                                EncapsedPart {
                                  "curly": false,
                                  "expression": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "src",
                                  },
                                  "kind": "encapsedpart",
                                  "syntax": "simple",
                                },
                                EncapsedPart {
                                  "curly": false,
                                  "expression": String {
                                    "isDoubleQuote": false,
                                    "kind": "string",
                                    "raw": " -> ",
                                    "unicode": false,
                                    "value": " -> ",
                                  },
                                  "kind": "encapsedpart",
                                  "syntax": null,
                                },
                                EncapsedPart {
                                  "curly": false,
                                  "expression": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "out",
                                  },
                                  "kind": "encapsedpart",
                                  "syntax": "simple",
                                },
                                EncapsedPart {
                                  "curly": false,
                                  "expression": String {
                                    "isDoubleQuote": false,
                                    "kind": "string",
                                    "raw": " != ",
                                    "unicode": false,
                                    "value": " != ",
                                  },
                                  "kind": "encapsedpart",
                                  "syntax": null,
                                },
                                EncapsedPart {
                                  "curly": false,
                                  "expression": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "dst",
                                  },
                                  "kind": "encapsedpart",
                                  "syntax": "simple",
                                },
                                EncapsedPart {
                                  "curly": false,
                                  "expression": String {
                                    "isDoubleQuote": false,
                                    "kind": "string",
                                    "raw": "\\\\n",
                                    "unicode": false,
                                    "value": "",
                                  },
                                  "kind": "encapsedpart",
                                  "syntax": null,
                                },
                              ],
                            },
                          ],
                          "kind": "echo",
                          "shortForm": false,
                        },
                      ],
                      "kind": "block",
                    },
                    "body": Block {
                      "children": Array [
                        Echo {
                          "expressions": Array [
                            Encapsed {
                              "kind": "encapsed",
                              "raw": "\\"$src -> $out != false\\\\n\\"",
                              "type": "string",
                              "value": Array [
                                EncapsedPart {
                                  "curly": false,
                                  "expression": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "src",
                                  },
                                  "kind": "encapsedpart",
                                  "syntax": "simple",
                                },
                                EncapsedPart {
                                  "curly": false,
                                  "expression": String {
                                    "isDoubleQuote": false,
                                    "kind": "string",
                                    "raw": " -> ",
                                    "unicode": false,
                                    "value": " -> ",
                                  },
                                  "kind": "encapsedpart",
                                  "syntax": null,
                                },
                                EncapsedPart {
                                  "curly": false,
                                  "expression": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "out",
                                  },
                                  "kind": "encapsedpart",
                                  "syntax": "simple",
                                },
                                EncapsedPart {
                                  "curly": false,
                                  "expression": String {
                                    "isDoubleQuote": false,
                                    "kind": "string",
                                    "raw": " != false\\\\n",
                                    "unicode": false,
                                    "value": " != false",
                                  },
                                  "kind": "encapsedpart",
                                  "syntax": null,
                                },
                              ],
                            },
                          ],
                          "kind": "echo",
                          "shortForm": false,
                        },
                      ],
                      "kind": "block",
                    },
                    "kind": "if",
                    "shortForm": false,
                    "test": Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "dst",
                      },
                      "right": Boolean {
                        "kind": "boolean",
                        "raw": "false",
                        "value": false,
                      },
                      "type": "===",
                    },
                  },
                  "body": Block {
                    "children": Array [
                      Echo {
                        "expressions": Array [
                          Encapsed {
                            "kind": "encapsed",
                            "raw": "\\"$src -> false != $dst\\\\n\\"",
                            "type": "string",
                            "value": Array [
                              EncapsedPart {
                                "curly": false,
                                "expression": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "src",
                                },
                                "kind": "encapsedpart",
                                "syntax": "simple",
                              },
                              EncapsedPart {
                                "curly": false,
                                "expression": String {
                                  "isDoubleQuote": false,
                                  "kind": "string",
                                  "raw": " -> false != ",
                                  "unicode": false,
                                  "value": " -> false != ",
                                },
                                "kind": "encapsedpart",
                                "syntax": null,
                              },
                              EncapsedPart {
                                "curly": false,
                                "expression": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "dst",
                                },
                                "kind": "encapsedpart",
                                "syntax": "simple",
                              },
                              EncapsedPart {
                                "curly": false,
                                "expression": String {
                                  "isDoubleQuote": false,
                                  "kind": "string",
                                  "raw": "\\\\n",
                                  "unicode": false,
                                  "value": "",
                                },
                                "kind": "encapsedpart",
                                "syntax": null,
                              },
                            ],
                          },
                        ],
                        "kind": "echo",
                        "shortForm": false,
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "out",
                    },
                    "right": Boolean {
                      "kind": "boolean",
                      "raw": "false",
                      "value": false,
                    },
                    "type": "===",
                  },
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "dst",
              },
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "out",
              },
              "type": "!==",
            },
          },
        ],
        "kind": "block",
      },
      "key": Variable {
        "curly": false,
        "kind": "variable",
        "name": "src",
      },
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "test",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "dst",
      },
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"Ok\\\\n\\"",
          "unicode": false,
          "value": "Ok
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
