// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #80802: zend_jit_fetch_indirect_var assert failure with tracing JIT 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [],
      "body": Array [
        PropertyStatement {
          "isStatic": true,
          "kind": "propertystatement",
          "properties": Array [
            Property {
              "attrGroups": Array [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "threadLocalStorage",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": NullKeyword {
                "kind": "nullkeyword",
                "raw": "null",
              },
            },
          ],
          "visibility": "private",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "key",
              },
              "nullable": false,
              "readonly": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "string",
                "raw": "string",
              },
              "value": null,
              "variadic": false,
            },
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "complexData",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              If {
                "alternate": null,
                "body": Block {
                  "children": Array [
                    ExpressionStatement {
                      "expression": Assign {
                        "kind": "assign",
                        "left": StaticLookup {
                          "kind": "staticlookup",
                          "offset": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "threadLocalStorage",
                          },
                          "what": SelfReference {
                            "kind": "selfreference",
                            "raw": "self",
                          },
                        },
                        "operator": "=",
                        "right": New {
                          "arguments": Array [],
                          "kind": "new",
                          "what": Name {
                            "kind": "name",
                            "name": "\\\\ArrayObject",
                            "resolution": "fqn",
                          },
                        },
                      },
                      "kind": "expressionstatement",
                    },
                  ],
                  "kind": "block",
                },
                "kind": "if",
                "shortForm": false,
                "test": Bin {
                  "kind": "bin",
                  "left": StaticLookup {
                    "kind": "staticlookup",
                    "offset": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "threadLocalStorage",
                    },
                    "what": SelfReference {
                      "kind": "selfreference",
                      "raw": "self",
                    },
                  },
                  "right": NullKeyword {
                    "kind": "nullkeyword",
                    "raw": "null",
                  },
                  "type": "===",
                },
              },
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "key",
                    },
                    "what": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "this",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "spl_object_id",
                          "resolution": "uqn",
                        },
                      },
                      "what": StaticLookup {
                        "kind": "staticlookup",
                        "offset": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "threadLocalStorage",
                        },
                        "what": SelfReference {
                          "kind": "selfreference",
                          "raw": "self",
                        },
                      },
                    },
                  },
                  "operator": "=",
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "complexData",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "storeLocal",
          },
          "nullable": false,
          "type": TypeReference {
            "kind": "typereference",
            "name": "void",
            "raw": "void",
          },
          "visibility": "protected",
        },
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "reallyDestruct",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "this",
                    },
                  },
                },
                "kind": "expressionstatement",
              },
              If {
                "alternate": null,
                "body": Block {
                  "children": Array [
                    Unset {
                      "kind": "unset",
                      "variables": Array [
                        OffsetLookup {
                          "kind": "offsetlookup",
                          "offset": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "h",
                          },
                          "what": StaticLookup {
                            "kind": "staticlookup",
                            "offset": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "threadLocalStorage",
                            },
                            "what": SelfReference {
                              "kind": "selfreference",
                              "raw": "self",
                            },
                          },
                        },
                      ],
                    },
                    If {
                      "alternate": null,
                      "body": Block {
                        "children": Array [
                          ExpressionStatement {
                            "expression": Assign {
                              "kind": "assign",
                              "left": StaticLookup {
                                "kind": "staticlookup",
                                "offset": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "threadLocalStorage",
                                },
                                "what": SelfReference {
                                  "kind": "selfreference",
                                  "raw": "self",
                                },
                              },
                              "operator": "=",
                              "right": NullKeyword {
                                "kind": "nullkeyword",
                                "raw": "null",
                              },
                            },
                            "kind": "expressionstatement",
                          },
                        ],
                        "kind": "block",
                      },
                      "kind": "if",
                      "shortForm": false,
                      "test": Bin {
                        "kind": "bin",
                        "left": Call {
                          "arguments": Array [],
                          "kind": "call",
                          "what": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "count",
                            },
                            "what": StaticLookup {
                              "kind": "staticlookup",
                              "offset": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "threadLocalStorage",
                              },
                              "what": SelfReference {
                                "kind": "selfreference",
                                "raw": "self",
                              },
                            },
                          },
                        },
                        "right": Number {
                          "kind": "number",
                          "value": "0",
                        },
                        "type": "===",
                      },
                    },
                  ],
                  "kind": "block",
                },
                "kind": "if",
                "shortForm": false,
                "test": Bin {
                  "kind": "bin",
                  "left": Bin {
                    "kind": "bin",
                    "left": StaticLookup {
                      "kind": "staticlookup",
                      "offset": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "threadLocalStorage",
                      },
                      "what": SelfReference {
                        "kind": "selfreference",
                        "raw": "self",
                      },
                    },
                    "right": NullKeyword {
                      "kind": "nullkeyword",
                      "raw": "null",
                    },
                    "type": "!==",
                  },
                  "right": Isset {
                    "kind": "isset",
                    "variables": Array [
                      OffsetLookup {
                        "kind": "offsetlookup",
                        "offset": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "h",
                          },
                          "operator": "=",
                          "right": Call {
                            "arguments": Array [
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "this",
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "spl_object_id",
                              "resolution": "uqn",
                            },
                          },
                        },
                        "what": StaticLookup {
                          "kind": "staticlookup",
                          "offset": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "threadLocalStorage",
                          },
                          "what": SelfReference {
                            "kind": "selfreference",
                            "raw": "self",
                          },
                        },
                      },
                    ],
                  },
                  "type": "and",
                },
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": true,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "__destruct",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "reallyDestruct",
          },
          "nullable": false,
          "type": TypeReference {
            "kind": "typereference",
            "name": "void",
            "raw": "void",
          },
          "visibility": "protected",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": true,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "AsyncTask",
      },
    },
    Class {
      "attrGroups": Array [],
      "body": Array [
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"thing1\\"",
                      "unicode": false,
                      "value": "thing1",
                    },
                    New {
                      "arguments": Array [],
                      "kind": "new",
                      "what": Name {
                        "kind": "name",
                        "name": "stdClass",
                        "resolution": "uqn",
                      },
                    },
                  ],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "storeLocal",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "this",
                    },
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "__construct",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
      ],
      "extends": Name {
        "kind": "name",
        "name": "AsyncTask",
        "resolution": "uqn",
      },
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "Task",
      },
    },
    For {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": New {
              "arguments": Array [],
              "kind": "new",
              "what": Name {
                "kind": "name",
                "name": "Task",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "increment": Array [
        Pre {
          "kind": "pre",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "0",
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "right": Number {
            "kind": "number",
            "value": "10000",
          },
          "type": "<",
        },
      ],
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"OK\\\\n\\"",
          "unicode": false,
          "value": "OK
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
