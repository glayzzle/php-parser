// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Various pow() tests 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "x",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "2",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "x",
        },
        "operator": "**=",
        "right": Number {
          "kind": "number",
          "value": "3",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": Unary {
                "kind": "unary",
                "type": "-",
                "what": Number {
                  "kind": "number",
                  "value": "3",
                },
              },
              "right": Number {
                "kind": "number",
                "value": "2",
              },
              "type": "**",
            },
            "right": Unary {
              "kind": "unary",
              "type": "-",
              "what": Number {
                "kind": "number",
                "value": "9",
              },
            },
            "type": "===",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": Unary {
                "kind": "unary",
                "parenthesizedExpression": true,
                "type": "-",
                "what": Number {
                  "kind": "number",
                  "value": "3",
                },
              },
              "right": Number {
                "kind": "number",
                "value": "2",
              },
              "type": "**",
            },
            "right": Number {
              "kind": "number",
              "value": "9",
            },
            "type": "===",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": Number {
                "kind": "number",
                "value": "2",
              },
              "right": Bin {
                "kind": "bin",
                "left": Number {
                  "kind": "number",
                  "value": "3",
                },
                "right": Number {
                  "kind": "number",
                  "value": "2",
                },
                "type": "**",
              },
              "type": "**",
            },
            "right": Number {
              "kind": "number",
              "value": "512",
            },
            "type": "===",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": Bin {
                "kind": "bin",
                "left": Number {
                  "kind": "number",
                  "value": "2",
                },
                "parenthesizedExpression": true,
                "right": Number {
                  "kind": "number",
                  "value": "3",
                },
                "type": "**",
              },
              "right": Number {
                "kind": "number",
                "value": "2",
              },
              "type": "**",
            },
            "right": Number {
              "kind": "number",
              "value": "64",
            },
            "type": "===",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "x",
            },
            "right": Number {
              "kind": "number",
              "value": "8",
            },
            "type": "===",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
