// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #65045: mb_convert_encoding breaks well-formed character 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'UTF-8'",
            "unicode": false,
            "value": "UTF-8",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mb_internal_encoding",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "str",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"\\\\xF0\\\\xA4\\\\xAD\\"",
              "unicode": false,
              "value": "ð¤­",
            },
            "right": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"\\\\xF0\\\\xA4\\\\xAD\\\\xA2\\"",
              "unicode": false,
              "value": "ð¤­¢",
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\xF0\\\\xA4\\\\xAD\\\\xA2\\"",
            "unicode": false,
            "value": "ð¤­¢",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "expected",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"\\\\xEF\\\\xBF\\\\xBD\\"",
              "unicode": false,
              "value": "ï¿½",
            },
            "right": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"\\\\xF0\\\\xA4\\\\xAD\\\\xA2\\"",
              "unicode": false,
              "value": "ð¤­¢",
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\xF0\\\\xA4\\\\xAD\\\\xA2\\"",
            "unicode": false,
            "value": "ð¤­¢",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "str2",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"\\\\xF0\\\\xA4\\\\xAD\\\\xA2\\"",
              "unicode": false,
              "value": "ð¤­¢",
            },
            "right": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"\\\\xF0\\\\xA4\\\\xAD\\\\xA2\\"",
              "unicode": false,
              "value": "ð¤­¢",
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\xF0\\\\xA4\\\\xAD\\"",
            "unicode": false,
            "value": "ð¤­",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "expected2",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"\\\\xF0\\\\xA4\\\\xAD\\\\xA2\\"",
              "unicode": false,
              "value": "ð¤­¢",
            },
            "right": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"\\\\xF0\\\\xA4\\\\xAD\\\\xA2\\"",
              "unicode": false,
              "value": "ð¤­¢",
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\xEF\\\\xBF\\\\xBD\\"",
            "unicode": false,
            "value": "ï¿½",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "0xFFFD",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mb_substitute_character",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "expected",
            },
            "right": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "str",
                    },
                    Name {
                      "kind": "name",
                      "name": "ENT_SUBSTITUTE",
                      "resolution": "uqn",
                    },
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'UTF-8'",
                      "unicode": false,
                      "value": "UTF-8",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "htmlspecialchars",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "htmlspecialchars_decode",
                "resolution": "uqn",
              },
            },
            "type": "===",
          },
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "expected2",
            },
            "right": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "str2",
                    },
                    Name {
                      "kind": "name",
                      "name": "ENT_SUBSTITUTE",
                      "resolution": "uqn",
                    },
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'UTF-8'",
                      "unicode": false,
                      "value": "UTF-8",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "htmlspecialchars",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "htmlspecialchars_decode",
                "resolution": "uqn",
              },
            },
            "type": "===",
          },
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "expected",
            },
            "right": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "str",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'UTF-8'",
                  "unicode": false,
                  "value": "UTF-8",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'UTF-8'",
                  "unicode": false,
                  "value": "UTF-8",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mb_convert_encoding",
                "resolution": "uqn",
              },
            },
            "type": "===",
          },
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "expected2",
            },
            "right": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "str2",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'UTF-8'",
                  "unicode": false,
                  "value": "UTF-8",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'UTF-8'",
                  "unicode": false,
                  "value": "UTF-8",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mb_convert_encoding",
                "resolution": "uqn",
              },
            },
            "type": "===",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
