// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Hex integer overflow 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "s",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "len",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "s",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "strlen",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          While {
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Post {
                    "kind": "post",
                    "type": "-",
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "len",
                    },
                  },
                  "kind": "expressionstatement",
                },
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      If {
                        "alternate": Block {
                          "children": Array [
                            ExpressionStatement {
                              "expression": Assign {
                                "kind": "assign",
                                "left": OffsetLookup {
                                  "kind": "offsetlookup",
                                  "offset": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "len",
                                  },
                                  "what": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "s",
                                  },
                                },
                                "operator": "=",
                                "right": Bin {
                                  "kind": "bin",
                                  "left": OffsetLookup {
                                    "kind": "offsetlookup",
                                    "offset": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "len",
                                    },
                                    "what": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "s",
                                    },
                                  },
                                  "right": Number {
                                    "kind": "number",
                                    "value": "1",
                                  },
                                  "type": "+",
                                },
                              },
                              "kind": "expressionstatement",
                            },
                          ],
                          "kind": "block",
                        },
                        "body": Block {
                          "children": Array [
                            ExpressionStatement {
                              "expression": Assign {
                                "kind": "assign",
                                "left": OffsetLookup {
                                  "kind": "offsetlookup",
                                  "offset": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "len",
                                  },
                                  "what": Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "s",
                                  },
                                },
                                "operator": "=",
                                "right": String {
                                  "isDoubleQuote": false,
                                  "kind": "string",
                                  "raw": "'a'",
                                  "unicode": false,
                                  "value": "a",
                                },
                              },
                              "kind": "expressionstatement",
                            },
                          ],
                          "kind": "block",
                        },
                        "kind": "if",
                        "shortForm": false,
                        "test": Bin {
                          "kind": "bin",
                          "left": OffsetLookup {
                            "kind": "offsetlookup",
                            "offset": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "len",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "s",
                            },
                          },
                          "right": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'9'",
                            "unicode": false,
                            "value": "9",
                          },
                          "type": "==",
                        },
                      },
                      Return {
                        "expr": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "s",
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "len",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "s",
                      },
                    },
                    "right": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'f'",
                      "unicode": false,
                      "value": "f",
                    },
                    "type": "!=",
                  },
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "len",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "s",
                      },
                    },
                    "operator": "=",
                    "right": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'0'",
                      "unicode": false,
                      "value": "0",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "kind": "while",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "len",
              },
              "right": Number {
                "kind": "number",
                "value": "0",
              },
              "type": ">",
            },
          },
          Return {
            "expr": Bin {
              "kind": "bin",
              "left": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'1'",
                "unicode": false,
                "value": "1",
              },
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "s",
              },
              "type": ".",
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "hex_inc",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "s",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"%x\\"",
              "unicode": false,
              "value": "%x",
            },
            Name {
              "kind": "name",
              "name": "PHP_INT_MAX",
              "resolution": "uqn",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sprintf",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Call {
                "arguments": Array [
                  Bin {
                    "kind": "bin",
                    "left": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'0x'",
                      "unicode": false,
                      "value": "0x",
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "s",
                    },
                    "type": ".",
                  },
                  Name {
                    "kind": "name",
                    "name": "FILTER_VALIDATE_INT",
                    "resolution": "uqn",
                  },
                  Array {
                    "items": Array [
                      Entry {
                        "byRef": false,
                        "key": String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"flags\\"",
                          "unicode": false,
                          "value": "flags",
                        },
                        "kind": "entry",
                        "unpack": false,
                        "value": Name {
                          "kind": "name",
                          "name": "FILTER_FLAG_ALLOW_HEX",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "array",
                    "shortForm": false,
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "filter_var",
                  "resolution": "uqn",
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_long",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "s",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "s",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "hex_inc",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Call {
                "arguments": Array [
                  Bin {
                    "kind": "bin",
                    "left": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'0x'",
                      "unicode": false,
                      "value": "0x",
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "s",
                    },
                    "type": ".",
                  },
                  Name {
                    "kind": "name",
                    "name": "FILTER_VALIDATE_INT",
                    "resolution": "uqn",
                  },
                  Array {
                    "items": Array [
                      Entry {
                        "byRef": false,
                        "key": String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"flags\\"",
                          "unicode": false,
                          "value": "flags",
                        },
                        "kind": "entry",
                        "unpack": false,
                        "value": Name {
                          "kind": "name",
                          "name": "FILTER_FLAG_ALLOW_HEX",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "array",
                    "shortForm": false,
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "filter_var",
                  "resolution": "uqn",
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_long",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "s",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"%x\\"",
              "unicode": false,
              "value": "%x",
            },
            Unary {
              "kind": "unary",
              "type": "~",
              "what": Number {
                "kind": "number",
                "value": "0",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sprintf",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Call {
                "arguments": Array [
                  Bin {
                    "kind": "bin",
                    "left": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'0x'",
                      "unicode": false,
                      "value": "0x",
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "s",
                    },
                    "type": ".",
                  },
                  Name {
                    "kind": "name",
                    "name": "FILTER_VALIDATE_INT",
                    "resolution": "uqn",
                  },
                  Array {
                    "items": Array [
                      Entry {
                        "byRef": false,
                        "key": String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"flags\\"",
                          "unicode": false,
                          "value": "flags",
                        },
                        "kind": "entry",
                        "unpack": false,
                        "value": Name {
                          "kind": "name",
                          "name": "FILTER_FLAG_ALLOW_HEX",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "array",
                    "shortForm": false,
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "filter_var",
                  "resolution": "uqn",
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_long",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "s",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "s",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "hex_inc",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'0x'",
                  "unicode": false,
                  "value": "0x",
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "s",
                },
                "type": ".",
              },
              Name {
                "kind": "name",
                "name": "FILTER_VALIDATE_INT",
                "resolution": "uqn",
              },
              Array {
                "items": Array [
                  Entry {
                    "byRef": false,
                    "key": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"flags\\"",
                      "unicode": false,
                      "value": "flags",
                    },
                    "kind": "entry",
                    "unpack": false,
                    "value": Name {
                      "kind": "name",
                      "name": "FILTER_FLAG_ALLOW_HEX",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "array",
                "shortForm": false,
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "filter_var",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
