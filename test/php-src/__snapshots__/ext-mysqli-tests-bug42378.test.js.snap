// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #42378 (bind_result memory exhaustion, SELECT column, FORMAT(...) AS _format) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": true,
        "target": String {
          "isDoubleQuote": true,
          "kind": "string",
          "parenthesizedExpression": true,
          "raw": "\\"connect.inc\\"",
          "unicode": false,
          "value": "connect.inc",
        },
      },
      "kind": "expressionstatement",
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "link",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "column",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "min",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "max",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "engine",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "offset",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%03d] Cannot drop table test, [%d] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[%03d] Cannot drop table test, [%d] %s
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "offset",
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_errno",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_error",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Array {
                    "items": Array [],
                    "kind": "array",
                    "shortForm": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "link",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'DROP TABLE IF EXISTS test'",
                    "unicode": false,
                    "value": "DROP TABLE IF EXISTS test",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_query",
                  "resolution": "uqn",
                },
              },
            },
          },
          ExpressionStatement {
            "expression": Print {
              "expression": Encapsed {
                "kind": "encapsed",
                "raw": "\\"$column\\\\n\\"",
                "type": "string",
                "value": Array [
                  EncapsedPart {
                    "curly": false,
                    "expression": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "column",
                    },
                    "kind": "encapsedpart",
                    "syntax": "simple",
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "\\\\n",
                      "unicode": false,
                      "value": "",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                ],
              },
              "kind": "print",
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "sql",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"CREATE TABLE test(id INT AUTO_INCREMENT PRIMARY KEY, col1 %s) ENGINE=%s\\"",
                    "unicode": false,
                    "value": "CREATE TABLE test(id INT AUTO_INCREMENT PRIMARY KEY, col1 %s) ENGINE=%s",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "column",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "engine",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "sprintf",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%03d] Cannot create table test, [%d] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[%03d] Cannot create table test, [%d] %s
",
                      },
                      Bin {
                        "kind": "bin",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "offset",
                        },
                        "right": Number {
                          "kind": "number",
                          "value": "1",
                        },
                        "type": "+",
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_errno",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_error",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Array {
                    "items": Array [],
                    "kind": "array",
                    "shortForm": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "link",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "sql",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_query",
                  "resolution": "uqn",
                },
              },
            },
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "values",
              },
              "operator": "=",
              "right": Array {
                "items": Array [],
                "kind": "array",
                "shortForm": false,
              },
            },
            "kind": "expressionstatement",
          },
          For {
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "col1",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "min",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "max",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "mt_rand",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "i",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "values",
                      },
                    },
                    "operator": "=",
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "col1",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "sql",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"INSERT INTO test(id, col1) VALUES (%d, %f)\\"",
                          "unicode": false,
                          "value": "INSERT INTO test(id, col1) VALUES (%d, %f)",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "i",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "col1",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "sprintf",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"[%03d] Cannot insert data, [%d] %s\\\\n\\"",
                              "unicode": false,
                              "value": "[%03d] Cannot insert data, [%d] %s
",
                            },
                            Bin {
                              "kind": "bin",
                              "left": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "offset",
                              },
                              "right": Number {
                                "kind": "number",
                                "value": "2",
                              },
                              "type": "+",
                            },
                            Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "link",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "mysqli_errno",
                                "resolution": "uqn",
                              },
                            },
                            Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "link",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "mysqli_error",
                                "resolution": "uqn",
                              },
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "printf",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      Return {
                        "expr": Array {
                          "items": Array [],
                          "kind": "array",
                          "shortForm": false,
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Unary {
                    "kind": "unary",
                    "type": "!",
                    "what": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "link",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "sql",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "mysqli_query",
                        "resolution": "uqn",
                      },
                    },
                  },
                },
              ],
              "kind": "block",
            },
            "increment": Array [
              Post {
                "kind": "post",
                "type": "+",
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
              },
            ],
            "init": Array [
              Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
                "operator": "=",
                "right": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
            ],
            "kind": "for",
            "shortForm": false,
            "test": Array [
              Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "i",
                },
                "right": Number {
                  "kind": "number",
                  "value": "100",
                },
                "type": "<=",
              },
            ],
          },
          Return {
            "expr": Variable {
              "curly": false,
              "kind": "variable",
              "name": "values",
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "create_table",
      },
      "nullable": false,
      "type": null,
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "link",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "format",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "from",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "order_by",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "expected",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "offset",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%03d] Cannot create PS, [%d] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[%03d] Cannot create PS, [%d] %s
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "offset",
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_errno",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_error",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "link",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_stmt_init",
                    "resolution": "uqn",
                  },
                },
              },
            },
          },
          ExpressionStatement {
            "expression": Print {
              "expression": Encapsed {
                "kind": "encapsed",
                "raw": "\\"$format\\\\n\\"",
                "type": "string",
                "value": Array [
                  EncapsedPart {
                    "curly": false,
                    "expression": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "format",
                    },
                    "kind": "encapsedpart",
                    "syntax": "simple",
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "\\\\n",
                      "unicode": false,
                      "value": "",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                ],
              },
              "kind": "print",
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": ExpressionStatement {
              "expression": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "sql",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'SELECT %s AS _format FROM %s'",
                      "unicode": false,
                      "value": "SELECT %s AS _format FROM %s",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "format",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "from",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "sprintf",
                    "resolution": "uqn",
                  },
                },
              },
              "kind": "expressionstatement",
            },
            "body": ExpressionStatement {
              "expression": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "sql",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [
                    String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'SELECT %s AS _format FROM %s ORDER BY %s'",
                      "unicode": false,
                      "value": "SELECT %s AS _format FROM %s ORDER BY %s",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "format",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "from",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "order_by",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "sprintf",
                    "resolution": "uqn",
                  },
                },
              },
              "kind": "expressionstatement",
            },
            "kind": "if",
            "shortForm": false,
            "test": Variable {
              "curly": false,
              "kind": "variable",
              "name": "order_by",
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%03d] Cannot prepare PS, [%d] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[%03d] Cannot prepare PS, [%d] %s
",
                      },
                      Bin {
                        "kind": "bin",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "offset",
                        },
                        "right": Number {
                          "kind": "number",
                          "value": "1",
                        },
                        "type": "+",
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "stmt",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_stmt_errno",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "stmt",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_stmt_error",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "sql",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_stmt_prepare",
                  "resolution": "uqn",
                },
              },
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%03d] Cannot execute PS, [%d] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[%03d] Cannot execute PS, [%d] %s
",
                      },
                      Bin {
                        "kind": "bin",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "offset",
                        },
                        "right": Number {
                          "kind": "number",
                          "value": "2",
                        },
                        "type": "+",
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "stmt",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_stmt_errno",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "stmt",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_stmt_error",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_stmt_execute",
                  "resolution": "uqn",
                },
              },
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%03d] Cannot store result set, [%d] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[%03d] Cannot store result set, [%d] %s
",
                      },
                      Bin {
                        "kind": "bin",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "offset",
                        },
                        "right": Number {
                          "kind": "number",
                          "value": "3",
                        },
                        "type": "+",
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "stmt",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_stmt_errno",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "stmt",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_stmt_error",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "stmt",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_stmt_store_result",
                  "resolution": "uqn",
                },
              },
            },
          },
          If {
            "alternate": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "order_by_col",
                    },
                    "operator": "=",
                    "right": Assign {
                      "kind": "assign",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "result",
                      },
                      "operator": "=",
                      "right": NullKeyword {
                        "kind": "nullkeyword",
                        "raw": "null",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                If {
                  "alternate": Block {
                    "children": Array [
                      If {
                        "alternate": null,
                        "body": Block {
                          "children": Array [
                            ExpressionStatement {
                              "expression": Call {
                                "arguments": Array [
                                  String {
                                    "isDoubleQuote": true,
                                    "kind": "string",
                                    "raw": "\\"[%03d] Cannot bind result, [%d] %s\\\\n\\"",
                                    "unicode": false,
                                    "value": "[%03d] Cannot bind result, [%d] %s
",
                                  },
                                  Bin {
                                    "kind": "bin",
                                    "left": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "offset",
                                    },
                                    "right": Number {
                                      "kind": "number",
                                      "value": "7",
                                    },
                                    "type": "+",
                                  },
                                  Call {
                                    "arguments": Array [
                                      Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "stmt",
                                      },
                                    ],
                                    "kind": "call",
                                    "what": Name {
                                      "kind": "name",
                                      "name": "mysqli_stmt_errno",
                                      "resolution": "uqn",
                                    },
                                  },
                                  Call {
                                    "arguments": Array [
                                      Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "stmt",
                                      },
                                    ],
                                    "kind": "call",
                                    "what": Name {
                                      "kind": "name",
                                      "name": "mysqli_stmt_error",
                                      "resolution": "uqn",
                                    },
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "printf",
                                  "resolution": "uqn",
                                },
                              },
                              "kind": "expressionstatement",
                            },
                            Return {
                              "expr": Boolean {
                                "kind": "boolean",
                                "raw": "false",
                                "value": false,
                              },
                              "kind": "return",
                            },
                          ],
                          "kind": "block",
                        },
                        "kind": "if",
                        "shortForm": false,
                        "test": Unary {
                          "kind": "unary",
                          "type": "!",
                          "what": Call {
                            "arguments": Array [
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "stmt",
                              },
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "result",
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "mysqli_stmt_bind_result",
                              "resolution": "uqn",
                            },
                          },
                        },
                      },
                    ],
                    "kind": "block",
                  },
                  "body": Block {
                    "children": Array [
                      If {
                        "alternate": null,
                        "body": Block {
                          "children": Array [
                            ExpressionStatement {
                              "expression": Call {
                                "arguments": Array [
                                  String {
                                    "isDoubleQuote": true,
                                    "kind": "string",
                                    "raw": "\\"[%03d] Cannot bind result, [%d] %s\\\\n\\"",
                                    "unicode": false,
                                    "value": "[%03d] Cannot bind result, [%d] %s
",
                                  },
                                  Bin {
                                    "kind": "bin",
                                    "left": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "offset",
                                    },
                                    "right": Number {
                                      "kind": "number",
                                      "value": "7",
                                    },
                                    "type": "+",
                                  },
                                  Call {
                                    "arguments": Array [
                                      Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "stmt",
                                      },
                                    ],
                                    "kind": "call",
                                    "what": Name {
                                      "kind": "name",
                                      "name": "mysqli_stmt_errno",
                                      "resolution": "uqn",
                                    },
                                  },
                                  Call {
                                    "arguments": Array [
                                      Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "stmt",
                                      },
                                    ],
                                    "kind": "call",
                                    "what": Name {
                                      "kind": "name",
                                      "name": "mysqli_stmt_error",
                                      "resolution": "uqn",
                                    },
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "printf",
                                  "resolution": "uqn",
                                },
                              },
                              "kind": "expressionstatement",
                            },
                            Return {
                              "expr": Boolean {
                                "kind": "boolean",
                                "raw": "false",
                                "value": false,
                              },
                              "kind": "return",
                            },
                          ],
                          "kind": "block",
                        },
                        "kind": "if",
                        "shortForm": false,
                        "test": Unary {
                          "kind": "unary",
                          "type": "!",
                          "what": Call {
                            "arguments": Array [
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "stmt",
                              },
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "order_by_col",
                              },
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "result",
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "mysqli_stmt_bind_result",
                              "resolution": "uqn",
                            },
                          },
                        },
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Unary {
                    "kind": "unary",
                    "type": "!",
                    "what": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "order_by",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "is_null",
                        "resolution": "uqn",
                      },
                    },
                  },
                },
                Foreach {
                  "body": Block {
                    "children": Array [
                      If {
                        "alternate": null,
                        "body": Block {
                          "children": Array [
                            Break {
                              "kind": "break",
                              "level": null,
                            },
                          ],
                          "kind": "block",
                        },
                        "kind": "if",
                        "shortForm": false,
                        "test": Unary {
                          "kind": "unary",
                          "type": "!",
                          "what": Call {
                            "arguments": Array [
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "stmt",
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "mysqli_stmt_fetch",
                              "resolution": "uqn",
                            },
                          },
                        },
                      },
                      If {
                        "alternate": null,
                        "body": Block {
                          "children": Array [
                            ExpressionStatement {
                              "expression": Call {
                                "arguments": Array [
                                  String {
                                    "isDoubleQuote": true,
                                    "kind": "string",
                                    "raw": "\\"[%03d] Row %d - expecting %s/%s got %s/%s [%s] with %s - %s.\\\\n\\"",
                                    "unicode": false,
                                    "value": "[%03d] Row %d - expecting %s/%s got %s/%s [%s] with %s - %s.
",
                                  },
                                  Bin {
                                    "kind": "bin",
                                    "left": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "offset",
                                    },
                                    "right": Number {
                                      "kind": "number",
                                      "value": "8",
                                    },
                                    "type": "+",
                                  },
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "k",
                                  },
                                  Call {
                                    "arguments": Array [
                                      Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "v",
                                      },
                                    ],
                                    "kind": "call",
                                    "what": Name {
                                      "kind": "name",
                                      "name": "gettype",
                                      "resolution": "uqn",
                                    },
                                  },
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "v",
                                  },
                                  Call {
                                    "arguments": Array [
                                      Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "result",
                                      },
                                    ],
                                    "kind": "call",
                                    "what": Name {
                                      "kind": "name",
                                      "name": "gettype",
                                      "resolution": "uqn",
                                    },
                                  },
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "result",
                                  },
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "order_by_col",
                                  },
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "format",
                                  },
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "sql",
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "printf",
                                  "resolution": "uqn",
                                },
                              },
                              "kind": "expressionstatement",
                            },
                          ],
                          "kind": "block",
                        },
                        "kind": "if",
                        "shortForm": false,
                        "test": Bin {
                          "kind": "bin",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "result",
                          },
                          "right": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "v",
                          },
                          "type": "!==",
                        },
                      },
                    ],
                    "kind": "block",
                  },
                  "key": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "k",
                  },
                  "kind": "foreach",
                  "shortForm": false,
                  "source": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "expected",
                  },
                  "value": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "v",
                  },
                },
              ],
              "kind": "block",
            },
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "result",
                    },
                    "operator": "=",
                    "right": NullKeyword {
                      "kind": "nullkeyword",
                      "raw": "null",
                    },
                  },
                  "kind": "expressionstatement",
                },
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"[%03d] Cannot bind result, [%d] %s\\\\n\\"",
                              "unicode": false,
                              "value": "[%03d] Cannot bind result, [%d] %s
",
                            },
                            Bin {
                              "kind": "bin",
                              "left": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "offset",
                              },
                              "right": Number {
                                "kind": "number",
                                "value": "4",
                              },
                              "type": "+",
                            },
                            Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "stmt",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "mysqli_stmt_errno",
                                "resolution": "uqn",
                              },
                            },
                            Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "stmt",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "mysqli_stmt_error",
                                "resolution": "uqn",
                              },
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "printf",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      Return {
                        "expr": Boolean {
                          "kind": "boolean",
                          "raw": "false",
                          "value": false,
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Unary {
                    "kind": "unary",
                    "type": "!",
                    "what": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "stmt",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "result",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "mysqli_stmt_bind_result",
                        "resolution": "uqn",
                      },
                    },
                  },
                },
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"[%03d] Cannot fetch result,, [%d] %s\\\\n\\"",
                              "unicode": false,
                              "value": "[%03d] Cannot fetch result,, [%d] %s
",
                            },
                            Bin {
                              "kind": "bin",
                              "left": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "offset",
                              },
                              "right": Number {
                                "kind": "number",
                                "value": "5",
                              },
                              "type": "+",
                            },
                            Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "stmt",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "mysqli_stmt_errno",
                                "resolution": "uqn",
                              },
                            },
                            Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "stmt",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "mysqli_stmt_error",
                                "resolution": "uqn",
                              },
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "printf",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      Return {
                        "expr": Boolean {
                          "kind": "boolean",
                          "raw": "false",
                          "value": false,
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Unary {
                    "kind": "unary",
                    "type": "!",
                    "what": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "stmt",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "mysqli_stmt_fetch",
                        "resolution": "uqn",
                      },
                    },
                  },
                },
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"[%03d] Expecting %s/%s got %s/%s with %s - %s.\\\\n\\"",
                              "unicode": false,
                              "value": "[%03d] Expecting %s/%s got %s/%s with %s - %s.
",
                            },
                            Bin {
                              "kind": "bin",
                              "left": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "offset",
                              },
                              "right": Number {
                                "kind": "number",
                                "value": "6",
                              },
                              "type": "+",
                            },
                            Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "expected",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "gettype",
                                "resolution": "uqn",
                              },
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "expected",
                            },
                            Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "result",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "gettype",
                                "resolution": "uqn",
                              },
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "result",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "format",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "sql",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "printf",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "result",
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "expected",
                    },
                    "type": "!==",
                  },
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "expected",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "is_array",
                  "resolution": "uqn",
                },
              },
            },
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_free_result",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_close",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          Return {
            "expr": Boolean {
              "kind": "boolean",
              "raw": "true",
              "value": true,
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "test_format",
      },
      "nullable": false,
      "type": null,
    },
    If {
      "alternate": null,
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"[001] Cannot connect - [%d] %s\\\\n\\"",
              "unicode": false,
              "value": "[001] Cannot connect - [%d] %s
",
            },
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_connect_errno",
                "resolution": "uqn",
              },
            },
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_connect_error",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "printf",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          "operator": "=",
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "host",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "user",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "passwd",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "db",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "port",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "socket",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "my_mysqli_connect",
              "resolution": "uqn",
            },
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "expected",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "link",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'FLOAT'",
              "unicode": false,
              "value": "FLOAT",
            },
            Unary {
              "kind": "unary",
              "type": "-",
              "what": Number {
                "kind": "number",
                "value": "10000",
              },
            },
            Number {
              "kind": "number",
              "value": "10000",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "engine",
            },
            Number {
              "kind": "number",
              "value": "90",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "create_table",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": ExpressionStatement {
        "expression": Assign {
          "kind": "assign",
          "left": OffsetLookup {
            "kind": "offsetlookup",
            "offset": Variable {
              "curly": false,
              "kind": "variable",
              "name": "k",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "expected",
            },
          },
          "operator": "=",
          "right": Call {
            "arguments": Array [
              Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "v",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "round",
                  "resolution": "uqn",
                },
              },
              Number {
                "kind": "number",
                "value": "0",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'.'",
                "unicode": false,
                "value": ".",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "','",
                "unicode": false,
                "value": ",",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "number_format",
              "resolution": "uqn",
            },
          },
        },
        "kind": "expressionstatement",
      },
      "key": Variable {
        "curly": false,
        "kind": "variable",
        "name": "k",
      },
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "expected",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "v",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'FORMAT(col1, 0)'",
            "unicode": false,
            "value": "FORMAT(col1, 0)",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'test'",
            "unicode": false,
            "value": "test",
          },
          NullKeyword {
            "kind": "nullkeyword",
            "raw": "NULL",
          },
          Array {
            "items": Array [],
            "kind": "array",
            "shortForm": false,
          },
          Number {
            "kind": "number",
            "value": "100",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_format",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "expected",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "link",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'FLOAT'",
              "unicode": false,
              "value": "FLOAT",
            },
            Unary {
              "kind": "unary",
              "type": "-",
              "what": Number {
                "kind": "number",
                "value": "10000",
              },
            },
            Number {
              "kind": "number",
              "value": "10000",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "engine",
            },
            Number {
              "kind": "number",
              "value": "110",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "create_table",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": ExpressionStatement {
        "expression": Assign {
          "kind": "assign",
          "left": OffsetLookup {
            "kind": "offsetlookup",
            "offset": Variable {
              "curly": false,
              "kind": "variable",
              "name": "k",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "expected",
            },
          },
          "operator": "=",
          "right": Call {
            "arguments": Array [
              Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "v",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "round",
                  "resolution": "uqn",
                },
              },
              Number {
                "kind": "number",
                "value": "0",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'.'",
                "unicode": false,
                "value": ".",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "','",
                "unicode": false,
                "value": ",",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "number_format",
              "resolution": "uqn",
            },
          },
        },
        "kind": "expressionstatement",
      },
      "key": Variable {
        "curly": false,
        "kind": "variable",
        "name": "k",
      },
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "expected",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "v",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'id AS order_by_col, FORMAT(col1, 0)'",
            "unicode": false,
            "value": "id AS order_by_col, FORMAT(col1, 0)",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'test'",
            "unicode": false,
            "value": "test",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'id'",
            "unicode": false,
            "value": "id",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Number {
            "kind": "number",
            "value": "120",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_format",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "expected",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "link",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'FLOAT UNSIGNED'",
              "unicode": false,
              "value": "FLOAT UNSIGNED",
            },
            Number {
              "kind": "number",
              "value": "0",
            },
            Number {
              "kind": "number",
              "value": "10000",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "engine",
            },
            Number {
              "kind": "number",
              "value": "130",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "create_table",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": ExpressionStatement {
        "expression": Assign {
          "kind": "assign",
          "left": OffsetLookup {
            "kind": "offsetlookup",
            "offset": Variable {
              "curly": false,
              "kind": "variable",
              "name": "k",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "expected",
            },
          },
          "operator": "=",
          "right": Call {
            "arguments": Array [
              Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "v",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "round",
                  "resolution": "uqn",
                },
              },
              Number {
                "kind": "number",
                "value": "0",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'.'",
                "unicode": false,
                "value": ".",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "','",
                "unicode": false,
                "value": ",",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "number_format",
              "resolution": "uqn",
            },
          },
        },
        "kind": "expressionstatement",
      },
      "key": Variable {
        "curly": false,
        "kind": "variable",
        "name": "k",
      },
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "expected",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "v",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'id AS order_by_col, FORMAT(col1, 0)'",
            "unicode": false,
            "value": "id AS order_by_col, FORMAT(col1, 0)",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'test'",
            "unicode": false,
            "value": "test",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'id'",
            "unicode": false,
            "value": "id",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Number {
            "kind": "number",
            "value": "140",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_format",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "expected",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "link",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'DECIMAL(5,0)'",
              "unicode": false,
              "value": "DECIMAL(5,0)",
            },
            Unary {
              "kind": "unary",
              "type": "-",
              "what": Number {
                "kind": "number",
                "value": "1000",
              },
            },
            Number {
              "kind": "number",
              "value": "1000",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "engine",
            },
            Number {
              "kind": "number",
              "value": "150",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "create_table",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": ExpressionStatement {
        "expression": Assign {
          "kind": "assign",
          "left": OffsetLookup {
            "kind": "offsetlookup",
            "offset": Variable {
              "curly": false,
              "kind": "variable",
              "name": "k",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "expected",
            },
          },
          "operator": "=",
          "right": Call {
            "arguments": Array [
              Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "v",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "round",
                  "resolution": "uqn",
                },
              },
              Number {
                "kind": "number",
                "value": "0",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'.'",
                "unicode": false,
                "value": ".",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "','",
                "unicode": false,
                "value": ",",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "number_format",
              "resolution": "uqn",
            },
          },
        },
        "kind": "expressionstatement",
      },
      "key": Variable {
        "curly": false,
        "kind": "variable",
        "name": "k",
      },
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "expected",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "v",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'id AS order_by_col, FORMAT(col1, 0)'",
            "unicode": false,
            "value": "id AS order_by_col, FORMAT(col1, 0)",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'test'",
            "unicode": false,
            "value": "test",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'id'",
            "unicode": false,
            "value": "id",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "expected",
          },
          Number {
            "kind": "number",
            "value": "160",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_format",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_close",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"done!\\"",
          "unicode": false,
          "value": "done!",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
