// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests gif in/out 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "r",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "g",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "b",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "error",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": Number {
            "kind": "number",
            "value": "0",
          },
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "cwd",
              },
              "operator": "=",
              "right": Magic {
                "kind": "magic",
                "raw": "__DIR__",
                "value": "__DIR__",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "im2",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Bin {
                    "kind": "bin",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "cwd",
                    },
                    "right": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'/test_gif.gif'",
                      "unicode": false,
                      "value": "/test_gif.gif",
                    },
                    "type": ".",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "imagecreatefromgif",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "c",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "im2",
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "im2",
                      },
                      Number {
                        "kind": "number",
                        "value": "8",
                      },
                      Number {
                        "kind": "number",
                        "value": "8",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "imagecolorat",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "imagecolorsforindex",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": Block {
              "children": Array [
                If {
                  "alternate": Block {
                    "children": Array [
                      Return {
                        "expr": Boolean {
                          "kind": "boolean",
                          "raw": "false",
                          "value": false,
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "body": Block {
                    "children": Array [
                      Return {
                        "expr": Boolean {
                          "kind": "boolean",
                          "raw": "true",
                          "value": true,
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": Bin {
                        "kind": "bin",
                        "left": OffsetLookup {
                          "kind": "offsetlookup",
                          "offset": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'red'",
                            "unicode": false,
                            "value": "red",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "c",
                          },
                        },
                        "right": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "r",
                        },
                        "type": "==",
                      },
                      "right": Bin {
                        "kind": "bin",
                        "left": OffsetLookup {
                          "kind": "offsetlookup",
                          "offset": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'green'",
                            "unicode": false,
                            "value": "green",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "c",
                          },
                        },
                        "right": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "g",
                        },
                        "type": "==",
                      },
                      "type": "&&",
                    },
                    "right": Bin {
                      "kind": "bin",
                      "left": OffsetLookup {
                        "kind": "offsetlookup",
                        "offset": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'blue'",
                          "unicode": false,
                          "value": "blue",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "c",
                        },
                      },
                      "right": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "b",
                      },
                      "type": "==",
                    },
                    "type": "&&",
                  },
                },
              ],
              "kind": "block",
            },
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "r_min",
                    },
                    "operator": "=",
                    "right": Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "r",
                      },
                      "right": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "error",
                      },
                      "type": "-",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "r_max",
                    },
                    "operator": "=",
                    "right": Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "r",
                      },
                      "right": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "error",
                      },
                      "type": "+",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "g_min",
                    },
                    "operator": "=",
                    "right": Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "g",
                      },
                      "right": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "error",
                      },
                      "type": "-",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "g_max",
                    },
                    "operator": "=",
                    "right": Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "g",
                      },
                      "right": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "error",
                      },
                      "type": "+",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "b_min",
                    },
                    "operator": "=",
                    "right": Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "b",
                      },
                      "right": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "error",
                      },
                      "type": "-",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "b_max",
                    },
                    "operator": "=",
                    "right": Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "b",
                      },
                      "right": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "error",
                      },
                      "type": "+",
                    },
                  },
                  "kind": "expressionstatement",
                },
                If {
                  "alternate": Block {
                    "children": Array [
                      Return {
                        "expr": Boolean {
                          "kind": "boolean",
                          "raw": "false",
                          "value": false,
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "body": Block {
                    "children": Array [
                      Return {
                        "expr": Boolean {
                          "kind": "boolean",
                          "raw": "true",
                          "value": true,
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": Bin {
                        "kind": "bin",
                        "left": Bin {
                          "kind": "bin",
                          "left": OffsetLookup {
                            "kind": "offsetlookup",
                            "offset": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "'red'",
                              "unicode": false,
                              "value": "red",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "c",
                            },
                          },
                          "right": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "r_min",
                          },
                          "type": ">=",
                        },
                        "parenthesizedExpression": true,
                        "right": Bin {
                          "kind": "bin",
                          "left": OffsetLookup {
                            "kind": "offsetlookup",
                            "offset": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "'red'",
                              "unicode": false,
                              "value": "red",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "c",
                            },
                          },
                          "right": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "r_max",
                          },
                          "type": "<=",
                        },
                        "type": "||",
                      },
                      "right": Bin {
                        "kind": "bin",
                        "left": Bin {
                          "kind": "bin",
                          "left": OffsetLookup {
                            "kind": "offsetlookup",
                            "offset": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "'green'",
                              "unicode": false,
                              "value": "green",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "c",
                            },
                          },
                          "right": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "g_min",
                          },
                          "type": ">=",
                        },
                        "parenthesizedExpression": true,
                        "right": Bin {
                          "kind": "bin",
                          "left": OffsetLookup {
                            "kind": "offsetlookup",
                            "offset": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "'green'",
                              "unicode": false,
                              "value": "green",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "c",
                            },
                          },
                          "right": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "g_max",
                          },
                          "type": "<=",
                        },
                        "type": "||",
                      },
                      "type": "&&",
                    },
                    "right": Bin {
                      "kind": "bin",
                      "left": Bin {
                        "kind": "bin",
                        "left": OffsetLookup {
                          "kind": "offsetlookup",
                          "offset": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'blue'",
                            "unicode": false,
                            "value": "blue",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "c",
                          },
                        },
                        "right": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "b_min",
                        },
                        "type": ">=",
                      },
                      "parenthesizedExpression": true,
                      "right": Bin {
                        "kind": "bin",
                        "left": OffsetLookup {
                          "kind": "offsetlookup",
                          "offset": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'blue'",
                            "unicode": false,
                            "value": "blue",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "c",
                          },
                        },
                        "right": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "b_max",
                        },
                        "type": "<=",
                      },
                      "type": "||",
                    },
                    "type": "&&",
                  },
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "error",
              },
              "right": Number {
                "kind": "number",
                "value": "0",
              },
              "type": ">",
            },
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "check_box",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "cwd",
        },
        "operator": "=",
        "right": Magic {
          "kind": "magic",
          "raw": "__DIR__",
          "value": "__DIR__",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "im",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Number {
              "kind": "number",
              "value": "10",
            },
            Number {
              "kind": "number",
              "value": "10",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "imagecreate",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "c",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "im",
            },
            Number {
              "kind": "number",
              "value": "255",
            },
            Number {
              "kind": "number",
              "value": "255",
            },
            Number {
              "kind": "number",
              "value": "255",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "imagecolorallocate",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "im",
          },
          Number {
            "kind": "number",
            "value": "5",
          },
          Number {
            "kind": "number",
            "value": "5",
          },
          Number {
            "kind": "number",
            "value": "10",
          },
          Number {
            "kind": "number",
            "value": "10",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "c",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imagefilledrectangle",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "im",
          },
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "cwd",
            },
            "right": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'/test_gif.gif'",
              "unicode": false,
              "value": "/test_gif.gif",
            },
            "type": ".",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imagegif",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"<4 cols: ok\\\\n\\"",
                "unicode": false,
                "value": "<4 cols: ok
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "255",
          },
          Number {
            "kind": "number",
            "value": "255",
          },
          Number {
            "kind": "number",
            "value": "255",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "check_box",
          "resolution": "uqn",
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "im",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Number {
              "kind": "number",
              "value": "10",
            },
            Number {
              "kind": "number",
              "value": "10",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "imagecreate",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    For {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "c",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "im",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "i",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "i",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "i",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "imagecolorallocate",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "increment": Array [
        Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "0",
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "right": Number {
            "kind": "number",
            "value": "7",
          },
          "type": "<",
        },
      ],
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "im",
          },
          Number {
            "kind": "number",
            "value": "5",
          },
          Number {
            "kind": "number",
            "value": "5",
          },
          Number {
            "kind": "number",
            "value": "10",
          },
          Number {
            "kind": "number",
            "value": "10",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "c",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imagefilledrectangle",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "im",
          },
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "cwd",
            },
            "right": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'/test_gif.gif'",
              "unicode": false,
              "value": "/test_gif.gif",
            },
            "type": ".",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imagegif",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Post {
        "kind": "post",
        "type": "-",
        "what": Variable {
          "curly": false,
          "kind": "variable",
          "name": "i",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"<8 cols: ok\\\\n\\"",
                "unicode": false,
                "value": "<8 cols: ok
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "check_box",
          "resolution": "uqn",
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "im",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Number {
              "kind": "number",
              "value": "10",
            },
            Number {
              "kind": "number",
              "value": "10",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "imagecreate",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    For {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "c",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "im",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "i",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "i",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "i",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "imagecolorallocate",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "increment": Array [
        Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "0",
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "right": Number {
            "kind": "number",
            "value": "15",
          },
          "type": "<",
        },
      ],
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "im",
          },
          Number {
            "kind": "number",
            "value": "5",
          },
          Number {
            "kind": "number",
            "value": "5",
          },
          Number {
            "kind": "number",
            "value": "10",
          },
          Number {
            "kind": "number",
            "value": "10",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "c",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imagefilledrectangle",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "im",
          },
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "cwd",
            },
            "right": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'/test_gif.gif'",
              "unicode": false,
              "value": "/test_gif.gif",
            },
            "type": ".",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imagegif",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Post {
        "kind": "post",
        "type": "-",
        "what": Variable {
          "curly": false,
          "kind": "variable",
          "name": "i",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"<16 cols: ok\\\\n\\"",
                "unicode": false,
                "value": "<16 cols: ok
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "check_box",
          "resolution": "uqn",
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "im",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Number {
              "kind": "number",
              "value": "10",
            },
            Number {
              "kind": "number",
              "value": "10",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "imagecreate",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    For {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "c",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "im",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "i",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "i",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "i",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "imagecolorallocate",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "increment": Array [
        Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "0",
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "right": Number {
            "kind": "number",
            "value": "31",
          },
          "type": "<",
        },
      ],
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "im",
          },
          Number {
            "kind": "number",
            "value": "5",
          },
          Number {
            "kind": "number",
            "value": "5",
          },
          Number {
            "kind": "number",
            "value": "10",
          },
          Number {
            "kind": "number",
            "value": "10",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "c",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imagefilledrectangle",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "im",
          },
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "cwd",
            },
            "right": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'/test_gif.gif'",
              "unicode": false,
              "value": "/test_gif.gif",
            },
            "type": ".",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imagegif",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Post {
        "kind": "post",
        "type": "-",
        "what": Variable {
          "curly": false,
          "kind": "variable",
          "name": "i",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"<32 cols: ok\\\\n\\"",
                "unicode": false,
                "value": "<32 cols: ok
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "check_box",
          "resolution": "uqn",
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "im",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Number {
              "kind": "number",
              "value": "10",
            },
            Number {
              "kind": "number",
              "value": "10",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "imagecreate",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    For {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "c",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "im",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "i",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "i",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "i",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "imagecolorallocate",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "increment": Array [
        Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "0",
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "right": Number {
            "kind": "number",
            "value": "63",
          },
          "type": "<",
        },
      ],
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "im",
          },
          Number {
            "kind": "number",
            "value": "5",
          },
          Number {
            "kind": "number",
            "value": "5",
          },
          Number {
            "kind": "number",
            "value": "10",
          },
          Number {
            "kind": "number",
            "value": "10",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "c",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imagefilledrectangle",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "im",
          },
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "cwd",
            },
            "right": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'/test_gif.gif'",
              "unicode": false,
              "value": "/test_gif.gif",
            },
            "type": ".",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imagegif",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Post {
        "kind": "post",
        "type": "-",
        "what": Variable {
          "curly": false,
          "kind": "variable",
          "name": "i",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"<64 cols: ok\\\\n\\"",
                "unicode": false,
                "value": "<64 cols: ok
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "check_box",
          "resolution": "uqn",
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "im",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Number {
              "kind": "number",
              "value": "10",
            },
            Number {
              "kind": "number",
              "value": "10",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "imagecreate",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    For {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "c",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "im",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "i",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "i",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "i",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "imagecolorallocate",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "increment": Array [
        Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "0",
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "right": Number {
            "kind": "number",
            "value": "127",
          },
          "type": "<",
        },
      ],
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "im",
          },
          Number {
            "kind": "number",
            "value": "5",
          },
          Number {
            "kind": "number",
            "value": "5",
          },
          Number {
            "kind": "number",
            "value": "10",
          },
          Number {
            "kind": "number",
            "value": "10",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "c",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imagefilledrectangle",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "im",
          },
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "cwd",
            },
            "right": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'/test_gif.gif'",
              "unicode": false,
              "value": "/test_gif.gif",
            },
            "type": ".",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imagegif",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Post {
        "kind": "post",
        "type": "-",
        "what": Variable {
          "curly": false,
          "kind": "variable",
          "name": "i",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"<128 cols: ok\\\\n\\"",
                "unicode": false,
                "value": "<128 cols: ok
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "check_box",
          "resolution": "uqn",
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "im",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Number {
              "kind": "number",
              "value": "10",
            },
            Number {
              "kind": "number",
              "value": "10",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "imagecreate",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    For {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "c",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "im",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "i",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "i",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "i",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "imagecolorallocate",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "increment": Array [
        Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "0",
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "right": Number {
            "kind": "number",
            "value": "255",
          },
          "type": "<",
        },
      ],
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "im",
          },
          Number {
            "kind": "number",
            "value": "5",
          },
          Number {
            "kind": "number",
            "value": "5",
          },
          Number {
            "kind": "number",
            "value": "10",
          },
          Number {
            "kind": "number",
            "value": "10",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "c",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imagefilledrectangle",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "im",
          },
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "cwd",
            },
            "right": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'/test_gif.gif'",
              "unicode": false,
              "value": "/test_gif.gif",
            },
            "type": ".",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imagegif",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Post {
        "kind": "post",
        "type": "-",
        "what": Variable {
          "curly": false,
          "kind": "variable",
          "name": "i",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"<256 cols: ok\\\\n\\"",
                "unicode": false,
                "value": "<256 cols: ok
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "check_box",
          "resolution": "uqn",
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "im",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "cwd",
              },
              "right": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/conv_test.jpg'",
                "unicode": false,
                "value": "/conv_test.jpg",
              },
              "type": ".",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "imagecreatefromjpeg",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "im",
          },
          Number {
            "kind": "number",
            "value": "5",
          },
          Number {
            "kind": "number",
            "value": "5",
          },
          Number {
            "kind": "number",
            "value": "10",
          },
          Number {
            "kind": "number",
            "value": "10",
          },
          Number {
            "kind": "number",
            "value": "0xffffff",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imagefilledrectangle",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "im",
          },
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "cwd",
            },
            "right": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'/test_gif.gif'",
              "unicode": false,
              "value": "/test_gif.gif",
            },
            "type": ".",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imagegif",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "im",
          },
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "cwd",
            },
            "right": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'/test_gif_2.gif'",
              "unicode": false,
              "value": "/test_gif_2.gif",
            },
            "type": ".",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "imagegif",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\">256 cols: ok\\\\n\\"",
                "unicode": false,
                "value": ">256 cols: ok
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "255",
          },
          Number {
            "kind": "number",
            "value": "255",
          },
          Number {
            "kind": "number",
            "value": "255",
          },
          Number {
            "kind": "number",
            "value": "10",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "check_box",
          "resolution": "uqn",
        },
      },
    },
    ExpressionStatement {
      "expression": Silent {
        "expr": Call {
          "arguments": Array [
            Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "cwd",
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"/test_gif.gif\\"",
                "unicode": false,
                "value": "/test_gif.gif",
              },
              "type": ".",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "unlink",
            "resolution": "uqn",
          },
        },
        "kind": "silent",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Silent {
        "expr": Call {
          "arguments": Array [
            Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "cwd",
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"/test_gif_2.gif\\"",
                "unicode": false,
                "value": "/test_gif_2.gif",
              },
              "type": ".",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "unlink",
            "resolution": "uqn",
          },
        },
        "kind": "silent",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
