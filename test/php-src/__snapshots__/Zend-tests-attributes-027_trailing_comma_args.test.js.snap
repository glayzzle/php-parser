// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Trailing comma in attribute argument list 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [
        AttrGroup {
          "attrs": Array [
            Attribute {
              "args": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"there\\"",
                  "unicode": false,
                  "value": "there",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"are\\"",
                  "unicode": false,
                  "value": "are",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"many\\"",
                  "unicode": false,
                  "value": "many",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"arguments\\"",
                  "unicode": false,
                  "value": "arguments",
                },
              ],
              "kind": "attribute",
              "name": "MyAttribute",
            },
          ],
          "kind": "attrgroup",
        },
      ],
      "body": Array [],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "Foo",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "ref",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "class",
              },
              "what": Name {
                "kind": "name",
                "name": "Foo",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "\\\\ReflectionClass",
            "resolution": "fqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "attr",
        },
        "operator": "=",
        "right": OffsetLookup {
          "kind": "offsetlookup",
          "offset": Number {
            "kind": "number",
            "value": "0",
          },
          "what": Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "getAttributes",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "ref",
              },
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "getName",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "attr",
              },
            },
          },
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "getArguments",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "attr",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
