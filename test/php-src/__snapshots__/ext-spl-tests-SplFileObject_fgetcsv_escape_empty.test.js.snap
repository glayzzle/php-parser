// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests SplFileObject::fgetcsv() with empty $escape 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "contents",
        },
        "operator": "=",
        "right": Encapsed {
          "kind": "encapsed",
          "label": "EOS",
          "raw": "<<<EOS
\\"cell1\\",\\"cell2\\\\\\\\\\",\\"cell3\\",\\"cell4\\"
\\"\\\\\\\\\\\\\\\\\\\\\\\\line1
line2\\\\\\\\\\\\\\\\\\\\\\\\\\"
EOS",
          "type": "heredoc",
          "value": Array [
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "\\"cell1\\",\\"cell2\\\\\\\\\\",\\"cell3\\",\\"cell4\\"
\\"\\\\\\\\\\\\\\\\\\\\\\\\line1
line2\\\\\\\\\\\\\\\\\\\\\\\\\\"
",
                "unicode": false,
                "value": "\\"cell1\\",\\"cell2\\\\\\",\\"cell3\\",\\"cell4\\"
\\"\\\\\\\\\\\\line1
line2\\\\\\\\\\\\\\"",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
          ],
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "file",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "SplTempFileObject",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "contents",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "fwrite",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "file",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "rewind",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "file",
          },
        },
      },
      "kind": "expressionstatement",
    },
    While {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "data",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "print_r",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "while",
      "shortForm": false,
      "test": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "data",
        },
        "operator": "=",
        "parenthesizedExpression": true,
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "','",
              "unicode": false,
              "value": ",",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'\\"'",
              "unicode": false,
              "value": "\\"",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "''",
              "unicode": false,
              "value": "",
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "fgetcsv",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "file",
            },
          },
        },
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
