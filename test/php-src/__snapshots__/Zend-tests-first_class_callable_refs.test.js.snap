// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests First class callables and references 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": true,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "x",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          Return {
            "expr": Variable {
              "curly": false,
              "kind": "variable",
              "name": "x",
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": true,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "id",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "fn",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            VariadicPlaceholder {
              "kind": "variadicplaceholder",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "id",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "i",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "0",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": AssignRef {
        "kind": "assignref",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "i2",
        },
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "i",
            },
          ],
          "kind": "call",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "fn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Post {
        "kind": "post",
        "type": "+",
        "what": Variable {
          "curly": false,
          "kind": "variable",
          "name": "i",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "i2",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
