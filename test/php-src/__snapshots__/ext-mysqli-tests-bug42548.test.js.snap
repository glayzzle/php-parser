// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #42548 PROCEDURE xxx can't return a result set in the given context (works in 5.2.3!!) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": true,
        "target": String {
          "isDoubleQuote": false,
          "kind": "string",
          "parenthesizedExpression": true,
          "raw": "'connect.inc'",
          "unicode": false,
          "value": "connect.inc",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "mysqli",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "mysqli_init",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "host",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "user",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "passwd",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "port",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "socket",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "real_connect",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "mysqli",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"Connect failed: %s\\\\n\\"",
                  "unicode": false,
                  "value": "Connect failed: %s
",
                },
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_connect_error",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "printf",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Exit {
              "expression": null,
              "kind": "exit",
              "useDie": false,
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_connect_errno",
          "resolution": "uqn",
        },
      },
    },
    ExpressionStatement {
      "expression": Bin {
        "kind": "bin",
        "left": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"DROP PROCEDURE IF EXISTS p1\\"",
              "unicode": false,
              "value": "DROP PROCEDURE IF EXISTS p1",
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "query",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "mysqli",
            },
          },
        },
        "right": Exit {
          "expression": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "error",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "mysqli",
            },
          },
          "kind": "exit",
          "useDie": true,
        },
        "type": "or",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Bin {
        "kind": "bin",
        "left": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"CREATE PROCEDURE p1() BEGIN SELECT 23; SELECT 42; END\\"",
              "unicode": false,
              "value": "CREATE PROCEDURE p1() BEGIN SELECT 23; SELECT 42; END",
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "query",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "mysqli",
            },
          },
        },
        "right": Exit {
          "expression": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "error",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "mysqli",
            },
          },
          "kind": "exit",
          "useDie": true,
        },
        "type": "or",
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Print {
              "expression": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "error",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "mysqli",
                },
              },
              "kind": "print",
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          Do {
            "body": Block {
              "children": Array [
                If {
                  "alternate": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Print {
                          "expression": String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"no results found\\\\n\\"",
                            "unicode": false,
                            "value": "no results found
",
                          },
                          "kind": "print",
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "body": Block {
                    "children": Array [
                      While {
                        "body": Block {
                          "children": Array [
                            ExpressionStatement {
                              "expression": Call {
                                "arguments": Array [
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "row",
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "print_r",
                                  "resolution": "uqn",
                                },
                              },
                              "kind": "expressionstatement",
                            },
                          ],
                          "kind": "block",
                        },
                        "kind": "while",
                        "shortForm": false,
                        "test": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "row",
                          },
                          "operator": "=",
                          "right": Call {
                            "arguments": Array [],
                            "kind": "call",
                            "what": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "fetch_assoc",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "objResult",
                              },
                            },
                          },
                        },
                      },
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [],
                          "kind": "call",
                          "what": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "close",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "objResult",
                            },
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      If {
                        "alternate": null,
                        "body": Block {
                          "children": Array [
                            ExpressionStatement {
                              "expression": Print {
                                "expression": String {
                                  "isDoubleQuote": true,
                                  "kind": "string",
                                  "raw": "\\"----- next result -----------\\\\n\\"",
                                  "unicode": false,
                                  "value": "----- next result -----------
",
                                },
                                "kind": "print",
                              },
                              "kind": "expressionstatement",
                            },
                          ],
                          "kind": "block",
                        },
                        "kind": "if",
                        "shortForm": false,
                        "test": Call {
                          "arguments": Array [],
                          "kind": "call",
                          "what": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "more_results",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "mysqli",
                            },
                          },
                        },
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "objResult",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "store_result",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "mysqli",
                        },
                      },
                    },
                  },
                },
              ],
              "kind": "block",
            },
            "kind": "do",
            "test": Bin {
              "kind": "bin",
              "left": Call {
                "arguments": Array [],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "more_results",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "mysqli",
                  },
                },
              },
              "right": Call {
                "arguments": Array [],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "next_result",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "mysqli",
                  },
                },
              },
              "type": "&&",
            },
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"CALL p1();\\"",
            "unicode": false,
            "value": "CALL p1();",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "multi_query",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "mysqli",
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Bin {
        "kind": "bin",
        "left": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"DROP PROCEDURE p1\\"",
              "unicode": false,
              "value": "DROP PROCEDURE p1",
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "query",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "mysqli",
            },
          },
        },
        "right": Exit {
          "expression": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "error",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "mysqli",
            },
          },
          "kind": "exit",
          "useDie": true,
        },
        "type": "or",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "close",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "mysqli",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"done!\\"",
          "unicode": false,
          "value": "done!",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
