// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #78658: Memory corruption using Closure::bindTo() 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "c",
        },
        "operator": "=",
        "right": Closure {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [],
            "kind": "block",
          },
          "byref": false,
          "isStatic": false,
          "kind": "closure",
          "nullable": false,
          "type": null,
          "uses": Array [],
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "scope",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"AAAA\\"",
          "unicode": false,
          "value": "AAAA",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "scope",
        },
        "operator": "=",
        "right": Encapsed {
          "kind": "encapsed",
          "raw": "\\"{$scope}BBBB\\"",
          "type": "string",
          "value": Array [
            EncapsedPart {
              "curly": false,
              "expression": Variable {
                "curly": false,
                "kind": "variable",
                "name": "scope",
              },
              "kind": "encapsedpart",
              "syntax": "complex",
            },
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "BBBB",
                "unicode": false,
                "value": "BBBB",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
          ],
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          New {
            "arguments": Array [],
            "kind": "new",
            "what": Name {
              "kind": "name",
              "name": "stdClass",
              "resolution": "uqn",
            },
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "scope",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "bindTo",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "c",
          },
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
