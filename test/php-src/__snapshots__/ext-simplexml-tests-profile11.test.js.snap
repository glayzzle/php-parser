// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests SimpleXML [profile]: Accessing two elements with the same name, but different namespaces 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Name {
              "kind": "name",
              "name": "E_ALL",
              "resolution": "uqn",
            },
            "right": Unary {
              "kind": "unary",
              "type": "~",
              "what": Name {
                "kind": "name",
                "name": "E_NOTICE",
                "resolution": "uqn",
              },
            },
            "type": "&",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "error_reporting",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "root",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'<?xml version=\\"1.0\\"?>
<root xmlns:reserved=\\"reserved-ns\\" xmlns:special=\\"special-ns\\">
 <reserved:child>Hello</reserved:child>
 <special:child>World</special:child>
</root>
'",
              "unicode": false,
              "value": "<?xml version=\\"1.0\\"?>
<root xmlns:reserved=\\"reserved-ns\\" xmlns:special=\\"special-ns\\">
 <reserved:child>Hello</reserved:child>
 <special:child>World</special:child>
</root>
",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "simplexml_load_string",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "child",
            },
            "what": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'reserved-ns'",
                  "unicode": false,
                  "value": "reserved-ns",
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "children",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "root",
                },
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "child",
            },
            "what": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'special-ns'",
                  "unicode": false,
                  "value": "special-ns",
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "children",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "root",
                },
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Cast {
            "expr": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "child",
              },
              "what": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'reserved-ns'",
                    "unicode": false,
                    "value": "reserved-ns",
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "children",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "root",
                  },
                },
              },
            },
            "kind": "cast",
            "raw": "(string)",
            "type": "string",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Cast {
            "expr": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "child",
              },
              "what": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'special-ns'",
                    "unicode": false,
                    "value": "special-ns",
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "children",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "root",
                  },
                },
              },
            },
            "kind": "cast",
            "raw": "(string)",
            "type": "string",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "child",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "root",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
