// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests UConverter::convert() w/ Callback Return Values 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [],
      "body": Array [
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "reason",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "source",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "codeUnits",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
            Parameter {
              "attrGroups": Array [],
              "byref": true,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "error",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "error",
                  },
                  "operator": "=",
                  "right": Name {
                    "kind": "name",
                    "name": "U_ZERO_ERROR",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
              Switch {
                "body": Block {
                  "children": Array [
                    Case {
                      "body": Block {
                        "children": Array [
                          Return {
                            "expr": NullKeyword {
                              "kind": "nullkeyword",
                              "raw": "NULL",
                            },
                            "kind": "return",
                          },
                        ],
                        "kind": "block",
                      },
                      "kind": "case",
                      "test": String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"\\\\x80\\"",
                        "unicode": false,
                        "value": "",
                      },
                    },
                    Case {
                      "body": Block {
                        "children": Array [
                          Return {
                            "expr": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "'a'",
                              "unicode": false,
                              "value": "a",
                            },
                            "kind": "return",
                          },
                        ],
                        "kind": "block",
                      },
                      "kind": "case",
                      "test": String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"\\\\x81\\"",
                        "unicode": false,
                        "value": "",
                      },
                    },
                    Case {
                      "body": Block {
                        "children": Array [
                          Return {
                            "expr": Call {
                              "arguments": Array [
                                String {
                                  "isDoubleQuote": false,
                                  "kind": "string",
                                  "raw": "'b'",
                                  "unicode": false,
                                  "value": "b",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "ord",
                                "resolution": "uqn",
                              },
                            },
                            "kind": "return",
                          },
                        ],
                        "kind": "block",
                      },
                      "kind": "case",
                      "test": String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"\\\\x82\\"",
                        "unicode": false,
                        "value": "",
                      },
                    },
                    Case {
                      "body": Block {
                        "children": Array [
                          Return {
                            "expr": Array {
                              "items": Array [
                                Entry {
                                  "byRef": false,
                                  "key": null,
                                  "kind": "entry",
                                  "unpack": false,
                                  "value": String {
                                    "isDoubleQuote": false,
                                    "kind": "string",
                                    "raw": "'c'",
                                    "unicode": false,
                                    "value": "c",
                                  },
                                },
                              ],
                              "kind": "array",
                              "shortForm": false,
                            },
                            "kind": "return",
                          },
                        ],
                        "kind": "block",
                      },
                      "kind": "case",
                      "test": String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"\\\\x83\\"",
                        "unicode": false,
                        "value": "",
                      },
                    },
                  ],
                  "kind": "block",
                },
                "kind": "switch",
                "shortForm": false,
                "test": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "codeUnits",
                },
              },
              Return {
                "expr": NullKeyword {
                  "kind": "nullkeyword",
                  "raw": "null",
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "toUCallback",
          },
          "nullable": false,
          "type": UnionType {
            "kind": "uniontype",
            "name": null,
            "types": Array [
              TypeReference {
                "kind": "typereference",
                "name": "string",
                "raw": "string",
              },
              TypeReference {
                "kind": "typereference",
                "name": "int",
                "raw": "int",
              },
              TypeReference {
                "kind": "typereference",
                "name": "array",
                "raw": "array",
              },
              Name {
                "kind": "name",
                "name": "null",
                "resolution": "uqn",
              },
            ],
          },
          "visibility": "public",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "reason",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "source",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "codePoint",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
            Parameter {
              "attrGroups": Array [],
              "byref": true,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "error",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "error",
                  },
                  "operator": "=",
                  "right": Name {
                    "kind": "name",
                    "name": "U_ZERO_ERROR",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
              Switch {
                "body": Block {
                  "children": Array [
                    Case {
                      "body": Block {
                        "children": Array [
                          Return {
                            "expr": String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"A\\"",
                              "unicode": false,
                              "value": "A",
                            },
                            "kind": "return",
                          },
                        ],
                        "kind": "block",
                      },
                      "kind": "case",
                      "test": Number {
                        "kind": "number",
                        "value": "0x00F1",
                      },
                    },
                    Case {
                      "body": Block {
                        "children": Array [
                          Return {
                            "expr": Call {
                              "arguments": Array [
                                String {
                                  "isDoubleQuote": true,
                                  "kind": "string",
                                  "raw": "\\"B\\"",
                                  "unicode": false,
                                  "value": "B",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "ord",
                                "resolution": "uqn",
                              },
                            },
                            "kind": "return",
                          },
                        ],
                        "kind": "block",
                      },
                      "kind": "case",
                      "test": Number {
                        "kind": "number",
                        "value": "0x00F2",
                      },
                    },
                    Case {
                      "body": Block {
                        "children": Array [
                          Return {
                            "expr": Array {
                              "items": Array [
                                Entry {
                                  "byRef": false,
                                  "key": null,
                                  "kind": "entry",
                                  "unpack": false,
                                  "value": String {
                                    "isDoubleQuote": true,
                                    "kind": "string",
                                    "raw": "\\"C\\"",
                                    "unicode": false,
                                    "value": "C",
                                  },
                                },
                              ],
                              "kind": "array",
                              "shortForm": false,
                            },
                            "kind": "return",
                          },
                        ],
                        "kind": "block",
                      },
                      "kind": "case",
                      "test": Number {
                        "kind": "number",
                        "value": "0x00F3",
                      },
                    },
                    Case {
                      "body": Block {
                        "children": Array [
                          Return {
                            "expr": NullKeyword {
                              "kind": "nullkeyword",
                              "raw": "NULL",
                            },
                            "kind": "return",
                          },
                        ],
                        "kind": "block",
                      },
                      "kind": "case",
                      "test": Number {
                        "kind": "number",
                        "value": "0x00F4",
                      },
                    },
                  ],
                  "kind": "block",
                },
                "kind": "switch",
                "shortForm": false,
                "test": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "codePoint",
                },
              },
              Return {
                "expr": NullKeyword {
                  "kind": "nullkeyword",
                  "raw": "null",
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "fromUCallback",
          },
          "nullable": false,
          "type": UnionType {
            "kind": "uniontype",
            "name": null,
            "types": Array [
              TypeReference {
                "kind": "typereference",
                "name": "string",
                "raw": "string",
              },
              TypeReference {
                "kind": "typereference",
                "name": "int",
                "raw": "int",
              },
              TypeReference {
                "kind": "typereference",
                "name": "array",
                "raw": "array",
              },
              Name {
                "kind": "name",
                "name": "null",
                "resolution": "uqn",
              },
            ],
          },
          "visibility": "public",
        },
      ],
      "extends": Name {
        "kind": "name",
        "name": "UConverter",
        "resolution": "uqn",
      },
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "MyConverter",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "c",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'ascii'",
              "unicode": false,
              "value": "ascii",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'utf-8'",
              "unicode": false,
              "value": "utf-8",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "MyConverter",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\x80\\\\x81\\\\x82\\\\x83\\"",
                "unicode": false,
                "value": "",
              },
            ],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "convert",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "c",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\xC3\\\\xB1\\\\xC3\\\\xB2\\\\xC3\\\\xB3\\\\xC3\\\\xB4\\"",
                "unicode": false,
                "value": "Ã±Ã²Ã³Ã´",
              },
            ],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "convert",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "c",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
