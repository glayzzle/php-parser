// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test imap_fetchheader() function : basic function 1`] = `
Program {
  "children": Array [
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"*** Testing imap_fetchheader() : basic functionality ***\\\\n\\"",
          "unicode": false,
          "value": "*** Testing imap_fetchheader() : basic functionality ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": true,
        "target": Bin {
          "kind": "bin",
          "left": Magic {
            "kind": "magic",
            "raw": "__DIR__",
            "value": "__DIR__",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'/setup/imap_include.inc'",
            "unicode": false,
            "value": "/setup/imap_include.inc",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "stream_id",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'imapfetchheaderbasic'",
              "unicode": false,
              "value": "imapfetchheaderbasic",
            },
            Number {
              "kind": "number",
              "value": "1",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "mailbox",
            },
            Boolean {
              "kind": "boolean",
              "raw": "false",
              "value": false,
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "setup_test_mailbox",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "msg_no",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "1",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "options",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'FT_UID'",
                "unicode": false,
                "value": "FT_UID",
              },
              "kind": "entry",
              "unpack": false,
              "value": Name {
                "kind": "name",
                "name": "FT_UID",
                "resolution": "uqn",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'FT_INTERNAL'",
                "unicode": false,
                "value": "FT_INTERNAL",
              },
              "kind": "entry",
              "unpack": false,
              "value": Name {
                "kind": "name",
                "name": "FT_INTERNAL",
                "resolution": "uqn",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'FT_PREFETCHTEXT'",
                "unicode": false,
                "value": "FT_PREFETCHTEXT",
              },
              "kind": "entry",
              "unpack": false,
              "value": Name {
                "kind": "name",
                "name": "FT_PREFETCHTEXT",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n-- All possible arguments --\\\\n\\"",
          "unicode": false,
          "value": "
-- All possible arguments --
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Foreach {
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              Encapsed {
                "kind": "encapsed",
                "raw": "\\"-- Option is $key --\\\\n\\"",
                "type": "string",
                "value": Array [
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "-- Option is ",
                      "unicode": false,
                      "value": "-- Option is ",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "key",
                    },
                    "kind": "encapsedpart",
                    "syntax": "simple",
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": " --\\\\n",
                      "unicode": false,
                      "value": " --",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                ],
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          If {
            "alternate": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "stream_id",
                          },
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "msg_no",
                          },
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "option",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "imap_fetchheader",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "msg_uid",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "stream_id",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "msg_no",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "imap_uid",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "stream_id",
                          },
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "msg_uid",
                          },
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "option",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "imap_fetchheader",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "key",
              },
              "right": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'FT_UID'",
                "unicode": false,
                "value": "FT_UID",
              },
              "type": "==",
            },
          },
        ],
        "kind": "block",
      },
      "key": Variable {
        "curly": false,
        "kind": "variable",
        "name": "key",
      },
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "options",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "option",
      },
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n-- Mandatory arguments --\\\\n\\"",
          "unicode": false,
          "value": "
-- Mandatory arguments --
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "stream_id",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "msg_no",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "imap_fetchheader",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
