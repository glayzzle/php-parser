// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Check for libsodium AEAD 1`] = `
Program {
  "children": Array [
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"aead_chacha20poly1305:\\\\n\\"",
          "unicode": false,
          "value": "aead_chacha20poly1305:
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "msg",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Call {
              "arguments": Array [
                Number {
                  "kind": "number",
                  "value": "1",
                },
                Number {
                  "kind": "number",
                  "value": "1000",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "random_int",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "random_bytes",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "nonce",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Name {
              "kind": "name",
              "name": "SODIUM_CRYPTO_AEAD_CHACHA20POLY1305_NPUBBYTES",
              "resolution": "uqn",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "random_bytes",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "key",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_aead_chacha20poly1305_keygen",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "ad",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Call {
              "arguments": Array [
                Number {
                  "kind": "number",
                  "value": "1",
                },
                Number {
                  "kind": "number",
                  "value": "1000",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "random_int",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "random_bytes",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "ciphertext",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "msg",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "ad",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "nonce",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "key",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_aead_chacha20poly1305_encrypt",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "msg2",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "ciphertext",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "ad",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "nonce",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "key",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "sodium_crypto_aead_chacha20poly1305_decrypt",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "ciphertext",
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "msg",
            },
            "type": "!==",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "msg",
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "msg2",
            },
            "type": "===",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "ciphertext",
              },
              Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'x'",
                  "unicode": false,
                  "value": "x",
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "ad",
                },
                "type": ".",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "nonce",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "key",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "sodium_crypto_aead_chacha20poly1305_decrypt",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "msg2",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "ciphertext",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "ad",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "key",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "nonce",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "sodium_crypto_aead_chacha20poly1305_decrypt",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Boolean {
                  "kind": "boolean",
                  "raw": "false",
                  "value": false,
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    Boolean {
                      "kind": "boolean",
                      "raw": "true",
                      "value": true,
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "var_dump",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "ex",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "SodiumException",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"aead_chacha20poly1305_ietf:\\\\n\\"",
          "unicode": false,
          "value": "aead_chacha20poly1305_ietf:
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    If {
      "alternate": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Boolean {
                  "kind": "boolean",
                  "raw": "true",
                  "value": true,
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Boolean {
                  "kind": "boolean",
                  "raw": "true",
                  "value": true,
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Boolean {
                  "kind": "boolean",
                  "raw": "false",
                  "value": false,
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Boolean {
                  "kind": "boolean",
                  "raw": "true",
                  "value": true,
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "msg",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Call {
                    "arguments": Array [
                      Number {
                        "kind": "number",
                        "value": "1",
                      },
                      Number {
                        "kind": "number",
                        "value": "1000",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "random_int",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "random_bytes",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "nonce",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Name {
                    "kind": "name",
                    "name": "SODIUM_CRYPTO_AEAD_CHACHA20POLY1305_IETF_NPUBBYTES",
                    "resolution": "uqn",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "random_bytes",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "key",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "sodium_crypto_aead_chacha20poly1305_ietf_keygen",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "ad",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Call {
                    "arguments": Array [
                      Number {
                        "kind": "number",
                        "value": "1",
                      },
                      Number {
                        "kind": "number",
                        "value": "1000",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "random_int",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "random_bytes",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "ciphertext",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "msg",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "ad",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "nonce",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "key",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "sodium_crypto_aead_chacha20poly1305_ietf_encrypt",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "msg2",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "ciphertext",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "ad",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "nonce",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "key",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "sodium_crypto_aead_chacha20poly1305_ietf_decrypt",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Bin {
                  "kind": "bin",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "ciphertext",
                  },
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "msg",
                  },
                  "type": "!==",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Bin {
                  "kind": "bin",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "msg",
                  },
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "msg2",
                  },
                  "type": "===",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "ciphertext",
                    },
                    Bin {
                      "kind": "bin",
                      "left": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'x'",
                        "unicode": false,
                        "value": "x",
                      },
                      "right": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "ad",
                      },
                      "type": ".",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "nonce",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "key",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "sodium_crypto_aead_chacha20poly1305_ietf_decrypt",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          Try {
            "always": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "msg2",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "ciphertext",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "ad",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "key",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "nonce",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "sodium_crypto_aead_chacha20poly1305_ietf_decrypt",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Boolean {
                        "kind": "boolean",
                        "raw": "false",
                        "value": false,
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "catches": Array [
              Catch {
                "body": Block {
                  "children": Array [
                    ExpressionStatement {
                      "expression": Call {
                        "arguments": Array [
                          Boolean {
                            "kind": "boolean",
                            "raw": "true",
                            "value": true,
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "var_dump",
                          "resolution": "uqn",
                        },
                      },
                      "kind": "expressionstatement",
                    },
                  ],
                  "kind": "block",
                },
                "kind": "catch",
                "variable": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "ex",
                },
                "what": Array [
                  Name {
                    "kind": "name",
                    "name": "SodiumException",
                    "resolution": "uqn",
                  },
                ],
              },
            ],
            "kind": "try",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Bin {
          "kind": "bin",
          "left": Name {
            "kind": "name",
            "name": "SODIUM_LIBRARY_MAJOR_VERSION",
            "resolution": "uqn",
          },
          "right": Number {
            "kind": "number",
            "value": "7",
          },
          "type": ">",
        },
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Name {
              "kind": "name",
              "name": "SODIUM_LIBRARY_MAJOR_VERSION",
              "resolution": "uqn",
            },
            "right": Number {
              "kind": "number",
              "value": "7",
            },
            "type": "==",
          },
          "parenthesizedExpression": true,
          "right": Bin {
            "kind": "bin",
            "left": Name {
              "kind": "name",
              "name": "SODIUM_LIBRARY_MINOR_VERSION",
              "resolution": "uqn",
            },
            "right": Number {
              "kind": "number",
              "value": "6",
            },
            "type": ">=",
          },
          "type": "&&",
        },
        "type": "||",
      },
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"aead_xchacha20poly1305_ietf:\\\\n\\"",
          "unicode": false,
          "value": "aead_xchacha20poly1305_ietf:
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    If {
      "alternate": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Boolean {
                  "kind": "boolean",
                  "raw": "true",
                  "value": true,
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Boolean {
                  "kind": "boolean",
                  "raw": "true",
                  "value": true,
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Boolean {
                  "kind": "boolean",
                  "raw": "false",
                  "value": false,
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Boolean {
                  "kind": "boolean",
                  "raw": "true",
                  "value": true,
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "msg",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Call {
                    "arguments": Array [
                      Number {
                        "kind": "number",
                        "value": "1",
                      },
                      Number {
                        "kind": "number",
                        "value": "1000",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "random_int",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "random_bytes",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "nonce",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Name {
                    "kind": "name",
                    "name": "SODIUM_CRYPTO_AEAD_XCHACHA20POLY1305_IETF_NPUBBYTES",
                    "resolution": "uqn",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "random_bytes",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "key",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "sodium_crypto_aead_xchacha20poly1305_ietf_keygen",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "ad",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Call {
                    "arguments": Array [
                      Number {
                        "kind": "number",
                        "value": "1",
                      },
                      Number {
                        "kind": "number",
                        "value": "1000",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "random_int",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "random_bytes",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "ciphertext",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "msg",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "ad",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "nonce",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "key",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "sodium_crypto_aead_xchacha20poly1305_ietf_encrypt",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "msg2",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "ciphertext",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "ad",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "nonce",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "key",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "sodium_crypto_aead_xchacha20poly1305_ietf_decrypt",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Bin {
                  "kind": "bin",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "ciphertext",
                  },
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "msg",
                  },
                  "type": "!==",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Bin {
                  "kind": "bin",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "msg",
                  },
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "msg2",
                  },
                  "type": "===",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "ciphertext",
                    },
                    Bin {
                      "kind": "bin",
                      "left": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'x'",
                        "unicode": false,
                        "value": "x",
                      },
                      "right": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "ad",
                      },
                      "type": ".",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "nonce",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "key",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "sodium_crypto_aead_xchacha20poly1305_ietf_decrypt",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          Try {
            "always": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "msg2",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "ciphertext",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "ad",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "key",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "nonce",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "sodium_crypto_aead_xchacha20poly1305_ietf_decrypt",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Boolean {
                        "kind": "boolean",
                        "raw": "false",
                        "value": false,
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "catches": Array [
              Catch {
                "body": Block {
                  "children": Array [
                    ExpressionStatement {
                      "expression": Call {
                        "arguments": Array [
                          Boolean {
                            "kind": "boolean",
                            "raw": "true",
                            "value": true,
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "var_dump",
                          "resolution": "uqn",
                        },
                      },
                      "kind": "expressionstatement",
                    },
                  ],
                  "kind": "block",
                },
                "kind": "catch",
                "variable": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "ex",
                },
                "what": Array [
                  Name {
                    "kind": "name",
                    "name": "SodiumException",
                    "resolution": "uqn",
                  },
                ],
              },
            ],
            "kind": "try",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Bin {
          "kind": "bin",
          "left": Name {
            "kind": "name",
            "name": "SODIUM_LIBRARY_MAJOR_VERSION",
            "resolution": "uqn",
          },
          "right": Number {
            "kind": "number",
            "value": "9",
          },
          "type": ">",
        },
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Name {
              "kind": "name",
              "name": "SODIUM_LIBRARY_MAJOR_VERSION",
              "resolution": "uqn",
            },
            "right": Number {
              "kind": "number",
              "value": "9",
            },
            "type": "==",
          },
          "parenthesizedExpression": true,
          "right": Bin {
            "kind": "bin",
            "left": Name {
              "kind": "name",
              "name": "SODIUM_LIBRARY_MINOR_VERSION",
              "resolution": "uqn",
            },
            "right": Number {
              "kind": "number",
              "value": "4",
            },
            "type": ">=",
          },
          "type": "&&",
        },
        "type": "||",
      },
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"aead_aes256gcm:\\\\n\\"",
          "unicode": false,
          "value": "aead_aes256gcm:
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    If {
      "alternate": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Boolean {
                  "kind": "boolean",
                  "raw": "true",
                  "value": true,
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Boolean {
                  "kind": "boolean",
                  "raw": "true",
                  "value": true,
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Boolean {
                  "kind": "boolean",
                  "raw": "false",
                  "value": false,
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Boolean {
                  "kind": "boolean",
                  "raw": "true",
                  "value": true,
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "msg",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Call {
                    "arguments": Array [
                      Number {
                        "kind": "number",
                        "value": "1",
                      },
                      Number {
                        "kind": "number",
                        "value": "1000",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "random_int",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "random_bytes",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "nonce",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Name {
                    "kind": "name",
                    "name": "SODIUM_CRYPTO_AEAD_AES256GCM_NPUBBYTES",
                    "resolution": "uqn",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "random_bytes",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "ad",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Call {
                    "arguments": Array [
                      Number {
                        "kind": "number",
                        "value": "1",
                      },
                      Number {
                        "kind": "number",
                        "value": "1000",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "random_int",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "random_bytes",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "key",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "sodium_crypto_aead_aes256gcm_keygen",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "ciphertext",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "msg",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "ad",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "nonce",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "key",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "sodium_crypto_aead_aes256gcm_encrypt",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "msg2",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "ciphertext",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "ad",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "nonce",
                  },
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "key",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "sodium_crypto_aead_aes256gcm_decrypt",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Bin {
                  "kind": "bin",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "ciphertext",
                  },
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "msg",
                  },
                  "type": "!==",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Bin {
                  "kind": "bin",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "msg",
                  },
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "msg2",
                  },
                  "type": "===",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "ciphertext",
                    },
                    Bin {
                      "kind": "bin",
                      "left": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'x'",
                        "unicode": false,
                        "value": "x",
                      },
                      "right": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "ad",
                      },
                      "type": ".",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "nonce",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "key",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "sodium_crypto_aead_aes256gcm_decrypt",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          Try {
            "always": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "msg2",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "ciphertext",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "ad",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "key",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "nonce",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "sodium_crypto_aead_aes256gcm_decrypt",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Boolean {
                        "kind": "boolean",
                        "raw": "false",
                        "value": false,
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "catches": Array [
              Catch {
                "body": Block {
                  "children": Array [
                    ExpressionStatement {
                      "expression": Call {
                        "arguments": Array [
                          Boolean {
                            "kind": "boolean",
                            "raw": "true",
                            "value": true,
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "var_dump",
                          "resolution": "uqn",
                        },
                      },
                      "kind": "expressionstatement",
                    },
                  ],
                  "kind": "block",
                },
                "kind": "catch",
                "variable": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "ex",
                },
                "what": Array [
                  Name {
                    "kind": "name",
                    "name": "SodiumException",
                    "resolution": "uqn",
                  },
                ],
              },
            ],
            "kind": "try",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "sodium_crypto_aead_aes256gcm_is_available",
          "resolution": "uqn",
        },
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
