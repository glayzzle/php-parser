// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #72957: Null coalescing operator doesn't behave as expected with SimpleXMLElement 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "xml",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'<root><elem>Text</elem></root>'",
              "unicode": false,
              "value": "<root><elem>Text</elem></root>",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "SimpleXMLElement",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'elem2 is: '",
              "unicode": false,
              "value": "elem2 is: ",
            },
            "right": Bin {
              "kind": "bin",
              "left": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "elem2",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "xml",
                },
              },
              "parenthesizedExpression": true,
              "right": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'backup string'",
                "unicode": false,
                "value": "backup string",
              },
              "type": "??",
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'elem2 is: '",
              "unicode": false,
              "value": "elem2 is: ",
            },
            "right": RetIf {
              "falseExpr": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'backup string'",
                "unicode": false,
                "value": "backup string",
              },
              "kind": "retif",
              "parenthesizedExpression": true,
              "test": Isset {
                "kind": "isset",
                "variables": Array [
                  PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "elem2",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "xml",
                    },
                  },
                ],
              },
              "trueExpr": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "elem2",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "xml",
                },
              },
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\\\n\\"",
            "unicode": false,
            "value": "
",
          },
          "type": ".",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
