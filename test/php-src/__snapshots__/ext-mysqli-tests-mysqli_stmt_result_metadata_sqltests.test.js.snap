// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests mysqli_stmt_result_metadata() - non SELECT statements 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": true,
        "target": String {
          "isDoubleQuote": false,
          "kind": "string",
          "parenthesizedExpression": true,
          "raw": "'table.inc'",
          "unicode": false,
          "value": "table.inc",
        },
      },
      "kind": "expressionstatement",
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "offset",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "link",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "sql",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "expected_lib",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "expected_mysqlnd",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "check_mysqlnd",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "compare",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%04d - %s] [%d] %s\\\\n\\"",
                        "unicode": false,
                        "value": "[%04d - %s] [%d] %s
",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "offset",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "sql",
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_errno",
                          "resolution": "uqn",
                        },
                      },
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "link",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "mysqli_error",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Assign {
                "kind": "assign",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
                "operator": "=",
                "right": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "link",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_stmt_init",
                    "resolution": "uqn",
                  },
                },
              },
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "true",
                    "value": true,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Silent {
                "expr": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "stmt",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "sql",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "mysqli_stmt_prepare",
                    "resolution": "uqn",
                  },
                },
                "kind": "silent",
              },
            },
          },
          If {
            "alternate": If {
              "alternate": null,
              "body": Block {
                "children": Array [
                  ExpressionStatement {
                    "expression": Call {
                      "arguments": Array [
                        String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"[%04d - %s] Metadata expected\\\\n\\"",
                          "unicode": false,
                          "value": "[%04d - %s] Metadata expected
",
                        },
                        Bin {
                          "kind": "bin",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "offset",
                          },
                          "right": Number {
                            "kind": "number",
                            "value": "2",
                          },
                          "type": "+",
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "sql",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "printf",
                        "resolution": "uqn",
                      },
                    },
                    "kind": "expressionstatement",
                  },
                  Return {
                    "expr": Boolean {
                      "kind": "boolean",
                      "raw": "false",
                      "value": false,
                    },
                    "kind": "return",
                  },
                ],
                "kind": "block",
              },
              "kind": "if",
              "shortForm": false,
              "test": Bin {
                "kind": "bin",
                "left": Unary {
                  "kind": "unary",
                  "type": "!",
                  "what": Empty {
                    "expression": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "expected_lib",
                    },
                    "kind": "empty",
                  },
                },
                "right": Bin {
                  "kind": "bin",
                  "left": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "parenthesizedExpression": true,
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "res",
                  },
                  "type": "==",
                },
                "type": "&&",
              },
            },
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"[%04d - %s] No metadata expected\\\\n\\"",
                        "unicode": false,
                        "value": "[%04d - %s] No metadata expected
",
                      },
                      Bin {
                        "kind": "bin",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "offset",
                        },
                        "right": Number {
                          "kind": "number",
                          "value": "1",
                        },
                        "type": "+",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "sql",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "printf",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Empty {
                "expression": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "expected_lib",
                },
                "kind": "empty",
              },
              "right": Bin {
                "kind": "bin",
                "left": Boolean {
                  "kind": "boolean",
                  "raw": "false",
                  "value": false,
                },
                "parenthesizedExpression": true,
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "res",
                },
                "type": "!==",
              },
              "type": "&&",
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"[%04d - %s] [%d] %s\\\\n\\"",
                              "unicode": false,
                              "value": "[%04d - %s] [%d] %s
",
                            },
                            Bin {
                              "kind": "bin",
                              "left": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "offset",
                              },
                              "right": Number {
                                "kind": "number",
                                "value": "3",
                              },
                              "type": "+",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "sql",
                            },
                            Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "stmt",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "mysqli_stmt_errno",
                                "resolution": "uqn",
                              },
                            },
                            Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "stmt",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "mysqli_stmt_error",
                                "resolution": "uqn",
                              },
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "printf",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      Return {
                        "expr": Boolean {
                          "kind": "boolean",
                          "raw": "false",
                          "value": false,
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Unary {
                    "kind": "unary",
                    "type": "!",
                    "what": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "res",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "is_object",
                        "resolution": "uqn",
                      },
                    },
                  },
                },
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"[%04d - %s] Expecting object/mysqli_result got object/%s\\\\n\\"",
                              "unicode": false,
                              "value": "[%04d - %s] Expecting object/mysqli_result got object/%s
",
                            },
                            Bin {
                              "kind": "bin",
                              "left": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "offset",
                              },
                              "right": Number {
                                "kind": "number",
                                "value": "4",
                              },
                              "type": "+",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "sql",
                            },
                            Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "res",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "get_class",
                                "resolution": "uqn",
                              },
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "printf",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      Return {
                        "expr": Boolean {
                          "kind": "boolean",
                          "raw": "false",
                          "value": false,
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "res",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "get_class",
                        "resolution": "uqn",
                      },
                    },
                    "right": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'mysqli_result'",
                      "unicode": false,
                      "value": "mysqli_result",
                    },
                    "type": "!=",
                  },
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "meta",
                    },
                    "operator": "=",
                    "right": Array {
                      "items": Array [
                        Entry {
                          "byRef": false,
                          "key": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'num_fields'",
                            "unicode": false,
                            "value": "num_fields",
                          },
                          "kind": "entry",
                          "unpack": false,
                          "value": Call {
                            "arguments": Array [
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "res",
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "mysqli_num_fields",
                              "resolution": "uqn",
                            },
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'fetch_field'",
                            "unicode": false,
                            "value": "fetch_field",
                          },
                          "kind": "entry",
                          "unpack": false,
                          "value": Call {
                            "arguments": Array [
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "res",
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "mysqli_fetch_field",
                              "resolution": "uqn",
                            },
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'fetch_field_direct0'",
                            "unicode": false,
                            "value": "fetch_field_direct0",
                          },
                          "kind": "entry",
                          "unpack": false,
                          "value": Call {
                            "arguments": Array [
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "res",
                              },
                              Number {
                                "kind": "number",
                                "value": "0",
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "mysqli_fetch_field_direct",
                              "resolution": "uqn",
                            },
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'fetch_field_direct1'",
                            "unicode": false,
                            "value": "fetch_field_direct1",
                          },
                          "kind": "entry",
                          "unpack": false,
                          "value": Silent {
                            "expr": Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "res",
                                },
                                Number {
                                  "kind": "number",
                                  "value": "1",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "mysqli_fetch_field_direct",
                                "resolution": "uqn",
                              },
                            },
                            "kind": "silent",
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'fetch_fields'",
                            "unicode": false,
                            "value": "fetch_fields",
                          },
                          "kind": "entry",
                          "unpack": false,
                          "value": Call {
                            "arguments": Array [
                              Call {
                                "arguments": Array [
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "res",
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "mysqli_fetch_fields",
                                  "resolution": "uqn",
                                },
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "count",
                              "resolution": "uqn",
                            },
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'field_count'",
                            "unicode": false,
                            "value": "field_count",
                          },
                          "kind": "entry",
                          "unpack": false,
                          "value": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "field_count",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "res",
                            },
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'field_seek-1'",
                            "unicode": false,
                            "value": "field_seek-1",
                          },
                          "kind": "entry",
                          "unpack": false,
                          "value": Silent {
                            "expr": Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "res",
                                },
                                Unary {
                                  "kind": "unary",
                                  "type": "-",
                                  "what": Number {
                                    "kind": "number",
                                    "value": "1",
                                  },
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "mysqli_field_seek",
                                "resolution": "uqn",
                              },
                            },
                            "kind": "silent",
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'field_seek0'",
                            "unicode": false,
                            "value": "field_seek0",
                          },
                          "kind": "entry",
                          "unpack": false,
                          "value": Call {
                            "arguments": Array [
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "res",
                              },
                              Number {
                                "kind": "number",
                                "value": "0",
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "mysqli_field_seek",
                              "resolution": "uqn",
                            },
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'field_tell'",
                            "unicode": false,
                            "value": "field_tell",
                          },
                          "kind": "entry",
                          "unpack": false,
                          "value": Call {
                            "arguments": Array [
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "res",
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "mysqli_field_tell",
                              "resolution": "uqn",
                            },
                          },
                        },
                      ],
                      "kind": "array",
                      "shortForm": false,
                    },
                  },
                  "kind": "expressionstatement",
                },
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "charsetnr",
                            },
                            "what": OffsetLookup {
                              "kind": "offsetlookup",
                              "offset": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'fetch_field'",
                                "unicode": false,
                                "value": "fetch_field",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "meta",
                              },
                            },
                          },
                          "operator": "=",
                          "right": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'ignore'",
                            "unicode": false,
                            "value": "ignore",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "flags",
                            },
                            "what": OffsetLookup {
                              "kind": "offsetlookup",
                              "offset": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'fetch_field'",
                                "unicode": false,
                                "value": "fetch_field",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "meta",
                              },
                            },
                          },
                          "operator": "=",
                          "right": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'ignore'",
                            "unicode": false,
                            "value": "ignore",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Call {
                    "arguments": Array [
                      OffsetLookup {
                        "kind": "offsetlookup",
                        "offset": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'fetch_field'",
                          "unicode": false,
                          "value": "fetch_field",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "meta",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "is_object",
                      "resolution": "uqn",
                    },
                  },
                },
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "charsetnr",
                            },
                            "what": OffsetLookup {
                              "kind": "offsetlookup",
                              "offset": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'fetch_field_direct0'",
                                "unicode": false,
                                "value": "fetch_field_direct0",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "meta",
                              },
                            },
                          },
                          "operator": "=",
                          "right": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'ignore'",
                            "unicode": false,
                            "value": "ignore",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "flags",
                            },
                            "what": OffsetLookup {
                              "kind": "offsetlookup",
                              "offset": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'fetch_field_direct0'",
                                "unicode": false,
                                "value": "fetch_field_direct0",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "meta",
                              },
                            },
                          },
                          "operator": "=",
                          "right": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'ignore'",
                            "unicode": false,
                            "value": "ignore",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Call {
                    "arguments": Array [
                      OffsetLookup {
                        "kind": "offsetlookup",
                        "offset": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'fetch_field_direct0'",
                          "unicode": false,
                          "value": "fetch_field_direct0",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "meta",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "is_object",
                      "resolution": "uqn",
                    },
                  },
                },
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "charsetnr",
                            },
                            "what": OffsetLookup {
                              "kind": "offsetlookup",
                              "offset": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'fetch_field_direct1'",
                                "unicode": false,
                                "value": "fetch_field_direct1",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "meta",
                              },
                            },
                          },
                          "operator": "=",
                          "right": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'ignore'",
                            "unicode": false,
                            "value": "ignore",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "flags",
                            },
                            "what": OffsetLookup {
                              "kind": "offsetlookup",
                              "offset": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'fetch_field_direct1'",
                                "unicode": false,
                                "value": "fetch_field_direct1",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "meta",
                              },
                            },
                          },
                          "operator": "=",
                          "right": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'ignore'",
                            "unicode": false,
                            "value": "ignore",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Call {
                    "arguments": Array [
                      OffsetLookup {
                        "kind": "offsetlookup",
                        "offset": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'fetch_field_direct1'",
                          "unicode": false,
                          "value": "fetch_field_direct1",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "meta",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "is_object",
                      "resolution": "uqn",
                    },
                  },
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "res",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_free_result",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"[%04d - %s] Metadata differs from expected values\\\\n\\"",
                              "unicode": false,
                              "value": "[%04d - %s] Metadata differs from expected values
",
                            },
                            Bin {
                              "kind": "bin",
                              "left": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "offset",
                              },
                              "right": Number {
                                "kind": "number",
                                "value": "5",
                              },
                              "type": "+",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "sql",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "printf",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "meta",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "var_dump",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "expected_lib",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "var_dump",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      Return {
                        "expr": Boolean {
                          "kind": "boolean",
                          "raw": "false",
                          "value": false,
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "meta",
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "expected_lib",
                    },
                    "type": "!=",
                  },
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Unary {
              "kind": "unary",
              "type": "!",
              "what": Empty {
                "expression": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "expected_lib",
                },
                "kind": "empty",
              },
            },
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"[%04d - %s] [%d] %s\\\\n\\"",
                              "unicode": false,
                              "value": "[%04d - %s] [%d] %s
",
                            },
                            Bin {
                              "kind": "bin",
                              "left": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "offset",
                              },
                              "right": Number {
                                "kind": "number",
                                "value": "6",
                              },
                              "type": "+",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "sql",
                            },
                            Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "stmt",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "mysqli_stmt_errno",
                                "resolution": "uqn",
                              },
                            },
                            Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "stmt",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "mysqli_stmt_error",
                                "resolution": "uqn",
                              },
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "printf",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      Return {
                        "expr": Boolean {
                          "kind": "boolean",
                          "raw": "false",
                          "value": false,
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Unary {
                    "kind": "unary",
                    "type": "!",
                    "what": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "stmt",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "mysqli_stmt_execute",
                        "resolution": "uqn",
                      },
                    },
                  },
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "res",
                    },
                    "operator": "=",
                    "right": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "stmt",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "mysqli_stmt_get_result",
                        "resolution": "uqn",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
                If {
                  "alternate": If {
                    "alternate": null,
                    "body": Block {
                      "children": Array [
                        ExpressionStatement {
                          "expression": Call {
                            "arguments": Array [
                              String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"[%04d - %s] Unexpected resultset [%d] %s\\\\n\\"",
                                "unicode": false,
                                "value": "[%04d - %s] Unexpected resultset [%d] %s
",
                              },
                              Bin {
                                "kind": "bin",
                                "left": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "offset",
                                },
                                "right": Number {
                                  "kind": "number",
                                  "value": "8",
                                },
                                "type": "+",
                              },
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "sql",
                              },
                              Call {
                                "arguments": Array [
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "stmt",
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "mysqli_stmt_errno",
                                  "resolution": "uqn",
                                },
                              },
                              Call {
                                "arguments": Array [
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "stmt",
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "mysqli_stmt_error",
                                  "resolution": "uqn",
                                },
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "printf",
                              "resolution": "uqn",
                            },
                          },
                          "kind": "expressionstatement",
                        },
                        Return {
                          "expr": Boolean {
                            "kind": "boolean",
                            "raw": "false",
                            "value": false,
                          },
                          "kind": "return",
                        },
                      ],
                      "kind": "block",
                    },
                    "kind": "if",
                    "shortForm": false,
                    "test": Bin {
                      "kind": "bin",
                      "left": Empty {
                        "expression": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "expected_mysqlnd",
                        },
                        "kind": "empty",
                      },
                      "right": Bin {
                        "kind": "bin",
                        "left": Boolean {
                          "kind": "boolean",
                          "raw": "false",
                          "value": false,
                        },
                        "right": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "res",
                        },
                        "type": "!==",
                      },
                      "type": "&&",
                    },
                  },
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"[%04d - %s] Expecting resultset [%d] %s\\\\n\\"",
                              "unicode": false,
                              "value": "[%04d - %s] Expecting resultset [%d] %s
",
                            },
                            Bin {
                              "kind": "bin",
                              "left": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "offset",
                              },
                              "right": Number {
                                "kind": "number",
                                "value": "7",
                              },
                              "type": "+",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "sql",
                            },
                            Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "stmt",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "mysqli_stmt_errno",
                                "resolution": "uqn",
                              },
                            },
                            Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "stmt",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "mysqli_stmt_error",
                                "resolution": "uqn",
                              },
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "printf",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      Return {
                        "expr": Boolean {
                          "kind": "boolean",
                          "raw": "false",
                          "value": false,
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": Boolean {
                        "kind": "boolean",
                        "raw": "false",
                        "value": false,
                      },
                      "right": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "res",
                      },
                      "type": "===",
                    },
                    "right": Unary {
                      "kind": "unary",
                      "type": "!",
                      "what": Empty {
                        "expression": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "expected_mysqlnd",
                        },
                        "kind": "empty",
                      },
                    },
                    "type": "&&",
                  },
                },
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"[%04d - %s] [%d] %s\\\\n\\"",
                              "unicode": false,
                              "value": "[%04d - %s] [%d] %s
",
                            },
                            Bin {
                              "kind": "bin",
                              "left": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "offset",
                              },
                              "right": Number {
                                "kind": "number",
                                "value": "9",
                              },
                              "type": "+",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "sql",
                            },
                            Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "stmt",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "mysqli_stmt_errno",
                                "resolution": "uqn",
                              },
                            },
                            Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "stmt",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "mysqli_stmt_error",
                                "resolution": "uqn",
                              },
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "printf",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      Return {
                        "expr": Boolean {
                          "kind": "boolean",
                          "raw": "false",
                          "value": false,
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Unary {
                    "kind": "unary",
                    "type": "!",
                    "what": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "res",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "is_object",
                        "resolution": "uqn",
                      },
                    },
                  },
                },
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"[%04d - %s] Expecting object/mysqli_result got object/%s\\\\n\\"",
                              "unicode": false,
                              "value": "[%04d - %s] Expecting object/mysqli_result got object/%s
",
                            },
                            Bin {
                              "kind": "bin",
                              "left": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "offset",
                              },
                              "right": Number {
                                "kind": "number",
                                "value": "10",
                              },
                              "type": "+",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "sql",
                            },
                            Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "res",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "get_class",
                                "resolution": "uqn",
                              },
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "printf",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      Return {
                        "expr": Boolean {
                          "kind": "boolean",
                          "raw": "false",
                          "value": false,
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'mysqli_result'",
                      "unicode": false,
                      "value": "mysqli_result",
                    },
                    "right": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "res",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "get_class",
                        "resolution": "uqn",
                      },
                    },
                    "type": "!=",
                  },
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "meta_res",
                    },
                    "operator": "=",
                    "right": Array {
                      "items": Array [
                        Entry {
                          "byRef": false,
                          "key": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'num_fields'",
                            "unicode": false,
                            "value": "num_fields",
                          },
                          "kind": "entry",
                          "unpack": false,
                          "value": Call {
                            "arguments": Array [
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "res",
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "mysqli_num_fields",
                              "resolution": "uqn",
                            },
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'fetch_field'",
                            "unicode": false,
                            "value": "fetch_field",
                          },
                          "kind": "entry",
                          "unpack": false,
                          "value": Call {
                            "arguments": Array [
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "res",
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "mysqli_fetch_field",
                              "resolution": "uqn",
                            },
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'fetch_field_direct0'",
                            "unicode": false,
                            "value": "fetch_field_direct0",
                          },
                          "kind": "entry",
                          "unpack": false,
                          "value": Call {
                            "arguments": Array [
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "res",
                              },
                              Number {
                                "kind": "number",
                                "value": "0",
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "mysqli_fetch_field_direct",
                              "resolution": "uqn",
                            },
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'fetch_field_direct1'",
                            "unicode": false,
                            "value": "fetch_field_direct1",
                          },
                          "kind": "entry",
                          "unpack": false,
                          "value": Silent {
                            "expr": Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "res",
                                },
                                Number {
                                  "kind": "number",
                                  "value": "1",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "mysqli_fetch_field_direct",
                                "resolution": "uqn",
                              },
                            },
                            "kind": "silent",
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'fetch_fields'",
                            "unicode": false,
                            "value": "fetch_fields",
                          },
                          "kind": "entry",
                          "unpack": false,
                          "value": Call {
                            "arguments": Array [
                              Call {
                                "arguments": Array [
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "res",
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "mysqli_fetch_fields",
                                  "resolution": "uqn",
                                },
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "count",
                              "resolution": "uqn",
                            },
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'field_count'",
                            "unicode": false,
                            "value": "field_count",
                          },
                          "kind": "entry",
                          "unpack": false,
                          "value": Call {
                            "arguments": Array [
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "link",
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "mysqli_field_count",
                              "resolution": "uqn",
                            },
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'field_seek-1'",
                            "unicode": false,
                            "value": "field_seek-1",
                          },
                          "kind": "entry",
                          "unpack": false,
                          "value": Silent {
                            "expr": Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "res",
                                },
                                Unary {
                                  "kind": "unary",
                                  "type": "-",
                                  "what": Number {
                                    "kind": "number",
                                    "value": "1",
                                  },
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "mysqli_field_seek",
                                "resolution": "uqn",
                              },
                            },
                            "kind": "silent",
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'field_seek0'",
                            "unicode": false,
                            "value": "field_seek0",
                          },
                          "kind": "entry",
                          "unpack": false,
                          "value": Call {
                            "arguments": Array [
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "res",
                              },
                              Number {
                                "kind": "number",
                                "value": "0",
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "mysqli_field_seek",
                              "resolution": "uqn",
                            },
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'field_tell'",
                            "unicode": false,
                            "value": "field_tell",
                          },
                          "kind": "entry",
                          "unpack": false,
                          "value": Call {
                            "arguments": Array [
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "res",
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "mysqli_field_tell",
                              "resolution": "uqn",
                            },
                          },
                        },
                      ],
                      "kind": "array",
                      "shortForm": false,
                    },
                  },
                  "kind": "expressionstatement",
                },
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "charsetnr",
                            },
                            "what": OffsetLookup {
                              "kind": "offsetlookup",
                              "offset": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'fetch_field'",
                                "unicode": false,
                                "value": "fetch_field",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "meta_res",
                              },
                            },
                          },
                          "operator": "=",
                          "right": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'ignore'",
                            "unicode": false,
                            "value": "ignore",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "flags",
                            },
                            "what": OffsetLookup {
                              "kind": "offsetlookup",
                              "offset": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'fetch_field'",
                                "unicode": false,
                                "value": "fetch_field",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "meta_res",
                              },
                            },
                          },
                          "operator": "=",
                          "right": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'ignore'",
                            "unicode": false,
                            "value": "ignore",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Call {
                    "arguments": Array [
                      OffsetLookup {
                        "kind": "offsetlookup",
                        "offset": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'fetch_field'",
                          "unicode": false,
                          "value": "fetch_field",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "meta_res",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "is_object",
                      "resolution": "uqn",
                    },
                  },
                },
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "charsetnr",
                            },
                            "what": OffsetLookup {
                              "kind": "offsetlookup",
                              "offset": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'fetch_field_direct0'",
                                "unicode": false,
                                "value": "fetch_field_direct0",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "meta_res",
                              },
                            },
                          },
                          "operator": "=",
                          "right": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'ignore'",
                            "unicode": false,
                            "value": "ignore",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "flags",
                            },
                            "what": OffsetLookup {
                              "kind": "offsetlookup",
                              "offset": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'fetch_field_direct0'",
                                "unicode": false,
                                "value": "fetch_field_direct0",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "meta_res",
                              },
                            },
                          },
                          "operator": "=",
                          "right": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'ignore'",
                            "unicode": false,
                            "value": "ignore",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Call {
                    "arguments": Array [
                      OffsetLookup {
                        "kind": "offsetlookup",
                        "offset": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'fetch_field_direct0'",
                          "unicode": false,
                          "value": "fetch_field_direct0",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "meta_res",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "is_object",
                      "resolution": "uqn",
                    },
                  },
                },
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "charsetnr",
                            },
                            "what": OffsetLookup {
                              "kind": "offsetlookup",
                              "offset": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'fetch_field_direct1'",
                                "unicode": false,
                                "value": "fetch_field_direct1",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "meta_res",
                              },
                            },
                          },
                          "operator": "=",
                          "right": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'ignore'",
                            "unicode": false,
                            "value": "ignore",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": PropertyLookup {
                            "kind": "propertylookup",
                            "offset": Identifier {
                              "kind": "identifier",
                              "name": "flags",
                            },
                            "what": OffsetLookup {
                              "kind": "offsetlookup",
                              "offset": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'fetch_field_direct1'",
                                "unicode": false,
                                "value": "fetch_field_direct1",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "meta_res",
                              },
                            },
                          },
                          "operator": "=",
                          "right": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'ignore'",
                            "unicode": false,
                            "value": "ignore",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Call {
                    "arguments": Array [
                      OffsetLookup {
                        "kind": "offsetlookup",
                        "offset": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'fetch_field_direct1'",
                          "unicode": false,
                          "value": "fetch_field_direct1",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "meta_res",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "is_object",
                      "resolution": "uqn",
                    },
                  },
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "res",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "mysqli_free_result",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                If {
                  "alternate": Block {
                    "children": Array [
                      If {
                        "alternate": null,
                        "body": Block {
                          "children": Array [
                            ExpressionStatement {
                              "expression": Call {
                                "arguments": Array [
                                  String {
                                    "isDoubleQuote": true,
                                    "kind": "string",
                                    "raw": "\\"[%04d - %s] Metadata seems wrong, no fields?\\\\n\\"",
                                    "unicode": false,
                                    "value": "[%04d - %s] Metadata seems wrong, no fields?
",
                                  },
                                  Bin {
                                    "kind": "bin",
                                    "left": Variable {
                                      "curly": false,
                                      "kind": "variable",
                                      "name": "offset",
                                    },
                                    "right": Number {
                                      "kind": "number",
                                      "value": "12",
                                    },
                                    "type": "+",
                                  },
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "sql",
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "printf",
                                  "resolution": "uqn",
                                },
                              },
                              "kind": "expressionstatement",
                            },
                            ExpressionStatement {
                              "expression": Call {
                                "arguments": Array [
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "meta_res",
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "var_dump",
                                  "resolution": "uqn",
                                },
                              },
                              "kind": "expressionstatement",
                            },
                            ExpressionStatement {
                              "expression": Call {
                                "arguments": Array [
                                  Call {
                                    "arguments": Array [
                                      Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "res",
                                      },
                                    ],
                                    "kind": "call",
                                    "what": Name {
                                      "kind": "name",
                                      "name": "mysqli_fetch_assoc",
                                      "resolution": "uqn",
                                    },
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "var_dump",
                                  "resolution": "uqn",
                                },
                              },
                              "kind": "expressionstatement",
                            },
                          ],
                          "kind": "block",
                        },
                        "kind": "if",
                        "shortForm": false,
                        "test": Bin {
                          "kind": "bin",
                          "left": OffsetLookup {
                            "kind": "offsetlookup",
                            "offset": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "'field_count'",
                              "unicode": false,
                              "value": "field_count",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "meta_res",
                            },
                          },
                          "right": Number {
                            "kind": "number",
                            "value": "1",
                          },
                          "type": "<",
                        },
                      },
                    ],
                    "kind": "block",
                  },
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"[%04d - %s] Metadata differs from expected\\\\n\\"",
                              "unicode": false,
                              "value": "[%04d - %s] Metadata differs from expected
",
                            },
                            Bin {
                              "kind": "bin",
                              "left": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "offset",
                              },
                              "right": Number {
                                "kind": "number",
                                "value": "11",
                              },
                              "type": "+",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "sql",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "printf",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "meta_res",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "var_dump",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "expected_mysqlnd",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "var_dump",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "check_mysqlnd",
                    },
                    "right": Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "meta_res",
                      },
                      "right": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "expected_mysqlnd",
                      },
                      "type": "!=",
                    },
                    "type": "&&",
                  },
                },
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"[%04d - %s] Metadata returned by mysqli_stmt_result_metadata() and mysqli_stmt_get_result() differ\\\\n\\"",
                              "unicode": false,
                              "value": "[%04d - %s] Metadata returned by mysqli_stmt_result_metadata() and mysqli_stmt_get_result() differ
",
                            },
                            Bin {
                              "kind": "bin",
                              "left": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "offset",
                              },
                              "right": Number {
                                "kind": "number",
                                "value": "13",
                              },
                              "type": "+",
                            },
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "sql",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "printf",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "meta_res",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "var_dump",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      ExpressionStatement {
                        "expression": Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "meta",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "var_dump",
                            "resolution": "uqn",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "compare",
                    },
                    "right": Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "meta_res",
                      },
                      "right": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "meta",
                      },
                      "type": "!=",
                    },
                    "type": "&&",
                  },
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'mysqli_stmt_get_result'",
                  "unicode": false,
                  "value": "mysqli_stmt_get_result",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "function_exists",
                "resolution": "uqn",
              },
            },
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "stmt",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "mysqli_stmt_close",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          Return {
            "expr": Boolean {
              "kind": "boolean",
              "raw": "true",
              "value": true,
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "testStatement",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "100",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'ANALYZE TABLE test'",
            "unicode": false,
            "value": "ANALYZE TABLE test",
          },
          Array {
            "items": Array [],
            "kind": "array",
            "shortForm": false,
          },
          Array {
            "items": Array [
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
            ],
            "kind": "array",
            "shortForm": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "testStatement",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "120",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'OPTIMIZE TABLE test'",
            "unicode": false,
            "value": "OPTIMIZE TABLE test",
          },
          Array {
            "items": Array [],
            "kind": "array",
            "shortForm": false,
          },
          Array {
            "items": Array [
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
            ],
            "kind": "array",
            "shortForm": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "testStatement",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "140",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'REPAIR TABLE test'",
            "unicode": false,
            "value": "REPAIR TABLE test",
          },
          Array {
            "items": Array [],
            "kind": "array",
            "shortForm": false,
          },
          Array {
            "items": Array [
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
            ],
            "kind": "array",
            "shortForm": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "testStatement",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "160",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'SHOW AUTHORS'",
            "unicode": false,
            "value": "SHOW AUTHORS",
          },
          Array {
            "items": Array [],
            "kind": "array",
            "shortForm": false,
          },
          Array {
            "items": Array [
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
            ],
            "kind": "array",
            "shortForm": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "testStatement",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "180",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'SHOW CHARACTER SET'",
            "unicode": false,
            "value": "SHOW CHARACTER SET",
          },
          Array {
            "items": Array [],
            "kind": "array",
            "shortForm": false,
          },
          Array {
            "items": Array [
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
            ],
            "kind": "array",
            "shortForm": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "testStatement",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "200",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'SHOW COLLATION'",
            "unicode": false,
            "value": "SHOW COLLATION",
          },
          Array {
            "items": Array [],
            "kind": "array",
            "shortForm": false,
          },
          Array {
            "items": Array [
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
            ],
            "kind": "array",
            "shortForm": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "testStatement",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "220",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'SHOW CONTRIBUTORS'",
            "unicode": false,
            "value": "SHOW CONTRIBUTORS",
          },
          Array {
            "items": Array [],
            "kind": "array",
            "shortForm": false,
          },
          Array {
            "items": Array [
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
            ],
            "kind": "array",
            "shortForm": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "testStatement",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "240",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'SHOW CREATE DATABASE '",
              "unicode": false,
              "value": "SHOW CREATE DATABASE ",
            },
            "right": Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
            "type": ".",
          },
          Array {
            "items": Array [],
            "kind": "array",
            "shortForm": false,
          },
          Array {
            "items": Array [
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
            ],
            "kind": "array",
            "shortForm": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "testStatement",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "260",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'SHOW DATABASES'",
            "unicode": false,
            "value": "SHOW DATABASES",
          },
          Array {
            "items": Array [],
            "kind": "array",
            "shortForm": false,
          },
          Array {
            "items": Array [
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
            ],
            "kind": "array",
            "shortForm": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "testStatement",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "280",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'SHOW ENGINE InnoDB STATUS'",
            "unicode": false,
            "value": "SHOW ENGINE InnoDB STATUS",
          },
          Array {
            "items": Array [],
            "kind": "array",
            "shortForm": false,
          },
          Array {
            "items": Array [
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
            ],
            "kind": "array",
            "shortForm": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "testStatement",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "300",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'SHOW ENGINES'",
            "unicode": false,
            "value": "SHOW ENGINES",
          },
          Array {
            "items": Array [],
            "kind": "array",
            "shortForm": false,
          },
          Array {
            "items": Array [
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
            ],
            "kind": "array",
            "shortForm": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "testStatement",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "320",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'SHOW PLUGINS'",
            "unicode": false,
            "value": "SHOW PLUGINS",
          },
          Array {
            "items": Array [],
            "kind": "array",
            "shortForm": false,
          },
          Array {
            "items": Array [
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
            ],
            "kind": "array",
            "shortForm": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "testStatement",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "340",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'SHOW PROCESSLIST'",
            "unicode": false,
            "value": "SHOW PROCESSLIST",
          },
          Array {
            "items": Array [],
            "kind": "array",
            "shortForm": false,
          },
          Array {
            "items": Array [
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
            ],
            "kind": "array",
            "shortForm": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "testStatement",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "360",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'SHOW FULL PROCESSLIST'",
            "unicode": false,
            "value": "SHOW FULL PROCESSLIST",
          },
          Array {
            "items": Array [],
            "kind": "array",
            "shortForm": false,
          },
          Array {
            "items": Array [
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
            ],
            "kind": "array",
            "shortForm": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "testStatement",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "380",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'SHOW STATUS'",
            "unicode": false,
            "value": "SHOW STATUS",
          },
          Array {
            "items": Array [],
            "kind": "array",
            "shortForm": false,
          },
          Array {
            "items": Array [
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
            ],
            "kind": "array",
            "shortForm": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "testStatement",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "400",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'SHOW TABLE STATUS'",
            "unicode": false,
            "value": "SHOW TABLE STATUS",
          },
          Array {
            "items": Array [],
            "kind": "array",
            "shortForm": false,
          },
          Array {
            "items": Array [
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
            ],
            "kind": "array",
            "shortForm": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "testStatement",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "420",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'SHOW TABLE STATUS'",
            "unicode": false,
            "value": "SHOW TABLE STATUS",
          },
          Array {
            "items": Array [],
            "kind": "array",
            "shortForm": false,
          },
          Array {
            "items": Array [
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
            ],
            "kind": "array",
            "shortForm": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "testStatement",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "440",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'SHOW TABLES'",
            "unicode": false,
            "value": "SHOW TABLES",
          },
          Array {
            "items": Array [],
            "kind": "array",
            "shortForm": false,
          },
          Array {
            "items": Array [
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
            ],
            "kind": "array",
            "shortForm": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "testStatement",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "460",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'SHOW OPEN TABLES'",
            "unicode": false,
            "value": "SHOW OPEN TABLES",
          },
          Array {
            "items": Array [],
            "kind": "array",
            "shortForm": false,
          },
          Array {
            "items": Array [
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
            ],
            "kind": "array",
            "shortForm": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "testStatement",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "460",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'SHOW VARIABLES'",
            "unicode": false,
            "value": "SHOW VARIABLES",
          },
          Array {
            "items": Array [],
            "kind": "array",
            "shortForm": false,
          },
          Array {
            "items": Array [
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
            ],
            "kind": "array",
            "shortForm": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "testStatement",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "field0",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "stdClass",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "name",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "field0",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'id'",
          "unicode": false,
          "value": "id",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "orgname",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "field0",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'id'",
          "unicode": false,
          "value": "id",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "table",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "field0",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'test'",
          "unicode": false,
          "value": "test",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "orgtable",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "field0",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'test'",
          "unicode": false,
          "value": "test",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "def",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "field0",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "''",
          "unicode": false,
          "value": "",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "max_length",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "field0",
          },
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "0",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "length",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "field0",
          },
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "11",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "charsetnr",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "field0",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'ignore'",
          "unicode": false,
          "value": "ignore",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "flags",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "field0",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'ignore'",
          "unicode": false,
          "value": "ignore",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "type",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "field0",
          },
        },
        "operator": "=",
        "right": Name {
          "kind": "name",
          "name": "MYSQLI_TYPE_LONG",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "decimals",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "field0",
          },
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "0",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "meta_lib",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'num_fields'",
                "unicode": false,
                "value": "num_fields",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "1",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'fetch_field'",
                "unicode": false,
                "value": "fetch_field",
              },
              "kind": "entry",
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "name": "field0",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'fetch_field_direct0'",
                "unicode": false,
                "value": "fetch_field_direct0",
              },
              "kind": "entry",
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "name": "field0",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'fetch_field_direct1'",
                "unicode": false,
                "value": "fetch_field_direct1",
              },
              "kind": "entry",
              "unpack": false,
              "value": Boolean {
                "kind": "boolean",
                "raw": "false",
                "value": false,
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'fetch_fields'",
                "unicode": false,
                "value": "fetch_fields",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "1",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'field_count'",
                "unicode": false,
                "value": "field_count",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "1",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'field_seek-1'",
                "unicode": false,
                "value": "field_seek-1",
              },
              "kind": "entry",
              "unpack": false,
              "value": Boolean {
                "kind": "boolean",
                "raw": "false",
                "value": false,
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'field_seek0'",
                "unicode": false,
                "value": "field_seek0",
              },
              "kind": "entry",
              "unpack": false,
              "value": Boolean {
                "kind": "boolean",
                "raw": "true",
                "value": true,
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'field_tell'",
                "unicode": false,
                "value": "field_tell",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "0",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "meta_mysqlnd",
        },
        "operator": "=",
        "right": Variable {
          "curly": false,
          "kind": "variable",
          "name": "meta_lib",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "480",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'SELECT id FROM test'",
            "unicode": false,
            "value": "SELECT id FROM test",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "meta_lib",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "meta_mysqlnd",
          },
          Boolean {
            "kind": "boolean",
            "raw": "true",
            "value": true,
          },
          Boolean {
            "kind": "boolean",
            "raw": "true",
            "value": true,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "testStatement",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "500",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'CHECKSUM TABLE test'",
            "unicode": false,
            "value": "CHECKSUM TABLE test",
          },
          Array {
            "items": Array [],
            "kind": "array",
            "shortForm": false,
          },
          Array {
            "items": Array [
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
            ],
            "kind": "array",
            "shortForm": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "testStatement",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_close",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"done!\\"",
          "unicode": false,
          "value": "done!",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
