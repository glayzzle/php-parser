// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests ReflectionGenerator while being currently executed 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "ref",
          },
          "nullable": false,
          "readonly": false,
          "type": Name {
            "kind": "name",
            "name": "ReflectionGenerator",
            "resolution": "uqn",
          },
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "method",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "rec",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": Boolean {
            "kind": "boolean",
            "raw": "true",
            "value": true,
          },
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "ref",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "method",
                      },
                      Boolean {
                        "kind": "boolean",
                        "raw": "false",
                        "value": false,
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "call",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Return {
                  "expr": null,
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Variable {
              "curly": false,
              "kind": "variable",
              "name": "rec",
            },
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "method",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "ref",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "call",
      },
      "nullable": false,
      "type": null,
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "ref",
          },
          "nullable": false,
          "readonly": false,
          "type": Name {
            "kind": "name",
            "name": "ReflectionGenerator",
            "resolution": "uqn",
          },
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "ref",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"getTrace\\"",
                  "unicode": false,
                  "value": "getTrace",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "call",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "ref",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"getExecutingLine\\"",
                  "unicode": false,
                  "value": "getExecutingLine",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "call",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "ref",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"getExecutingFile\\"",
                  "unicode": false,
                  "value": "getExecutingFile",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "call",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "ref",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"getExecutingGenerator\\"",
                  "unicode": false,
                  "value": "getExecutingGenerator",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "call",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "ref",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"getFunction\\"",
                  "unicode": false,
                  "value": "getFunction",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "call",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "ref",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"getThis\\"",
                  "unicode": false,
                  "value": "getThis",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "call",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "doCalls",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "next",
          },
          "what": Assign {
            "kind": "assign",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "gen",
            },
            "operator": "=",
            "parenthesizedExpression": true,
            "right": Call {
              "arguments": Array [],
              "kind": "call",
              "what": Closure {
                "arguments": Array [],
                "attrGroups": Array [],
                "body": Block {
                  "children": Array [
                    ExpressionStatement {
                      "expression": Assign {
                        "kind": "assign",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "ref",
                        },
                        "operator": "=",
                        "right": New {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "gen",
                            },
                          ],
                          "kind": "new",
                          "what": Name {
                            "kind": "name",
                            "name": "ReflectionGenerator",
                            "resolution": "uqn",
                          },
                        },
                      },
                      "kind": "expressionstatement",
                    },
                    ExpressionStatement {
                      "expression": Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "ref",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "doCalls",
                          "resolution": "uqn",
                        },
                      },
                      "kind": "expressionstatement",
                    },
                    ExpressionStatement {
                      "expression": YieldFrom {
                        "kind": "yieldfrom",
                        "value": Call {
                          "arguments": Array [],
                          "kind": "call",
                          "what": Closure {
                            "arguments": Array [],
                            "attrGroups": Array [],
                            "body": Block {
                              "children": Array [
                                ExpressionStatement {
                                  "expression": Call {
                                    "arguments": Array [
                                      Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "ref",
                                      },
                                    ],
                                    "kind": "call",
                                    "what": Name {
                                      "kind": "name",
                                      "name": "doCalls",
                                      "resolution": "uqn",
                                    },
                                  },
                                  "kind": "expressionstatement",
                                },
                                ExpressionStatement {
                                  "expression": Yield {
                                    "key": null,
                                    "kind": "yield",
                                    "value": null,
                                  },
                                  "kind": "expressionstatement",
                                },
                              ],
                              "kind": "block",
                            },
                            "byref": false,
                            "isStatic": false,
                            "kind": "closure",
                            "nullable": false,
                            "parenthesizedExpression": true,
                            "type": null,
                            "uses": Array [
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "ref",
                              },
                            ],
                          },
                        },
                      },
                      "kind": "expressionstatement",
                    },
                  ],
                  "kind": "block",
                },
                "byref": false,
                "isStatic": false,
                "kind": "closure",
                "nullable": false,
                "parenthesizedExpression": true,
                "type": null,
                "uses": Array [
                  Variable {
                    "byref": true,
                    "curly": false,
                    "kind": "variable",
                    "name": "gen",
                  },
                ],
              },
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
