// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Check that phi use chains are correctly maintained when removing blocks 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "adapters",
          },
          "nullable": false,
          "readonly": false,
          "type": TypeReference {
            "kind": "typereference",
            "name": "array",
            "raw": "array",
          },
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          Foreach {
            "body": Block {
              "children": Array [
                If {
                  "alternate": null,
                  "body": Block {
                    "children": Array [
                      Continue {
                        "kind": "continue",
                        "level": null,
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": Call {
                        "arguments": Array [
                          String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'cli-server'",
                            "unicode": false,
                            "value": "cli-server",
                          },
                          Array {
                            "items": Array [
                              Entry {
                                "byRef": false,
                                "key": null,
                                "kind": "entry",
                                "unpack": false,
                                "value": String {
                                  "isDoubleQuote": false,
                                  "kind": "string",
                                  "raw": "'cli'",
                                  "unicode": false,
                                  "value": "cli",
                                },
                              },
                              Entry {
                                "byRef": false,
                                "key": null,
                                "kind": "entry",
                                "unpack": false,
                                "value": String {
                                  "isDoubleQuote": false,
                                  "kind": "string",
                                  "raw": "'phpdbg'",
                                  "unicode": false,
                                  "value": "phpdbg",
                                },
                              },
                            ],
                            "kind": "array",
                            "shortForm": true,
                          },
                          Boolean {
                            "kind": "boolean",
                            "raw": "true",
                            "value": true,
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "\\\\in_array",
                          "resolution": "fqn",
                        },
                      },
                      "right": Bin {
                        "kind": "bin",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "adapter",
                        },
                        "right": Name {
                          "kind": "name",
                          "name": "stdClass",
                          "resolution": "uqn",
                        },
                        "type": "instanceof",
                      },
                      "type": "&&",
                    },
                    "right": Unary {
                      "kind": "unary",
                      "type": "!",
                      "what": Call {
                        "arguments": Array [
                          String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'1'",
                            "unicode": false,
                            "value": "1",
                          },
                          Name {
                            "kind": "name",
                            "name": "\\\\FILTER_VALIDATE_BOOLEAN",
                            "resolution": "fqn",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "\\\\filter_var",
                          "resolution": "fqn",
                        },
                      },
                    },
                    "type": "&&",
                  },
                },
                ExpressionStatement {
                  "expression": Assign {
                    "kind": "assign",
                    "left": OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": false,
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "adapters",
                      },
                    },
                    "operator": "=",
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "adapter",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "key": null,
            "kind": "foreach",
            "shortForm": false,
            "source": Variable {
              "curly": false,
              "kind": "variable",
              "name": "adapters",
            },
            "value": Variable {
              "curly": false,
              "kind": "variable",
              "name": "adapter",
            },
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "test",
      },
      "nullable": false,
      "type": null,
    },
    Inline {
      "kind": "inline",
      "raw": "
===DONE===",
      "value": "===DONE===",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
