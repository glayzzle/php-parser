// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Phar::mapPhar buffer overrun 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "file",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"<?php
Phar::mapPhar('hio');
__HALT_COMPILER(); ?>\\"",
          "unicode": false,
          "value": "<?php
Phar::mapPhar('hio');
__HALT_COMPILER(); ?>",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "manifest",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'V'",
                  "unicode": false,
                  "value": "V",
                },
                Number {
                  "kind": "number",
                  "value": "1",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pack",
                "resolution": "uqn",
              },
            },
            "right": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'a'",
              "unicode": false,
              "value": "a",
            },
            "type": ".",
          },
          "right": Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'VVVVVV'",
                "unicode": false,
                "value": "VVVVVV",
              },
              Number {
                "kind": "number",
                "value": "0",
              },
              Call {
                "arguments": Array [],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "time",
                  "resolution": "uqn",
                },
              },
              Number {
                "kind": "number",
                "value": "0",
              },
              Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "''",
                    "unicode": false,
                    "value": "",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "crc32",
                  "resolution": "uqn",
                },
              },
              Number {
                "kind": "number",
                "value": "0x00000000",
              },
              Number {
                "kind": "number",
                "value": "0",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "pack",
              "resolution": "uqn",
            },
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "file",
        },
        "operator": ".=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'VVnVV'",
                    "unicode": false,
                    "value": "VVnVV",
                  },
                  Call {
                    "arguments": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "manifest",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "strlen",
                      "resolution": "uqn",
                    },
                  },
                  Number {
                    "kind": "number",
                    "value": "1",
                  },
                  Number {
                    "kind": "number",
                    "value": "0x1000",
                  },
                  Number {
                    "kind": "number",
                    "value": "0x00000000",
                  },
                  Number {
                    "kind": "number",
                    "value": "3",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "pack",
                  "resolution": "uqn",
                },
              },
              "right": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'hio'",
                "unicode": false,
                "value": "hio",
              },
              "type": ".",
            },
            "right": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'V'",
                  "unicode": false,
                  "value": "V",
                },
                Number {
                  "kind": "number",
                  "value": "0",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "pack",
                "resolution": "uqn",
              },
            },
            "type": ".",
          },
          "right": Variable {
            "curly": false,
            "kind": "variable",
            "name": "manifest",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": Bin {
                "kind": "bin",
                "left": Magic {
                  "kind": "magic",
                  "raw": "__DIR__",
                  "value": "__DIR__",
                },
                "right": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'/'",
                  "unicode": false,
                  "value": "/",
                },
                "type": ".",
              },
              "right": Call {
                "arguments": Array [
                  Magic {
                    "kind": "magic",
                    "raw": "__FILE__",
                    "value": "__FILE__",
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'.php'",
                    "unicode": false,
                    "value": ".php",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "basename",
                  "resolution": "uqn",
                },
              },
              "type": ".",
            },
            "right": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'.phar.php'",
              "unicode": false,
              "value": ".phar.php",
            },
            "type": ".",
          },
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "file",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "file_put_contents",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Include {
              "kind": "include",
              "once": false,
              "require": false,
              "target": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": Bin {
                    "kind": "bin",
                    "left": Magic {
                      "kind": "magic",
                      "raw": "__DIR__",
                      "value": "__DIR__",
                    },
                    "right": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'/'",
                      "unicode": false,
                      "value": "/",
                    },
                    "type": ".",
                  },
                  "right": Call {
                    "arguments": Array [
                      Magic {
                        "kind": "magic",
                        "raw": "__FILE__",
                        "value": "__FILE__",
                      },
                      String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'.php'",
                        "unicode": false,
                        "value": ".php",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "basename",
                      "resolution": "uqn",
                    },
                  },
                  "type": ".",
                },
                "right": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'.phar.php'",
                  "unicode": false,
                  "value": ".phar.php",
                },
                "type": ".",
              },
            },
            "kind": "expressionstatement",
          },
          Echo {
            "expressions": Array [
              Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'phar://hio/a'",
                    "unicode": false,
                    "value": "phar://hio/a",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "file_get_contents",
                  "resolution": "uqn",
                },
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Call {
                    "arguments": Array [],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "getMessage",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "e",
                      },
                    },
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "Exception",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
