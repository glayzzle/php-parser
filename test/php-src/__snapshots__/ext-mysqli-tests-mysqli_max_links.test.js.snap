// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Testing mysqli.max_links 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": true,
        "target": String {
          "isDoubleQuote": true,
          "kind": "string",
          "parenthesizedExpression": true,
          "raw": "\\"connect.inc\\"",
          "unicode": false,
          "value": "connect.inc",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": true,
        "target": String {
          "isDoubleQuote": true,
          "kind": "string",
          "parenthesizedExpression": true,
          "raw": "\\"table.inc\\"",
          "unicode": false,
          "value": "table.inc",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "link",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "mysqli_ping",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Cast {
            "expr": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'mysqli.max_links'",
                  "unicode": false,
                  "value": "mysqli.max_links",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "ini_get",
                "resolution": "uqn",
              },
            },
            "kind": "cast",
            "raw": "(int)",
            "type": "int",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "links",
        },
        "operator": "=",
        "right": Array {
          "items": Array [],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    For {
      "body": If {
        "alternate": null,
        "body": ExpressionStatement {
          "expression": Call {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"[%03d] One link is already open, it should not be possible to open more, [%d] %s, [%d] %s\\\\n\\"",
                "unicode": false,
                "value": "[%03d] One link is already open, it should not be possible to open more, [%d] %s, [%d] %s
",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "i",
              },
              Call {
                "arguments": Array [],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_connect_errno",
                  "resolution": "uqn",
                },
              },
              Call {
                "arguments": Array [],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_connect_error",
                  "resolution": "uqn",
                },
              },
              Call {
                "arguments": Array [
                  OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "i",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "links",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_errno",
                  "resolution": "uqn",
                },
              },
              Call {
                "arguments": Array [
                  OffsetLookup {
                    "kind": "offsetlookup",
                    "offset": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "i",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "links",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "mysqli_error",
                  "resolution": "uqn",
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "printf",
              "resolution": "uqn",
            },
          },
          "kind": "expressionstatement",
        },
        "kind": "if",
        "shortForm": false,
        "test": Assign {
          "kind": "assign",
          "left": OffsetLookup {
            "kind": "offsetlookup",
            "offset": Variable {
              "curly": false,
              "kind": "variable",
              "name": "i",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "links",
            },
          },
          "operator": "=",
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "host",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "user",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "passwd",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "db",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "port",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "socket",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "my_mysqli_connect",
              "resolution": "uqn",
            },
          },
        },
      },
      "increment": Array [
        Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "1",
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "right": Number {
            "kind": "number",
            "value": "5",
          },
          "type": "<=",
        },
      ],
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "link",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mysqli_close",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"done!\\"",
          "unicode": false,
          "value": "done!",
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
