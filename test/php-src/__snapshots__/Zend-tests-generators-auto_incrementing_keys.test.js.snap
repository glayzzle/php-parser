// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Generator keys are auto-incrementing by default 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Yield {
              "key": null,
              "kind": "yield",
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'foo'",
                "unicode": false,
                "value": "foo",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Yield {
              "key": null,
              "kind": "yield",
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'bar'",
                "unicode": false,
                "value": "bar",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Yield {
              "key": Number {
                "kind": "number",
                "value": "5",
              },
              "kind": "yield",
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'rab'",
                "unicode": false,
                "value": "rab",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Yield {
              "key": null,
              "kind": "yield",
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'oof'",
                "unicode": false,
                "value": "oof",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "gen",
      },
      "nullable": false,
      "type": null,
    },
    Foreach {
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "k",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "' => '",
                "unicode": false,
                "value": " => ",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "v",
              },
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\n\\"",
                "unicode": false,
                "value": "
",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "key": Variable {
        "curly": false,
        "kind": "variable",
        "name": "k",
      },
      "kind": "foreach",
      "shortForm": false,
      "source": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "gen",
          "resolution": "uqn",
        },
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "v",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
