// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Static variables in methods & nested functions & evals. 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [],
      "body": Array [
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Static {
                "kind": "static",
                "variables": Array [
                  StaticVariable {
                    "defaultValue": Array {
                      "items": Array [
                        Entry {
                          "byRef": false,
                          "key": null,
                          "kind": "entry",
                          "unpack": false,
                          "value": Number {
                            "kind": "number",
                            "value": "1",
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": null,
                          "kind": "entry",
                          "unpack": false,
                          "value": Number {
                            "kind": "number",
                            "value": "2",
                          },
                        },
                        Entry {
                          "byRef": false,
                          "key": null,
                          "kind": "entry",
                          "unpack": false,
                          "value": Number {
                            "kind": "number",
                            "value": "3",
                          },
                        },
                      ],
                      "kind": "array",
                      "shortForm": false,
                    },
                    "kind": "staticvariable",
                    "variable": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "a",
                    },
                  },
                ],
              },
              ExpressionStatement {
                "expression": Eval {
                  "kind": "eval",
                  "source": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "' static $k = array(4,5,6); '",
                    "unicode": false,
                    "value": " static $k = array(4,5,6); ",
                  },
                },
                "kind": "expressionstatement",
              },
              _Function {
                "arguments": Array [],
                "attrGroups": Array [],
                "body": Block {
                  "children": Array [
                    Static {
                      "kind": "static",
                      "variables": Array [
                        StaticVariable {
                          "defaultValue": Array {
                            "items": Array [
                              Entry {
                                "byRef": false,
                                "key": null,
                                "kind": "entry",
                                "unpack": false,
                                "value": Number {
                                  "kind": "number",
                                  "value": "7",
                                },
                              },
                              Entry {
                                "byRef": false,
                                "key": null,
                                "kind": "entry",
                                "unpack": false,
                                "value": Number {
                                  "kind": "number",
                                  "value": "8",
                                },
                              },
                              Entry {
                                "byRef": false,
                                "key": null,
                                "kind": "entry",
                                "unpack": false,
                                "value": Number {
                                  "kind": "number",
                                  "value": "9",
                                },
                              },
                            ],
                            "kind": "array",
                            "shortForm": false,
                          },
                          "kind": "staticvariable",
                          "variable": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "a",
                          },
                        },
                      ],
                    },
                    ExpressionStatement {
                      "expression": Eval {
                        "kind": "eval",
                        "source": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "' static $k = array(10,11,12); '",
                          "unicode": false,
                          "value": " static $k = array(10,11,12); ",
                        },
                      },
                      "kind": "expressionstatement",
                    },
                    ExpressionStatement {
                      "expression": Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "a",
                          },
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "k",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "var_dump",
                          "resolution": "uqn",
                        },
                      },
                      "kind": "expressionstatement",
                    },
                  ],
                  "kind": "block",
                },
                "byref": false,
                "kind": "function",
                "name": Identifier {
                  "kind": "identifier",
                  "name": "cfg",
                },
                "nullable": false,
                "type": null,
              },
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "a",
                    },
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "k",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "var_dump",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "f",
          },
          "nullable": false,
          "type": null,
          "visibility": "",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "C",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "c",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "C",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "f",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "c",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "cfg",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Class {
      "attrGroups": Array [],
      "body": Array [
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Eval {
                  "kind": "eval",
                  "source": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'function dfg() { static $b = array(1,2,3); var_dump($b); } '",
                    "unicode": false,
                    "value": "function dfg() { static $b = array(1,2,3); var_dump($b); } ",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": true,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "f",
          },
          "nullable": false,
          "type": null,
          "visibility": "",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "D",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": StaticLookup {
          "kind": "staticlookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "f",
          },
          "what": Name {
            "kind": "name",
            "name": "D",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "dfg",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Eval {
        "kind": "eval",
        "source": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "' Class E { function f() { static $c = array(1,2,3); var_dump($c); } }'",
          "unicode": false,
          "value": " Class E { function f() { static $c = array(1,2,3); var_dump($c); } }",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "e",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "E",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "f",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
