// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #64992 (dst not handled past 2038) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "firstyear",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "2035",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "lastyear",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "2040",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "tz",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'America/Los_Angeles'",
          "unicode": false,
          "value": "America/Los_Angeles",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'America/Los_Angeles'",
            "unicode": false,
            "value": "America/Los_Angeles",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "date_default_timezone_set",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "dt",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            Bin {
              "kind": "bin",
              "left": Cast {
                "expr": Bin {
                  "kind": "bin",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "firstyear",
                  },
                  "parenthesizedExpression": true,
                  "right": Number {
                    "kind": "number",
                    "value": "1",
                  },
                  "type": "-",
                },
                "kind": "cast",
                "raw": "(string)",
                "type": "string",
              },
              "right": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"-07-02\\"",
                "unicode": false,
                "value": "-07-02",
              },
              "type": ".",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "DateTime",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "di",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'P6M'",
              "unicode": false,
              "value": "P6M",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "DateInterval",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    For {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "di",
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "add",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "dt",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "gmto",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "getOffset",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "dt",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
          Echo {
            "expressions": Array [
              Encapsed {
                "kind": "encapsed",
                "raw": "\\"Time Zone offset for $tz for \\" ",
                "type": "string",
                "value": Array [
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "Time Zone offset for ",
                      "unicode": false,
                      "value": "Time Zone offset for ",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "tz",
                    },
                    "kind": "encapsedpart",
                    "syntax": "simple",
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": " for ",
                      "unicode": false,
                      "value": " for ",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                ],
              },
              Call {
                "arguments": Array [
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'Y-m-d'",
                    "unicode": false,
                    "value": "Y-m-d",
                  },
                ],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "format",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "dt",
                  },
                },
              },
              Encapsed {
                "kind": "encapsed",
                "raw": "\\" is $gmto\\\\n\\"",
                "type": "string",
                "value": Array [
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": " is ",
                      "unicode": false,
                      "value": " is ",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "gmto",
                    },
                    "kind": "encapsedpart",
                    "syntax": "simple",
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "\\\\n",
                      "unicode": false,
                      "value": "",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                ],
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
        ],
        "kind": "block",
      },
      "increment": Array [
        Post {
          "kind": "post",
          "type": "+",
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "value": "0",
          },
        },
      ],
      "kind": "for",
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "curly": false,
            "kind": "variable",
            "name": "i",
          },
          "right": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "lastyear",
              },
              "parenthesizedExpression": true,
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "firstyear",
              },
              "type": "-",
            },
            "right": Number {
              "kind": "number",
              "value": "2",
            },
            "type": "*",
          },
          "type": "<",
        },
      ],
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
