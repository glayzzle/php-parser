// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Phar: Bug #77022: PharData always creates new files with mode 0666 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "022",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "umask",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Call {
                "arguments": Array [],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "umask",
                  "resolution": "uqn",
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "decoct",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "sFile",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Magic {
              "kind": "magic",
              "raw": "__DIR__",
              "value": "__DIR__",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'test77022'",
              "unicode": false,
              "value": "test77022",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "tempnam",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              OffsetLookup {
                "kind": "offsetlookup",
                "offset": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'mode'",
                  "unicode": false,
                  "value": "mode",
                },
                "what": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "sFile",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "stat",
                    "resolution": "uqn",
                  },
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "decoct",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "clearstatcache",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "phar",
              },
              "operator": "=",
              "right": New {
                "arguments": Array [
                  Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": Magic {
                        "kind": "magic",
                        "raw": "__DIR__",
                        "value": "__DIR__",
                      },
                      "right": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'/test77022.'",
                        "unicode": false,
                        "value": "/test77022.",
                      },
                      "type": ".",
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "ext",
                    },
                    "type": ".",
                  },
                  namedargument {
                    "kind": "namedargument",
                    "name": "format",
                    "value": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "format",
                    },
                  },
                ],
                "kind": "new",
                "what": Name {
                  "kind": "name",
                  "name": "PharData",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "sFile",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'test-file-phar'",
                  "unicode": false,
                  "value": "test-file-phar",
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "addFile",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "phar",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"test-from-string\\"",
                  "unicode": false,
                  "value": "test-from-string",
                },
                String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'test-file-phar'",
                  "unicode": false,
                  "value": "test-file-phar",
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "addFromString",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "phar",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Magic {
                  "kind": "magic",
                  "raw": "__DIR__",
                  "value": "__DIR__",
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "extractTo",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "phar",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [
                    OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'mode'",
                        "unicode": false,
                        "value": "mode",
                      },
                      "what": Call {
                        "arguments": Array [
                          Bin {
                            "kind": "bin",
                            "left": Magic {
                              "kind": "magic",
                              "raw": "__DIR__",
                              "value": "__DIR__",
                            },
                            "right": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "'/test-file-phar'",
                              "unicode": false,
                              "value": "/test-file-phar",
                            },
                            "type": ".",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "stat",
                          "resolution": "uqn",
                        },
                      },
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "decoct",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [
                    OffsetLookup {
                      "kind": "offsetlookup",
                      "offset": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'mode'",
                        "unicode": false,
                        "value": "mode",
                      },
                      "what": Call {
                        "arguments": Array [
                          Bin {
                            "kind": "bin",
                            "left": Magic {
                              "kind": "magic",
                              "raw": "__DIR__",
                              "value": "__DIR__",
                            },
                            "right": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "'/test-from-string'",
                              "unicode": false,
                              "value": "/test-from-string",
                            },
                            "type": ".",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "stat",
                          "resolution": "uqn",
                        },
                      },
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "decoct",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Bin {
                  "kind": "bin",
                  "left": Magic {
                    "kind": "magic",
                    "raw": "__DIR__",
                    "value": "__DIR__",
                  },
                  "right": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'/test-file-phar'",
                    "unicode": false,
                    "value": "/test-file-phar",
                  },
                  "type": ".",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "unlink",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Bin {
                  "kind": "bin",
                  "left": Magic {
                    "kind": "magic",
                    "raw": "__DIR__",
                    "value": "__DIR__",
                  },
                  "right": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'/test-from-string'",
                    "unicode": false,
                    "value": "/test-from-string",
                  },
                  "type": ".",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "unlink",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Bin {
                  "kind": "bin",
                  "left": Bin {
                    "kind": "bin",
                    "left": Magic {
                      "kind": "magic",
                      "raw": "__DIR__",
                      "value": "__DIR__",
                    },
                    "right": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'/test77022.'",
                      "unicode": false,
                      "value": "/test77022.",
                    },
                    "type": ".",
                  },
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "ext",
                  },
                  "type": ".",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "unlink",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "key": Variable {
        "curly": false,
        "kind": "variable",
        "name": "format",
      },
      "kind": "foreach",
      "shortForm": false,
      "source": Array {
        "items": Array [
          Entry {
            "byRef": false,
            "key": StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "TAR",
              },
              "what": Name {
                "kind": "name",
                "name": "Phar",
                "resolution": "uqn",
              },
            },
            "kind": "entry",
            "unpack": false,
            "value": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'tar'",
              "unicode": false,
              "value": "tar",
            },
          },
          Entry {
            "byRef": false,
            "key": StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "ZIP",
              },
              "what": Name {
                "kind": "name",
                "name": "Phar",
                "resolution": "uqn",
              },
            },
            "kind": "entry",
            "unpack": false,
            "value": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'zip'",
              "unicode": false,
              "value": "zip",
            },
          },
        ],
        "kind": "array",
        "shortForm": true,
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "ext",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "sFile",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "unlink",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
