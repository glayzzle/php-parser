// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #75222 DateInterval microseconds property always 0 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "dt1",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'2017-01-01T00:00:00.000000Z'",
              "unicode": false,
              "value": "2017-01-01T00:00:00.000000Z",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "\\\\DateTimeImmutable",
            "resolution": "fqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "dt2",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'2017-01-01T00:00:00.123456Z'",
              "unicode": false,
              "value": "2017-01-01T00:00:00.123456Z",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "\\\\DateTimeImmutable",
            "resolution": "fqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "diff",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "dt2",
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "diff",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "dt1",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "f",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "diff",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'f'",
              "unicode": false,
              "value": "f",
            },
            "what": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "diff",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "get_object_vars",
                "resolution": "uqn",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "f",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "diff",
              },
            },
            "right": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'f'",
                "unicode": false,
                "value": "f",
              },
              "what": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "diff",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "get_object_vars",
                  "resolution": "uqn",
                },
              },
            },
            "type": "===",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
