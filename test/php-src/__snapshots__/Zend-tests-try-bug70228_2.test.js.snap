// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #70228 (memleak if return in finally block) 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          Try {
            "always": Block {
              "children": Array [
                Try {
                  "always": Block {
                    "children": Array [
                      Return {
                        "expr": Number {
                          "kind": "number",
                          "value": "42",
                        },
                        "kind": "return",
                      },
                    ],
                    "kind": "block",
                  },
                  "body": Block {
                    "children": Array [
                      Throw {
                        "kind": "throw",
                        "what": New {
                          "arguments": Array [
                            Number {
                              "kind": "number",
                              "value": "2",
                            },
                          ],
                          "kind": "new",
                          "what": Name {
                            "kind": "name",
                            "name": "Exception",
                            "resolution": "uqn",
                          },
                        },
                      },
                    ],
                    "kind": "block",
                  },
                  "catches": Array [],
                  "kind": "try",
                },
              ],
              "kind": "block",
            },
            "body": Block {
              "children": Array [
                Throw {
                  "kind": "throw",
                  "what": New {
                    "arguments": Array [
                      Number {
                        "kind": "number",
                        "value": "1",
                      },
                    ],
                    "kind": "new",
                    "what": Name {
                      "kind": "name",
                      "name": "Exception",
                      "resolution": "uqn",
                    },
                  },
                },
              ],
              "kind": "block",
            },
            "catches": Array [],
            "kind": "try",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "test",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "test",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
