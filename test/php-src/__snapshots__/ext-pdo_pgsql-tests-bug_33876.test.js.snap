// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests PDO PgSQL Bug #33876 (PDO misquotes/miscasts bool(false)) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": true,
        "target": Bin {
          "kind": "bin",
          "left": Magic {
            "kind": "magic",
            "raw": "__DIR__",
            "value": "__DIR__",
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'/../../../ext/pdo/tests/pdo_test.inc'",
            "unicode": false,
            "value": "/../../../ext/pdo/tests/pdo_test.inc",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "db",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Bin {
              "kind": "bin",
              "left": Magic {
                "kind": "magic",
                "raw": "__DIR__",
                "value": "__DIR__",
              },
              "right": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/common.phpt'",
                "unicode": false,
                "value": "/common.phpt",
              },
              "type": ".",
            },
          ],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "test_factory",
            },
            "what": Name {
              "kind": "name",
              "name": "PDOTest",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "ATTR_ERRMODE",
            },
            "what": Name {
              "kind": "name",
              "name": "PDO",
              "resolution": "uqn",
            },
          },
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "ERRMODE_SILENT",
            },
            "what": Name {
              "kind": "name",
              "name": "PDO",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "setAttribute",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"SET LC_MESSAGES='C'\\"",
            "unicode": false,
            "value": "SET LC_MESSAGES='C'",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "exec",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'CREATE TABLE test (foo varchar(5) NOT NULL, bar bool NOT NULL)'",
            "unicode": false,
            "value": "CREATE TABLE test (foo varchar(5) NOT NULL, bar bool NOT NULL)",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "exec",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"INSERT INTO test VALUES('false','f')\\"",
            "unicode": false,
            "value": "INSERT INTO test VALUES('false','f')",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "exec",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"INSERT INTO test VALUES('true', 't')\\"",
            "unicode": false,
            "value": "INSERT INTO test VALUES('true', 't')",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "exec",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'SELECT foo from test where bar = ?'",
              "unicode": false,
              "value": "SELECT foo from test where bar = ?",
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "prepare",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "1",
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "PARAM_BOOL",
            },
            "what": Name {
              "kind": "name",
              "name": "PDO",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "bindValue",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "res",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            Call {
              "arguments": Array [
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "FETCH_ASSOC",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "fetchAll",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "res",
                },
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "print_r",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "errorInfo",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "res",
                },
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "print_r",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "execute",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "res",
            },
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "1",
          },
          Boolean {
            "kind": "boolean",
            "raw": "true",
            "value": true,
          },
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "PARAM_BOOL",
            },
            "what": Name {
              "kind": "name",
              "name": "PDO",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "bindValue",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "res",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            Call {
              "arguments": Array [
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "FETCH_ASSOC",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "fetchAll",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "res",
                },
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "print_r",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "errorInfo",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "res",
                },
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "print_r",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "execute",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "res",
            },
          },
        },
      },
    },
    If {
      "alternate": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            Call {
              "arguments": Array [
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "FETCH_ASSOC",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "fetchAll",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "res",
                },
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "print_r",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "errorInfo",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "res",
                },
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "print_r",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            Array {
              "items": Array [
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": Boolean {
                    "kind": "boolean",
                    "raw": "true",
                    "value": true,
                  },
                },
              ],
              "kind": "array",
              "shortForm": false,
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "execute",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "res",
            },
          },
        },
      },
    },
    If {
      "alternate": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            Call {
              "arguments": Array [
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "FETCH_ASSOC",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "fetchAll",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "res",
                },
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "print_r",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            Call {
              "arguments": Array [
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "errorInfo",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "res",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "normalizeErrorInfo",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "print_r",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            Array {
              "items": Array [
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                },
              ],
              "kind": "array",
              "shortForm": false,
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "execute",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "res",
            },
          },
        },
      },
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"EMUL\\\\n\\"",
          "unicode": false,
          "value": "EMUL
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "res",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'SELECT foo from test where bar = ?'",
              "unicode": false,
              "value": "SELECT foo from test where bar = ?",
            },
            Array {
              "items": Array [
                Entry {
                  "byRef": false,
                  "key": StaticLookup {
                    "kind": "staticlookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "ATTR_EMULATE_PREPARES",
                    },
                    "what": Name {
                      "kind": "name",
                      "name": "PDO",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "entry",
                  "unpack": false,
                  "value": Boolean {
                    "kind": "boolean",
                    "raw": "true",
                    "value": true,
                  },
                },
              ],
              "kind": "array",
              "shortForm": false,
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "prepare",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "db",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "1",
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "PARAM_BOOL",
            },
            "what": Name {
              "kind": "name",
              "name": "PDO",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "bindValue",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "res",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            Call {
              "arguments": Array [
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "FETCH_ASSOC",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "fetchAll",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "res",
                },
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "print_r",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "errorInfo",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "res",
                },
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "print_r",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "execute",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "res",
            },
          },
        },
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Number {
            "kind": "number",
            "value": "1",
          },
          Boolean {
            "kind": "boolean",
            "raw": "true",
            "value": true,
          },
          StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "PARAM_BOOL",
            },
            "what": Name {
              "kind": "name",
              "name": "PDO",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "bindValue",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "res",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            Call {
              "arguments": Array [
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "FETCH_ASSOC",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "fetchAll",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "res",
                },
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "print_r",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "errorInfo",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "res",
                },
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "print_r",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "execute",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "res",
            },
          },
        },
      },
    },
    If {
      "alternate": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            Call {
              "arguments": Array [
                StaticLookup {
                  "kind": "staticlookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "FETCH_ASSOC",
                  },
                  "what": Name {
                    "kind": "name",
                    "name": "PDO",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "fetchAll",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "res",
                },
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "print_r",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "body": ExpressionStatement {
        "expression": Call {
          "arguments": Array [
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "errorInfo",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "res",
                },
              },
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "print_r",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            Array {
              "items": Array [
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": Boolean {
                    "kind": "boolean",
                    "raw": "true",
                    "value": true,
                  },
                },
              ],
              "kind": "array",
              "shortForm": false,
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "execute",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "res",
            },
          },
        },
      },
    },
    If {
      "alternate": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [
                    StaticLookup {
                      "kind": "staticlookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "FETCH_ASSOC",
                      },
                      "what": Name {
                        "kind": "name",
                        "name": "PDO",
                        "resolution": "uqn",
                      },
                    },
                  ],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "fetchAll",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "res",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "print_r",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [
                    Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "errorInfo",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "res",
                        },
                      },
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "normalizeErrorInfo",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "print_r",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            Array {
              "items": Array [
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": Boolean {
                    "kind": "boolean",
                    "raw": "false",
                    "value": false,
                  },
                },
              ],
              "kind": "array",
              "shortForm": false,
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "execute",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "res",
            },
          },
        },
      },
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "err",
          },
          "nullable": false,
          "readonly": false,
          "type": TypeReference {
            "kind": "typereference",
            "name": "array",
            "raw": "array",
          },
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": OffsetLookup {
                "kind": "offsetlookup",
                "offset": Number {
                  "kind": "number",
                  "value": "2",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "err",
                },
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Call {
                    "arguments": Array [
                      Call {
                        "arguments": Array [
                          String {
                            "isDoubleQuote": true,
                            "kind": "string",
                            "raw": "\\"\\\\n\\"",
                            "unicode": false,
                            "value": "
",
                          },
                          OffsetLookup {
                            "kind": "offsetlookup",
                            "offset": Number {
                              "kind": "number",
                              "value": "2",
                            },
                            "what": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "err",
                            },
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "explode",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "current",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "trim",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          Return {
            "expr": Variable {
              "curly": false,
              "kind": "variable",
              "name": "err",
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "normalizeErrorInfo",
      },
      "nullable": false,
      "type": TypeReference {
        "kind": "typereference",
        "name": "array",
        "raw": "array",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
