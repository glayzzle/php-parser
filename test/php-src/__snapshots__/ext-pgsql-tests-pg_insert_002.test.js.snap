// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests PostgreSQL pg_insert() - test for CVE-2015-1532 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": false,
        "target": String {
          "isDoubleQuote": false,
          "kind": "string",
          "parenthesizedExpression": true,
          "raw": "'config.inc'",
          "unicode": false,
          "value": "config.inc",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "conn",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "conn_str",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "pg_connect",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          Try {
            "always": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Call {
                        "arguments": Array [
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "conn",
                          },
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "table",
                          },
                          Array {
                            "items": Array [
                              Entry {
                                "byRef": false,
                                "key": String {
                                  "isDoubleQuote": false,
                                  "kind": "string",
                                  "raw": "'id'",
                                  "unicode": false,
                                  "value": "id",
                                },
                                "kind": "entry",
                                "unpack": false,
                                "value": Number {
                                  "kind": "number",
                                  "value": "1",
                                },
                              },
                              Entry {
                                "byRef": false,
                                "key": String {
                                  "isDoubleQuote": false,
                                  "kind": "string",
                                  "raw": "'id2'",
                                  "unicode": false,
                                  "value": "id2",
                                },
                                "kind": "entry",
                                "unpack": false,
                                "value": Number {
                                  "kind": "number",
                                  "value": "1",
                                },
                              },
                            ],
                            "kind": "array",
                            "shortForm": false,
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "pg_insert",
                          "resolution": "uqn",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "catches": Array [
              Catch {
                "body": Block {
                  "children": Array [
                    Echo {
                      "expressions": Array [
                        Bin {
                          "kind": "bin",
                          "left": Call {
                            "arguments": Array [],
                            "kind": "call",
                            "what": PropertyLookup {
                              "kind": "propertylookup",
                              "offset": Identifier {
                                "kind": "identifier",
                                "name": "getMessage",
                              },
                              "what": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "e",
                              },
                            },
                          },
                          "right": Name {
                            "kind": "name",
                            "name": "\\\\PHP_EOL",
                            "resolution": "fqn",
                          },
                          "type": ".",
                        },
                      ],
                      "kind": "echo",
                      "shortForm": false,
                    },
                  ],
                  "kind": "block",
                },
                "kind": "catch",
                "variable": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "e",
                },
                "what": Array [
                  Name {
                    "kind": "name",
                    "name": "\\\\ValueError",
                    "resolution": "fqn",
                  },
                ],
              },
            ],
            "kind": "try",
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Array {
        "items": Array [
          Entry {
            "byRef": false,
            "key": null,
            "kind": "entry",
            "unpack": false,
            "value": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "''",
              "unicode": false,
              "value": "",
            },
          },
          Entry {
            "byRef": false,
            "key": null,
            "kind": "entry",
            "unpack": false,
            "value": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'.'",
              "unicode": false,
              "value": ".",
            },
          },
          Entry {
            "byRef": false,
            "key": null,
            "kind": "entry",
            "unpack": false,
            "value": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'..'",
              "unicode": false,
              "value": "..",
            },
          },
        ],
        "kind": "array",
        "shortForm": false,
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "table",
      },
    },
    Inline {
      "kind": "inline",
      "raw": "
Done",
      "value": "Done",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
