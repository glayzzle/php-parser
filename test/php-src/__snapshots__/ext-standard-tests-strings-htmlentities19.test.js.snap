// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests htmlentities() / htmlspecialchars() ENT_SUBSTITUTE 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "tests",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\x41\\\\xC2\\\\x3E\\\\x42\\"",
                "unicode": false,
                "value": "AÂ>B",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\xE3\\\\x80\\\\x22\\"",
                "unicode": false,
                "value": "ã\\"",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"\\\\x41\\\\x98\\\\xBA\\\\x42\\\\xE2\\\\x98\\\\x43\\\\xE2\\\\x98\\\\xBA\\\\xE2\\\\x98\\"",
                "unicode": false,
                "value": "AºBâCâºâ",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "a",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "test",
                  },
                  Bin {
                    "kind": "bin",
                    "left": Name {
                      "kind": "name",
                      "name": "ENT_QUOTES",
                      "resolution": "uqn",
                    },
                    "right": Name {
                      "kind": "name",
                      "name": "ENT_SUBSTITUTE",
                      "resolution": "uqn",
                    },
                    "type": "|",
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"UTF-8\\"",
                    "unicode": false,
                    "value": "UTF-8",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "htmlentities",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "a",
                },
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "a",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "bin2hex",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "a",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "test",
                  },
                  Bin {
                    "kind": "bin",
                    "left": Name {
                      "kind": "name",
                      "name": "ENT_QUOTES",
                      "resolution": "uqn",
                    },
                    "right": Name {
                      "kind": "name",
                      "name": "ENT_SUBSTITUTE",
                      "resolution": "uqn",
                    },
                    "type": "|",
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"UTF-8\\"",
                    "unicode": false,
                    "value": "UTF-8",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "htmlspecialchars",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "a",
                },
                Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "a",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "bin2hex",
                    "resolution": "uqn",
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "tests",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "test",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
