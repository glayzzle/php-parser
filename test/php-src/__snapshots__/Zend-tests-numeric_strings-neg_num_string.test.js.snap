// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test edge-cases for negative num strings in interpolated string offsets 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"0\\"",
                "unicode": false,
                "value": "0",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "1",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"-0\\"",
                "unicode": false,
                "value": "-0",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "2",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"1\\"",
                "unicode": false,
                "value": "1",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "3",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"-1\\"",
                "unicode": false,
                "value": "-1",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "4",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"0x0\\"",
                "unicode": false,
                "value": "0x0",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "5",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"-0x0\\"",
                "unicode": false,
                "value": "-0x0",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "6",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"00\\"",
                "unicode": false,
                "value": "00",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "7",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"-00\\"",
                "unicode": false,
                "value": "-00",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "8",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"9223372036854775808\\"",
                "unicode": false,
                "value": "9223372036854775808",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "9",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"-9223372036854775808\\"",
                "unicode": false,
                "value": "-9223372036854775808",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "10",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"2147483648\\"",
                "unicode": false,
                "value": "2147483648",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "11",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"-2147483648\\"",
                "unicode": false,
                "value": "-2147483648",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "12",
              },
            },
          ],
          "kind": "array",
          "shortForm": true,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Encapsed {
            "kind": "encapsed",
            "raw": "\\"$a[0]\\"",
            "type": "string",
            "value": Array [
              EncapsedPart {
                "curly": false,
                "expression": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": Number {
                    "kind": "number",
                    "value": "0",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "a",
                  },
                },
                "kind": "encapsedpart",
                "syntax": "simple",
              },
            ],
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Encapsed {
            "kind": "encapsed",
            "raw": "\\"$a[-0]\\"",
            "type": "string",
            "value": Array [
              EncapsedPart {
                "curly": false,
                "expression": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": Number {
                    "kind": "number",
                    "value": -0,
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "a",
                  },
                },
                "kind": "encapsedpart",
                "syntax": "simple",
              },
            ],
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Encapsed {
            "kind": "encapsed",
            "raw": "\\"$a[1]\\"",
            "type": "string",
            "value": Array [
              EncapsedPart {
                "curly": false,
                "expression": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": Number {
                    "kind": "number",
                    "value": "1",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "a",
                  },
                },
                "kind": "encapsedpart",
                "syntax": "simple",
              },
            ],
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Encapsed {
            "kind": "encapsed",
            "raw": "\\"$a[-1]\\"",
            "type": "string",
            "value": Array [
              EncapsedPart {
                "curly": false,
                "expression": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": Number {
                    "kind": "number",
                    "value": -1,
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "a",
                  },
                },
                "kind": "encapsedpart",
                "syntax": "simple",
              },
            ],
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Encapsed {
            "kind": "encapsed",
            "raw": "\\"$a[0x0]\\"",
            "type": "string",
            "value": Array [
              EncapsedPart {
                "curly": false,
                "expression": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": Number {
                    "kind": "number",
                    "value": "0x0",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "a",
                  },
                },
                "kind": "encapsedpart",
                "syntax": "simple",
              },
            ],
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Encapsed {
            "kind": "encapsed",
            "raw": "\\"$a[-0x0]\\"",
            "type": "string",
            "value": Array [
              EncapsedPart {
                "curly": false,
                "expression": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": Number {
                    "kind": "number",
                    "value": -0,
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "a",
                  },
                },
                "kind": "encapsedpart",
                "syntax": "simple",
              },
            ],
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Encapsed {
            "kind": "encapsed",
            "raw": "\\"$a[00]\\"",
            "type": "string",
            "value": Array [
              EncapsedPart {
                "curly": false,
                "expression": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": Number {
                    "kind": "number",
                    "value": "00",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "a",
                  },
                },
                "kind": "encapsedpart",
                "syntax": "simple",
              },
            ],
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Encapsed {
            "kind": "encapsed",
            "raw": "\\"$a[-00]\\"",
            "type": "string",
            "value": Array [
              EncapsedPart {
                "curly": false,
                "expression": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": Number {
                    "kind": "number",
                    "value": -0,
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "a",
                  },
                },
                "kind": "encapsedpart",
                "syntax": "simple",
              },
            ],
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Encapsed {
            "kind": "encapsed",
            "raw": "\\"$a[9223372036854775808]\\"",
            "type": "string",
            "value": Array [
              EncapsedPart {
                "curly": false,
                "expression": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": Number {
                    "kind": "number",
                    "value": "9223372036854775808",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "a",
                  },
                },
                "kind": "encapsedpart",
                "syntax": "simple",
              },
            ],
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Encapsed {
            "kind": "encapsed",
            "raw": "\\"$a[-9223372036854775808]\\"",
            "type": "string",
            "value": Array [
              EncapsedPart {
                "curly": false,
                "expression": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": Number {
                    "kind": "number",
                    "value": -9223372036854776000,
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "a",
                  },
                },
                "kind": "encapsedpart",
                "syntax": "simple",
              },
            ],
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Encapsed {
            "kind": "encapsed",
            "raw": "\\"$a[2147483648]\\"",
            "type": "string",
            "value": Array [
              EncapsedPart {
                "curly": false,
                "expression": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": Number {
                    "kind": "number",
                    "value": "2147483648",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "a",
                  },
                },
                "kind": "encapsedpart",
                "syntax": "simple",
              },
            ],
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Encapsed {
            "kind": "encapsed",
            "raw": "\\"$a[-2147483648]\\"",
            "type": "string",
            "value": Array [
              EncapsedPart {
                "curly": false,
                "expression": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": Number {
                    "kind": "number",
                    "value": -2147483648,
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "a",
                  },
                },
                "kind": "encapsedpart",
                "syntax": "simple",
              },
            ],
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
