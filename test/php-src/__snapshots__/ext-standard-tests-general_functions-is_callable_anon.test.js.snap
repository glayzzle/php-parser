// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test is_callable() function : usage variations - anonymous class method 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": New {
        "arguments": Array [],
        "kind": "new",
        "what": Class {
          "attrGroups": Array [],
          "body": Array [
            Method {
              "arguments": Array [],
              "attrGroups": Array [],
              "body": Block {
                "children": Array [
                  ExpressionStatement {
                    "expression": Assign {
                      "kind": "assign",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "fname",
                      },
                      "operator": "=",
                      "right": NullKeyword {
                        "kind": "nullkeyword",
                        "raw": "null",
                      },
                    },
                    "kind": "expressionstatement",
                  },
                  If {
                    "alternate": Block {
                      "children": Array [
                        Echo {
                          "expressions": Array [
                            String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"dang\\\\n\\"",
                              "unicode": false,
                              "value": "dang
",
                            },
                          ],
                          "kind": "echo",
                          "shortForm": false,
                        },
                      ],
                      "kind": "block",
                    },
                    "body": Block {
                      "children": Array [
                        ExpressionStatement {
                          "expression": Call {
                            "arguments": Array [
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "fname",
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "call_user_func",
                              "resolution": "uqn",
                            },
                          },
                          "kind": "expressionstatement",
                        },
                      ],
                      "kind": "block",
                    },
                    "kind": "if",
                    "shortForm": false,
                    "test": Call {
                      "arguments": Array [
                        Array {
                          "items": Array [
                            Entry {
                              "byRef": false,
                              "key": null,
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "this",
                              },
                            },
                            Entry {
                              "byRef": false,
                              "key": null,
                              "kind": "entry",
                              "unpack": false,
                              "value": String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'f'",
                                "unicode": false,
                                "value": "f",
                              },
                            },
                          ],
                          "kind": "array",
                          "shortForm": true,
                        },
                        Boolean {
                          "kind": "boolean",
                          "raw": "false",
                          "value": false,
                        },
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "fname",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "is_callable",
                        "resolution": "uqn",
                      },
                    },
                  },
                ],
                "kind": "block",
              },
              "byref": false,
              "isAbstract": false,
              "isFinal": false,
              "isStatic": false,
              "kind": "method",
              "name": Identifier {
                "kind": "identifier",
                "name": "__construct",
              },
              "nullable": false,
              "type": null,
              "visibility": "",
            },
            Method {
              "arguments": Array [],
              "attrGroups": Array [],
              "body": Block {
                "children": Array [
                  Echo {
                    "expressions": Array [
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"nice\\\\n\\"",
                        "unicode": false,
                        "value": "nice
",
                      },
                    ],
                    "kind": "echo",
                    "shortForm": false,
                  },
                ],
                "kind": "block",
              },
              "byref": false,
              "isAbstract": false,
              "isFinal": false,
              "isStatic": false,
              "kind": "method",
              "name": Identifier {
                "kind": "identifier",
                "name": "f",
              },
              "nullable": false,
              "type": null,
              "visibility": "",
            },
          ],
          "extends": null,
          "implements": null,
          "isAbstract": false,
          "isAnonymous": true,
          "isFinal": false,
          "kind": "class",
          "name": null,
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
