// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Fiber::getReturn() after bailout 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Closure {
            "arguments": Array [],
            "attrGroups": Array [],
            "body": Block {
              "children": Array [
                Global {
                  "items": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "fiber",
                    },
                  ],
                  "kind": "global",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Call {
                        "arguments": Array [],
                        "kind": "call",
                        "what": PropertyLookup {
                          "kind": "propertylookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "getReturn",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "fiber",
                          },
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "byref": false,
            "isStatic": true,
            "kind": "closure",
            "nullable": false,
            "type": TypeReference {
              "kind": "typereference",
              "name": "void",
              "raw": "void",
            },
            "uses": Array [],
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "register_shutdown_function",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "fiber",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            Closure {
              "arguments": Array [],
              "attrGroups": Array [],
              "body": Block {
                "children": Array [
                  ExpressionStatement {
                    "expression": Call {
                      "arguments": Array [
                        String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'X'",
                          "unicode": false,
                          "value": "X",
                        },
                        Name {
                          "kind": "name",
                          "name": "PHP_INT_MAX",
                          "resolution": "uqn",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "str_repeat",
                        "resolution": "uqn",
                      },
                    },
                    "kind": "expressionstatement",
                  },
                ],
                "kind": "block",
              },
              "byref": false,
              "isStatic": true,
              "kind": "closure",
              "nullable": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "void",
                "raw": "void",
              },
              "uses": Array [],
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "Fiber",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "start",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "fiber",
          },
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
