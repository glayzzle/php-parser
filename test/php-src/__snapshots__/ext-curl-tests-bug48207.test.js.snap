// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test curl_setopt() CURLOPT_FILE readonly file handle 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": false,
        "target": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'server.inc'",
          "unicode": false,
          "value": "server.inc",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "host",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "curl_cli_server_start",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    If {
      "alternate": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "tempname",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Call {
                    "arguments": Array [],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "sys_get_temp_dir",
                      "resolution": "uqn",
                    },
                  },
                  String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'CURL_HANDLE'",
                    "unicode": false,
                    "value": "CURL_HANDLE",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "tempnam",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "url",
              },
              "operator": "=",
              "right": Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'file://'",
                  "unicode": false,
                  "value": "file://",
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "tempname",
                },
                "type": ".",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "tempname",
                },
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "raw": "\\"Hello World!\\\\nHello World!\\"",
                  "unicode": false,
                  "value": "Hello World!
Hello World!",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "file_put_contents",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "url",
              },
              "operator": "=",
              "right": Encapsed {
                "kind": "encapsed",
                "raw": "\\"$host/get.inc?test=1\\"",
                "type": "string",
                "value": Array [
                  EncapsedPart {
                    "curly": false,
                    "expression": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "host",
                    },
                    "kind": "encapsedpart",
                    "syntax": "simple",
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "/get.inc?test=1",
                      "unicode": false,
                      "value": "/get.inc?test=1",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                ],
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Empty {
          "expression": Variable {
            "curly": false,
            "kind": "variable",
            "name": "host",
          },
          "kind": "empty",
        },
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "tempfile",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Call {
              "arguments": Array [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "sys_get_temp_dir",
                "resolution": "uqn",
              },
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'CURL_FILE_HANDLE'",
              "unicode": false,
              "value": "CURL_FILE_HANDLE",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "tempnam",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "fp",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "tempfile",
            },
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"r\\"",
              "unicode": false,
              "value": "r",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "fopen",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "ch",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "url",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "curl_init",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "ch",
                },
                Name {
                  "kind": "name",
                  "name": "CURLOPT_FILE",
                  "resolution": "uqn",
                },
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "fp",
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "curl_setopt",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "getMessage",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "exception",
                        },
                      },
                    },
                    "right": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"\\\\n\\"",
                      "unicode": false,
                      "value": "
",
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "exception",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "ValueError",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "ch",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "curl_exec",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "ch",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "curl_close",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Bin {
        "kind": "bin",
        "left": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "tempfile",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "is_file",
            "resolution": "uqn",
          },
        },
        "right": Silent {
          "expr": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "tempfile",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "unlink",
              "resolution": "uqn",
            },
          },
          "kind": "silent",
        },
        "type": "and",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Bin {
        "kind": "bin",
        "left": Bin {
          "kind": "bin",
          "left": Isset {
            "kind": "isset",
            "variables": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "tempname",
              },
            ],
          },
          "right": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "tempname",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "is_file",
              "resolution": "uqn",
            },
          },
          "type": "and",
        },
        "right": Silent {
          "expr": Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "tempname",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "unlink",
              "resolution": "uqn",
            },
          },
          "kind": "silent",
        },
        "type": "and",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
