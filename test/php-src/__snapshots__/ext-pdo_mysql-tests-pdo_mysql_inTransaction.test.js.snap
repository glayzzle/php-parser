// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests MySQL PDO class inTransaction 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": true,
        "target": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Magic {
              "kind": "magic",
              "raw": "__DIR__",
              "value": "__DIR__",
            },
            "right": Name {
              "kind": "name",
              "name": "DIRECTORY_SEPARATOR",
              "resolution": "uqn",
            },
            "type": ".",
          },
          "parenthesizedExpression": true,
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'mysql_pdo_test.inc'",
            "unicode": false,
            "value": "mysql_pdo_test.inc",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ConstantStatement {
      "constants": Array [
        Constant {
          "kind": "constant",
          "name": Identifier {
            "kind": "identifier",
            "name": "BEGIN",
          },
          "value": Array {
            "items": Array [
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'BEGIN'",
                  "unicode": false,
                  "value": "BEGIN",
                },
              },
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'START TRANSACTION'",
                  "unicode": false,
                  "value": "START TRANSACTION",
                },
              },
            ],
            "kind": "array",
            "shortForm": true,
          },
        },
      ],
      "kind": "constantstatement",
    },
    ConstantStatement {
      "constants": Array [
        Constant {
          "kind": "constant",
          "name": Identifier {
            "kind": "identifier",
            "name": "END",
          },
          "value": Array {
            "items": Array [
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'COMMIT'",
                  "unicode": false,
                  "value": "COMMIT",
                },
              },
              Entry {
                "byRef": false,
                "key": null,
                "kind": "entry",
                "unpack": false,
                "value": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'ROLLBACK'",
                  "unicode": false,
                  "value": "ROLLBACK",
                },
              },
            ],
            "kind": "array",
            "shortForm": true,
          },
        },
      ],
      "kind": "constantstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "db",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": StaticLookup {
            "kind": "staticlookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "factory",
            },
            "what": Name {
              "kind": "name",
              "name": "MySQLPDOTest",
              "resolution": "uqn",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [
          Foreach {
            "body": Block {
              "children": Array [
                Foreach {
                  "body": Block {
                    "children": Array [
                      Foreach {
                        "body": Block {
                          "children": Array [
                            Switch {
                              "body": Block {
                                "children": Array [
                                  Case {
                                    "body": Block {
                                      "children": Array [
                                        ExpressionStatement {
                                          "expression": Call {
                                            "arguments": Array [
                                              Variable {
                                                "curly": false,
                                                "kind": "variable",
                                                "name": "command",
                                              },
                                            ],
                                            "kind": "call",
                                            "what": PropertyLookup {
                                              "kind": "propertylookup",
                                              "offset": Identifier {
                                                "kind": "identifier",
                                                "name": "exec",
                                              },
                                              "what": Variable {
                                                "curly": false,
                                                "kind": "variable",
                                                "name": "db",
                                              },
                                            },
                                          },
                                          "kind": "expressionstatement",
                                        },
                                        Break {
                                          "kind": "break",
                                          "level": null,
                                        },
                                      ],
                                      "kind": "block",
                                    },
                                    "kind": "case",
                                    "test": String {
                                      "isDoubleQuote": false,
                                      "kind": "string",
                                      "raw": "'exec'",
                                      "unicode": false,
                                      "value": "exec",
                                    },
                                  },
                                  Case {
                                    "body": Block {
                                      "children": Array [
                                        ExpressionStatement {
                                          "expression": Call {
                                            "arguments": Array [],
                                            "kind": "call",
                                            "what": PropertyLookup {
                                              "kind": "propertylookup",
                                              "offset": Identifier {
                                                "kind": "identifier",
                                                "name": "execute",
                                              },
                                              "what": Call {
                                                "arguments": Array [
                                                  Variable {
                                                    "curly": false,
                                                    "kind": "variable",
                                                    "name": "command",
                                                  },
                                                ],
                                                "kind": "call",
                                                "what": PropertyLookup {
                                                  "kind": "propertylookup",
                                                  "offset": Identifier {
                                                    "kind": "identifier",
                                                    "name": "query",
                                                  },
                                                  "what": Variable {
                                                    "curly": false,
                                                    "kind": "variable",
                                                    "name": "db",
                                                  },
                                                },
                                              },
                                            },
                                          },
                                          "kind": "expressionstatement",
                                        },
                                        Break {
                                          "kind": "break",
                                          "level": null,
                                        },
                                      ],
                                      "kind": "block",
                                    },
                                    "kind": "case",
                                    "test": String {
                                      "isDoubleQuote": false,
                                      "kind": "string",
                                      "raw": "'query'",
                                      "unicode": false,
                                      "value": "query",
                                    },
                                  },
                                  Case {
                                    "body": Block {
                                      "children": Array [
                                        ExpressionStatement {
                                          "expression": Call {
                                            "arguments": Array [],
                                            "kind": "call",
                                            "what": PropertyLookup {
                                              "kind": "propertylookup",
                                              "offset": Identifier {
                                                "kind": "identifier",
                                                "name": "execute",
                                              },
                                              "what": Call {
                                                "arguments": Array [
                                                  Variable {
                                                    "curly": false,
                                                    "kind": "variable",
                                                    "name": "command",
                                                  },
                                                ],
                                                "kind": "call",
                                                "what": PropertyLookup {
                                                  "kind": "propertylookup",
                                                  "offset": Identifier {
                                                    "kind": "identifier",
                                                    "name": "prepare",
                                                  },
                                                  "what": Variable {
                                                    "curly": false,
                                                    "kind": "variable",
                                                    "name": "db",
                                                  },
                                                },
                                              },
                                            },
                                          },
                                          "kind": "expressionstatement",
                                        },
                                        Break {
                                          "kind": "break",
                                          "level": null,
                                        },
                                      ],
                                      "kind": "block",
                                    },
                                    "kind": "case",
                                    "test": String {
                                      "isDoubleQuote": false,
                                      "kind": "string",
                                      "raw": "'execute'",
                                      "unicode": false,
                                      "value": "execute",
                                    },
                                  },
                                  Case {
                                    "body": Block {
                                      "children": Array [
                                        ExpressionStatement {
                                          "expression": Call {
                                            "arguments": Array [
                                              Number {
                                                "kind": "number",
                                                "value": "0",
                                              },
                                            ],
                                            "kind": "call",
                                            "what": Name {
                                              "kind": "name",
                                              "name": "assert",
                                              "resolution": "uqn",
                                            },
                                          },
                                          "kind": "expressionstatement",
                                        },
                                      ],
                                      "kind": "block",
                                    },
                                    "kind": "case",
                                    "test": null,
                                  },
                                ],
                                "kind": "block",
                              },
                              "kind": "switch",
                              "shortForm": false,
                              "test": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "w",
                              },
                            },
                            ExpressionStatement {
                              "expression": Call {
                                "arguments": Array [
                                  Call {
                                    "arguments": Array [],
                                    "kind": "call",
                                    "what": PropertyLookup {
                                      "kind": "propertylookup",
                                      "offset": Identifier {
                                        "kind": "identifier",
                                        "name": "inTransaction",
                                      },
                                      "what": Variable {
                                        "curly": false,
                                        "kind": "variable",
                                        "name": "db",
                                      },
                                    },
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "var_dump",
                                  "resolution": "uqn",
                                },
                              },
                              "kind": "expressionstatement",
                            },
                          ],
                          "kind": "block",
                        },
                        "key": null,
                        "kind": "foreach",
                        "shortForm": false,
                        "source": Array {
                          "items": Array [
                            Entry {
                              "byRef": false,
                              "key": null,
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "begin",
                              },
                            },
                            Entry {
                              "byRef": false,
                              "key": null,
                              "kind": "entry",
                              "unpack": false,
                              "value": Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "end",
                              },
                            },
                          ],
                          "kind": "array",
                          "shortForm": true,
                        },
                        "value": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "command",
                        },
                      },
                    ],
                    "kind": "block",
                  },
                  "key": null,
                  "kind": "foreach",
                  "shortForm": false,
                  "source": Array {
                    "items": Array [
                      Entry {
                        "byRef": false,
                        "key": null,
                        "kind": "entry",
                        "unpack": false,
                        "value": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'exec'",
                          "unicode": false,
                          "value": "exec",
                        },
                      },
                      Entry {
                        "byRef": false,
                        "key": null,
                        "kind": "entry",
                        "unpack": false,
                        "value": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'query'",
                          "unicode": false,
                          "value": "query",
                        },
                      },
                      Entry {
                        "byRef": false,
                        "key": null,
                        "kind": "entry",
                        "unpack": false,
                        "value": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'execute'",
                          "unicode": false,
                          "value": "execute",
                        },
                      },
                    ],
                    "kind": "array",
                    "shortForm": true,
                  },
                  "value": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "w",
                  },
                },
              ],
              "kind": "block",
            },
            "key": null,
            "kind": "foreach",
            "shortForm": false,
            "source": Name {
              "kind": "name",
              "name": "END",
              "resolution": "uqn",
            },
            "value": Variable {
              "curly": false,
              "kind": "variable",
              "name": "end",
            },
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Name {
        "kind": "name",
        "name": "BEGIN",
        "resolution": "uqn",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "begin",
      },
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Foreach {
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "beginTransaction",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "inTransaction",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "db",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "end",
                },
              ],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "exec",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "db",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [
                Call {
                  "arguments": Array [],
                  "kind": "call",
                  "what": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "inTransaction",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "db",
                    },
                  },
                },
              ],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "var_dump",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Name {
        "kind": "name",
        "name": "END",
        "resolution": "uqn",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "end",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'START TRANSACTION'",
            "unicode": false,
            "value": "START TRANSACTION",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "exec",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "inTransaction",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "db",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "rollBack",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "inTransaction",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "db",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'START TRANSACTION'",
            "unicode": false,
            "value": "START TRANSACTION",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "exec",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "inTransaction",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "db",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "commit",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "inTransaction",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "db",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "beginTransaction",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "inTransaction",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "db",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'DROP TABLE IF EXISTS test'",
            "unicode": false,
            "value": "DROP TABLE IF EXISTS test",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "exec",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "inTransaction",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "db",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "beginTransaction",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "inTransaction",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "db",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "commit",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "db",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "inTransaction",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "db",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
