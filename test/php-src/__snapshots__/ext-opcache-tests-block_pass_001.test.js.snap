// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Block pass: Bugs in BOOL/QM_ASSIGN elision 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Cast {
        "expr": RetIf {
          "falseExpr": Variable {
            "curly": false,
            "kind": "variable",
            "name": "y",
          },
          "kind": "retif",
          "parenthesizedExpression": true,
          "test": Boolean {
            "kind": "boolean",
            "raw": "true",
            "value": true,
          },
          "trueExpr": Variable {
            "curly": false,
            "kind": "variable",
            "name": "x",
          },
        },
        "kind": "cast",
        "raw": "(bool)",
        "type": "bool",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Cast {
        "expr": RetIf {
          "falseExpr": NullKeyword {
            "kind": "nullkeyword",
            "raw": "null",
          },
          "kind": "retif",
          "parenthesizedExpression": true,
          "test": Boolean {
            "kind": "boolean",
            "raw": "true",
            "value": true,
          },
          "trueExpr": New {
            "arguments": Array [],
            "kind": "new",
            "what": Name {
              "kind": "name",
              "name": "stdClass",
              "resolution": "uqn",
            },
          },
        },
        "kind": "cast",
        "raw": "(bool)",
        "type": "bool",
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Cast {
        "expr": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "stdClass",
            "resolution": "uqn",
          },
        },
        "kind": "cast",
        "raw": "(bool)",
        "type": "bool",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
