// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests openssl_csr_get_subject() tests 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "config",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Magic {
              "kind": "magic",
              "raw": "__DIR__",
              "value": "__DIR__",
            },
            "right": Name {
              "kind": "name",
              "name": "DIRECTORY_SEPARATOR",
              "resolution": "uqn",
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'openssl.cnf'",
            "unicode": false,
            "value": "openssl.cnf",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "phex",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": Bin {
              "kind": "bin",
              "left": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'dcf93a0b883972ec0e19989ac5a2ce310e1d37717e8d9571bb7623731866e61e'",
                "unicode": false,
                "value": "dcf93a0b883972ec0e19989ac5a2ce310e1d37717e8d9571bb7623731866e61e",
              },
              "right": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'f75a2e27898b057f9891c2e27a639c3f29b60814581cd3b2ca3986d268370557'",
                "unicode": false,
                "value": "f75a2e27898b057f9891c2e27a639c3f29b60814581cd3b2ca3986d268370557",
              },
              "type": ".",
            },
            "right": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'7d45c2e7e52dc81c7a171876e5cea74b1448bfdfaf18828efd2519f14e45e382'",
              "unicode": false,
              "value": "7d45c2e7e52dc81c7a171876e5cea74b1448bfdfaf18828efd2519f14e45e382",
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'6634af1949e5b535cc829a483b8a76223e5d490a257f05bdff16f2fb22c583ab'",
            "unicode": false,
            "value": "6634af1949e5b535cc829a483b8a76223e5d490a257f05bdff16f2fb22c583ab",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "dh_details",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'p'",
                "unicode": false,
                "value": "p",
              },
              "kind": "entry",
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "name": "phex",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'g'",
                "unicode": false,
                "value": "g",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'2'",
                "unicode": false,
                "value": "2",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "dh",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Array {
              "items": Array [
                Entry {
                  "byRef": false,
                  "key": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'dh'",
                    "unicode": false,
                    "value": "dh",
                  },
                  "kind": "entry",
                  "unpack": false,
                  "value": Array {
                    "items": Array [
                      Entry {
                        "byRef": false,
                        "key": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'p'",
                          "unicode": false,
                          "value": "p",
                        },
                        "kind": "entry",
                        "unpack": false,
                        "value": Call {
                          "arguments": Array [
                            Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "phex",
                            },
                          ],
                          "kind": "call",
                          "what": Name {
                            "kind": "name",
                            "name": "hex2bin",
                            "resolution": "uqn",
                          },
                        },
                      },
                      Entry {
                        "byRef": false,
                        "key": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'g'",
                          "unicode": false,
                          "value": "g",
                        },
                        "kind": "entry",
                        "unpack": false,
                        "value": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'2'",
                          "unicode": false,
                          "value": "2",
                        },
                      },
                    ],
                    "kind": "array",
                    "shortForm": false,
                  },
                },
              ],
              "kind": "array",
              "shortForm": false,
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "openssl_pkey_new",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "dn",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"countryName\\"",
                "unicode": false,
                "value": "countryName",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"BR\\"",
                "unicode": false,
                "value": "BR",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"stateOrProvinceName\\"",
                "unicode": false,
                "value": "stateOrProvinceName",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Rio Grande do Sul\\"",
                "unicode": false,
                "value": "Rio Grande do Sul",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"localityName\\"",
                "unicode": false,
                "value": "localityName",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Porto Alegre\\"",
                "unicode": false,
                "value": "Porto Alegre",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"commonName\\"",
                "unicode": false,
                "value": "commonName",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Henrique do N. Angelo\\"",
                "unicode": false,
                "value": "Henrique do N. Angelo",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"emailAddress\\"",
                "unicode": false,
                "value": "emailAddress",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"hnangelo@php.net\\"",
                "unicode": false,
                "value": "hnangelo@php.net",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "args",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"digest_alg\\"",
                "unicode": false,
                "value": "digest_alg",
              },
              "kind": "entry",
              "unpack": false,
              "value": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"sha1\\"",
                "unicode": false,
                "value": "sha1",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"private_key_bits\\"",
                "unicode": false,
                "value": "private_key_bits",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "2048",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"private_key_type\\"",
                "unicode": false,
                "value": "private_key_type",
              },
              "kind": "entry",
              "unpack": false,
              "value": Name {
                "kind": "name",
                "name": "OPENSSL_KEYTYPE_DSA",
                "resolution": "uqn",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"encrypt_key\\"",
                "unicode": false,
                "value": "encrypt_key",
              },
              "kind": "entry",
              "unpack": false,
              "value": Boolean {
                "kind": "boolean",
                "raw": "true",
                "value": true,
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"config\\"",
                "unicode": false,
                "value": "config",
              },
              "kind": "entry",
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "name": "config",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "privkey_file",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Bin {
            "kind": "bin",
            "left": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'file://'",
              "unicode": false,
              "value": "file://",
            },
            "right": Magic {
              "kind": "magic",
              "raw": "__DIR__",
              "value": "__DIR__",
            },
            "type": ".",
          },
          "right": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'/private_rsa_2048.key'",
            "unicode": false,
            "value": "/private_rsa_2048.key",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "csr",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "dn",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "privkey_file",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "args",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "openssl_csr_new",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "csr_file",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Bin {
              "kind": "bin",
              "left": Magic {
                "kind": "magic",
                "raw": "__DIR__",
                "value": "__DIR__",
              },
              "right": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/cert.csr'",
                "unicode": false,
                "value": "/cert.csr",
              },
              "type": ".",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "file_get_contents",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "csr_file",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "openssl_csr_get_subject",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "csr",
              },
              Boolean {
                "kind": "boolean",
                "raw": "false",
                "value": false,
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "openssl_csr_get_subject",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
