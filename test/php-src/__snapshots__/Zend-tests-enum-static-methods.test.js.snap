// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Enum supports static methods 1`] = `
Program {
  "children": Array [
    Enum {
      "attrGroups": Array [],
      "body": Array [
        EnumCase {
          "kind": "enumcase",
          "name": Identifier {
            "kind": "identifier",
            "name": "Small",
          },
          "value": null,
        },
        EnumCase {
          "kind": "enumcase",
          "name": Identifier {
            "kind": "identifier",
            "name": "Medium",
          },
          "value": null,
        },
        EnumCase {
          "kind": "enumcase",
          "name": Identifier {
            "kind": "identifier",
            "name": "Large",
          },
          "value": null,
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "cm",
              },
              "nullable": false,
              "readonly": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "int",
                "raw": "int",
              },
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Return {
                "expr": Match {
                  "arms": Array [
                    MatchArm {
                      "body": StaticLookup {
                        "kind": "staticlookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "Small",
                        },
                        "what": StaticReference {
                          "kind": "staticreference",
                          "raw": "static",
                        },
                      },
                      "conds": Array [
                        Bin {
                          "kind": "bin",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "cm",
                          },
                          "right": Number {
                            "kind": "number",
                            "value": "50",
                          },
                          "type": "<",
                        },
                      ],
                      "kind": "matcharm",
                    },
                    MatchArm {
                      "body": StaticLookup {
                        "kind": "staticlookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "Medium",
                        },
                        "what": StaticReference {
                          "kind": "staticreference",
                          "raw": "static",
                        },
                      },
                      "conds": Array [
                        Bin {
                          "kind": "bin",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "cm",
                          },
                          "right": Number {
                            "kind": "number",
                            "value": "100",
                          },
                          "type": "<",
                        },
                      ],
                      "kind": "matcharm",
                    },
                    MatchArm {
                      "body": StaticLookup {
                        "kind": "staticlookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "Large",
                        },
                        "what": StaticReference {
                          "kind": "staticreference",
                          "raw": "static",
                        },
                      },
                      "conds": null,
                      "kind": "matcharm",
                    },
                  ],
                  "cond": Boolean {
                    "kind": "boolean",
                    "raw": "true",
                    "value": true,
                  },
                  "kind": "match",
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": true,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "fromLength",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
      ],
      "implements": null,
      "kind": "enum",
      "name": Identifier {
        "kind": "identifier",
        "name": "Size",
      },
      "valueType": null,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Number {
                "kind": "number",
                "value": "23",
              },
            ],
            "kind": "call",
            "what": StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "fromLength",
              },
              "what": Name {
                "kind": "name",
                "name": "Size",
                "resolution": "uqn",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Number {
                "kind": "number",
                "value": "63",
              },
            ],
            "kind": "call",
            "what": StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "fromLength",
              },
              "what": Name {
                "kind": "name",
                "name": "Size",
                "resolution": "uqn",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Number {
                "kind": "number",
                "value": "123",
              },
            ],
            "kind": "call",
            "what": StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "fromLength",
              },
              "what": Name {
                "kind": "name",
                "name": "Size",
                "resolution": "uqn",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
