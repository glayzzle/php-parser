// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #50675 SoapClient can't handle object references correctly. 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [],
      "body": Array [
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "request",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "location",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "action",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "version",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "one_way",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": Number {
                "kind": "number",
                "value": "0",
              },
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Return {
                "expr": Encapsed {
                  "kind": "encapsed",
                  "label": "EOF",
                  "raw": "<<<EOF
<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<soapenv:Envelope
xmlns:soapenv=\\"http://schemas.xmlsoap.org/soap/envelope/\\"
xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\"
xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\">
    <soapenv:Body>
        <soapenv:Fault>
            <faultcode>soapenv:Server.userException</faultcode>
            <faultstring>service.EchoServiceException</faultstring>
            <detail>
                <service.EchoServiceException xsi:type=\\"ns1:EchoServiceException\\" xmlns:ns1=\\"urn:service.EchoService\\">
                    <intParameter xsi:type=\\"xsd:int\\">105</intParameter>
                    <parameter xsi:type=\\"soapenc:string\\" xmlns:soapenc=\\"http://schemas.xmlsoap.org/soap/encoding/\\">string param</parameter>
                </service.EchoServiceException>
                <ns2:hostname xmlns:ns2=\\"http://xml.apache.org/axis/\\">steckovic</ns2:hostname>
            </detail>
        </soapenv:Fault>
    </soapenv:Body>
</soapenv:Envelope>
EOF",
                  "type": "heredoc",
                  "value": Array [
                    EncapsedPart {
                      "curly": false,
                      "expression": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<soapenv:Envelope
xmlns:soapenv=\\"http://schemas.xmlsoap.org/soap/envelope/\\"
xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\"
xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\">
    <soapenv:Body>
        <soapenv:Fault>
            <faultcode>soapenv:Server.userException</faultcode>
            <faultstring>service.EchoServiceException</faultstring>
            <detail>
                <service.EchoServiceException xsi:type=\\"ns1:EchoServiceException\\" xmlns:ns1=\\"urn:service.EchoService\\">
                    <intParameter xsi:type=\\"xsd:int\\">105</intParameter>
                    <parameter xsi:type=\\"soapenc:string\\" xmlns:soapenc=\\"http://schemas.xmlsoap.org/soap/encoding/\\">string param</parameter>
                </service.EchoServiceException>
                <ns2:hostname xmlns:ns2=\\"http://xml.apache.org/axis/\\">steckovic</ns2:hostname>
            </detail>
        </soapenv:Fault>
    </soapenv:Body>
</soapenv:Envelope>
",
                        "unicode": false,
                        "value": "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<soapenv:Envelope
xmlns:soapenv=\\"http://schemas.xmlsoap.org/soap/envelope/\\"
xmlns:xsd=\\"http://www.w3.org/2001/XMLSchema\\"
xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\">
    <soapenv:Body>
        <soapenv:Fault>
            <faultcode>soapenv:Server.userException</faultcode>
            <faultstring>service.EchoServiceException</faultstring>
            <detail>
                <service.EchoServiceException xsi:type=\\"ns1:EchoServiceException\\" xmlns:ns1=\\"urn:service.EchoService\\">
                    <intParameter xsi:type=\\"xsd:int\\">105</intParameter>
                    <parameter xsi:type=\\"soapenc:string\\" xmlns:soapenc=\\"http://schemas.xmlsoap.org/soap/encoding/\\">string param</parameter>
                </service.EchoServiceException>
                <ns2:hostname xmlns:ns2=\\"http://xml.apache.org/axis/\\">steckovic</ns2:hostname>
            </detail>
        </soapenv:Fault>
    </soapenv:Body>
</soapenv:Envelope>",
                      },
                      "kind": "encapsedpart",
                      "syntax": null,
                    },
                  ],
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "__doRequest",
          },
          "nullable": true,
          "type": TypeReference {
            "kind": "typereference",
            "name": "string",
            "raw": "string",
          },
          "visibility": "",
        },
      ],
      "extends": Name {
        "kind": "name",
        "name": "SoapClient",
        "resolution": "uqn",
      },
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "TestSoapClient",
      },
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'soap.wsdl_cache_enabled'",
            "unicode": false,
            "value": "soap.wsdl_cache_enabled",
          },
          Number {
            "kind": "number",
            "value": "0",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "ini_set",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "parameters",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'trace'",
                "unicode": false,
                "value": "trace",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "1",
              },
            },
            Entry {
              "byRef": false,
              "key": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'exceptions'",
                "unicode": false,
                "value": "exceptions",
              },
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "0",
              },
            },
          ],
          "kind": "array",
          "shortForm": true,
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "client",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            Bin {
              "kind": "bin",
              "left": Magic {
                "kind": "magic",
                "raw": "__DIR__",
                "value": "__DIR__",
              },
              "right": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/bug50675.wsdl'",
                "unicode": false,
                "value": "/bug50675.wsdl",
              },
              "type": ".",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "parameters",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "TestSoapClient",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "person",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "stdClass",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "name",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "person",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'name'",
          "unicode": false,
          "value": "name",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "result",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "person",
            },
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "person",
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "echoPerson",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "client",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Call {
          "arguments": Array [],
          "kind": "call",
          "parenthesizedExpression": true,
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "__getLastRequest",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "client",
            },
          },
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
