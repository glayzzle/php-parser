// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #66112 (Use after free condition in SOAP extension) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'WSDL'",
            "unicode": false,
            "value": "WSDL",
          },
          Bin {
            "kind": "bin",
            "left": Magic {
              "kind": "magic",
              "raw": "__DIR__",
              "value": "__DIR__",
            },
            "right": String {
              "isDoubleQuote": true,
              "kind": "string",
              "raw": "\\"/bug66112.wsdl\\"",
              "unicode": false,
              "value": "/bug66112.wsdl",
            },
            "type": ".",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "define",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "p",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "client",
              },
              "operator": "=",
              "right": New {
                "arguments": Array [
                  Name {
                    "kind": "name",
                    "name": "WSDL",
                    "resolution": "uqn",
                  },
                  Array {
                    "items": Array [
                      Entry {
                        "byRef": false,
                        "key": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'typemap'",
                          "unicode": false,
                          "value": "typemap",
                        },
                        "kind": "entry",
                        "unpack": false,
                        "value": Array {
                          "items": Array [
                            Entry {
                              "byRef": false,
                              "key": null,
                              "kind": "entry",
                              "unpack": false,
                              "value": Array {
                                "items": Array [
                                  Entry {
                                    "byRef": false,
                                    "key": String {
                                      "isDoubleQuote": true,
                                      "kind": "string",
                                      "raw": "\\"type_ns\\"",
                                      "unicode": false,
                                      "value": "type_ns",
                                    },
                                    "kind": "entry",
                                    "unpack": false,
                                    "value": String {
                                      "isDoubleQuote": true,
                                      "kind": "string",
                                      "raw": "\\"uri:mist\\"",
                                      "unicode": false,
                                      "value": "uri:mist",
                                    },
                                  },
                                  Entry {
                                    "byRef": false,
                                    "key": String {
                                      "isDoubleQuote": true,
                                      "kind": "string",
                                      "raw": "\\"type_name\\"",
                                      "unicode": false,
                                      "value": "type_name",
                                    },
                                    "kind": "entry",
                                    "unpack": false,
                                    "value": String {
                                      "isDoubleQuote": true,
                                      "kind": "string",
                                      "raw": "\\"A\\"",
                                      "unicode": false,
                                      "value": "A",
                                    },
                                  },
                                ],
                                "kind": "array",
                                "shortForm": false,
                              },
                            },
                          ],
                          "kind": "array",
                          "shortForm": false,
                        },
                      },
                    ],
                    "kind": "array",
                    "shortForm": false,
                  },
                ],
                "kind": "new",
                "what": Name {
                  "kind": "name",
                  "name": "soapclient",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          Try {
            "always": null,
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Array {
                        "items": Array [
                          Entry {
                            "byRef": false,
                            "key": String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"XX\\"",
                              "unicode": false,
                              "value": "XX",
                            },
                            "kind": "entry",
                            "unpack": false,
                            "value": String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"xx\\"",
                              "unicode": false,
                              "value": "xx",
                            },
                          },
                        ],
                        "kind": "array",
                        "shortForm": false,
                      },
                    ],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "Mist",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "client",
                      },
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "catches": Array [
              Catch {
                "body": Block {
                  "children": Array [],
                  "kind": "block",
                },
                "kind": "catch",
                "variable": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "x",
                },
                "what": Array [
                  Name {
                    "kind": "name",
                    "name": "SoapFault",
                    "resolution": "uqn",
                  },
                ],
              },
            ],
            "kind": "try",
          },
          Return {
            "expr": Array {
              "items": Array [
                Entry {
                  "byRef": false,
                  "key": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"A\\"",
                    "unicode": false,
                    "value": "A",
                  },
                  "kind": "entry",
                  "unpack": false,
                  "value": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"ABC\\"",
                    "unicode": false,
                    "value": "ABC",
                  },
                },
                Entry {
                  "byRef": false,
                  "key": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"B\\"",
                    "unicode": false,
                    "value": "B",
                  },
                  "kind": "entry",
                  "unpack": false,
                  "value": String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"sss\\"",
                    "unicode": false,
                    "value": "sss",
                  },
                },
              ],
              "kind": "array",
              "shortForm": false,
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "Mist",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "s",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            Name {
              "kind": "name",
              "name": "WSDL",
              "resolution": "uqn",
            },
            Array {
              "items": Array [
                Entry {
                  "byRef": false,
                  "key": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'typemap'",
                    "unicode": false,
                    "value": "typemap",
                  },
                  "kind": "entry",
                  "unpack": false,
                  "value": Array {
                    "items": Array [
                      Entry {
                        "byRef": false,
                        "key": null,
                        "kind": "entry",
                        "unpack": false,
                        "value": Array {
                          "items": Array [
                            Entry {
                              "byRef": false,
                              "key": String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"type_ns\\"",
                                "unicode": false,
                                "value": "type_ns",
                              },
                              "kind": "entry",
                              "unpack": false,
                              "value": String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"uri:mist\\"",
                                "unicode": false,
                                "value": "uri:mist",
                              },
                            },
                            Entry {
                              "byRef": false,
                              "key": String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"type_name\\"",
                                "unicode": false,
                                "value": "type_name",
                              },
                              "kind": "entry",
                              "unpack": false,
                              "value": String {
                                "isDoubleQuote": true,
                                "kind": "string",
                                "raw": "\\"A\\"",
                                "unicode": false,
                                "value": "A",
                              },
                            },
                          ],
                          "kind": "array",
                          "shortForm": false,
                        },
                      },
                    ],
                    "kind": "array",
                    "shortForm": false,
                  },
                },
              ],
              "kind": "array",
              "shortForm": false,
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "SoapServer",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"Mist\\"",
            "unicode": false,
            "value": "Mist",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "addFunction",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"REQUEST_METHOD\\"",
            "unicode": false,
            "value": "REQUEST_METHOD",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "_SERVER",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"POST\\"",
          "unicode": false,
          "value": "POST",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "HTTP_RAW_POST_DATA",
        },
        "operator": "=",
        "right": Encapsed {
          "kind": "encapsed",
          "label": "EOF",
          "raw": "<<<EOF
<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<soapenv:Envelope xmlns:soapenv=\\"http://schemas.xmlsoap.org/soap/envelope/\\" xmlns:uri=\\"uri:mist\\">
   <soapenv:Header/>
   <soapenv:Body>
      <uri:Request><uri:A>XXX</uri:A><uri:B>yyy</uri:B></uri:Request>
   </soapenv:Body>
</soapenv:Envelope>
EOF",
          "type": "heredoc",
          "value": Array [
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<soapenv:Envelope xmlns:soapenv=\\"http://schemas.xmlsoap.org/soap/envelope/\\" xmlns:uri=\\"uri:mist\\">
   <soapenv:Header/>
   <soapenv:Body>
      <uri:Request><uri:A>XXX</uri:A><uri:B>yyy</uri:B></uri:Request>
   </soapenv:Body>
</soapenv:Envelope>
",
                "unicode": false,
                "value": "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<soapenv:Envelope xmlns:soapenv=\\"http://schemas.xmlsoap.org/soap/envelope/\\" xmlns:uri=\\"uri:mist\\">
   <soapenv:Header/>
   <soapenv:Body>
      <uri:Request><uri:A>XXX</uri:A><uri:B>yyy</uri:B></uri:Request>
   </soapenv:Body>
</soapenv:Envelope>",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
          ],
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "HTTP_RAW_POST_DATA",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "handle",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "s",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"OK\\\\n\\"",
          "unicode": false,
          "value": "OK
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
