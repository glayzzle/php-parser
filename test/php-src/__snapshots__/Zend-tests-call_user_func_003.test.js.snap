// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Testing call_user_func() with closures 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "foo",
        },
        "operator": "=",
        "right": Closure {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Static {
                "kind": "static",
                "variables": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "instance",
                  },
                ],
              },
              If {
                "alternate": null,
                "body": Block {
                  "children": Array [
                    ExpressionStatement {
                      "expression": Assign {
                        "kind": "assign",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "instance",
                        },
                        "operator": "=",
                        "right": Closure {
                          "arguments": Array [],
                          "attrGroups": Array [],
                          "body": Block {
                            "children": Array [
                              Return {
                                "expr": String {
                                  "isDoubleQuote": false,
                                  "kind": "string",
                                  "raw": "'OK!'",
                                  "unicode": false,
                                  "value": "OK!",
                                },
                                "kind": "return",
                              },
                            ],
                            "kind": "block",
                          },
                          "byref": false,
                          "isStatic": false,
                          "kind": "closure",
                          "nullable": false,
                          "type": null,
                          "uses": Array [],
                        },
                      },
                      "kind": "expressionstatement",
                    },
                  ],
                  "kind": "block",
                },
                "kind": "if",
                "shortForm": false,
                "test": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "instance",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "is_null",
                    "resolution": "uqn",
                  },
                },
              },
              Return {
                "expr": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "instance",
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isStatic": false,
          "kind": "closure",
          "nullable": false,
          "type": null,
          "uses": Array [],
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "__invoke",
              },
              "what": Call {
                "arguments": Array [
                  Array {
                    "items": Array [
                      Entry {
                        "byRef": false,
                        "key": null,
                        "kind": "entry",
                        "unpack": false,
                        "value": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "foo",
                        },
                      },
                      Entry {
                        "byRef": false,
                        "key": null,
                        "kind": "entry",
                        "unpack": false,
                        "value": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'__invoke'",
                          "unicode": false,
                          "value": "__invoke",
                        },
                      },
                    ],
                    "kind": "array",
                    "shortForm": false,
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "call_user_func",
                  "resolution": "uqn",
                },
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Closure {
                "arguments": Array [],
                "attrGroups": Array [],
                "body": Block {
                  "children": Array [
                    Return {
                      "expr": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "foo",
                      },
                      "kind": "return",
                    },
                  ],
                  "kind": "block",
                },
                "byref": false,
                "isStatic": false,
                "kind": "closure",
                "nullable": false,
                "type": null,
                "uses": Array [
                  Variable {
                    "byref": true,
                    "curly": false,
                    "kind": "variable",
                    "name": "foo",
                  },
                ],
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'__invoke'",
                "unicode": false,
                "value": "__invoke",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "call_user_func",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
