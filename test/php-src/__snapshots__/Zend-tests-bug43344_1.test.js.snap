// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #43344.1 (Wrong error message for undefined namespace constant) 1`] = `
Program {
  "children": Array [
    Namespace {
      "children": Array [
        UseGroup {
          "items": Array [
            UseItem {
              "alias": null,
              "kind": "useitem",
              "name": "Error",
              "type": null,
            },
          ],
          "kind": "usegroup",
          "name": null,
          "type": null,
        },
        _Function {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "a",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": Name {
                "kind": "name",
                "name": "bar",
                "resolution": "uqn",
              },
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Return {
                "expr": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "a",
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "kind": "function",
          "name": Identifier {
            "kind": "identifier",
            "name": "f1",
          },
          "nullable": false,
          "type": null,
        },
        _Function {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "a",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": Array {
                "items": Array [
                  Entry {
                    "byRef": false,
                    "key": null,
                    "kind": "entry",
                    "unpack": false,
                    "value": Name {
                      "kind": "name",
                      "name": "bar",
                      "resolution": "uqn",
                    },
                  },
                ],
                "kind": "array",
                "shortForm": false,
              },
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Return {
                "expr": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": Number {
                    "kind": "number",
                    "value": "0",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "a",
                  },
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "kind": "function",
          "name": Identifier {
            "kind": "identifier",
            "name": "f2",
          },
          "nullable": false,
          "type": null,
        },
        _Function {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "a",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": Array {
                "items": Array [
                  Entry {
                    "byRef": false,
                    "key": Name {
                      "kind": "name",
                      "name": "bar",
                      "resolution": "uqn",
                    },
                    "kind": "entry",
                    "unpack": false,
                    "value": Number {
                      "kind": "number",
                      "value": "0",
                    },
                  },
                ],
                "kind": "array",
                "shortForm": false,
              },
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "a",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "reset",
                    "resolution": "uqn",
                  },
                },
                "kind": "expressionstatement",
              },
              Return {
                "expr": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "a",
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "key",
                    "resolution": "uqn",
                  },
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "kind": "function",
          "name": Identifier {
            "kind": "identifier",
            "name": "f3",
          },
          "nullable": false,
          "type": null,
        },
        Try {
          "always": null,
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Name {
                      "kind": "name",
                      "name": "bar",
                      "resolution": "uqn",
                    },
                    "right": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"\\\\n\\"",
                      "unicode": false,
                      "value": "
",
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "catches": Array [
            Catch {
              "body": Block {
                "children": Array [
                  Echo {
                    "expressions": Array [
                      Call {
                        "arguments": Array [],
                        "kind": "call",
                        "what": PropertyLookup {
                          "kind": "propertylookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "getMessage",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "e",
                          },
                        },
                      },
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"\\\\n\\"",
                        "unicode": false,
                        "value": "
",
                      },
                    ],
                    "kind": "echo",
                    "shortForm": false,
                  },
                ],
                "kind": "block",
              },
              "kind": "catch",
              "variable": Variable {
                "curly": false,
                "kind": "variable",
                "name": "e",
              },
              "what": Array [
                Name {
                  "kind": "name",
                  "name": "Error",
                  "resolution": "uqn",
                },
              ],
            },
          ],
          "kind": "try",
        },
        Try {
          "always": null,
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "f1",
                        "resolution": "uqn",
                      },
                    },
                    "right": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"\\\\n\\"",
                      "unicode": false,
                      "value": "
",
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "catches": Array [
            Catch {
              "body": Block {
                "children": Array [
                  Echo {
                    "expressions": Array [
                      Call {
                        "arguments": Array [],
                        "kind": "call",
                        "what": PropertyLookup {
                          "kind": "propertylookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "getMessage",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "e",
                          },
                        },
                      },
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"\\\\n\\"",
                        "unicode": false,
                        "value": "
",
                      },
                    ],
                    "kind": "echo",
                    "shortForm": false,
                  },
                ],
                "kind": "block",
              },
              "kind": "catch",
              "variable": Variable {
                "curly": false,
                "kind": "variable",
                "name": "e",
              },
              "what": Array [
                Name {
                  "kind": "name",
                  "name": "Error",
                  "resolution": "uqn",
                },
              ],
            },
          ],
          "kind": "try",
        },
        Try {
          "always": null,
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "f2",
                        "resolution": "uqn",
                      },
                    },
                    "right": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"\\\\n\\"",
                      "unicode": false,
                      "value": "
",
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "catches": Array [
            Catch {
              "body": Block {
                "children": Array [
                  Echo {
                    "expressions": Array [
                      Call {
                        "arguments": Array [],
                        "kind": "call",
                        "what": PropertyLookup {
                          "kind": "propertylookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "getMessage",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "e",
                          },
                        },
                      },
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"\\\\n\\"",
                        "unicode": false,
                        "value": "
",
                      },
                    ],
                    "kind": "echo",
                    "shortForm": false,
                  },
                ],
                "kind": "block",
              },
              "kind": "catch",
              "variable": Variable {
                "curly": false,
                "kind": "variable",
                "name": "e",
              },
              "what": Array [
                Name {
                  "kind": "name",
                  "name": "Error",
                  "resolution": "uqn",
                },
              ],
            },
          ],
          "kind": "try",
        },
        Try {
          "always": null,
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Call {
                      "arguments": Array [],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "f3",
                        "resolution": "uqn",
                      },
                    },
                    "right": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"\\\\n\\"",
                      "unicode": false,
                      "value": "
",
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "catches": Array [
            Catch {
              "body": Block {
                "children": Array [
                  Echo {
                    "expressions": Array [
                      Call {
                        "arguments": Array [],
                        "kind": "call",
                        "what": PropertyLookup {
                          "kind": "propertylookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "getMessage",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "e",
                          },
                        },
                      },
                      String {
                        "isDoubleQuote": true,
                        "kind": "string",
                        "raw": "\\"\\\\n\\"",
                        "unicode": false,
                        "value": "
",
                      },
                    ],
                    "kind": "echo",
                    "shortForm": false,
                  },
                ],
                "kind": "block",
              },
              "kind": "catch",
              "variable": Variable {
                "curly": false,
                "kind": "variable",
                "name": "e",
              },
              "what": Array [
                Name {
                  "kind": "name",
                  "name": "Error",
                  "resolution": "uqn",
                },
              ],
            },
          ],
          "kind": "try",
        },
      ],
      "kind": "namespace",
      "name": "Foo",
      "withBrackets": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
