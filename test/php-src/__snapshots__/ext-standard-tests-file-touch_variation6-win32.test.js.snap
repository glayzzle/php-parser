// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test touch() function : variation: various valid and invalid paths 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "workDir",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"touchVar5.tmp\\"",
          "unicode": false,
          "value": "touchVar5.tmp",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "subDirOrFile",
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"aSubDirOrFile\\"",
          "unicode": false,
          "value": "aSubDirOrFile",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Magic {
            "kind": "magic",
            "raw": "__DIR__",
            "value": "__DIR__",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "chdir",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "workDir",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "mkdir",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "cwd",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "getcwd",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "unixifiedDirOrFile",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'/'",
            "unicode": false,
            "value": "/",
          },
          "right": Call {
            "arguments": Array [
              Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": Call {
                        "arguments": Array [
                          String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'\\\\\\\\'",
                            "unicode": false,
                            "value": "\\\\",
                          },
                          String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'/'",
                            "unicode": false,
                            "value": "/",
                          },
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "cwd",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "str_replace",
                          "resolution": "uqn",
                        },
                      },
                      "right": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'/'",
                        "unicode": false,
                        "value": "/",
                      },
                      "type": ".",
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "workDir",
                    },
                    "type": ".",
                  },
                  "right": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'/'",
                    "unicode": false,
                    "value": "/",
                  },
                  "type": ".",
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "subDirOrFile",
                },
                "type": ".",
              },
              Number {
                "kind": "number",
                "value": "3",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "substr",
              "resolution": "uqn",
            },
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "paths",
        },
        "operator": "=",
        "right": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "workDir",
                  },
                  "right": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'\\\\\\\\'",
                    "unicode": false,
                    "value": "\\\\",
                  },
                  "type": ".",
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "subDirOrFile",
                },
                "type": ".",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": Bin {
                    "kind": "bin",
                    "left": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'.\\\\\\\\'",
                      "unicode": false,
                      "value": ".\\\\",
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "workDir",
                    },
                    "type": ".",
                  },
                  "right": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'\\\\\\\\'",
                    "unicode": false,
                    "value": "\\\\",
                  },
                  "type": ".",
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "subDirOrFile",
                },
                "type": ".",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "workDir",
                      },
                      "right": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'\\\\\\\\..\\\\\\\\'",
                        "unicode": false,
                        "value": "\\\\..\\\\",
                      },
                      "type": ".",
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "workDir",
                    },
                    "type": ".",
                  },
                  "right": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'\\\\\\\\'",
                    "unicode": false,
                    "value": "\\\\",
                  },
                  "type": ".",
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "subDirOrFile",
                },
                "type": ".",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "workDir",
                  },
                  "right": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'\\\\\\\\..\\\\\\\\BADDIR\\\\\\\\'",
                    "unicode": false,
                    "value": "\\\\..\\\\BADDIR\\\\",
                  },
                  "type": ".",
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "subDirOrFile",
                },
                "type": ".",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Bin {
                "kind": "bin",
                "left": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'BADDIR\\\\\\\\'",
                  "unicode": false,
                  "value": "BADDIR\\\\",
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "subDirOrFile",
                },
                "type": ".",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "cwd",
                      },
                      "right": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'\\\\\\\\'",
                        "unicode": false,
                        "value": "\\\\",
                      },
                      "type": ".",
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "workDir",
                    },
                    "type": ".",
                  },
                  "right": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'\\\\\\\\'",
                    "unicode": false,
                    "value": "\\\\",
                  },
                  "type": ".",
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "subDirOrFile",
                },
                "type": ".",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "cwd",
                      },
                      "right": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'\\\\\\\\.\\\\\\\\'",
                        "unicode": false,
                        "value": "\\\\.\\\\",
                      },
                      "type": ".",
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "workDir",
                    },
                    "type": ".",
                  },
                  "right": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'\\\\\\\\'",
                    "unicode": false,
                    "value": "\\\\",
                  },
                  "type": ".",
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "subDirOrFile",
                },
                "type": ".",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": Bin {
                        "kind": "bin",
                        "left": Bin {
                          "kind": "bin",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "cwd",
                          },
                          "right": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'\\\\\\\\'",
                            "unicode": false,
                            "value": "\\\\",
                          },
                          "type": ".",
                        },
                        "right": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "workDir",
                        },
                        "type": ".",
                      },
                      "right": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'\\\\\\\\..\\\\\\\\'",
                        "unicode": false,
                        "value": "\\\\..\\\\",
                      },
                      "type": ".",
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "workDir",
                    },
                    "type": ".",
                  },
                  "right": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'\\\\\\\\'",
                    "unicode": false,
                    "value": "\\\\",
                  },
                  "type": ".",
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "subDirOrFile",
                },
                "type": ".",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "cwd",
                  },
                  "right": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'\\\\\\\\BADDIR\\\\\\\\'",
                    "unicode": false,
                    "value": "\\\\BADDIR\\\\",
                  },
                  "type": ".",
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "subDirOrFile",
                },
                "type": ".",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": Bin {
                    "kind": "bin",
                    "left": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "workDir",
                    },
                    "right": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'\\\\\\\\'",
                      "unicode": false,
                      "value": "\\\\",
                    },
                    "type": ".",
                  },
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "subDirOrFile",
                  },
                  "type": ".",
                },
                "right": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'\\\\\\\\'",
                  "unicode": false,
                  "value": "\\\\",
                },
                "type": ".",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": Bin {
                        "kind": "bin",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "cwd",
                        },
                        "right": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'\\\\\\\\'",
                          "unicode": false,
                          "value": "\\\\",
                        },
                        "type": ".",
                      },
                      "right": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "workDir",
                      },
                      "type": ".",
                    },
                    "right": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'\\\\\\\\'",
                      "unicode": false,
                      "value": "\\\\",
                    },
                    "type": ".",
                  },
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "subDirOrFile",
                  },
                  "type": ".",
                },
                "right": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "'\\\\\\\\'",
                  "unicode": false,
                  "value": "\\\\",
                },
                "type": ".",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "workDir",
                  },
                  "right": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'\\\\\\\\\\\\\\\\'",
                    "unicode": false,
                    "value": "\\\\\\\\",
                  },
                  "type": ".",
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "subDirOrFile",
                },
                "type": ".",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "cwd",
                      },
                      "right": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'\\\\\\\\\\\\\\\\'",
                        "unicode": false,
                        "value": "\\\\\\\\",
                      },
                      "type": ".",
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "workDir",
                    },
                    "type": ".",
                  },
                  "right": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'\\\\\\\\\\\\\\\\'",
                    "unicode": false,
                    "value": "\\\\\\\\",
                  },
                  "type": ".",
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "subDirOrFile",
                },
                "type": ".",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Variable {
                "curly": false,
                "kind": "variable",
                "name": "unixifiedDirOrFile",
              },
            },
          ],
          "kind": "array",
          "shortForm": false,
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"*** Testing touch() : variation ***\\\\n\\"",
          "unicode": false,
          "value": "*** Testing touch() : variation ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n*** testing nonexisting paths ***\\\\n\\"",
          "unicode": false,
          "value": "
*** testing nonexisting paths ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "paths",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_nonexisting",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n*** testing existing files ***\\\\n\\"",
          "unicode": false,
          "value": "
*** testing existing files ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "paths",
          },
          Boolean {
            "kind": "boolean",
            "raw": "false",
            "value": false,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_existing",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n*** testing existing directories ***\\\\n\\"",
          "unicode": false,
          "value": "
*** testing existing directories ***
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "paths",
          },
          Boolean {
            "kind": "boolean",
            "raw": "true",
            "value": true,
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "test_existing",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "workDir",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "rmdir",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "paths",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          Foreach {
            "body": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    Encapsed {
                      "kind": "encapsed",
                      "raw": "\\"--- testing $path ---\\\\n\\"",
                      "type": "string",
                      "value": Array [
                        EncapsedPart {
                          "curly": false,
                          "expression": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "--- testing ",
                            "unicode": false,
                            "value": "--- testing ",
                          },
                          "kind": "encapsedpart",
                          "syntax": null,
                        },
                        EncapsedPart {
                          "curly": false,
                          "expression": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "path",
                          },
                          "kind": "encapsedpart",
                          "syntax": "simple",
                        },
                        EncapsedPart {
                          "curly": false,
                          "expression": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": " ---\\\\n",
                            "unicode": false,
                            "value": " ---",
                          },
                          "kind": "encapsedpart",
                          "syntax": null,
                        },
                      ],
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
                If {
                  "alternate": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "res",
                          },
                          "operator": "=",
                          "right": Call {
                            "arguments": Array [
                              Variable {
                                "curly": false,
                                "kind": "variable",
                                "name": "path",
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "touch",
                              "resolution": "uqn",
                            },
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      If {
                        "alternate": Block {
                          "children": Array [
                            If {
                              "alternate": null,
                              "body": Block {
                                "children": Array [
                                  Echo {
                                    "expressions": Array [
                                      Encapsed {
                                        "kind": "encapsed",
                                        "raw": "\\"FAILED: $path - touch returned false, something there\\\\n\\"",
                                        "type": "string",
                                        "value": Array [
                                          EncapsedPart {
                                            "curly": false,
                                            "expression": String {
                                              "isDoubleQuote": false,
                                              "kind": "string",
                                              "raw": "FAILED: ",
                                              "unicode": false,
                                              "value": "FAILED: ",
                                            },
                                            "kind": "encapsedpart",
                                            "syntax": null,
                                          },
                                          EncapsedPart {
                                            "curly": false,
                                            "expression": Variable {
                                              "curly": false,
                                              "kind": "variable",
                                              "name": "path",
                                            },
                                            "kind": "encapsedpart",
                                            "syntax": "simple",
                                          },
                                          EncapsedPart {
                                            "curly": false,
                                            "expression": String {
                                              "isDoubleQuote": false,
                                              "kind": "string",
                                              "raw": " - touch returned false, something there\\\\n",
                                              "unicode": false,
                                              "value": " - touch returned false, something there",
                                            },
                                            "kind": "encapsedpart",
                                            "syntax": null,
                                          },
                                        ],
                                      },
                                    ],
                                    "kind": "echo",
                                    "shortForm": false,
                                  },
                                  If {
                                    "alternate": Block {
                                      "children": Array [
                                        ExpressionStatement {
                                          "expression": Call {
                                            "arguments": Array [
                                              Variable {
                                                "curly": false,
                                                "kind": "variable",
                                                "name": "path",
                                              },
                                            ],
                                            "kind": "call",
                                            "what": Name {
                                              "kind": "name",
                                              "name": "unlink",
                                              "resolution": "uqn",
                                            },
                                          },
                                          "kind": "expressionstatement",
                                        },
                                      ],
                                      "kind": "block",
                                    },
                                    "body": Block {
                                      "children": Array [
                                        ExpressionStatement {
                                          "expression": Call {
                                            "arguments": Array [
                                              Variable {
                                                "curly": false,
                                                "kind": "variable",
                                                "name": "path",
                                              },
                                            ],
                                            "kind": "call",
                                            "what": Name {
                                              "kind": "name",
                                              "name": "rmdir",
                                              "resolution": "uqn",
                                            },
                                          },
                                          "kind": "expressionstatement",
                                        },
                                      ],
                                      "kind": "block",
                                    },
                                    "kind": "if",
                                    "shortForm": false,
                                    "test": Call {
                                      "arguments": Array [
                                        Variable {
                                          "curly": false,
                                          "kind": "variable",
                                          "name": "path",
                                        },
                                      ],
                                      "kind": "call",
                                      "what": Name {
                                        "kind": "name",
                                        "name": "is_dir",
                                        "resolution": "uqn",
                                      },
                                    },
                                  },
                                ],
                                "kind": "block",
                              },
                              "kind": "if",
                              "shortForm": false,
                              "test": Call {
                                "arguments": Array [
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "path",
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "file_exists",
                                  "resolution": "uqn",
                                },
                              },
                            },
                          ],
                          "kind": "block",
                        },
                        "body": Block {
                          "children": Array [
                            If {
                              "alternate": Block {
                                "children": Array [
                                  Echo {
                                    "expressions": Array [
                                      Encapsed {
                                        "kind": "encapsed",
                                        "raw": "\\"FAILED: $path - touch returned true, nothing there\\\\n\\"",
                                        "type": "string",
                                        "value": Array [
                                          EncapsedPart {
                                            "curly": false,
                                            "expression": String {
                                              "isDoubleQuote": false,
                                              "kind": "string",
                                              "raw": "FAILED: ",
                                              "unicode": false,
                                              "value": "FAILED: ",
                                            },
                                            "kind": "encapsedpart",
                                            "syntax": null,
                                          },
                                          EncapsedPart {
                                            "curly": false,
                                            "expression": Variable {
                                              "curly": false,
                                              "kind": "variable",
                                              "name": "path",
                                            },
                                            "kind": "encapsedpart",
                                            "syntax": "simple",
                                          },
                                          EncapsedPart {
                                            "curly": false,
                                            "expression": String {
                                              "isDoubleQuote": false,
                                              "kind": "string",
                                              "raw": " - touch returned true, nothing there\\\\n",
                                              "unicode": false,
                                              "value": " - touch returned true, nothing there",
                                            },
                                            "kind": "encapsedpart",
                                            "syntax": null,
                                          },
                                        ],
                                      },
                                    ],
                                    "kind": "echo",
                                    "shortForm": false,
                                  },
                                ],
                                "kind": "block",
                              },
                              "body": Block {
                                "children": Array [
                                  If {
                                    "alternate": Block {
                                      "children": Array [
                                        Echo {
                                          "expressions": Array [
                                            Encapsed {
                                              "kind": "encapsed",
                                              "raw": "\\"PASSED: $path - created\\\\n\\"",
                                              "type": "string",
                                              "value": Array [
                                                EncapsedPart {
                                                  "curly": false,
                                                  "expression": String {
                                                    "isDoubleQuote": false,
                                                    "kind": "string",
                                                    "raw": "PASSED: ",
                                                    "unicode": false,
                                                    "value": "PASSED: ",
                                                  },
                                                  "kind": "encapsedpart",
                                                  "syntax": null,
                                                },
                                                EncapsedPart {
                                                  "curly": false,
                                                  "expression": Variable {
                                                    "curly": false,
                                                    "kind": "variable",
                                                    "name": "path",
                                                  },
                                                  "kind": "encapsedpart",
                                                  "syntax": "simple",
                                                },
                                                EncapsedPart {
                                                  "curly": false,
                                                  "expression": String {
                                                    "isDoubleQuote": false,
                                                    "kind": "string",
                                                    "raw": " - created\\\\n",
                                                    "unicode": false,
                                                    "value": " - created",
                                                  },
                                                  "kind": "encapsedpart",
                                                  "syntax": null,
                                                },
                                              ],
                                            },
                                          ],
                                          "kind": "echo",
                                          "shortForm": false,
                                        },
                                        ExpressionStatement {
                                          "expression": Call {
                                            "arguments": Array [
                                              Variable {
                                                "curly": false,
                                                "kind": "variable",
                                                "name": "path",
                                              },
                                            ],
                                            "kind": "call",
                                            "what": Name {
                                              "kind": "name",
                                              "name": "unlink",
                                              "resolution": "uqn",
                                            },
                                          },
                                          "kind": "expressionstatement",
                                        },
                                      ],
                                      "kind": "block",
                                    },
                                    "body": Block {
                                      "children": Array [
                                        Echo {
                                          "expressions": Array [
                                            Encapsed {
                                              "kind": "encapsed",
                                              "raw": "\\"FAILED: $path - unexpected directory\\\\n\\"",
                                              "type": "string",
                                              "value": Array [
                                                EncapsedPart {
                                                  "curly": false,
                                                  "expression": String {
                                                    "isDoubleQuote": false,
                                                    "kind": "string",
                                                    "raw": "FAILED: ",
                                                    "unicode": false,
                                                    "value": "FAILED: ",
                                                  },
                                                  "kind": "encapsedpart",
                                                  "syntax": null,
                                                },
                                                EncapsedPart {
                                                  "curly": false,
                                                  "expression": Variable {
                                                    "curly": false,
                                                    "kind": "variable",
                                                    "name": "path",
                                                  },
                                                  "kind": "encapsedpart",
                                                  "syntax": "simple",
                                                },
                                                EncapsedPart {
                                                  "curly": false,
                                                  "expression": String {
                                                    "isDoubleQuote": false,
                                                    "kind": "string",
                                                    "raw": " - unexpected directory\\\\n",
                                                    "unicode": false,
                                                    "value": " - unexpected directory",
                                                  },
                                                  "kind": "encapsedpart",
                                                  "syntax": null,
                                                },
                                              ],
                                            },
                                          ],
                                          "kind": "echo",
                                          "shortForm": false,
                                        },
                                      ],
                                      "kind": "block",
                                    },
                                    "kind": "if",
                                    "shortForm": false,
                                    "test": Call {
                                      "arguments": Array [
                                        Variable {
                                          "curly": false,
                                          "kind": "variable",
                                          "name": "path",
                                        },
                                      ],
                                      "kind": "call",
                                      "what": Name {
                                        "kind": "name",
                                        "name": "is_dir",
                                        "resolution": "uqn",
                                      },
                                    },
                                  },
                                ],
                                "kind": "block",
                              },
                              "kind": "if",
                              "shortForm": false,
                              "test": Call {
                                "arguments": Array [
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "path",
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "file_exists",
                                  "resolution": "uqn",
                                },
                              },
                            },
                          ],
                          "kind": "block",
                        },
                        "kind": "if",
                        "shortForm": false,
                        "test": Bin {
                          "kind": "bin",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "res",
                          },
                          "right": Boolean {
                            "kind": "boolean",
                            "raw": "true",
                            "value": true,
                          },
                          "type": "===",
                        },
                      },
                    ],
                    "kind": "block",
                  },
                  "body": Block {
                    "children": Array [
                      Echo {
                        "expressions": Array [
                          Encapsed {
                            "kind": "encapsed",
                            "raw": "\\"FAILED: $path - exists\\\\n\\"",
                            "type": "string",
                            "value": Array [
                              EncapsedPart {
                                "curly": false,
                                "expression": String {
                                  "isDoubleQuote": false,
                                  "kind": "string",
                                  "raw": "FAILED: ",
                                  "unicode": false,
                                  "value": "FAILED: ",
                                },
                                "kind": "encapsedpart",
                                "syntax": null,
                              },
                              EncapsedPart {
                                "curly": false,
                                "expression": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "path",
                                },
                                "kind": "encapsedpart",
                                "syntax": "simple",
                              },
                              EncapsedPart {
                                "curly": false,
                                "expression": String {
                                  "isDoubleQuote": false,
                                  "kind": "string",
                                  "raw": " - exists\\\\n",
                                  "unicode": false,
                                  "value": " - exists",
                                },
                                "kind": "encapsedpart",
                                "syntax": null,
                              },
                            ],
                          },
                        ],
                        "kind": "echo",
                        "shortForm": false,
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Bin {
                    "kind": "bin",
                    "left": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "path",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "is_dir",
                        "resolution": "uqn",
                      },
                    },
                    "right": Call {
                      "arguments": Array [
                        Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "path",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "is_file",
                        "resolution": "uqn",
                      },
                    },
                    "type": "||",
                  },
                },
              ],
              "kind": "block",
            },
            "key": null,
            "kind": "foreach",
            "shortForm": false,
            "source": Variable {
              "curly": false,
              "kind": "variable",
              "name": "paths",
            },
            "value": Variable {
              "curly": false,
              "kind": "variable",
              "name": "path",
            },
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "test_nonexisting",
      },
      "nullable": false,
      "type": null,
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "paths",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "are_dirs",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          Foreach {
            "body": Block {
              "children": Array [
                If {
                  "alternate": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "h",
                          },
                          "operator": "=",
                          "right": Silent {
                            "expr": Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "path",
                                },
                                String {
                                  "isDoubleQuote": true,
                                  "kind": "string",
                                  "raw": "\\"w\\"",
                                  "unicode": false,
                                  "value": "w",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "fopen",
                                "resolution": "uqn",
                              },
                            },
                            "kind": "silent",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      If {
                        "alternate": null,
                        "body": Block {
                          "children": Array [
                            ExpressionStatement {
                              "expression": Call {
                                "arguments": Array [
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "h",
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "fclose",
                                  "resolution": "uqn",
                                },
                              },
                              "kind": "expressionstatement",
                            },
                            ExpressionStatement {
                              "expression": Call {
                                "arguments": Array [
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "path",
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "test_path",
                                  "resolution": "uqn",
                                },
                              },
                              "kind": "expressionstatement",
                            },
                            ExpressionStatement {
                              "expression": Call {
                                "arguments": Array [
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "path",
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "unlink",
                                  "resolution": "uqn",
                                },
                              },
                              "kind": "expressionstatement",
                            },
                          ],
                          "kind": "block",
                        },
                        "kind": "if",
                        "shortForm": false,
                        "test": Bin {
                          "kind": "bin",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "h",
                          },
                          "right": Boolean {
                            "kind": "boolean",
                            "raw": "false",
                            "value": false,
                          },
                          "type": "!==",
                        },
                      },
                    ],
                    "kind": "block",
                  },
                  "body": Block {
                    "children": Array [
                      ExpressionStatement {
                        "expression": Assign {
                          "kind": "assign",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "res",
                          },
                          "operator": "=",
                          "right": Silent {
                            "expr": Call {
                              "arguments": Array [
                                Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "path",
                                },
                              ],
                              "kind": "call",
                              "what": Name {
                                "kind": "name",
                                "name": "mkdir",
                                "resolution": "uqn",
                              },
                            },
                            "kind": "silent",
                          },
                        },
                        "kind": "expressionstatement",
                      },
                      If {
                        "alternate": null,
                        "body": Block {
                          "children": Array [
                            ExpressionStatement {
                              "expression": Call {
                                "arguments": Array [
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "path",
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "test_path",
                                  "resolution": "uqn",
                                },
                              },
                              "kind": "expressionstatement",
                            },
                            ExpressionStatement {
                              "expression": Call {
                                "arguments": Array [
                                  Variable {
                                    "curly": false,
                                    "kind": "variable",
                                    "name": "path",
                                  },
                                ],
                                "kind": "call",
                                "what": Name {
                                  "kind": "name",
                                  "name": "rmdir",
                                  "resolution": "uqn",
                                },
                              },
                              "kind": "expressionstatement",
                            },
                          ],
                          "kind": "block",
                        },
                        "kind": "if",
                        "shortForm": false,
                        "test": Bin {
                          "kind": "bin",
                          "left": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "res",
                          },
                          "right": Boolean {
                            "kind": "boolean",
                            "raw": "true",
                            "value": true,
                          },
                          "type": "==",
                        },
                      },
                    ],
                    "kind": "block",
                  },
                  "kind": "if",
                  "shortForm": false,
                  "test": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "are_dirs",
                  },
                },
              ],
              "kind": "block",
            },
            "key": null,
            "kind": "foreach",
            "shortForm": false,
            "source": Variable {
              "curly": false,
              "kind": "variable",
              "name": "paths",
            },
            "value": Variable {
              "curly": false,
              "kind": "variable",
              "name": "path",
            },
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "test_existing",
      },
      "nullable": false,
      "type": null,
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "path",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              Encapsed {
                "kind": "encapsed",
                "raw": "\\"--- testing $path ---\\\\n\\"",
                "type": "string",
                "value": Array [
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "--- testing ",
                      "unicode": false,
                      "value": "--- testing ",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "path",
                    },
                    "kind": "encapsedpart",
                    "syntax": "simple",
                  },
                  EncapsedPart {
                    "curly": false,
                    "expression": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": " ---\\\\n",
                      "unicode": false,
                      "value": " ---",
                    },
                    "kind": "encapsedpart",
                    "syntax": null,
                  },
                ],
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "org_atime",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "path",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "get_atime",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Call {
              "arguments": Array [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "clearstatcache",
                "resolution": "uqn",
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "res",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "path",
                  },
                  Number {
                    "kind": "number",
                    "value": "0",
                  },
                  Number {
                    "kind": "number",
                    "value": "0",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "touch",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "next_atime",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "path",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "get_atime",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          If {
            "alternate": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    Encapsed {
                      "kind": "encapsed",
                      "raw": "\\"PASSED: $path - touched\\\\n\\"",
                      "type": "string",
                      "value": Array [
                        EncapsedPart {
                          "curly": false,
                          "expression": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "PASSED: ",
                            "unicode": false,
                            "value": "PASSED: ",
                          },
                          "kind": "encapsedpart",
                          "syntax": null,
                        },
                        EncapsedPart {
                          "curly": false,
                          "expression": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "path",
                          },
                          "kind": "encapsedpart",
                          "syntax": "simple",
                        },
                        EncapsedPart {
                          "curly": false,
                          "expression": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": " - touched\\\\n",
                            "unicode": false,
                            "value": " - touched",
                          },
                          "kind": "encapsedpart",
                          "syntax": null,
                        },
                      ],
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
              ],
              "kind": "block",
            },
            "body": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    Encapsed {
                      "kind": "encapsed",
                      "raw": "\\"FAILED: $path - access time not changed\\\\n\\"",
                      "type": "string",
                      "value": Array [
                        EncapsedPart {
                          "curly": false,
                          "expression": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "FAILED: ",
                            "unicode": false,
                            "value": "FAILED: ",
                          },
                          "kind": "encapsedpart",
                          "syntax": null,
                        },
                        EncapsedPart {
                          "curly": false,
                          "expression": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "path",
                          },
                          "kind": "encapsedpart",
                          "syntax": "simple",
                        },
                        EncapsedPart {
                          "curly": false,
                          "expression": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": " - access time not changed\\\\n",
                            "unicode": false,
                            "value": " - access time not changed",
                          },
                          "kind": "encapsedpart",
                          "syntax": null,
                        },
                      ],
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "next_atime",
              },
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "org_atime",
              },
              "type": "==",
            },
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "test_path",
      },
      "nullable": false,
      "type": null,
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "path",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "temp",
              },
              "operator": "=",
              "right": Call {
                "arguments": Array [
                  Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "path",
                  },
                ],
                "kind": "call",
                "what": Name {
                  "kind": "name",
                  "name": "stat",
                  "resolution": "uqn",
                },
              },
            },
            "kind": "expressionstatement",
          },
          Return {
            "expr": OffsetLookup {
              "kind": "offsetlookup",
              "offset": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'atime'",
                "unicode": false,
                "value": "atime",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "temp",
              },
            },
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "get_atime",
      },
      "nullable": false,
      "type": null,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
