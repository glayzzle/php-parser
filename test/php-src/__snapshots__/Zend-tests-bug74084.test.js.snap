// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #74084 (Out of bound read - zend_mm_alloc_small) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": Variable {
            "curly": false,
            "kind": "variable",
            "name": "A",
          },
        },
        "operator": "+=",
        "right": AssignRef {
          "kind": "assignref",
          "left": OffsetLookup {
            "kind": "offsetlookup",
            "offset": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'a'",
              "unicode": false,
              "value": "a",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": Variable {
                "curly": false,
                "kind": "variable",
                "name": "B",
              },
            },
          },
          "right": Variable {
            "curly": false,
            "kind": "variable",
            "name": Variable {
              "curly": false,
              "kind": "variable",
              "name": "C",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    Unset {
      "kind": "unset",
      "variables": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": Variable {
            "curly": false,
            "kind": "variable",
            "name": "A",
          },
        },
      ],
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "A",
                },
              },
              "operator": "-=",
              "right": AssignRef {
                "kind": "assignref",
                "left": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'a'",
                    "unicode": false,
                    "value": "a",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "B",
                    },
                  },
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "C",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Call {
                    "arguments": Array [],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "getMessage",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "e",
                      },
                    },
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"\\\\n\\"",
                    "unicode": false,
                    "value": "
",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "Error",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    Unset {
      "kind": "unset",
      "variables": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": Variable {
            "curly": false,
            "kind": "variable",
            "name": "A",
          },
        },
      ],
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "A",
                },
              },
              "operator": "*=",
              "right": AssignRef {
                "kind": "assignref",
                "left": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'a'",
                    "unicode": false,
                    "value": "a",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "B",
                    },
                  },
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "C",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Call {
                    "arguments": Array [],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "getMessage",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "e",
                      },
                    },
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"\\\\n\\"",
                    "unicode": false,
                    "value": "
",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "Error",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    Unset {
      "kind": "unset",
      "variables": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": Variable {
            "curly": false,
            "kind": "variable",
            "name": "A",
          },
        },
      ],
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "A",
                },
              },
              "operator": "/=",
              "right": AssignRef {
                "kind": "assignref",
                "left": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'a'",
                    "unicode": false,
                    "value": "a",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "B",
                    },
                  },
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "C",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Call {
                    "arguments": Array [],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "getMessage",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "e",
                      },
                    },
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"\\\\n\\"",
                    "unicode": false,
                    "value": "
",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "Error",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
    Unset {
      "kind": "unset",
      "variables": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": Variable {
            "curly": false,
            "kind": "variable",
            "name": "A",
          },
        },
      ],
    },
    Try {
      "always": null,
      "body": Block {
        "children": Array [
          ExpressionStatement {
            "expression": Assign {
              "kind": "assign",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "A",
                },
              },
              "operator": "**=",
              "right": AssignRef {
                "kind": "assignref",
                "left": OffsetLookup {
                  "kind": "offsetlookup",
                  "offset": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'a'",
                    "unicode": false,
                    "value": "a",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "B",
                    },
                  },
                },
                "right": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "C",
                  },
                },
              },
            },
            "kind": "expressionstatement",
          },
        ],
        "kind": "block",
      },
      "catches": Array [
        Catch {
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Call {
                    "arguments": Array [],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "getMessage",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "e",
                      },
                    },
                  },
                  String {
                    "isDoubleQuote": true,
                    "kind": "string",
                    "raw": "\\"\\\\n\\"",
                    "unicode": false,
                    "value": "
",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "kind": "catch",
          "variable": Variable {
            "curly": false,
            "kind": "variable",
            "name": "e",
          },
          "what": Array [
            Name {
              "kind": "name",
              "name": "Error",
              "resolution": "uqn",
            },
          ],
        },
      ],
      "kind": "try",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
