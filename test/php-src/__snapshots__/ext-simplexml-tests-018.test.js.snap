// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests SimpleXML: iteration through subnodes and attributes 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "xml",
        },
        "operator": "=",
        "right": Encapsed {
          "kind": "encapsed",
          "label": "EOF",
          "raw": "<<<EOF
<people>
   <person name=\\"Joe\\">
     Text1
     <child name=\\"Ann\\" />
     Text2
     <child name=\\"Marray\\" />
     Text3
   </person>
   <person name=\\"Boe\\">
     <child name=\\"Joe\\" />
     <child name=\\"Ann\\" />
   </person>
</people>
EOF",
          "type": "heredoc",
          "value": Array [
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "<people>
   <person name=\\"Joe\\">
     Text1
     <child name=\\"Ann\\" />
     Text2
     <child name=\\"Marray\\" />
     Text3
   </person>
   <person name=\\"Boe\\">
     <child name=\\"Joe\\" />
     <child name=\\"Ann\\" />
   </person>
</people>
",
                "unicode": false,
                "value": "<people>
   <person name=\\"Joe\\">
     Text1
     <child name=\\"Ann\\" />
     Text2
     <child name=\\"Marray\\" />
     Text3
   </person>
   <person name=\\"Boe\\">
     <child name=\\"Joe\\" />
     <child name=\\"Ann\\" />
   </person>
</people>",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
          ],
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "xml1",
        },
        "operator": "=",
        "right": Encapsed {
          "kind": "encapsed",
          "label": "EOF",
          "raw": "<<<EOF
<people>
   <person name=\\"Joe\\">
     <child />
   </person>
</people>
EOF",
          "type": "heredoc",
          "value": Array [
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "<people>
   <person name=\\"Joe\\">
     <child />
   </person>
</people>
",
                "unicode": false,
                "value": "<people>
   <person name=\\"Joe\\">
     <child />
   </person>
</people>",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
          ],
        },
      },
      "kind": "expressionstatement",
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "pad",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "xml",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          Foreach {
            "body": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "pad",
                      },
                      "right": Encapsed {
                        "kind": "encapsed",
                        "raw": "\\"<$name\\"",
                        "type": "string",
                        "value": Array [
                          EncapsedPart {
                            "curly": false,
                            "expression": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "<",
                              "unicode": false,
                              "value": "<",
                            },
                            "kind": "encapsedpart",
                            "syntax": null,
                          },
                          EncapsedPart {
                            "curly": false,
                            "expression": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "name",
                            },
                            "kind": "encapsedpart",
                            "syntax": "simple",
                          },
                        ],
                      },
                      "type": ".",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
                Foreach {
                  "body": Block {
                    "children": Array [
                      Echo {
                        "expressions": Array [
                          Encapsed {
                            "kind": "encapsed",
                            "raw": "\\" $attr=\\\\\\"$value\\\\\\"\\"",
                            "type": "string",
                            "value": Array [
                              EncapsedPart {
                                "curly": false,
                                "expression": String {
                                  "isDoubleQuote": false,
                                  "kind": "string",
                                  "raw": " ",
                                  "unicode": false,
                                  "value": " ",
                                },
                                "kind": "encapsedpart",
                                "syntax": null,
                              },
                              EncapsedPart {
                                "curly": false,
                                "expression": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "attr",
                                },
                                "kind": "encapsedpart",
                                "syntax": "simple",
                              },
                              EncapsedPart {
                                "curly": false,
                                "expression": String {
                                  "isDoubleQuote": false,
                                  "kind": "string",
                                  "raw": "=\\\\\\"",
                                  "unicode": false,
                                  "value": "=\\\\\\"",
                                },
                                "kind": "encapsedpart",
                                "syntax": null,
                              },
                              EncapsedPart {
                                "curly": false,
                                "expression": Variable {
                                  "curly": false,
                                  "kind": "variable",
                                  "name": "value",
                                },
                                "kind": "encapsedpart",
                                "syntax": "simple",
                              },
                              EncapsedPart {
                                "curly": false,
                                "expression": String {
                                  "isDoubleQuote": false,
                                  "kind": "string",
                                  "raw": "\\\\\\"",
                                  "unicode": false,
                                  "value": "\\\\\\"",
                                },
                                "kind": "encapsedpart",
                                "syntax": null,
                              },
                            ],
                          },
                        ],
                        "kind": "echo",
                        "shortForm": false,
                      },
                    ],
                    "kind": "block",
                  },
                  "key": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "attr",
                  },
                  "kind": "foreach",
                  "shortForm": false,
                  "source": Call {
                    "arguments": Array [],
                    "kind": "call",
                    "what": PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "attributes",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "node",
                      },
                    },
                  },
                  "value": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "value",
                  },
                },
                Echo {
                  "expressions": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\">\\\\n\\"",
                      "unicode": false,
                      "value": ">
",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      Bin {
                        "kind": "bin",
                        "left": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "pad",
                        },
                        "right": String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"  \\"",
                          "unicode": false,
                          "value": "  ",
                        },
                        "type": ".",
                      },
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "node",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "traverse_xml",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                Echo {
                  "expressions": Array [
                    Bin {
                      "kind": "bin",
                      "left": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "pad",
                      },
                      "right": Encapsed {
                        "kind": "encapsed",
                        "raw": "\\"</$name>\\\\n\\"",
                        "type": "string",
                        "value": Array [
                          EncapsedPart {
                            "curly": false,
                            "expression": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": "</",
                              "unicode": false,
                              "value": "</",
                            },
                            "kind": "encapsedpart",
                            "syntax": null,
                          },
                          EncapsedPart {
                            "curly": false,
                            "expression": Variable {
                              "curly": false,
                              "kind": "variable",
                              "name": "name",
                            },
                            "kind": "encapsedpart",
                            "syntax": "simple",
                          },
                          EncapsedPart {
                            "curly": false,
                            "expression": String {
                              "isDoubleQuote": false,
                              "kind": "string",
                              "raw": ">\\\\n",
                              "unicode": false,
                              "value": ">\\\\n",
                            },
                            "kind": "encapsedpart",
                            "syntax": null,
                          },
                        ],
                      },
                      "type": ".",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
              ],
              "kind": "block",
            },
            "key": Variable {
              "curly": false,
              "kind": "variable",
              "name": "name",
            },
            "kind": "foreach",
            "shortForm": false,
            "source": Call {
              "arguments": Array [],
              "kind": "call",
              "what": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "children",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "xml",
                },
              },
            },
            "value": Variable {
              "curly": false,
              "kind": "variable",
              "name": "node",
            },
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "traverse_xml",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\"",
            "unicode": false,
            "value": "",
          },
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "xml",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "simplexml_load_string",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "traverse_xml",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"----------\\\\n\\"",
          "unicode": false,
          "value": "----------
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"\\"",
            "unicode": false,
            "value": "",
          },
          Call {
            "arguments": Array [
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "xml1",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "simplexml_load_string",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "traverse_xml",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"---Done---\\\\n\\"",
          "unicode": false,
          "value": "---Done---
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
