// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests preg_split() 2nd test 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/(\\\\d*)/'",
                "unicode": false,
                "value": "/(\\\\d*)/",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'ab2c3u'",
                "unicode": false,
                "value": "ab2c3u",
              },
              Unary {
                "kind": "unary",
                "type": "-",
                "what": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
              Name {
                "kind": "name",
                "name": "PREG_SPLIT_DELIM_CAPTURE",
                "resolution": "uqn",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "preg_split",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/(\\\\d*)/'",
                "unicode": false,
                "value": "/(\\\\d*)/",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'ab2c3u'",
                "unicode": false,
                "value": "ab2c3u",
              },
              Unary {
                "kind": "unary",
                "type": "-",
                "what": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
              Name {
                "kind": "name",
                "name": "PREG_SPLIT_OFFSET_CAPTURE",
                "resolution": "uqn",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "preg_split",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/(\\\\d*)/'",
                "unicode": false,
                "value": "/(\\\\d*)/",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'ab2c3u'",
                "unicode": false,
                "value": "ab2c3u",
              },
              Unary {
                "kind": "unary",
                "type": "-",
                "what": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
              Bin {
                "kind": "bin",
                "left": Name {
                  "kind": "name",
                  "name": "PREG_SPLIT_NO_EMPTY",
                  "resolution": "uqn",
                },
                "right": Name {
                  "kind": "name",
                  "name": "PREG_SPLIT_DELIM_CAPTURE",
                  "resolution": "uqn",
                },
                "type": "|",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "preg_split",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/(\\\\d*)/'",
                "unicode": false,
                "value": "/(\\\\d*)/",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'ab2c3u'",
                "unicode": false,
                "value": "ab2c3u",
              },
              Unary {
                "kind": "unary",
                "type": "-",
                "what": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
              Bin {
                "kind": "bin",
                "left": Name {
                  "kind": "name",
                  "name": "PREG_SPLIT_NO_EMPTY",
                  "resolution": "uqn",
                },
                "right": Name {
                  "kind": "name",
                  "name": "PREG_SPLIT_OFFSET_CAPTURE",
                  "resolution": "uqn",
                },
                "type": "|",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "preg_split",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/(\\\\d*)/'",
                "unicode": false,
                "value": "/(\\\\d*)/",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'ab2c3u'",
                "unicode": false,
                "value": "ab2c3u",
              },
              Unary {
                "kind": "unary",
                "type": "-",
                "what": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
              Bin {
                "kind": "bin",
                "left": Name {
                  "kind": "name",
                  "name": "PREG_SPLIT_DELIM_CAPTURE",
                  "resolution": "uqn",
                },
                "right": Name {
                  "kind": "name",
                  "name": "PREG_SPLIT_OFFSET_CAPTURE",
                  "resolution": "uqn",
                },
                "type": "|",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "preg_split",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/(\\\\d*)/'",
                "unicode": false,
                "value": "/(\\\\d*)/",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'ab2c3u'",
                "unicode": false,
                "value": "ab2c3u",
              },
              Unary {
                "kind": "unary",
                "type": "-",
                "what": Number {
                  "kind": "number",
                  "value": "1",
                },
              },
              Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": Name {
                    "kind": "name",
                    "name": "PREG_SPLIT_NO_EMPTY",
                    "resolution": "uqn",
                  },
                  "right": Name {
                    "kind": "name",
                    "name": "PREG_SPLIT_DELIM_CAPTURE",
                    "resolution": "uqn",
                  },
                  "type": "|",
                },
                "right": Name {
                  "kind": "name",
                  "name": "PREG_SPLIT_OFFSET_CAPTURE",
                  "resolution": "uqn",
                },
                "type": "|",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "preg_split",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'pcre.recursion_limit'",
            "unicode": false,
            "value": "pcre.recursion_limit",
          },
          Number {
            "kind": "number",
            "value": "1",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "ini_set",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "preg_last_error",
                "resolution": "uqn",
              },
            },
            "right": Name {
              "kind": "name",
              "name": "PREG_NO_ERROR",
              "resolution": "uqn",
            },
            "type": "==",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'/(\\\\d*)/'",
                "unicode": false,
                "value": "/(\\\\d*)/",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'ab2c3u'",
                "unicode": false,
                "value": "ab2c3u",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "preg_split",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Bin {
            "kind": "bin",
            "left": Call {
              "arguments": Array [],
              "kind": "call",
              "what": Name {
                "kind": "name",
                "name": "preg_last_error",
                "resolution": "uqn",
              },
            },
            "right": Name {
              "kind": "name",
              "name": "PREG_RECURSION_LIMIT_ERROR",
              "resolution": "uqn",
            },
            "type": "==",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
