// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Test pow() - basic function test pow() - with large exponents 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "large_exp",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "20000",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n-- The following all result in INF --\\\\n\\"",
          "unicode": false,
          "value": "
-- The following all result in INF --
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Number {
                "kind": "number",
                "value": "24",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "large_exp",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "pow",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Number {
                "kind": "number",
                "value": "0.24",
              },
              Unary {
                "kind": "unary",
                "type": "-",
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "large_exp",
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "pow",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Unary {
                "kind": "unary",
                "type": "-",
                "what": Number {
                  "kind": "number",
                  "value": "0.24",
                },
              },
              Unary {
                "kind": "unary",
                "type": "-",
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "large_exp",
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "pow",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\\\n-- The following all result in 0 --\\\\n\\"",
          "unicode": false,
          "value": "

-- The following all result in 0 --
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Number {
                "kind": "number",
                "value": "0.24",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "large_exp",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "pow",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Unary {
                "kind": "unary",
                "type": "-",
                "what": Number {
                  "kind": "number",
                  "value": "0.24",
                },
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "large_exp",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "pow",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Number {
                "kind": "number",
                "value": "24",
              },
              Unary {
                "kind": "unary",
                "type": "-",
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "large_exp",
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "pow",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Unary {
                "kind": "unary",
                "type": "-",
                "what": Number {
                  "kind": "number",
                  "value": "24",
                },
              },
              Unary {
                "kind": "unary",
                "type": "-",
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "large_exp",
                },
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "pow",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\\\n-- The following all result in -0 --\\\\n\\"",
          "unicode": false,
          "value": "

-- The following all result in -0 --
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Unary {
                "kind": "unary",
                "type": "-",
                "what": Number {
                  "kind": "number",
                  "value": "0.24",
                },
              },
              Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "large_exp",
                },
                "right": Number {
                  "kind": "number",
                  "value": "1",
                },
                "type": "+",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "pow",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\\\n-- The following all result in -INF --\\\\n\\"",
          "unicode": false,
          "value": "

-- The following all result in -INF --
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Unary {
                "kind": "unary",
                "type": "-",
                "what": Number {
                  "kind": "number",
                  "value": "24",
                },
              },
              Bin {
                "kind": "bin",
                "left": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "large_exp",
                },
                "right": Number {
                  "kind": "number",
                  "value": "1",
                },
                "type": "+",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "pow",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Unary {
                "kind": "unary",
                "type": "-",
                "what": Number {
                  "kind": "number",
                  "value": "0.24",
                },
              },
              Bin {
                "kind": "bin",
                "left": Unary {
                  "kind": "unary",
                  "type": "-",
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "large_exp",
                  },
                },
                "right": Number {
                  "kind": "number",
                  "value": "1",
                },
                "type": "+",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "pow",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
