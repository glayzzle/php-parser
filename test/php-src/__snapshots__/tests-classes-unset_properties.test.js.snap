// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Un-setting instance properties causes magic methods to be called when trying to access them from outside the magic
methods themselves. 1`] = `
Program {
  "children": Array [
    Class {
      "attrGroups": Array [],
      "body": Array [
        PropertyStatement {
          "isStatic": false,
          "kind": "propertystatement",
          "properties": Array [
            Property {
              "attrGroups": Array [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "publicProperty",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'publicProperty set'",
                "unicode": false,
                "value": "publicProperty set",
              },
            },
          ],
          "visibility": "public",
        },
        PropertyStatement {
          "isStatic": false,
          "kind": "propertystatement",
          "properties": Array [
            Property {
              "attrGroups": Array [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "protectedProperty",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'protectedProperty set'",
                "unicode": false,
                "value": "protectedProperty set",
              },
            },
          ],
          "visibility": "protected",
        },
        PropertyStatement {
          "isStatic": false,
          "kind": "propertystatement",
          "properties": Array [
            Property {
              "attrGroups": Array [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "privateProperty",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'privateProperty set'",
                "unicode": false,
                "value": "privateProperty set",
              },
            },
          ],
          "visibility": "private",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "name",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Return {
                "expr": Bin {
                  "kind": "bin",
                  "left": Bin {
                    "kind": "bin",
                    "left": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'__get \\"'",
                      "unicode": false,
                      "value": "__get \\"",
                    },
                    "right": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "name",
                    },
                    "type": ".",
                  },
                  "right": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'\\"'",
                    "unicode": false,
                    "value": "\\"",
                  },
                  "type": ".",
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "__get",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "name",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "value",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "name",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "this",
                    },
                  },
                  "operator": "=",
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "value",
                  },
                },
                "kind": "expressionstatement",
              },
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": Bin {
                        "kind": "bin",
                        "left": Bin {
                          "kind": "bin",
                          "left": String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'__set \\"'",
                            "unicode": false,
                            "value": "__set \\"",
                          },
                          "right": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "name",
                          },
                          "type": ".",
                        },
                        "right": String {
                          "isDoubleQuote": false,
                          "kind": "string",
                          "raw": "'\\" to \\"'",
                          "unicode": false,
                          "value": "\\" to \\"",
                        },
                        "type": ".",
                      },
                      "right": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "value",
                      },
                      "type": ".",
                    },
                    "right": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'\\"'",
                      "unicode": false,
                      "value": "\\"",
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "__set",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "name",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'__isset \\"'",
                        "unicode": false,
                        "value": "__isset \\"",
                      },
                      "right": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "name",
                      },
                      "type": ".",
                    },
                    "right": String {
                      "isDoubleQuote": false,
                      "kind": "string",
                      "raw": "'\\"'",
                      "unicode": false,
                      "value": "\\"",
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
              Return {
                "expr": Isset {
                  "kind": "isset",
                  "variables": Array [
                    PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "name",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "this",
                      },
                    },
                  ],
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "__isset",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Return {
                "expr": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "publicProperty",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "this",
                  },
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "getPublicProperty",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "publicProperty",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "publicProperty",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "this",
                    },
                  },
                  "operator": "=",
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "publicProperty",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "setPublicProperty",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Unset {
                "kind": "unset",
                "variables": Array [
                  PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "protectedProperty",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "this",
                    },
                  },
                ],
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "unsetProtectedProperty",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Return {
                "expr": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "protectedProperty",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "this",
                  },
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "getProtectedProperty",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "protectedProperty",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "protectedProperty",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "this",
                    },
                  },
                  "operator": "=",
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "protectedProperty",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "setProtectedProperty",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Unset {
                "kind": "unset",
                "variables": Array [
                  PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "privateProperty",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "this",
                    },
                  },
                ],
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "unsetPrivateProperty",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Return {
                "expr": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "privateProperty",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "this",
                  },
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "getPrivateProperty",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "privateProperty",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              ExpressionStatement {
                "expression": Assign {
                  "kind": "assign",
                  "left": PropertyLookup {
                    "kind": "propertylookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "privateProperty",
                    },
                    "what": Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "this",
                    },
                  },
                  "operator": "=",
                  "right": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "privateProperty",
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "setPrivateProperty",
          },
          "nullable": false,
          "type": null,
          "visibility": "public",
        },
      ],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "Test",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "o",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "Test",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "publicProperty",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "o",
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Isset {
            "kind": "isset",
            "variables": Array [
              PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "publicProperty",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "o",
                },
              },
            ],
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_export",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Unset {
      "kind": "unset",
      "variables": Array [
        PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "publicProperty",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "o",
          },
        },
      ],
    },
    ExpressionStatement {
      "expression": Isset {
        "kind": "isset",
        "variables": Array [
          PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "publicProperty",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "o",
            },
          },
        ],
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "publicProperty",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "o",
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "getPublicProperty",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "o",
            },
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'new publicProperty value via setter'",
              "unicode": false,
              "value": "new publicProperty value via setter",
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "setPublicProperty",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "o",
            },
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "publicProperty",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "o",
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Unset {
      "kind": "unset",
      "variables": Array [
        PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "publicProperty",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "o",
          },
        },
      ],
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "publicProperty",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "o",
          },
        },
        "operator": "=",
        "right": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'new publicProperty value via public access'",
          "unicode": false,
          "value": "new publicProperty value via public access",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Isset {
            "kind": "isset",
            "variables": Array [
              PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "publicProperty",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "o",
                },
              },
            ],
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_export",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "publicProperty",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "o",
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\\\n\\"",
          "unicode": false,
          "value": "

",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "getProtectedProperty",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "o",
            },
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "unsetProtectedProperty",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "o",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Isset {
            "kind": "isset",
            "variables": Array [
              PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "protectedProperty",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "o",
                },
              },
            ],
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_export",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "getProtectedProperty",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "o",
            },
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'new protectedProperty value via setter'",
              "unicode": false,
              "value": "new protectedProperty value via setter",
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "setProtectedProperty",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "o",
            },
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Isset {
            "kind": "isset",
            "variables": Array [
              PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "protectedProperty",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "o",
                },
              },
            ],
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_export",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "getProtectedProperty",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "o",
            },
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\\\n\\"",
          "unicode": false,
          "value": "

",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "getPrivateProperty",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "o",
            },
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "unsetPrivateProperty",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "o",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Isset {
            "kind": "isset",
            "variables": Array [
              PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "privateProperty",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "o",
                },
              },
            ],
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_export",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "getPrivateProperty",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "o",
            },
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'new privateProperty value via setter'",
              "unicode": false,
              "value": "new privateProperty value via setter",
            },
          ],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "setPrivateProperty",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "o",
            },
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Isset {
            "kind": "isset",
            "variables": Array [
              PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "privateProperty",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "o",
                },
              },
            ],
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_export",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "getPrivateProperty",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "o",
            },
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\\\n\\"",
          "unicode": false,
          "value": "

",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
