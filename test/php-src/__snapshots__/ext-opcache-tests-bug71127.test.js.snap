// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #71127 (Define in auto_prepend_file is overwrite) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "file",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Magic {
            "kind": "magic",
            "raw": "__DIR__",
            "value": "__DIR__",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"/bug71127.inc\\"",
            "unicode": false,
            "value": "/bug71127.inc",
          },
          "type": ".",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "file",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"<?php define('FOO', 'bad'); echo FOO;?>\\"",
            "unicode": false,
            "value": "<?php define('FOO', 'bad'); echo FOO;?>",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "file_put_contents",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"FOO\\"",
            "unicode": false,
            "value": "FOO",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"okey\\"",
            "unicode": false,
            "value": "okey",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "define",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": false,
        "require": false,
        "target": Variable {
          "curly": false,
          "kind": "variable",
          "name": "file",
          "parenthesizedExpression": true,
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
