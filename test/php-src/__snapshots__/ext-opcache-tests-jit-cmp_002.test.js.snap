// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests JIT CMP: 001 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "a",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "0",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "b",
        },
        "operator": "=",
        "right": Number {
          "kind": "number",
          "value": "0.0",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          RetIf {
            "falseExpr": Number {
              "kind": "number",
              "value": "0",
            },
            "kind": "retif",
            "test": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "a",
              },
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "b",
              },
              "type": "<",
            },
            "trueExpr": Number {
              "kind": "number",
              "value": "1",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          RetIf {
            "falseExpr": Number {
              "kind": "number",
              "value": "0",
            },
            "kind": "retif",
            "test": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "a",
              },
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "b",
              },
              "type": ">",
            },
            "trueExpr": Number {
              "kind": "number",
              "value": "1",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          RetIf {
            "falseExpr": Number {
              "kind": "number",
              "value": "0",
            },
            "kind": "retif",
            "test": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "a",
              },
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "b",
              },
              "type": "<=",
            },
            "trueExpr": Number {
              "kind": "number",
              "value": "1",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          RetIf {
            "falseExpr": Number {
              "kind": "number",
              "value": "0",
            },
            "kind": "retif",
            "test": Bin {
              "kind": "bin",
              "left": Variable {
                "curly": false,
                "kind": "variable",
                "name": "a",
              },
              "right": Variable {
                "curly": false,
                "kind": "variable",
                "name": "b",
              },
              "type": ">=",
            },
            "trueExpr": Number {
              "kind": "number",
              "value": "1",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
