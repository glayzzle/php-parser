// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Phar object: access through SplFileObject 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Include {
        "kind": "include",
        "once": true,
        "require": true,
        "target": String {
          "isDoubleQuote": false,
          "kind": "string",
          "raw": "'files/phar_oo_test.inc'",
          "unicode": false,
          "value": "files/phar_oo_test.inc",
        },
      },
      "kind": "expressionstatement",
    },
    Class {
      "attrGroups": Array [],
      "body": Array [
        Method {
          "arguments": Array [
            Parameter {
              "attrGroups": Array [],
              "byref": false,
              "flags": 0,
              "kind": "parameter",
              "name": Identifier {
                "kind": "identifier",
                "name": "name",
              },
              "nullable": false,
              "readonly": false,
              "type": null,
              "value": null,
              "variadic": false,
            },
          ],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Echo {
                "expressions": Array [
                  Bin {
                    "kind": "bin",
                    "left": Bin {
                      "kind": "bin",
                      "left": Bin {
                        "kind": "bin",
                        "left": Magic {
                          "kind": "magic",
                          "raw": "__METHOD__",
                          "value": "__METHOD__",
                        },
                        "right": String {
                          "isDoubleQuote": true,
                          "kind": "string",
                          "raw": "\\"(\\"",
                          "unicode": false,
                          "value": "(",
                        },
                        "type": ".",
                      },
                      "right": Call {
                        "arguments": Array [
                          Call {
                            "arguments": Array [
                              String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'\\\\\\\\'",
                                "unicode": false,
                                "value": "\\\\",
                              },
                              String {
                                "isDoubleQuote": false,
                                "kind": "string",
                                "raw": "'/'",
                                "unicode": false,
                                "value": "/",
                              },
                              Magic {
                                "kind": "magic",
                                "raw": "__DIR__",
                                "value": "__DIR__",
                              },
                            ],
                            "kind": "call",
                            "what": Name {
                              "kind": "name",
                              "name": "str_replace",
                              "resolution": "uqn",
                            },
                          },
                          String {
                            "isDoubleQuote": false,
                            "kind": "string",
                            "raw": "'*'",
                            "unicode": false,
                            "value": "*",
                          },
                          Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "name",
                          },
                        ],
                        "kind": "call",
                        "what": Name {
                          "kind": "name",
                          "name": "str_replace",
                          "resolution": "uqn",
                        },
                      },
                      "type": ".",
                    },
                    "right": String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\")\\\\n\\"",
                      "unicode": false,
                      "value": ")
",
                    },
                    "type": ".",
                  },
                ],
                "kind": "echo",
                "shortForm": false,
              },
              ExpressionStatement {
                "expression": Call {
                  "arguments": Array [
                    Variable {
                      "curly": false,
                      "kind": "variable",
                      "name": "name",
                    },
                  ],
                  "kind": "call",
                  "what": StaticLookup {
                    "kind": "staticlookup",
                    "offset": Identifier {
                      "kind": "identifier",
                      "name": "__construct",
                    },
                    "what": ParentReference {
                      "kind": "parentreference",
                      "raw": "parent",
                    },
                  },
                },
                "kind": "expressionstatement",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "__construct",
          },
          "nullable": false,
          "type": null,
          "visibility": "",
        },
      ],
      "extends": Name {
        "kind": "name",
        "name": "SplFileObject",
        "resolution": "uqn",
      },
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "MyFile",
      },
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "phar",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "fname",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "Phar",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'MyFile'",
            "unicode": false,
            "value": "MyFile",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "setInfoClass",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "phar",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "f",
        },
        "operator": "=",
        "right": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'a.php'",
            "unicode": false,
            "value": "a.php",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "phar",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "s",
        },
        "operator": "=",
        "right": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "fstat",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "f",
            },
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'atime'",
              "unicode": false,
              "value": "atime",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "s",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'ctime'",
              "unicode": false,
              "value": "ctime",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "s",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'mtime'",
              "unicode": false,
              "value": "mtime",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "s",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "ftell",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "f",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "eof",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "f",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "fgets",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "f",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "eof",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "f",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Number {
                "kind": "number",
                "value": "20",
              },
            ],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "fseek",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "f",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "ftell",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "f",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "fgets",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "f",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "rewind",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "f",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "ftell",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "f",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "fgets",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "f",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "ftell",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "f",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    Inline {
      "kind": "inline",
      "raw": "
===AGAIN===
",
      "value": "===AGAIN===
",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "f",
        },
        "operator": "=",
        "right": OffsetLookup {
          "kind": "offsetlookup",
          "offset": String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'a.php'",
            "unicode": false,
            "value": "a.php",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "phar",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "ftell",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "f",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "eof",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "f",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "fgets",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "f",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "eof",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "f",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
