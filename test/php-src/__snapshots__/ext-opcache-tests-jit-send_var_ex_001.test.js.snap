// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests JIT SEND_VAR_EX fails on SHOULD_SEND_BY_REF checking 1`] = `
Program {
  "children": Array [
    Namespace {
      "children": Array [
        Class {
          "attrGroups": Array [],
          "body": Array [
            PropertyStatement {
              "isStatic": false,
              "kind": "propertystatement",
              "properties": Array [
                Property {
                  "attrGroups": Array [],
                  "kind": "property",
                  "name": Identifier {
                    "kind": "identifier",
                    "name": "evalParameters",
                  },
                  "nullable": false,
                  "readonly": false,
                  "type": null,
                  "value": null,
                },
              ],
              "visibility": "private",
            },
            Method {
              "arguments": Array [],
              "attrGroups": Array [],
              "body": Block {
                "children": Array [
                  ExpressionStatement {
                    "expression": Assign {
                      "kind": "assign",
                      "left": PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "evalParameters",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "this",
                        },
                      },
                      "operator": "=",
                      "right": Array {
                        "items": Array [
                          Entry {
                            "byRef": false,
                            "key": String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"a\\"",
                              "unicode": false,
                              "value": "a",
                            },
                            "kind": "entry",
                            "unpack": false,
                            "value": String {
                              "isDoubleQuote": true,
                              "kind": "string",
                              "raw": "\\"okey\\"",
                              "unicode": false,
                              "value": "okey",
                            },
                          },
                        ],
                        "kind": "array",
                        "shortForm": false,
                      },
                    },
                    "kind": "expressionstatement",
                  },
                  ExpressionStatement {
                    "expression": Call {
                      "arguments": Array [
                        PropertyLookup {
                          "kind": "propertylookup",
                          "offset": Identifier {
                            "kind": "identifier",
                            "name": "evalParameters",
                          },
                          "what": Variable {
                            "curly": false,
                            "kind": "variable",
                            "name": "this",
                          },
                        },
                        Name {
                          "kind": "name",
                          "name": "EXTR_SKIP",
                          "resolution": "uqn",
                        },
                      ],
                      "kind": "call",
                      "what": Name {
                        "kind": "name",
                        "name": "extract",
                        "resolution": "uqn",
                      },
                    },
                    "kind": "expressionstatement",
                  },
                  Echo {
                    "expressions": Array [
                      Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "a",
                      },
                    ],
                    "kind": "echo",
                    "shortForm": false,
                  },
                  Return {
                    "expr": Boolean {
                      "kind": "boolean",
                      "raw": "false",
                      "value": false,
                    },
                    "kind": "return",
                  },
                ],
                "kind": "block",
              },
              "byref": false,
              "isAbstract": false,
              "isFinal": false,
              "isStatic": false,
              "kind": "method",
              "name": Identifier {
                "kind": "identifier",
                "name": "evaluate",
              },
              "nullable": false,
              "type": null,
              "visibility": "public",
            },
          ],
          "extends": null,
          "implements": null,
          "isAbstract": false,
          "isAnonymous": false,
          "isFinal": false,
          "kind": "class",
          "name": Identifier {
            "kind": "identifier",
            "name": "A",
          },
        },
        ExpressionStatement {
          "expression": Assign {
            "kind": "assign",
            "left": Variable {
              "curly": false,
              "kind": "variable",
              "name": "a",
            },
            "operator": "=",
            "right": New {
              "arguments": Array [],
              "kind": "new",
              "what": Name {
                "kind": "name",
                "name": "A",
                "resolution": "uqn",
              },
            },
          },
          "kind": "expressionstatement",
        },
        ExpressionStatement {
          "expression": Call {
            "arguments": Array [],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "evaluate",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "a",
              },
            },
          },
          "kind": "expressionstatement",
        },
      ],
      "kind": "namespace",
      "name": "A",
      "withBrackets": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
