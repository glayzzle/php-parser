// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #39873 (number_format() breaks with locale & decimal points) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Name {
            "kind": "name",
            "name": "LC_ALL",
            "resolution": "uqn",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"ita\\"",
            "unicode": false,
            "value": "ita",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"it\\"",
            "unicode": false,
            "value": "it",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"Italian\\"",
            "unicode": false,
            "value": "Italian",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"it_IT\\"",
            "unicode": false,
            "value": "it_IT",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"it_IT.ISO8859-1\\"",
            "unicode": false,
            "value": "it_IT.ISO8859-1",
          },
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"it_IT.ISO_8859-1\\"",
            "unicode": false,
            "value": "it_IT.ISO_8859-1",
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "setlocale",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "num",
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Number {
            "kind": "number",
            "value": "0",
          },
          "right": String {
            "isDoubleQuote": true,
            "kind": "string",
            "raw": "\\"1234.56\\"",
            "unicode": false,
            "value": "1234.56",
          },
          "type": "+",
        },
      },
      "kind": "expressionstatement",
    },
    Echo {
      "expressions": Array [
        Call {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "num",
            },
            Number {
              "kind": "number",
              "value": "2",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "number_format",
            "resolution": "uqn",
          },
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
    Echo {
      "expressions": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "raw": "\\"\\\\n\\"",
          "unicode": false,
          "value": "
",
        },
      ],
      "kind": "echo",
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
