// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Extending the PhpToken class 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "code",
        },
        "operator": "=",
        "right": Nowdoc {
          "kind": "nowdoc",
          "label": "PHP",
          "raw": "<<<'PHP'
<?PHP
FUNCTION FOO() {
    ECHO \\"bar\\";
}
PHP",
          "value": "<?PHP
FUNCTION FOO() {
    ECHO \\"bar\\";
}",
        },
      },
      "kind": "expressionstatement",
    },
    Class {
      "attrGroups": Array [],
      "body": Array [
        PropertyStatement {
          "isStatic": false,
          "kind": "propertystatement",
          "properties": Array [
            Property {
              "attrGroups": Array [],
              "kind": "property",
              "name": Identifier {
                "kind": "identifier",
                "name": "extra",
              },
              "nullable": false,
              "readonly": false,
              "type": TypeReference {
                "kind": "typereference",
                "name": "int",
                "raw": "int",
              },
              "value": Number {
                "kind": "number",
                "value": "123",
              },
            },
          ],
          "visibility": "public",
        },
        Method {
          "arguments": Array [],
          "attrGroups": Array [],
          "body": Block {
            "children": Array [
              Return {
                "expr": Call {
                  "arguments": Array [
                    PropertyLookup {
                      "kind": "propertylookup",
                      "offset": Identifier {
                        "kind": "identifier",
                        "name": "text",
                      },
                      "what": Variable {
                        "curly": false,
                        "kind": "variable",
                        "name": "this",
                      },
                    },
                  ],
                  "kind": "call",
                  "what": Name {
                    "kind": "name",
                    "name": "strtolower",
                    "resolution": "uqn",
                  },
                },
                "kind": "return",
              },
            ],
            "kind": "block",
          },
          "byref": false,
          "isAbstract": false,
          "isFinal": false,
          "isStatic": false,
          "kind": "method",
          "name": Identifier {
            "kind": "identifier",
            "name": "getLoweredText",
          },
          "nullable": false,
          "type": TypeReference {
            "kind": "typereference",
            "name": "string",
            "raw": "string",
          },
          "visibility": "public",
        },
      ],
      "extends": Name {
        "kind": "name",
        "name": "PhpToken",
        "resolution": "uqn",
      },
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "name": Identifier {
        "kind": "identifier",
        "name": "MyPhpToken",
      },
    },
    Foreach {
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              Call {
                "arguments": Array [],
                "kind": "call",
                "what": PropertyLookup {
                  "kind": "propertylookup",
                  "offset": Identifier {
                    "kind": "identifier",
                    "name": "getLoweredText",
                  },
                  "what": Variable {
                    "curly": false,
                    "kind": "variable",
                    "name": "token",
                  },
                },
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          If {
            "alternate": null,
            "body": Block {
              "children": Array [
                Echo {
                  "expressions": Array [
                    String {
                      "isDoubleQuote": true,
                      "kind": "string",
                      "raw": "\\"Missing property!\\\\n\\"",
                      "unicode": false,
                      "value": "Missing property!
",
                    },
                  ],
                  "kind": "echo",
                  "shortForm": false,
                },
              ],
              "kind": "block",
            },
            "kind": "if",
            "shortForm": false,
            "test": Bin {
              "kind": "bin",
              "left": PropertyLookup {
                "kind": "propertylookup",
                "offset": Identifier {
                  "kind": "identifier",
                  "name": "extra",
                },
                "what": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "token",
                },
              },
              "right": Number {
                "kind": "number",
                "value": "123",
              },
              "type": "!==",
            },
          },
        ],
        "kind": "block",
      },
      "key": null,
      "kind": "foreach",
      "shortForm": false,
      "source": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "code",
          },
        ],
        "kind": "call",
        "what": StaticLookup {
          "kind": "staticlookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "tokenize",
          },
          "what": Name {
            "kind": "name",
            "name": "MyPhpToken",
            "resolution": "uqn",
          },
        },
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "token",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
