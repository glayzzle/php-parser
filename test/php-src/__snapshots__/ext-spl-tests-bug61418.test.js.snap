// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #61418: Segmentation fault using FiltesystemIterator & RegexIterator 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "fileIterator",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            Magic {
              "kind": "magic",
              "raw": "__DIR__",
              "value": "__DIR__",
            },
            StaticLookup {
              "kind": "staticlookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "KEY_AS_FILENAME",
              },
              "what": Name {
                "kind": "name",
                "name": "FilesystemIterator",
                "resolution": "uqn",
              },
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "FilesystemIterator",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "regexpIterator",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "fileIterator",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'#.*#'",
              "unicode": false,
              "value": "#.*#",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "RegexIterator",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [],
        "kind": "block",
      },
      "key": Variable {
        "curly": false,
        "kind": "variable",
        "name": "key",
      },
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "fileIterator",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "file",
      },
    },
    Unset {
      "kind": "unset",
      "variables": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "regexpIterator",
        },
      ],
    },
    Unset {
      "kind": "unset",
      "variables": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "fileIterator",
        },
      ],
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "dirIterator",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            Magic {
              "kind": "magic",
              "raw": "__DIR__",
              "value": "__DIR__",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "DirectoryIterator",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "regexpIterator2",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [
            Variable {
              "curly": false,
              "kind": "variable",
              "name": "dirIterator",
            },
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'#.*#'",
              "unicode": false,
              "value": "#.*#",
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "RegexIterator",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    Foreach {
      "body": Block {
        "children": Array [],
        "kind": "block",
      },
      "key": Variable {
        "curly": false,
        "kind": "variable",
        "name": "key",
      },
      "kind": "foreach",
      "shortForm": false,
      "source": Variable {
        "curly": false,
        "kind": "variable",
        "name": "dirIterator",
      },
      "value": Variable {
        "curly": false,
        "kind": "variable",
        "name": "file",
      },
    },
    Unset {
      "kind": "unset",
      "variables": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "regexpIterator2",
        },
      ],
    },
    Unset {
      "kind": "unset",
      "variables": Array [
        Variable {
          "curly": false,
          "kind": "variable",
          "name": "dirIterator",
        },
      ],
    },
    Inline {
      "kind": "inline",
      "raw": "
==DONE==",
      "value": "==DONE==",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
