// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #76275: Assertion failure in file cache when unserializing empty try_catch_array 1`] = `
Program {
  "children": Array [
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          Echo {
            "expressions": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "raw": "\\"Done\\"",
                "unicode": false,
                "value": "Done",
              },
            ],
            "kind": "echo",
            "shortForm": false,
          },
          Return {
            "expr": null,
            "kind": "return",
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Name {
          "kind": "name",
          "name": "PHP_VERSION_ID",
          "resolution": "uqn",
        },
        "right": Number {
          "kind": "number",
          "value": "70000",
        },
        "type": ">=",
      },
    },
    If {
      "alternate": null,
      "body": Block {
        "children": Array [
          Try {
            "always": null,
            "body": Block {
              "children": Array [],
              "kind": "block",
            },
            "catches": Array [
              Catch {
                "body": Block {
                  "children": Array [],
                  "kind": "block",
                },
                "kind": "catch",
                "variable": Variable {
                  "curly": false,
                  "kind": "variable",
                  "name": "e",
                },
                "what": Array [
                  Name {
                    "kind": "name",
                    "name": "com_exception",
                    "resolution": "uqn",
                  },
                ],
              },
            ],
            "kind": "try",
          },
          _Function {
            "arguments": Array [
              Parameter {
                "attrGroups": Array [],
                "byref": false,
                "flags": 0,
                "kind": "parameter",
                "name": Identifier {
                  "kind": "identifier",
                  "name": "length",
                },
                "nullable": false,
                "readonly": false,
                "type": null,
                "value": null,
                "variadic": false,
              },
            ],
            "attrGroups": Array [],
            "body": Block {
              "children": Array [
                Throw {
                  "kind": "throw",
                  "what": New {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'There is no suitable CSPRNG installed on your system'",
                        "unicode": false,
                        "value": "There is no suitable CSPRNG installed on your system",
                      },
                    ],
                    "kind": "new",
                    "what": Name {
                      "kind": "name",
                      "name": "Exception",
                      "resolution": "uqn",
                    },
                  },
                },
                Return {
                  "expr": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "''",
                    "unicode": false,
                    "value": "",
                  },
                  "kind": "return",
                },
              ],
              "kind": "block",
            },
            "byref": false,
            "kind": "function",
            "name": Identifier {
              "kind": "identifier",
              "name": "random_bytes",
            },
            "nullable": false,
            "type": null,
          },
        ],
        "kind": "block",
      },
      "kind": "if",
      "shortForm": false,
      "test": Unary {
        "kind": "unary",
        "type": "!",
        "what": Call {
          "arguments": Array [
            String {
              "isDoubleQuote": false,
              "kind": "string",
              "raw": "'random_bytes'",
              "unicode": false,
              "value": "random_bytes",
            },
          ],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "is_callable",
            "resolution": "uqn",
          },
        },
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
