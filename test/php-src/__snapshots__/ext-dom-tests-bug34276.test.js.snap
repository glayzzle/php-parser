// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #34276 (setAttributeNS and default namespace) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "xml",
        },
        "operator": "=",
        "right": Encapsed {
          "kind": "encapsed",
          "label": "HERE",
          "raw": "<<<HERE
<?xml version=\\"1.0\\" encoding=\\"ISO-8859-1\\" ?>
<foo xmlns=\\"http://www.example.com/ns/foo\\"
     xmlns:fubar=\\"http://www.example.com/ns/fubar\\" attra=\\"attra\\" />
HERE",
          "type": "heredoc",
          "value": Array [
            EncapsedPart {
              "curly": false,
              "expression": String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "<?xml version=\\"1.0\\" encoding=\\"ISO-8859-1\\" ?>
<foo xmlns=\\"http://www.example.com/ns/foo\\"
     xmlns:fubar=\\"http://www.example.com/ns/fubar\\" attra=\\"attra\\" />
",
                "unicode": false,
                "value": "<?xml version=\\"1.0\\" encoding=\\"ISO-8859-1\\" ?>
<foo xmlns=\\"http://www.example.com/ns/foo\\"
     xmlns:fubar=\\"http://www.example.com/ns/fubar\\" attra=\\"attra\\" />",
              },
              "kind": "encapsedpart",
              "syntax": null,
            },
          ],
        },
      },
      "kind": "expressionstatement",
    },
    _Function {
      "arguments": Array [
        Parameter {
          "attrGroups": Array [],
          "byref": false,
          "flags": 0,
          "kind": "parameter",
          "name": Identifier {
            "kind": "identifier",
            "name": "elems",
          },
          "nullable": false,
          "readonly": false,
          "type": null,
          "value": null,
          "variadic": false,
        },
      ],
      "attrGroups": Array [],
      "body": Block {
        "children": Array [
          Foreach {
            "body": Block {
              "children": Array [
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "nodeName",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "elem",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "var_dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
                ExpressionStatement {
                  "expression": Call {
                    "arguments": Array [
                      PropertyLookup {
                        "kind": "propertylookup",
                        "offset": Identifier {
                          "kind": "identifier",
                          "name": "childNodes",
                        },
                        "what": Variable {
                          "curly": false,
                          "kind": "variable",
                          "name": "elem",
                        },
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "dump",
                      "resolution": "uqn",
                    },
                  },
                  "kind": "expressionstatement",
                },
              ],
              "kind": "block",
            },
            "key": null,
            "kind": "foreach",
            "shortForm": false,
            "source": Variable {
              "curly": false,
              "kind": "variable",
              "name": "elems",
            },
            "value": Variable {
              "curly": false,
              "kind": "variable",
              "name": "elem",
            },
          },
        ],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": Identifier {
        "kind": "identifier",
        "name": "dump",
      },
      "nullable": false,
      "type": null,
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "dom",
        },
        "operator": "=",
        "right": New {
          "arguments": Array [],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "DOMDocument",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Variable {
            "curly": false,
            "kind": "variable",
            "name": "xml",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "loadXML",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "dom",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "curly": false,
          "kind": "variable",
          "name": "foo",
        },
        "operator": "=",
        "right": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "documentElement",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "dom",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'http://www.example.com/ns/foo'",
                "unicode": false,
                "value": "http://www.example.com/ns/foo",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'attra'",
                "unicode": false,
                "value": "attra",
              },
            ],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "hasAttributeNS",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "foo",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'http://www.example.com/ns/foo'",
                "unicode": false,
                "value": "http://www.example.com/ns/foo",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'attra'",
                "unicode": false,
                "value": "attra",
              },
            ],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "getAttributeNS",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "foo",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'http://www.example.com/ns/foo'",
            "unicode": false,
            "value": "http://www.example.com/ns/foo",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'attra'",
            "unicode": false,
            "value": "attra",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'attranew'",
            "unicode": false,
            "value": "attranew",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "setAttributeNS",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "foo",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'http://www.example.com/ns/fubar'",
            "unicode": false,
            "value": "http://www.example.com/ns/fubar",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'attrb'",
            "unicode": false,
            "value": "attrb",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'attrbnew'",
            "unicode": false,
            "value": "attrbnew",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "setAttributeNS",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "foo",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'http://www.example.com/ns/foo'",
            "unicode": false,
            "value": "http://www.example.com/ns/foo",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'attrc'",
            "unicode": false,
            "value": "attrc",
          },
          String {
            "isDoubleQuote": false,
            "kind": "string",
            "raw": "'attrc'",
            "unicode": false,
            "value": "attrc",
          },
        ],
        "kind": "call",
        "what": PropertyLookup {
          "kind": "propertylookup",
          "offset": Identifier {
            "kind": "identifier",
            "name": "setAttributeNS",
          },
          "what": Variable {
            "curly": false,
            "kind": "variable",
            "name": "foo",
          },
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'http://www.example.com/ns/foo'",
                "unicode": false,
                "value": "http://www.example.com/ns/foo",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'attra'",
                "unicode": false,
                "value": "attra",
              },
            ],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "getAttributeNS",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "foo",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'http://www.example.com/ns/fubar'",
                "unicode": false,
                "value": "http://www.example.com/ns/fubar",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'attrb'",
                "unicode": false,
                "value": "attrb",
              },
            ],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "getAttributeNS",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "foo",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'http://www.example.com/ns/foo'",
                "unicode": false,
                "value": "http://www.example.com/ns/foo",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'attrc'",
                "unicode": false,
                "value": "attrc",
              },
            ],
            "kind": "call",
            "what": PropertyLookup {
              "kind": "propertylookup",
              "offset": Identifier {
                "kind": "identifier",
                "name": "getAttributeNS",
              },
              "what": Variable {
                "curly": false,
                "kind": "variable",
                "name": "foo",
              },
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Print {
        "expression": Call {
          "arguments": Array [],
          "kind": "call",
          "what": PropertyLookup {
            "kind": "propertylookup",
            "offset": Identifier {
              "kind": "identifier",
              "name": "saveXML",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "dom",
            },
          },
        },
        "kind": "print",
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
