// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php-src tests Bug #75355 (preg_quote() does not quote # control character) 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'#'",
                "unicode": false,
                "value": "#",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "preg_quote",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          Call {
            "arguments": Array [
              Bin {
                "kind": "bin",
                "left": Bin {
                  "kind": "bin",
                  "left": String {
                    "isDoubleQuote": false,
                    "kind": "string",
                    "raw": "'~^('",
                    "unicode": false,
                    "value": "~^(",
                  },
                  "right": Call {
                    "arguments": Array [
                      String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'hello#world'",
                        "unicode": false,
                        "value": "hello#world",
                      },
                      String {
                        "isDoubleQuote": false,
                        "kind": "string",
                        "raw": "'~'",
                        "unicode": false,
                        "value": "~",
                      },
                    ],
                    "kind": "call",
                    "what": Name {
                      "kind": "name",
                      "name": "preg_quote",
                      "resolution": "uqn",
                    },
                  },
                  "type": ".",
                },
                "right": String {
                  "isDoubleQuote": false,
                  "kind": "string",
                  "raw": "')\\\\z~x'",
                  "unicode": false,
                  "value": ")\\\\z~x",
                },
                "type": ".",
              },
              String {
                "isDoubleQuote": false,
                "kind": "string",
                "raw": "'hello#world'",
                "unicode": false,
                "value": "hello#world",
              },
              Variable {
                "curly": false,
                "kind": "variable",
                "name": "m",
              },
            ],
            "kind": "call",
            "what": Name {
              "kind": "name",
              "name": "preg_match",
              "resolution": "uqn",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
    ExpressionStatement {
      "expression": Call {
        "arguments": Array [
          OffsetLookup {
            "kind": "offsetlookup",
            "offset": Number {
              "kind": "number",
              "value": "1",
            },
            "what": Variable {
              "curly": false,
              "kind": "variable",
              "name": "m",
            },
          },
        ],
        "kind": "call",
        "what": Name {
          "kind": "name",
          "name": "var_dump",
          "resolution": "uqn",
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
