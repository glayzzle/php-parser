// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/strings/setlocale_basic3.phpt
  it("Test setlocale() function : basic functionality - passing multiple locales as argument", function () {
    expect(parser.parseCode("<?php\n/* Test the setlocale() when multiple locales are provided as argument */\nfunction list_system_locales() {\n  // start the buffering of next command to internal output buffer\n  ob_start();\n  // run the command 'locale -a' to fetch all locales available in the system\n  system('locale -a');\n  // get the contents from the internal output buffer\n  $all_locales = ob_get_contents();\n  // fflush and end the output buffering to internal output buffer\n  ob_end_clean();\n  $system_locales = explode(\"\\n\", $all_locales);\n  // return all the locale found in the system\n  return $system_locales;\n}\n/* Collect existing system locales and get three locales that can be use to\n   pass as argument to setlocale() */\necho \"*** Testing setlocale() by passing multiple locales as argument ***\\n\";\n//set of currency symbol according to above list of locales\n$currency_symbol = array(\n  \"en_US.utf8\" => \"USD\",\n  \"en_AU.utf8\" => \"AUD\",\n  \"ko_KR.utf8\" => \"KRW\",\n  \"zh_CN.utf8\" => \"CNY\",\n  \"de_DE.utf8\" => \"EUR\",\n  \"es_EC.utf8\" => \"USD\",\n  \"fr_FR.utf8\" => \"EUR\",\n  \"ja_JP.utf8\" => \"JPY\",\n  \"el_GR.utf8\" => \"EUR\",\n  \"nl_NL.utf8\" =>\"EUR\"\n);\n// gather all the locales installed in the system\n$all_system_locales = list_system_locales();\n// Now check for three locales that is present in the system and use that as argument to setlocale()\nif( in_array(\"en_US.utf8\",$all_system_locales) ||\n    in_array(\"Ko_KR.utf8\",$all_system_locales) ||\n    in_array(\"zh_CN.utf8\",$all_system_locales) ) {\n  echo \"-- Testing setlocale() by giving 'category' as LC_ALL & multiple locales(en_US.utf8, Ko_KR.utf8, zh_CN.utf8) --\\n\";\n  // call setlocale()\n  $new_locale = setlocale(LC_ALL, \"en_US.utf8\", \"Ko_KR.utf8\", \"zh_CN.utf8\");\n  // dump the name of the new locale set by setlocale()\n  var_dump($new_locale);\n  // check that new locale setting is effective\n  // use localeconv() to get the details of currently set locale\n  $locale_info = localeconv();\n  $new_currency = trim($locale_info['int_curr_symbol']);\n  echo \"Checking currency settings in the new locale, expected: \".$currency_symbol[$new_locale].\", Found: \".$new_currency.\"\\n\";\n  echo \"Test \";\n  if( trim($currency_symbol[$new_locale]) == $new_currency) {\n    echo \"PASSED.\\n\";\n  } else {\n    echo \"FAILED.\\n\";\n  }\n}\necho \"Done\\n\";\n?>")).toMatchSnapshot();
  });
});
