// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/strings/strripos_variation1.phpt
  it("Test strripos() function : usage variations - double quoted strings for 'haystack' & 'needle' arguments", function () {
    expect(parser.parseCode("<?php\n/* Test strripos() function by passing double quoted strings for 'haystack' & 'needle' arguments */\necho \"*** Testing strripos() function: with double quoted strings ***\\n\";\n$haystack = \"Hello,\\t\\n\\0\\n  $&!#%()*<=>?@hello123456he \\x234 \\101 \";\n$needles = array(\n          //regular strings\n/*1*/\t  \"l\",\n          \"L\",\n          \"HELLO\",\n          \"hEllo\",\n          //escape characters\n/*5*/\t  \"\\t\",\n          \"\\T\",  //invalid input\n          \"     \",\n          \"\\n\",\n          \"\\N\",  //invalid input\n          \"\n\",  //new line\n          //nulls\n/*11*/\t  \"\\0\",\n          //boolean false\n/*14*/\t  FALSE,\n          false,\n          //empty string\n/*16*/\t  \"\",\n          //special chars\n/*17*/\t  \" \",\n          \"$\",\n          \" $\",\n          \"&\",\n          \"!#\",\n          \"()\",\n          \"<=>\",\n          \">\",\n          \"=>\",\n          \"?\",\n          \"@\",\n          \"@hEllo\",\n/*29*/\t  \"12345\", //decimal numeric string\n          \"\\x23\",  //hexadecimal numeric string\n          \"#\",  //respective ASCII char of \\x23\n          \"\\101\",  //octal numeric string\n          \"A\",  //respective ASCII char of \\101\n          \"456HEE\",  //numerics + chars\n          $haystack  //haystack as needle\n);\n/* loop through to get the position of the needle in haystack string */\n$count = 1;\nforeach ($needles as $needle) {\n  echo \"-- Iteration $count --\\n\";\n  var_dump( strripos($haystack, $needle) );\n  var_dump( strripos($haystack, $needle, 1) );\n  var_dump( strripos($haystack, $needle, 20) );\n  var_dump( strripos($haystack, $needle, -1) );\n  $count++;\n}\n?>")).toMatchSnapshot();
  });
});
