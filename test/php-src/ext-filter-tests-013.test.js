// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/filter/tests/013.phpt
  it("filter_var() and flags", function () {
    expect(parser.parseCode("<?php\nvar_dump(filter_var(\"  234\", FILTER_VALIDATE_INT));\nvar_dump(filter_var(\"234    \", FILTER_VALIDATE_INT));\nvar_dump(filter_var(\"  234  \", FILTER_VALIDATE_INT));\nvar_dump(filter_var(\"0xff\", FILTER_VALIDATE_INT, array(\"flags\"=>FILTER_FLAG_ALLOW_HEX)));\nvar_dump(filter_var(\"0Xff\", FILTER_VALIDATE_INT, array(\"flags\"=>FILTER_FLAG_ALLOW_HEX)));\nvar_dump(filter_var(\"0xFF\", FILTER_VALIDATE_INT, array(\"flags\"=>FILTER_FLAG_ALLOW_HEX)));\nvar_dump(filter_var(\"0XFF\", FILTER_VALIDATE_INT, array(\"flags\"=>FILTER_FLAG_ALLOW_HEX)));\nvar_dump(filter_var(\"07\", FILTER_VALIDATE_INT, array(\"flags\"=>FILTER_FLAG_ALLOW_OCTAL)));\nvar_dump(filter_var(\"0xff0000\", FILTER_VALIDATE_INT, array(\"flags\"=>FILTER_FLAG_ALLOW_HEX)));\nvar_dump(filter_var(\"0666\", FILTER_VALIDATE_INT, array(\"flags\"=>FILTER_FLAG_ALLOW_OCTAL)));\nvar_dump(filter_var(\"08\", FILTER_VALIDATE_INT, array(\"flags\"=>FILTER_FLAG_ALLOW_OCTAL)));\nvar_dump(filter_var(\"00\", FILTER_VALIDATE_INT, array(\"flags\"=>FILTER_FLAG_ALLOW_OCTAL)));\nvar_dump(filter_var(\"000\", FILTER_VALIDATE_INT, array(\"flags\"=>FILTER_FLAG_ALLOW_OCTAL)));\nvar_dump(filter_var(\"-0xff\", FILTER_VALIDATE_INT, array(\"flags\"=>FILTER_FLAG_ALLOW_HEX)));\nvar_dump(filter_var(\"-0Xff\", FILTER_VALIDATE_INT, array(\"flags\"=>FILTER_FLAG_ALLOW_HEX)));\nvar_dump(filter_var(\"-0xFF\", FILTER_VALIDATE_INT, array(\"flags\"=>FILTER_FLAG_ALLOW_HEX)));\nvar_dump(filter_var(\"-0XFF\", FILTER_VALIDATE_INT, array(\"flags\"=>FILTER_FLAG_ALLOW_HEX)));\nvar_dump(filter_var(\"-07\", FILTER_VALIDATE_INT, array(\"flags\"=>FILTER_FLAG_ALLOW_OCTAL)));\nvar_dump(filter_var(\"-0xff0000\", FILTER_VALIDATE_INT, array(\"flags\"=>FILTER_FLAG_ALLOW_HEX)));\nvar_dump(filter_var(\"-0666\", FILTER_VALIDATE_INT, array(\"flags\"=>FILTER_FLAG_ALLOW_OCTAL)));\nvar_dump(filter_var(\"6\", FILTER_VALIDATE_INT, array(\"options\" => array(\"min_range\"=>1, \"max_range\"=>7))));\nvar_dump(filter_var(\"6\", FILTER_VALIDATE_INT, array(\"options\" => array(\"min_range\"=>0, \"max_range\"=>5))));\nvar_dump(filter_var(-1, FILTER_VALIDATE_INT, array(\"options\" => array(\"min_range\"=>1, \"max_range\"=>7))));\nvar_dump(filter_var(-1, FILTER_VALIDATE_INT, array(\"options\" => array(\"min_range\"=>-4, \"max_range\"=>7))));\nvar_dump(filter_var(\"\", FILTER_VALIDATE_INT, array(\"options\" => array(\"min_range\"=>-4, \"max_range\"=>7))));\nvar_dump(filter_var(\"\", FILTER_VALIDATE_INT, array(\"options\" => array(\"min_range\"=>2, \"max_range\"=>7))));\nvar_dump(filter_var(\"\", FILTER_VALIDATE_INT, array(\"options\" => array(\"min_range\"=>-5, \"max_range\"=>-3))));\nvar_dump(filter_var(345, FILTER_VALIDATE_INT, array(\"options\" => array(\"min_range\"=>500, \"max_range\"=>100))));\nvar_dump(filter_var(\"0ff\", FILTER_VALIDATE_INT));\nvar_dump(filter_var(\"010\", FILTER_VALIDATE_INT));\n// Explicit octal prefix\nvar_dump(filter_var(\"0o16\", FILTER_VALIDATE_INT, array(\"flags\"=>FILTER_FLAG_ALLOW_OCTAL)));\nvar_dump(filter_var(\"0O16\", FILTER_VALIDATE_INT, array(\"flags\"=>FILTER_FLAG_ALLOW_OCTAL)));\nvar_dump(filter_var(\"0o016\", FILTER_VALIDATE_INT, array(\"flags\"=>FILTER_FLAG_ALLOW_OCTAL)));\necho \"Done\\n\";\n?>")).toMatchSnapshot();
  });
});
