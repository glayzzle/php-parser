// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/strings/vprintf_variation10.phpt
  it("Test vprintf() function : usage variations - char formats with non-char values", function () {
    expect(parser.parseCode("<?php\n/* Prototype  : string vprintf(string format, array args)\n * Description: Output a formatted string\n * Source code: ext/standard/formatted_print.c\n*/\n/*\n * Test vprintf() when different char formats and non-char values are passed to\n * the '$format' and '$args' arguments of the function\n*/\necho \"*** Testing vprintf() : char formats and non-char values ***\\n\";\n// defining an array of various char formats\n$formats =\n  '%c %+c %-c\n   %lc %4c %-4c\n   %10.4c %-10.4c %04c %04.4c\n   %\\'10c %\\'10c %\\'$10c %\\'_10c\n   %3$c %4$c %1$c %2$c';\n// Arrays of non char values for the format defined in $format.\n// Each sub array contains non char values which correspond to each format in $format\n$args_array = array(\n  // array of float values\n  array(65.8, -65.8, +66.8,\n        93.2, 126.8, -126.49,\n        35.44, -35.68, 32.99, -32.00,\n        -61.51, 61.51, 50.49, -54.50,\n        83.33, +84.44, 81.11, 82.22),\n  // array of int values\n  array(65, -65, +66,\n        169, 126, -126,\n        35, -35, 32, -32,\n        -61, 61, 50, -54,\n        83, +84, 81, 82),\n  // array of strings\n  array(\" \", ' ', 'hello',\n        '123hello', '-123hello', '+123hello',\n        \"\\12345678hello\", \"-\\12345678hello\", '0123456hello', 'h123456ello',\n        \"1234hello\", \"hello\\0world\", \"NULL\", \"true\",\n        \"3\", \"4\", '1', '2'),\n  // different arrays\n  array( array(0), array(1, 2), array(-1, -1),\n         array(\"123\"), array('-123'), array(\"-123\"),\n         array(true), array(false), array(TRUE), array(FALSE),\n         array(\"123hello\"), array(\"1\", \"2\"), array('123hello'), array(12=>\"12twelve\"),\n         array(\"3\"), array(\"4\"), array(\"1\"), array(\"2\") ),\n  // array of boolean data\n  array( true, TRUE, false,\n         TRUE, FALSE, 1,\n         true, false, TRUE, FALSE,\n         0, 1, 1, 0,\n         1, TRUE, 0, FALSE),\n);\n// looping to test vprintf() with different char formats from the above $format array\n// and with non-char values from the above $args_array array\n$counter = 1;\nforeach($args_array as $args) {\n  echo \"\\n-- Iteration $counter --\\n\";\n  $result = vprintf($formats, $args);\n  echo \"\\n\";\n  var_dump($result);\n  $counter++;\n}\n?>")).toMatchSnapshot();
  });
});
