// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/mysqli_fork.phpt
  it("Forking a child and using the same connection.", function () {
    expect(parser.parseCode("<?php\n    require_once(\"table.inc\");\n    $res = mysqli_query($link, \"SELECT 'dumped by the parent' AS message\");\n    $pid = pcntl_fork();\n    switch ($pid) {\n        case -1:\n            printf(\"[001] Cannot fork child\");\n            break;\n        case 0:\n            /* child */\n            exit(0);\n            break;\n        default:\n            /* parent */\n            $status = null;\n            $wait_id = pcntl_waitpid($pid, $status);\n            if (pcntl_wifexited($status) && (0 != ($tmp = pcntl_wexitstatus($status)))) {\n                printf(\"Exit code: %s\\n\", (pcntl_wifexited($status)) ? pcntl_wexitstatus($status) : 'n/a');\n                printf(\"Signal: %s\\n\", (pcntl_wifsignaled($status)) ? pcntl_wtermsig($status) : 'n/a');\n                printf(\"Stopped: %d\\n\", (pcntl_wifstopped($status)) ? pcntl_wstopsig($status) : 'n/a');\n            }\n            var_dump(mysqli_fetch_assoc($res));\n            mysqli_free_result($res);\n            break;\n    }\n    if (@mysqli_query($link, \"SELECT id FROM test WHERE id = 1\"))\n        printf(\"[003] Expecting error and closed connection, child exit should have closed connection\\n\");\n    else if ((($errno = mysqli_errno($link)) == 0) || ('' == ($error = mysqli_error($link))))\n        printf(\"[004] Expecting error string and error code from MySQL, got errno = %s/%s, error = %s/%s\\n\",\n            gettype($errno), $errno, gettype($error), $error);\n    mysqli_close($link);\n    if (!$link = my_mysqli_connect($host, $user, $passwd, $db, $port, $socket))\n        printf(\"[005] Cannot connect to the server using host=%s, user=%s, passwd=***, dbname=%s, port=%s, socket=%s\\n\",\n            $host, $user, $db, $port, $socket);\n    /* non trivial tests require a message list for parent-child communication */\n    if (!mysqli_query($link, \"DROP TABLE IF EXISTS messages\"))\n        printf(\"[006] [%d] %s\\n\", mysqli_error($link), mysqli_errno($link));\n    if (!mysqli_query($link, \"CREATE TABLE messages(\n        msg_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,\n        msg_time TIMESTAMP,\n        pid INT NOT NULL,\n        sender ENUM('child', 'parent') NOT NULL,\n        msg TEXT) ENGINE = InnoDB\"))\n        printf(\"[007] [%d] %s\\n\", mysqli_error($link), mysqli_errno($link));\n    mysqli_autocommit($link, false);\n    if (!$res = mysqli_query($link, \"SELECT id, label FROM test ORDER BY id ASC LIMIT 3\", MYSQLI_USE_RESULT))\n        printf(\"[008] [%d] %s\\n\", mysqli_error($link), mysqli_errno($link));\n    $pid = pcntl_fork();\n    switch ($pid) {\n        case -1:\n            printf(\"[009] Cannot fork child\");\n            break;\n        case 0:\n            /* child */\n            if (!($plink = my_mysqli_connect($host, $user, $passwd, $db, $port, $socket)) || !mysqli_autocommit($plink, true))\n                exit(mysqli_errno($plink));\n            $sql = sprintf(\"INSERT INTO messages(pid, sender, msg) VALUES (%d, 'child', '%%s')\", posix_getpid());\n            if (!mysqli_query($plink, sprintf($sql, 'start')))\n                exit(mysqli_errno($plink));\n            $parent_sql = sprintf(\"SELECT msg_id, msg_time, msg FROM messages WHERE pid = %d  AND sender = 'parent' ORDER BY msg_id DESC LIMIT 1\", posix_getppid());\n            $msg_id = 0;\n            while ($row = mysqli_fetch_assoc($res)) {\n                /* send row to parent */\n                ob_start();\n                var_dump($row);\n                $tmp = ob_get_contents();\n                ob_end_clean();\n                if (!mysqli_query($plink, sprintf($sql, $tmp)))\n                    exit(mysqli_errno($plink));\n                /* let the parent reply... */\n                $start = time();\n                do {\n                    usleep(100);\n                    if (!$pres = mysqli_query($plink, $parent_sql))\n                        continue;\n                    $tmp = mysqli_fetch_assoc($pres);\n                    mysqli_free_result($pres);\n                    if (!$tmp || $tmp['msg_id'] == $msg_id)\n                        /* no new message */\n                        continue;\n                    if ($tmp['msg'] == 'stop')\n                        break 2;\n                    $msg_id = $tmp['msg_id'];\n                    break;\n                } while ((time() - $start) < 5);\n            }\n            if (!mysqli_query($plink, sprintf($sql, 'stop')) || !mysqli_commit($link))\n                exit(mysqli_errno($plink));\n            exit(0);\n            break;\n        default:\n            /* parent */\n            if (!$plink = my_mysqli_connect($host, $user, $passwd, $db, $port, $socket))\n                    printf(\"[010] Cannot connect to the server using host=%s, user=%s, passwd=***, dbname=%s, port=%s, socket=%s\\n\",\n                    $host, $user, $db, $port, $socket);\n            $status = null;\n            $start = time();\n            $sql = sprintf(\"SELECT msg_id, msg_time, msg FROM messages WHERE pid = %d AND sender = 'child' ORDER BY msg_id DESC LIMIT 1\", $pid);\n            $parent_sql = sprintf(\"INSERT INTO messages (pid, sender, msg) VALUES (%d, 'parent', '%%s')\", posix_getpid());\n            $last_msg_id = 0;\n            $num_rows = 0;\n            do {\n                $wait_id = pcntl_waitpid($pid, $status, WNOHANG);\n                if ($pres = mysqli_query($plink, $sql)) {\n                    $row = mysqli_fetch_assoc($pres);\n                    if ($row && $row['msg_id'] != $last_msg_id) {\n                        $last_msg_id = $row['msg_id'];\n                        switch ($row['msg']) {\n                            case 'start':\n                                break;\n                            case 'stop':\n                                break 2;\n                            default:\n                                /* client has started fetching rows */\n                                $client_row = $row['msg'];\n                                $num_rows++;\n                                if ($num_rows > 3) {\n                                    printf(\"[011] Child has fetched more than three rows!\\n\");\n                                    var_dump($client_row);\n                                    if (!mysqli_query($plink, sprintf($parent_sql, 'stop'))) {\n                                        printf(\"[012] Parent cannot inform child\\n\", mysqli_errno($plink), mysqli_error($plink));\n                                    }\n                                    break 2;\n                                }\n                                if (!$parent_row = mysqli_fetch_assoc($res)) {\n                                    printf(\"[013] Parent cannot fetch row %d\\n\", $num_rows, mysqli_errno($link), mysqli_error($link));\n                                    if (!mysqli_query($plink, sprintf($parent_sql, 'stop'))) {\n                                        printf(\"[014] Parent cannot inform child\\n\", mysqli_errno($plink), mysqli_error($plink));\n                                    }\n                                    break 2;\n                                }\n                                ob_start();\n                                var_dump($parent_row);\n                                $parent_row = ob_get_contents();\n                                ob_end_clean();\n                                if ($parent_row != $client_row) {\n                                    printf(\"[015] Child indicates different results than parent.\\n\");\n                                    var_dump($client_row);\n                                    var_dump($parent_row);\n                                    if (!mysqli_query($plink, sprintf($parent_sql, 'stop'))) {\n                                        printf(\"[016] Parent cannot inform child\\n\", mysqli_errno($plink), mysqli_error($plink));\n                                    }\n                                    break 2;\n                                }\n                                if (!mysqli_query($plink, sprintf($parent_sql, 'continue'))) {\n                                    printf(\"[017] Parent cannot inform child to continue.\\n\", mysqli_errno($plink), mysqli_error($plink));\n                                }\n                                break;\n                        }\n                    }\n                    mysqli_free_result($pres);\n                }\n                usleep(100);\n            } while (((time() - $start) < 5) && ($num_rows < 3));\n            mysqli_close($plink);\n            $wait_id = pcntl_waitpid($pid, $status);\n            if (pcntl_wifexited($status) && (0 != ($tmp = pcntl_wexitstatus($status)))) {\n                printf(\"Exit code: %s\\n\", (pcntl_wifexited($status)) ? pcntl_wexitstatus($status) : 'n/a');\n                printf(\"Signal: %s\\n\", (pcntl_wifsignaled($status)) ? pcntl_wtermsig($status) : 'n/a');\n                printf(\"Stopped: %d\\n\", (pcntl_wifstopped($status)) ? pcntl_wstopsig($status) : 'n/a');\n            }\n            break;\n    }\n    mysqli_free_result($res);\n    mysqli_close($link);\n    if (!$link = my_mysqli_connect($host, $user, $passwd, $db, $port, $socket))\n        printf(\"[018] Cannot connect to the server using host=%s, user=%s, passwd=***, dbname=%s, port=%s, socket=%s\\n\",\n            $host, $user, $db, $port, $socket);\n    if (!$res = mysqli_query($link, \"SELECT sender, msg FROM messages ORDER BY msg_id ASC\"))\n        printf(\"[019] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    while ($row = mysqli_fetch_assoc($res))\n        printf(\"%10s %s\\n\", $row['sender'], substr($row['msg'], 0, 5));\n    mysqli_free_result($res);\n    print \"done!\";\n?>")).toMatchSnapshot();
  });
});
