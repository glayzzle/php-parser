// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/pdo_oci/tests/pdo_oci_stream_2a.phpt
  it("PDO OCI: Inserts 1K with 1 number and 2 LOB columns (stress test)", function () {
    expect(parser.parseCode("<?php\nrequire(__DIR__ . '/../../pdo/tests/pdo_test.inc');\n$db = PDOTest::factory();\n$query = \"begin execute immediate 'drop table pdo_oci_stream_2'; exception when others then if sqlcode <> -942 then raise; end if; end;\";\n$stmt = $db->prepare($query);\n$stmt->execute();\n$query = \"create table pdo_oci_stream_2 (id number, data1 blob, data2 blob)\";\n$stmt = $db->prepare($query);\n$stmt->execute();\nfunction do_insert($db, $id, $data1, $data2)\n{\n    $db->beginTransaction();\n    $stmt = $db->prepare(\"insert into pdo_oci_stream_2 (id, data1, data2) values (:id, empty_blob(), empty_blob()) returning data1, data2 into :blob1, :blob2\");\n    $stmt->bindParam(':id', $id);\n    $stmt->bindParam(':blob1', $blob1, PDO::PARAM_LOB);\n    $stmt->bindParam(':blob2', $blob2, PDO::PARAM_LOB);\n    $blob1 = null;\n    $blob2 = null;\n    $stmt->execute();\n    fwrite($blob1, $data1);\n    fclose($blob1);\n    fwrite($blob2, $data2);\n    fclose($blob2);\n    $db->commit();\n}\n$a1 = str_repeat('a', 4086);\n$a2 = str_repeat('b', 4087);\n$a3 = str_repeat('c', 4088);\n$a4 = str_repeat('d', 4089);\n$a5 = str_repeat('e', 4090);\n$a6 = str_repeat('f', 4091);\n$a7 = str_repeat('g', 4092);\n$a8 = str_repeat('h', 4093);\n$a9 = str_repeat('i', 4094);\n$a10 = str_repeat('j', 4095);\nprintf(\"Inserting 1000 Records ... \");\nfor($i=0; $i<100; $i++) {\n    do_insert($db, $i * 10 + 1, $a1, $a10);\n    do_insert($db, $i * 10 + 2, $a2, $a9);\n    do_insert($db, $i * 10 + 3, $a3, $a8);\n    do_insert($db, $i * 10 + 4, $a4, $a7);\n    do_insert($db, $i * 10 + 5, $a5, $a6);\n    do_insert($db, $i * 10 + 6, $a6, $a5);\n    do_insert($db, $i * 10 + 7, $a7, $a4);\n    do_insert($db, $i * 10 + 8, $a8, $a3);\n    do_insert($db, $i * 10 + 9, $a9, $a2);\n    do_insert($db, $i * 10 + 10, $a10, $a1);\n}\nprintf(\"Done\\n\");\n/* Cleanup is done in pdo_oci_stream_2b.phpt */\n//$db->exec(\"drop table pdo_oci_stream_2\");\n?>")).toMatchSnapshot();
  });
});
