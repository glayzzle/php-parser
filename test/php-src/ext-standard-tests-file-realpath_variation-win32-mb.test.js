// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/file/realpath_variation-win32-mb.phpt
  it("Test realpath() function: usage variation", function () {
    expect(parser.parseCode("<?php\nrequire __DIR__.'/file.inc';\necho \"*** Testing realpath(): usage variations ***\\n\";\n$name_prefix = __DIR__;\n$filename = \"$name_prefix/realpath_variation_私はガラスを食べられます/home/tests/realpath_variation_私はガラスを食べられます.tmp\";\nmkdir(\"$name_prefix/realpath_variation_私はガラスを食べられます/home/tests/\", 0777, true);\necho \"\\n*** Testing realpath() with filename stored inside a object ***\\n\";\n// create a temp file\n$file_handle = fopen($filename, \"w\");\nfclose($file_handle);\n// creating object with members as filename\nclass object_temp {\n  public $filename;\n  function __construct($file) {\n    $this->filename = $file;\n  }\n}\n$obj1 = new object_temp(\"$name_prefix/realpath_variation_私はガラスを食べられます/../././realpath_variation_私はガラスを食べられます/home/tests/realpath_variation_私はガラスを食べられます.tmp\");\n$obj2 = new object_temp(\"$name_prefix/realpath_variation_私はガラスを食べられます/home/..///realpath_variation_私はガラスを食べられます.tmp\");\nvar_dump( realpath($obj1->filename) );\nvar_dump( realpath($obj2->filename) );\necho \"\\n*** Testing realpath() with filename stored in an array ***\\n\";\n$file_arr = array (\n  \"$name_prefix////realpath_variation_私はガラスを食べられます/home/tests/realpath_variation_私はガラスを食べられます.tmp\",\n  \"$name_prefix/./realpath_variation_私はガラスを食べられます/home/../home//tests//..//..//..//home//realpath_variation_私はガラスを食べられます.tmp/\"\n);\nvar_dump( realpath($file_arr[0]) );\nvar_dump( realpath($file_arr[1]) );\necho \"\\n*** Testing realpath() with filename as empty string, NULL and single space ***\\n\";\n$file_string = array (\n  /* filename as spaces */\n  \" \",\n  ' ',\n  /* empty filename */\n  \"\",\n  '',\n );\nfor($loop_counter = 0; $loop_counter < count($file_string); $loop_counter++) {\n  echo \"-- Iteration\";\n  echo $loop_counter + 1;\n  echo \" --\\n\";\n  var_dump( realpath($file_string[$loop_counter]) );\n}\necho \"Done\\n\";\n?>")).toMatchSnapshot();
  });
});
