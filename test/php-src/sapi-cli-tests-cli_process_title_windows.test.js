// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // sapi/cli/tests/cli_process_title_windows.phpt
  it("Check cli_process_title support in Windows", function () {
    expect(parser.parseCode("<?php\n// On Windows 8 and Server 2012, this test does not work the same way. When the PowerShell\n// command \"get-process\" is executed using shell_exec, it overwrites the ConsoleTitle with\n// \"Windows PowerShell\" and this title ONLY clears away when the php.exe process exits\n// i.e. the test finishes.\n// On older versions like Windows 7 though, running the command appends\n// \"Windows PowerShell\" to the ConsoleTitle temporarily and the title reverts\n// back to the original once shell_exec is done.\n// Hence on Windows 8, we don't verify that the title is actually set by\n// cli_set_process_title(). We're only making the API calls to ensure there are\n// no warnings/errors.\n$is_windows8_or_above = PHP_WINDOWS_VERSION_MAJOR >= 10 || PHP_WINDOWS_VERSION_MAJOR >= 6 && PHP_WINDOWS_VERSION_MINOR >= 2;\necho \"*** Testing setting the process title ***\\n\";\n$original_title = uniqid(\"title\", true);\n$pid = getmypid();\nif (cli_set_process_title($original_title) === true)\n  echo \"Successfully set title\\n\";\nif ($is_windows8_or_above)\n{\n  $loaded_title = $original_title;\n}\nelse\n{\n  $loaded_title = shell_exec(\"PowerShell -NoProfile \\\"get-process cmd*,powershell* | Select-Object mainWindowTitle | ft -hide\\\"\");\n  if ($loaded_title === null)\n  {\n    echo \"Reading title using get-process failed\\n\";\n    die();\n  }\n  // Kind of convoluted. So when the test is run on Windows 7 or older, the console where\n  // the run-tests.php is executed forks a php.exe, which forks a cmd.exe, which then forks\n  // a final php.exe to run the actual test. But the console title is set for the original console.\n  // I couldn't figure out a good way to navigate this, so we're \"grep'ing\" all possible\n  // console windows for our very unique title. It should occur exactly once in the grep\n  // output.\n  if (substr_count($loaded_title, $original_title, 0) == 1)\n    $loaded_title = $original_title;\n}\nif ($loaded_title == $original_title)\n  echo \"Successfully verified title using get-process\\n\";\nelse\n  echo \"Actually loaded from get-process: $loaded_title\\n\";\n$read_title = cli_get_process_title();\nif (substr_count($read_title, $original_title, 0) == 1)\n  echo \"Successfully verified title using get\\n\";\nelse\n  echo \"Actually loaded from get: $read_title\\n\";\n?>")).toMatchSnapshot();
  });
});
