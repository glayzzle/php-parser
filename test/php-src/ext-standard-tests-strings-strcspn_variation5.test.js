// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/strings/strcspn_variation5.phpt
  it("Test strcspn() function : usage variations - with heredoc strings with default start and len args", function () {
    expect(parser.parseCode("<?php\n/* Prototype  : proto int strcspn(string str, string mask [, int start [, int len]])\n * Description: Finds length of initial segment consisting entirely of characters not found in mask.\n                If start or/and length is provided works like strcspn(substr($s,$start,$len),$bad_chars)\n * Source code: ext/standard/string.c\n * Alias to functions: none\n*/\n/*\n* Testing strcspn() : with different heredoc strings as str argument\n*/\necho \"*** Testing strcspn() : with heredoc strings ***\\n\";\n// initialing required variables\n// defining different heredoc strings\n$empty_heredoc = <<<EOT\nEOT;\n$heredoc_with_newline = <<<EOT\n\\n\nEOT;\n$heredoc_with_characters = <<<EOT\nfirst line of heredoc string\nsecond line of heredoc string\nthird line of heredocstring\nEOT;\n$heredoc_with_newline_and_tabs = <<<EOT\nhello\\tworld\\nhello\\nworld\\n\nEOT;\n$heredoc_with_alphanumerics = <<<EOT\nhello123world456\n1234hello\\t1234\nEOT;\n$heredoc_with_embedded_nulls = <<<EOT\nhello\\0world\\0hello\n\\0hello\\0\nEOT;\n$heredoc_with_hexa_octal = <<<EOT\nhello\\0\\100\\xaaworld\\0hello\n\\0hello\\0\nEOT;\n$heredoc_strings = array(\n                   $empty_heredoc,\n                   $heredoc_with_newline,\n                   $heredoc_with_characters,\n                   $heredoc_with_newline_and_tabs,\n                   $heredoc_with_alphanumerics,\n                   $heredoc_with_embedded_nulls,\n                   $heredoc_with_hexa_octal\n                   );\n$mask = \"fth12\\ne67890\\0\\xaa\\100o\";\n// loop through each element of the array for str argument\nforeach($heredoc_strings as $str) {\n      echo \"\\n-- Iteration with str value as \\\"$str\\\" --\\n\";\n      var_dump( strcspn($str,$mask) ); // with default start and len values\n};\necho \"Done\"\n?>")).toMatchSnapshot();
  });
});
