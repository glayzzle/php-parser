// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/pdo_mysql/tests/bug_38546.phpt
  it("PDO MySQL Bug #38546 (bindParam incorrect processing of bool types)", function () {
    expect(parser.parseCode("<?php\nrequire dirname(__FILE__) . '/config.inc';\nrequire dirname(__FILE__) . '/../../../ext/pdo/tests/pdo_test.inc';\n$db = PDOTest::test_factory(dirname(__FILE__) . '/common.phpt');\n$db->setAttribute(PDO::ATTR_EMULATE_PREPARES, false);\n// To test error cases.\n$db->exec(\"SET sql_mode='STRICT_TRANS_TABLES'\");\n$db->exec(\"DROP TABLE IF EXISTS test\");\n$query = \"CREATE TABLE test(\n            uid MEDIUMINT UNSIGNED NOT NULL,\n            some_bool_1 BOOL NOT NULL,\n            some_bool_2 BOOL NOT NULL,\n            some_int TINYINT NOT NULL\n        )\";\n$db->exec($query);\n$st = $db->prepare(\"INSERT INTO test (uid, some_bool_1, some_bool_2, some_int) VALUES (?, ?, ?, ?)\");\n$values = [\n    'uid' => 6,\n    'some_bool_1' => false,\n    'some_bool_2' => true,\n    'some_int' => -23\n];\n$st->bindParam(1, $values['uid'], PDO::PARAM_INT);\n$st->bindParam(2, $values['some_bool_1'], PDO::PARAM_BOOL);\n$st->bindParam(3, $values['some_bool_2'], PDO::PARAM_BOOL);\n$st->bindParam(4, $values['some_int'], PDO::PARAM_INT);\n$result = $st->execute();\nif ($result === false) {\n    var_dump($st->errorInfo());\n} else {\n    print(\"ok insert\\n\");\n}\nforeach ($db->query('SELECT * from test') as $row) {\n    print_r($row);\n}\n$st = $db->prepare(\"UPDATE test SET some_bool_1=?, some_bool_2=?, some_int=? WHERE uid=?\");\n$values = [\n    'uid' => 6,\n    'some_bool_1' => (bool) 1,\n    'some_bool_2' => (bool) 0,\n    'some_int' => 1,\n];\n$st->bindParam(1, $values['some_bool_1'], PDO::PARAM_BOOL);\n$st->bindParam(2, $values['some_bool_2'], PDO::PARAM_BOOL);\n$st->bindParam(3, $values['some_int'], PDO::PARAM_INT);\n$st->bindParam(4, $values['uid'], PDO::PARAM_INT);\n$result = $st->execute();\nif ($result === false) {\n    var_dump($st->errorInfo());\n} else {\n    print(\"ok prepare 1\\n\");\n}\nforeach ($db->query('SELECT * from test') as $row) {\n    print_r($row);\n}\n$st = $db->prepare(\"UPDATE test SET some_bool_1=?, some_bool_2=?, some_int=? WHERE uid=?\");\n$values = [\n    'uid' => 6,\n    'some_bool_1' => (bool) 0,\n    'some_bool_2' => (bool) 1,\n    'some_int' => 2,\n];\n$st->bindParam(1, $values['some_bool_1'], PDO::PARAM_BOOL);\n$st->bindParam(2, $values['some_bool_2'], PDO::PARAM_BOOL);\n$st->bindParam(3, $values['some_int'], PDO::PARAM_INT);\n$st->bindParam(4, $values['uid'], PDO::PARAM_INT);\n$result = $st->execute();\nif ($result === false) {\n    var_dump($st->errorInfo());\n} else {\n    print(\"ok prepare 2\\n\");\n}\nforeach ($db->query('SELECT * from test') as $row) {\n    print_r($row);\n}\n// String true and false should fail\n$st = $db->prepare(\"UPDATE test SET some_bool_1=?, some_bool_2=?, some_int=? WHERE uid=?\");\n$values = [\n    'uid' => 6,\n    'some_bool_1' => 'true',\n    'some_bool_2' => 'false',\n    'some_int' => 3,\n];\n$st->bindParam(1, $values['some_bool_1'], PDO::PARAM_BOOL);\n$st->bindParam(2, $values['some_bool_2'], PDO::PARAM_BOOL);\n$st->bindParam(3, $values['some_int'], PDO::PARAM_INT);\n$st->bindParam(4, $values['uid'], PDO::PARAM_INT);\n$result = $st->execute();\nif ($result === false) {\n    var_dump($st->errorInfo());\n} else {\n    print(\"ok prepare 3\\n\");\n}\nforeach ($db->query('SELECT * from test') as $row) {\n    print_r($row);\n}\n// Null should not be treated as false\n$st = $db->prepare(\"UPDATE test SET some_bool_1=?, some_bool_2=?, some_int=? WHERE uid=?\");\n$values = [\n    'uid' => 6,\n    'some_bool_1' => true,\n    'some_bool_2' => null,\n    'some_int' => 4,\n];\n$st->bindParam(1, $values['some_bool_1'], PDO::PARAM_BOOL);\n$st->bindParam(2, $values['some_bool_2'], PDO::PARAM_BOOL);\n$st->bindParam(3, $values['some_int'], PDO::PARAM_INT);\n$st->bindParam(4, $values['uid'], PDO::PARAM_INT);\n$result = $st->execute();\nif ($result === false) {\n    var_dump($st->errorInfo());\n} else {\n    print(\"ok prepare 4\\n\");\n}\nforeach ($db->query('SELECT * from test') as $row) {\n    print_r($row);\n}\n// Integers converted correctly\n$st = $db->prepare(\"UPDATE test SET some_bool_1=?, some_bool_2=?, some_int=? WHERE uid=?\");\n$values = [\n    'uid' => 6,\n    'some_bool_1' => 256,\n    'some_bool_2' => 0,\n    'some_int' => 5,\n];\n$st->bindParam(1, $values['some_bool_1'], PDO::PARAM_BOOL);\n$st->bindParam(2, $values['some_bool_2'], PDO::PARAM_BOOL);\n$st->bindParam(3, $values['some_int'], PDO::PARAM_INT);\n$st->bindParam(4, $values['uid'], PDO::PARAM_INT);\n$result = $st->execute();\nif ($result === false) {\n    var_dump($st->errorInfo());\n} else {\n    print(\"ok prepare 5\\n\");\n}\nforeach ($db->query('SELECT * from test') as $row) {\n    print_r($row);\n}\n?>")).toMatchSnapshot();
  });
});
