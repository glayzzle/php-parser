// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/file/fwrite_variation4-win32.phpt
  it("Test fwrite() function : usage variations - x, xb, xt, x+, x+b & x+t modes", function () {
    expect(parser.parseCode("<?php\necho \"*** Testing fwrite() various  operations ***\\n\";\n// include the file.inc for Function: function delete_file($filename)\ninclude (\"file.inc\");\n/*\n Test fwrite with file opened in mode : x, xb, xt, x+, x+b, x+t\n File having content of type numeric, text,text_with_new_line & alphanumeric\n*/\n$file_modes = array(\"x\",\"xb\",\"xt\",\"x+\",\"x+b\",\"x+t\");\n$file_content_types = array(\"numeric\",\"text\",\"text_with_new_line\",\"alphanumeric\");\nforeach($file_content_types as $file_content_type) {\n  echo \"\\n-- Testing fwrite() with file having content of type \". $file_content_type .\" --\\n\";\n  /* open the file using $files_modes and perform fwrite() on it */\n  foreach($file_modes as $file_mode) {\n    echo \"-- Opening file in $file_mode --\\n\";\n    $filename = __DIR__.\"/fwrite_variation4.tmp\"; // this is name of the file\n    $file_handle = fopen($filename, $file_mode);\n    if(!$file_handle) {\n      echo \"Error: failed to fopen() file: $filename!\";\n      exit();\n    }\n    $data_to_be_written=\"\";\n    fill_buffer($data_to_be_written,$file_content_type,1024);  //get the data of size 1024\n    /*  Write the data into the file, verify it by checking the file pointer position, eof position,\n        filesize & by displaying the content */\n    // write data to the file\n    var_dump( ftell($file_handle) );\n    var_dump( fwrite($file_handle,$data_to_be_written,400));\n    var_dump( ftell($file_handle) );\n    var_dump( feof($file_handle) );  // expected: true\n    //check the filesize and content\n    // close the file, get the size and content of the file.\n    var_dump( fclose($file_handle) );\n    clearstatcache();//clears file status cache\n    var_dump( filesize($filename) );\n    var_dump(md5(file_get_contents($filename)));\n    // delete the file created\n    delete_file($filename); // delete file with name fwrite_variation4.tmp\n  } // end of inner foreach loop\n} // end of outer foreach loop\necho \"Done\\n\";\n?>")).toMatchSnapshot();
  });
});
