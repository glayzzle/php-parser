// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/dom/tests/bug28721.phpt
  it("Bug #28721 (appendChild() and insertBefore() unset DOMText)", function () {
    expect(parser.parseCode("<?php\nfunction print_node(DomNode $node) {\n  echo \"name (value): \" . $node->nodeName . \" (\" . $node->nodeValue . \")\\n\";\n}\nfunction print_node_r(DomNode $node) {\n  static $indent = \"\";\n  echo \"\\n\" . $indent;\n  print_node($node);\n  echo $indent . \"parent: \";\n  if ( $node->parentNode )\n    print_node($node->parentNode);\n  else\n    echo \"NULL\\n\";\n  echo $indent . \"previousSibling: \";\n  if ( $node->previousSibling )\n    print_node($node->previousSibling);\n  else\n    echo \"NULL\\n\";\n  echo $indent . \"nextSibling: \";\n  if ( $node->nextSibling )\n    print_node($node->nextSibling);\n  else\n    echo \"NULL\\n\";\n  if ( !$node->hasChildNodes() )\n    return;\n  foreach ($node->childNodes as $child) {\n    $old_indent  = $indent;\n    $indent .= \"  \";\n    print_node_r($child);\n    $indent = $old_indent;\n  }\n}\nfunction err_handler($errno, $errstr, $errfile, $errline) {\n  echo \"Error ($errno) on line $errline: $errstr\\n\";\n}\n// Record 'DocumentFragment is empty' warnings\nset_error_handler(\"err_handler\", E_WARNING);\n$xml = new DomDocument();\n$p = $xml->createElement(\"p\");\n$p->appendChild($t1 = $xml->createTextNode(\" t1 \"));\n$p->appendChild($b = $xml->createElement(\"b\"));\n$b->appendChild($xml->createTextNode(\"X\"));\n$p->appendChild($t2 = $xml->createTextNode(\" t2 \"));\n$p->appendChild($xml->createTextNode(\" xxx \"));\nprint_node_r($p);\necho \"\\nAppend t1 to p:\\n\";\n$ret = $p->appendChild($t1);\nprint_node_r($p);\necho \"\\n\";\necho \"t1 == ret: \";\nvar_dump( $t1 === $ret );\n$d = $xml->createElement(\"div\");\n$d->appendChild($t3 = $xml->createTextNode(\" t3 \"));\n$d->appendChild($b = $xml->createElement(\"b\"));\n$b->appendChild($xml->createElement(\"X\"));\n$d->appendChild($t4 = $xml->createTextNode(\" t4 \"));\n$d->appendChild($xml->createTextNode(\" xxx \"));\necho \"\\ndiv:\\n\";\nprint_node_r($d);\necho \"\\nInsert t4 before t3:\\n\";\n$ret = $d->insertBefore($t4, $t3);\nprint_node_r($d);\necho \"\\n\";\n$frag = $xml->createDocumentFragment();\n$t5 = $frag->appendChild($xml->createTextNode(\" t5 \"));\n$frag->appendChild($i = $xml->createElement(\"i\"));\n$i->appendChild($xml->createTextNode(\" frob \"));\n$frag->appendChild($xml->createTextNOde(\" t6 \"));\necho \"\\np:\\n\";\nprint_node_r($p);\necho \"\\nFragment:\\n\";\nprint_node_r($frag);\necho \"\\nAppending fragment to p:\\n\";\n$p->appendChild($frag);\nprint_node_r($p);\necho \"\\nFragment:\\n\";\nprint_node_r($frag);\necho \"\\ndiv:\\n\";\nprint_node_r($d);\necho \"\\nInserting fragment before t4\\n\";\n$d->insertBefore($frag, $t4);\nprint_node_r($d);\necho \"\\np:\\n\";\nprint_node_r($p);\n?>")).toMatchSnapshot();
  });
});
