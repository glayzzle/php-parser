// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/array/shuffle_variation5.phpt
  it("Test shuffle() function : usage variation - arrays with diff heredoc strings", function () {
    expect(parser.parseCode("<?php\n/*\n* Test behaviour of shuffle() when an array of heredoc strings is passed to\n* 'array_arg' argument of the function\n*/\necho \"*** Testing shuffle() : with array containing heredoc strings ***\\n\";\n// defining different heredoc strings\n$empty_heredoc = <<<EOT\nEOT;\n$heredoc_with_newline = <<<EOT\n\\n\nEOT;\n$heredoc_with_characters = <<<EOT\nfirst line of heredoc string\nsecond line of heredoc string\nthird line of heredocstring\nEOT;\n$heredoc_with_newline_and_tabs = <<<EOT\nhello\\tworld\\nhello\\nworld\\n\nEOT;\n$heredoc_with_alphanumerics = <<<EOT\nhello123world456\n1234hello\\t1234\nEOT;\n$heredoc_with_embedded_nulls = <<<EOT\nhello\\0world\\0hello\n\\0hello\\0\nEOT;\n// defining array with values as heredoc strings\n$heredoc_array = array(\n  $empty_heredoc,\n  $heredoc_with_newline,\n  $heredoc_with_characters,\n  $heredoc_with_newline_and_tabs,\n  $heredoc_with_alphanumerics,\n  $heredoc_with_embedded_nulls\n);\n// defining array with keys as heredoc strings\n$heredoc_asso_array = array(\n  $empty_heredoc => \"heredoc1\",\n  $heredoc_with_newline => \"heredoc2\",\n  $heredoc_with_characters => \"heredoc3\",\n  $heredoc_with_newline_and_tabs => \"heredoc3\",\n  $heredoc_with_alphanumerics => \"heredoc4\",\n  $heredoc_with_embedded_nulls => \"heredoc5\"\n);\n// test shuffle() with array containing heredoc strings as values\necho \"\\n-- with array of heredoc strings --\\n\";\nvar_dump( shuffle($heredoc_array) );\necho \"\\nThe output array is:\\n\";\nvar_dump( $heredoc_array );\n// test shuffle() with array containing heredoc strings as its keys\necho \"\\n-- with array having heredoc strings as keys --\\n\";\nvar_dump( shuffle($heredoc_asso_array) );\necho \"\\nThe output array is:\\n\";\nvar_dump( $heredoc_asso_array );\necho \"Done\";\n?>")).toMatchSnapshot();
  });
});
