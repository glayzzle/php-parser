// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/spl/tests/bug66834.phpt
  it("SPL: Bug #66834", function () {
    expect(parser.parseCode("<?php\n// overrides both offsetExists and offsetGet\nclass ArrayObjectBoth extends ArrayObject\n{\n    public function offsetExists($offset): bool {\n        var_dump('Called: '.__METHOD__);\n        return parent::offsetExists($offset);\n    }\n    public function offsetGet($offset): mixed {\n        var_dump('Called: '.__METHOD__);\n        return parent::offsetGet($offset);\n    }\n}\n// overrides only offsetExists\nclass ArrayObjectExists extends ArrayObject\n{\n    public function offsetExists($offset): bool {\n        var_dump('Called: '.__METHOD__);\n        return parent::offsetExists($offset);\n    }\n}\n// overrides only offsetGet\nclass ArrayObjectGet extends ArrayObject\n{\n    public function offsetGet($offset): mixed {\n        var_dump('Called: '.__METHOD__);\n        return parent::offsetGet($offset);\n    }\n}\n// overrides only offsetGet and offsetSet\nclass ArrayObjectGetSet extends ArrayObject\n{\n    public function offsetGet($offset): mixed\n    {\n        return parent::offsetGet(str_rot13($offset));\n    }\n    public function offsetSet($offset, $value): void\n    {\n        parent::offsetSet(str_rot13($offset), $value);\n    }\n}\n$values = ['foo' => '', 'bar' => null, 'baz' => 42];\necho \"==== class with offsetExists() and offsetGet() ====\\n\";\n$object = new ArrayObjectBoth($values);\nvar_dump($object->offsetExists('foo'), isset($object['foo']), empty($object['foo']));\nvar_dump($object->offsetExists('bar'), isset($object['bar']), empty($object['bar']));\nvar_dump($object->offsetexists('baz'), isset($object['baz']), empty($object['baz']));\nvar_dump($object->offsetexists('qux'), isset($object['qux']), empty($object['qux']));\necho \"==== class with offsetExists() ====\\n\";\n$object = new ArrayObjectExists($values);\nvar_dump($object->offsetExists('foo'), isset($object['foo']), empty($object['foo']));\nvar_dump($object->offsetExists('bar'), isset($object['bar']), empty($object['bar']));\nvar_dump($object->offsetexists('baz'), isset($object['baz']), empty($object['baz']));\nvar_dump($object->offsetexists('qux'), isset($object['qux']), empty($object['qux']));\necho \"==== class with offsetGet() ====\\n\";\n$object = new ArrayObjectGet($values);\nvar_dump($object->offsetExists('foo'), isset($object['foo']), empty($object['foo']));\nvar_dump($object->offsetExists('bar'), isset($object['bar']), empty($object['bar']));\nvar_dump($object->offsetexists('baz'), isset($object['baz']), empty($object['baz']));\nvar_dump($object->offsetexists('qux'), isset($object['qux']), empty($object['qux']));\necho \"==== class with offsetGet() and offsetSet() ====\\n\";\n$object = new ArrayObjectGetSet;\n$object['foo'] = 42;\nvar_dump($object->offsetExists('foo'), $object->offsetExists('sbb'), isset($object['foo']), isset($object['sbb']), empty($object['sbb']));\n?>")).toMatchSnapshot();
  });
});
