// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mbstring/tests/mb_stripos.phpt
  it("mb_stripos()", function () {
    expect(parser.parseCode("<?php\n// TODO: Add more encodings\nini_set('include_path','.');\ninclude_once('common.inc');\n// Test string\n$euc_jp = '0123����ʸ��������ܸ�Ǥ���EUC-JP��ȤäƤ��ޤ���0123���ܸ�����ݽ�����';\n$slen = mb_strlen($euc_jp, 'EUC-JP');\necho \"String len: $slen\\n\";\n// EUC-JP - With encoding parameter\nmb_internal_encoding('UTF-8') or print(\"mb_internal_encoding() failed\\n\");\necho  \"== POSITIVE OFFSET ==\\n\";\nprint  mb_stripos($euc_jp, '���ܸ�', 0, 'EUC-JP') . \"\\n\";\nprint  mb_stripos($euc_jp, '0', 0,     'EUC-JP') . \"\\n\";\nprint  mb_stripos($euc_jp, 3, 0,       'EUC-JP') . \"\\n\";\nprint  mb_stripos($euc_jp, 0, 0,       'EUC-JP') . \"\\n\";\nprint  mb_stripos($euc_jp, '���ܸ�', 15, 'EUC-JP') . \"\\n\";\nprint  mb_stripos($euc_jp, '0', 15,     'EUC-JP') . \"\\n\";\nprint  mb_stripos($euc_jp, 3, 15,       'EUC-JP') . \"\\n\";\nprint  mb_stripos($euc_jp, 0, 15,       'EUC-JP') . \"\\n\";\n// Negative offset\necho \"== NEGATIVE OFFSET ==\\n\";\nprint mb_stripos($euc_jp, '���ܸ�', -15, 'EUC-JP') . \"\\n\";\nprint mb_stripos($euc_jp, '0', -15,     'EUC-JP') . \"\\n\";\nprint mb_stripos($euc_jp, 3, -15,       'EUC-JP') . \"\\n\";\nprint mb_stripos($euc_jp, 0, -15,       'EUC-JP') . \"\\n\";\nprint mb_stripos($euc_jp, 0, -43,       'EUC-JP') . \"\\n\";\n// Out of range - should return false\nprint (\"== OUT OF RANGE ==\\n\");\n$r =  mb_stripos($euc_jp, '���ܸ�', 40, 'EUC-JP');\n($r === FALSE) ? print \"OK_OUT_RANGE\\n\"     : print \"NG_OUT_RANGE\\n\";\n$r =  mb_stripos($euc_jp, '0', 40,     'EUC-JP');\n($r === FALSE) ? print \"OK_OUT_RANGE\\n\"     : print \"NG_OUT_RANGE\\n\";\n$r =  mb_stripos($euc_jp, 3, 40,       'EUC-JP');\n($r === FALSE) ? print \"OK_OUT_RANGE\\n\"     : print \"NG_OUT_RANGE\\n\";\n$r =   mb_stripos($euc_jp, 0, 40,       'EUC-JP');\n($r === FALSE) ? print \"OK_OUT_RANGE\\n\"     : print \"NG_OUT_RANGE\\n\";\n$r =  mb_stripos($euc_jp, '���ܸ�', -3, 'EUC-JP');\n($r === FALSE) ? print \"OK_OUT_RANGE\\n\"     : print \"NG_OUT_RANGE\\n\";\n$r =  mb_stripos($euc_jp, '0', -3,     'EUC-JP');\n($r === FALSE) ? print \"OK_OUT_RANGE\\n\"     : print \"NG_OUT_RANGE\\n\";\n$r =  mb_stripos($euc_jp, 3, -3,       'EUC-JP');\n($r === FALSE) ? print \"OK_OUT_RANGE\\n\"     : print \"NG_OUT_RANGE\\n\";\n$r =   mb_stripos($euc_jp, 0, -3,       'EUC-JP');\n($r === FALSE) ? print \"OK_OUT_RANGE\\n\"     : print \"NG_OUT_RANGE\\n\";\n// Non-existent\necho \"== NON-EXISTENT ==\\n\";\n$r = mb_stripos($euc_jp, '�ڹ��', 0, 'EUC-JP');\n($r === FALSE) ? print \"OK_STR\\n\"     : print \"NG_STR\\n\";\n$r = mb_stripos($euc_jp, \"\\n\",     0, 'EUC-JP');\n($r === FALSE) ? print \"OK_NEWLINE\\n\" : print \"NG_NEWLINE\\n\";\n// EUC-JP - No encoding parameter\necho \"== NO ENCODING PARAMETER ==\\n\";\nmb_internal_encoding('EUC-JP')  or print(\"mb_internal_encoding() failed\\n\");\nprint  mb_stripos($euc_jp, '���ܸ�', 0) . \"\\n\";\nprint  mb_stripos($euc_jp, '0', 0) . \"\\n\";\nprint  mb_stripos($euc_jp, 3, 0) . \"\\n\";\nprint  mb_stripos($euc_jp, 0, 0) . \"\\n\";\n$r = mb_stripos($euc_jp, '�ڹ��', 0);\n($r === FALSE) ? print \"OK_STR\\n\"     : print \"NG_STR\\n\";\n$r = mb_stripos($euc_jp, \"\\n\", 0);\n($r === FALSE) ? print \"OK_NEWLINE\\n\" : print \"NG_NEWLINE\\n\";\n// EUC-JP - No offset and encoding parameter\necho \"== NO OFFSET AND ENCODING PARAMETER ==\\n\";\nmb_internal_encoding('EUC-JP')  or print(\"mb_internal_encoding() failed\\n\");\nprint  mb_stripos($euc_jp, '���ܸ�') . \"\\n\";\nprint  mb_stripos($euc_jp, '0') . \"\\n\";\nprint  mb_stripos($euc_jp, 3) . \"\\n\";\nprint  mb_stripos($euc_jp, 0) . \"\\n\";\n$r = mb_stripos($euc_jp, '�ڹ��');\n($r === FALSE) ? print \"OK_STR\\n\"     : print \"NG_STR\\n\";\n$r = mb_stripos($euc_jp, \"\\n\");\n($r === FALSE) ? print \"OK_NEWLINE\\n\" : print \"NG_NEWLINE\\n\";\n?>")).toMatchSnapshot();
  });
});
