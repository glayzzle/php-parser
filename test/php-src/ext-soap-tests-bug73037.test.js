// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/soap/tests/bug73037.phpt
  it("Bug #73037 SoapServer reports Bad Request when gzipped, var 0", function () {
    expect(parser.parseCode("<?php\ninclude __DIR__ . \"/../../../sapi/cli/tests/php_cli_server.inc\";\nfunction get_data($max)\n{\n    $piece = \"<CD>\n        <TITLE>Empire Burlesque</TITLE>\n        <ARTIST>Bob Dylan</ARTIST>\n        <COUNTRY>USA</COUNTRY>\n        <COMPANY>Columbia</COMPANY>\n        <PRICE>10.90</PRICE>\n        <YEAR>1985</YEAR>\n    </CD>\";\n    $begin = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><soapenv:Envelope xmlns:soapenv=\"http://www.w3.org/2003/05/soap-envelope\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><soapenv:Body><CATALOG>';\n    $end = '</CATALOG></soapenv:Body></soapenv:Envelope>';\n    $min = strlen($begin) + strlen($piece) + strlen($end);\n    $max = $max < $min ? $min : $max;\n    $data = $begin;\n    $data .= $piece;\n    while (strlen($data) + strlen($end) < $max) {\n        /* Randomize a bit, taking gzip in account. */\n        $tmp = str_replace(\n            array(\n                \"Empire Burlesque\",\n                \"Bob Dylan\",\n            ),\n            array(\n                md5(uniqid()),\n                sha1(uniqid()),\n            ),\n            $piece\n        );\n        if (strlen($begin) + strlen($tmp) + strlen($end) > $max) {\n            break;\n        }\n        $data .= $tmp;\n    }\n    $data .= $end;\n    return $data;\n}\n$router = \"bug73037_server.php\";\n$args = substr(PHP_OS, 0, 3) == 'WIN'\n    ? [\"-d\", \"extension_dir=\" . ini_get(\"extension_dir\"), \"-d\", \"extension=php_soap.dll\"] : [];\n$code = <<<'PHP'\n$s = new SoapServer(NULL, array('uri' => 'http://here'));\n$s->setObject(new stdclass());\n$s->handle();\nPHP;\nphp_cli_server_start($code, $router, $args);\nforeach (array(1024-1, 1024*8-3, 1024*9+1, 1024*16-1, 1024*32-5, 1024*64+3, 1024*128-7) as $k => $i) {\n    echo \"Iteration $k\\n\\n\";\n    /* with and without compression */\n    foreach (array(false, true) as $b) {\n        $data = get_data($i);\n        if ($b) {\n            $data = gzencode($data);\n        }\n        $len = strlen($data);\n        //echo \"len=$len\\n\";\n        $hdrs = <<<HDRS\nPOST /bug73037_server.php HTTP/1.1\nContent-Type: application/soap+xml; charset=UTF-8\nAccept: application/soap+xml, application/dime, multipart/related, text/*\nSOAPAction: \"urn:adressen#adressen#SetAda\"\nExpect: 100-continue\nContent-Length: ${len}\nHDRS;\n        if ($b) {\n            $hdrs .=\"\\nContent-Encoding: gzip\";\n        }\n        //echo \"Headers sent:\\n$hdrs\\n\\n\";\n        $fp = fsockopen(PHP_CLI_SERVER_HOSTNAME, PHP_CLI_SERVER_PORT, $errno, $errstr, 5);\n        if (!$fp) {\n          die(\"connect failed\");\n        }\n        if(fwrite($fp, \"$hdrs\\n\\n$data\")) {\n            $out = \"\";\n            while (!feof($fp)) {\n                $out .= fread($fp, 1024);\n            }\n            $pos = strpos($out, \"<env:Text>\");\n            if (false === $pos) {\n                echo $out;\n                goto cleanup;\n            }\n            $pos0 = $pos + strlen(\"<env:Text>\");\n            $pos = strpos($out, \"</env:Text>\");\n            if (false === $pos) {\n                echo $out;\n                goto cleanup;\n            }\n            $len = $pos - $pos0;\n            echo substr($out, $pos0, $len);\n        }\ncleanup:\n        fclose($fp);\n        echo \"\\n\\n\";\n        }\n}\n?>")).toMatchSnapshot();
  });
});
