// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/strings/printf_variation2.phpt
  it("Test printf() function : usage variations - with all types of values for arg1 argument", function () {
    expect(parser.parseCode("<?php\necho \"*** Testing printf() : with different types of values passed for arg1 argument ***\\n\";\n// initialing required variables\n$format = '%s';\n$arg2 = 'third argument';\n//get an unset variable\n$unset_var = 10;\nunset ($unset_var);\n// declaring class\nclass sample\n{\n  public function __toString() {\n    return \"Object\";\n  }\n}\n// creating a file resource\n$file_handle = fopen(__FILE__, 'r');\n//array of values to iterate over\n$values = array(\n          // int data\n/*1*/     0,\n          1,\n          12345,\n          -2345,\n          // float data\n/*5*/     10.5,\n          -10.5,\n          10.1234567e10,\n          10.7654321E-10,\n          .5,\n          // array data\n/*10*/    array(),\n          array(0),\n          array(1),\n          array(1, 2),\n          array('color' => 'red', 'item' => 'pen'),\n          // null data\n/*15*/    NULL,\n          null,\n          // boolean data\n/*17*/    true,\n          false,\n          TRUE,\n          FALSE,\n          // empty data\n/*21*/    \"\",\n          '',\n          // string data\n/*23*/    \"string\",\n          'string',\n          // object data\n/*25*/    new sample(),\n          // undefined data\n/*26*/    @$undefined_var,\n          // unset data\n/*27*/    @$unset_var,\n          // resource data\n/*28*/    $file_handle\n);\n// loop through each element of the array for arg1\n$count = 1;\nforeach($values as $value) {\n  echo \"\\n-- Iteration $count --\\n\";\n  // with two arguments\n  $result = printf($format, $value);\n  echo \"\\n\";\n  var_dump($result);\n  // with three arguments\n  $result = printf($format, $value, $arg2);\n  echo \"\\n\";\n  var_dump($result);\n  $count++;\n};\n// closing the resource\nfclose($file_handle);\n?>")).toMatchSnapshot();
  });
});
