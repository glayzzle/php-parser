// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/file/pathinfo_basic1-win32.phpt
  it("Test pathinfo() function: basic functionality", function () {
    expect(parser.parseCode("<?php\necho \"*** Testing basic functions of pathinfo() ***\\n\";\n$paths = array (\n                '',\n            ' ',\n            'c:',\n            'c:\\\\',\n            'c:/',\n            'afile',\n            'c:\\test\\adir',\n            'c:\\test\\adir\\\\',\n            '/usr/include/arpa',\n            '/usr/include/arpa/',\n            'usr/include/arpa',\n            'usr/include/arpa/',\n            'c:\\test\\afile',\n            'c:\\\\test\\\\afile',\n            'c://test//afile',\n            'c:\\test\\afile\\\\',\n            'c:\\test\\prog.exe',\n            'c:\\\\test\\\\prog.exe',\n            'c:/test/prog.exe',\n            '/usr/include/arpa/inet.h',\n            '//usr/include//arpa/inet.h',\n            '\\\\',\n            '\\\\\\\\',\n            '/',\n            '//',\n            '///',\n            '/usr/include/arpa/inet.h',\n            'c:\\windows/system32\\drivers/etc\\hosts',\n            '/usr\\include/arpa\\inet.h',\n            '   c:\\test\\adir\\afile.txt',\n            'c:\\test\\adir\\afile.txt   ',\n            '   c:\\test\\adir\\afile.txt   ',\n            '   /usr/include/arpa/inet.h',\n            '/usr/include/arpa/inet.h   ',\n            '   /usr/include/arpa/inet.h   ',\n            ' c:',\n            '\t\tc:\\test\\adir\\afile.txt',\n            '/usr',\n            '/usr/'\n);\n$counter = 1;\n/* loop through $paths to test each $path in the above array */\nforeach($paths as $path) {\n  echo \"-- Iteration $counter --\\n\";\n  var_dump( pathinfo($path, PATHINFO_DIRNAME) );\n  var_dump( pathinfo($path, PATHINFO_BASENAME) );\n  var_dump( pathinfo($path, PATHINFO_EXTENSION) );\n  var_dump( pathinfo($path, PATHINFO_FILENAME) );\n  var_dump( pathinfo($path) );\n  $counter++;\n}\necho \"Done\\n\";\n?>")).toMatchSnapshot();
  });
});
