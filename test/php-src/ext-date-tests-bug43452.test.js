// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/date/tests/bug43452.phpt
  it("Bug #43452 (\"weekday\" is not equivalent to \"1 weekday\" of the current weekday is \"weekday\")", function () {
    expect(parser.parseCode("<?php\ndate_default_timezone_set('Europe/Oslo');\n// <day> is equivalent to 1 <day> and will *not* forward if the current day\n// (November 1st) is the same day of week.\n$day = strtotime( \"Thursday Nov 2007\" );\necho date( DateTime::ISO8601, $day ), \"\\n\";\n$day = strtotime( \"1 Thursday Nov 2007\" );\necho date( DateTime::ISO8601, $day ), \"\\n\";\n$day = strtotime( \"2 Thursday Nov 2007\" );\necho date( DateTime::ISO8601, $day ), \"\\n\";\n$day = strtotime( \"3 Thursday Nov 2007\" );\necho date( DateTime::ISO8601, $day ), \"\\n\\n\";\n// forward one week, then behaves like above for week days\n$day = strtotime( \"Thursday Nov 2007\" );\necho date( DateTime::ISO8601, $day ), \"\\n\";\n$day = strtotime( \"+1 week Thursday Nov 2007\" );\necho date( DateTime::ISO8601, $day ), \"\\n\";\n$day = strtotime( \"+2 week Thursday Nov 2007\" );\necho date( DateTime::ISO8601, $day ), \"\\n\";\n$day = strtotime( \"+3 week Thursday Nov 2007\" );\necho date( DateTime::ISO8601, $day ), \"\\n\\n\";\n// First, second, etc skip to the first/second weekday *after* the current day.\n// This makes \"first thursday\" equivalent to \"+1 week thursday\" - but only\n// if the current day-of-week is the one mentioned in the phrase.\n$day = strtotime( \"Thursday Nov 2007\" );\necho date( DateTime::ISO8601, $day ), \"\\n\";\n$day = strtotime( \"first Thursday Nov 2007\" );\necho date( DateTime::ISO8601, $day ), \"\\n\";\n$day = strtotime( \"second Thursday Nov 2007\" );\necho date( DateTime::ISO8601, $day ), \"\\n\";\n$day = strtotime( \"third Thursday Nov 2007\" );\necho date( DateTime::ISO8601, $day ), \"\\n\\n\";\n// Now the same where the current day-of-week does not match the one in the\n// phrase.\n$day = strtotime( \"Friday Nov 2007\" );\necho date( DateTime::ISO8601, $day ), \"\\n\";\n$day = strtotime( \"first Friday Nov 2007\" );\necho date( DateTime::ISO8601, $day ), \"\\n\";\n$day = strtotime( \"second Friday Nov 2007\" );\necho date( DateTime::ISO8601, $day ), \"\\n\";\n$day = strtotime( \"third Friday Nov 2007\" );\necho date( DateTime::ISO8601, $day ), \"\\n\\n\";\n?>")).toMatchSnapshot();
  });
});
