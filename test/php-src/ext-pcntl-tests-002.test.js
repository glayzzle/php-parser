// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/pcntl/tests/002.phpt
  it("pcntl: pcntl_sigprocmask(), pcntl_sigwaitinfo(), pcntl_sigtimedwait()", function () {
    expect(parser.parseCode("<?php\n$pid = pcntl_fork();\nif ($pid == -1) {\n    die('failed');\n} else if ($pid) {\n    pcntl_sigprocmask(SIG_BLOCK, array(SIGCHLD,(string)SIGTERM));\n    $oldset = array();\n    pcntl_sigprocmask(SIG_BLOCK, array(), $oldset);\n    var_dump(in_array(SIGCHLD, $oldset));\n    var_dump(in_array(SIGTERM, $oldset));\n    posix_kill(posix_getpid(), SIGTERM);\n    $signo = pcntl_sigwaitinfo(array(SIGTERM), $siginfo);\n    echo \"signo == SIGTERM\\n\";\n    var_dump($signo === SIGTERM && $signo === $siginfo['signo']);\n    echo \"code === SI_USER || SI_NOINFO\\n\";\n    if (defined('SI_NOINFO')) {\n        var_dump(($siginfo['code'] === SI_USER) || ($siginfo['code'] === SI_NOINFO));\n    } else {\n        var_dump($siginfo['code'] === SI_USER);\n    }\n    pcntl_signal(SIGCHLD, function($signo){});\n    posix_kill($pid, SIGTERM);\n    $signo = pcntl_sigwaitinfo(array((string)SIGCHLD), $siginfo);\n    echo \"signo == SIGCHLD\\n\";\n    var_dump($signo === SIGCHLD && $signo === $siginfo['signo']);\n    echo \"code === CLD_KILLED\\n\";\n    var_dump($siginfo['code'] === CLD_KILLED);\n    echo \"signo === SIGCHLD\\n\";\n    var_dump($siginfo['signo'] === SIGCHLD);\n    echo \"signo === uid\\n\";\n    var_dump($siginfo['uid'] === posix_getuid());\n    echo \"signo === pid\\n\";\n    var_dump($siginfo['pid'] === $pid);\n    pcntl_waitpid($pid, $status);\n    set_error_handler(function($errno, $errstr) { echo \"Error triggered\\n\"; }, E_WARNING);\n    echo \"sigprocmask with invalid arguments\\n\";\n    /* Valgrind expectedly complains about this:\n         * \"sigprocmask: unknown 'how' field 2147483647\"\n     * Skip */\n    if (getenv(\"USE_ZEND_ALLOC\") !== '0') {\n        var_dump(pcntl_sigprocmask(PHP_INT_MAX, array(SIGTERM)));\n    } else {\n        echo \"Error triggered\\n\";\n        echo \"bool(false)\\n\";\n    }\n    var_dump(pcntl_sigprocmask(SIG_SETMASK, array(0)));\n    echo \"sigwaitinfo with invalid arguments\\n\";\n    var_dump(pcntl_sigwaitinfo(array(0)));\n    echo \"sigtimedwait with invalid arguments\\n\";\n    var_dump(pcntl_sigtimedwait(array(SIGTERM), $signo, PHP_INT_MAX, PHP_INT_MAX));\n} else {\n    $siginfo = NULL;\n    pcntl_sigtimedwait(array(SIGINT), $siginfo, 3600, 0);\n    exit;\n}\n?>")).toMatchSnapshot();
  });
});
