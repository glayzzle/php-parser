// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/gd/tests/copy.phpt
  it("imagecopy", function () {
    expect(parser.parseCode("<?php\n$src_tc = imagecreatetruecolor(5,5);\nimagefill($src_tc, 0,0, 0xffffff);\nimagesetpixel($src_tc, 3,3, 0xff0000);\nimagesetpixel($src_tc, 0,0, 0x0000ff);\nimagesetpixel($src_tc, 4,4, 0x00ff00);\n$dst_tc = imagecreatetruecolor(5,5);\nimagecopy($dst_tc, $src_tc, 0,0, 0,0, imagesx($src_tc), imagesy($src_tc));\n$p1 = imagecolorat($dst_tc, 3,3) == 0xff0000;\n$p2 = imagecolorat($dst_tc, 0,0) == 0x0000ff;\n$p3 = imagecolorat($dst_tc, 4,4) == 0x00ff00;\nif ($p1 && $p2 && $p3) {\n    echo \"TC/TC: ok\\n\";\n}\nimagedestroy($src_tc); imagedestroy($dst_tc);\n$src_tc = imagecreatetruecolor(5,5);\nimagefill($src_tc, 0,0, 0xffffff);\nimagesetpixel($src_tc, 3,3, 0xff0000);\nimagesetpixel($src_tc, 0,0, 0x0000ff);\nimagesetpixel($src_tc, 4,4, 0x00ff00);\n$dst_tc = imagecreate(5,5);\nimagecopy($dst_tc, $src_tc, 0,0, 0,0, imagesx($src_tc), imagesy($src_tc));\n$c1 = imagecolorsforindex($dst_tc, imagecolorat($dst_tc, 3,3));\n$c2 = imagecolorsforindex($dst_tc, imagecolorat($dst_tc, 0,0));\n$c3 = imagecolorsforindex($dst_tc, imagecolorat($dst_tc, 4,4));\n$p1 = $c1['red'] == 0xff && $c1['blue']==0x00 && $c1['green']==0x00;\n$p2 = $c2['red'] == 0x00 && $c2['blue']==0xff && $c2['green']==0x00;\n$p3 = $c3['red'] == 0x00 && $c3['blue']==0x00 && $c3['green']==0xff;\nif ($p1 && $p2 && $p3) {\n    echo \"TC/P: ok\\n\";\n}\nimagedestroy($src_tc); imagedestroy($dst_tc);\n$src_tc = imagecreate(5,5);\n$c0 = imagecolorallocate($src_tc, 0xff, 0xff, 0xff);\n$c1 = imagecolorallocate($src_tc, 0xff, 0x00, 0x00);\n$c2 = imagecolorallocate($src_tc, 0x00, 0x00, 0xff);\n$c3 = imagecolorallocate($src_tc, 0x00, 0xff, 0x00);\nimagesetpixel($src_tc, 3,3, $c1);\nimagesetpixel($src_tc, 0,0, $c2);\nimagesetpixel($src_tc, 4,4, $c3);\n$dst_tc = imagecreate(5,5);\nimagecopy($dst_tc, $src_tc, 0,0, 0,0, imagesx($src_tc), imagesy($src_tc));\n$c1 = imagecolorsforindex($dst_tc, imagecolorat($dst_tc, 3,3));\n$c2 = imagecolorsforindex($dst_tc, imagecolorat($dst_tc, 0,0));\n$c3 = imagecolorsforindex($dst_tc, imagecolorat($dst_tc, 4,4));\n$p1 = $c1['red'] == 0xff && $c1['blue']==0x00 && $c1['green']==0x00;\n$p2 = $c2['red'] == 0x00 && $c2['blue']==0xff && $c2['green']==0x00;\n$p3 = $c3['red'] == 0x00 && $c3['blue']==0x00 && $c3['green']==0xff;\nif ($p1 && $p2 && $p3) {\n    echo \"P/P: ok\\n\";\n}\n$src_tc = imagecreate(5,5);\n$c0 = imagecolorallocate($src_tc, 0xff, 0xff, 0xff);\n$c1 = imagecolorallocate($src_tc, 0xff, 0x00, 0x00);\n$c2 = imagecolorallocate($src_tc, 0x00, 0x00, 0xff);\n$c3 = imagecolorallocate($src_tc, 0x00, 0xff, 0x00);\nimagesetpixel($src_tc, 3,3, $c1);\nimagesetpixel($src_tc, 0,0, $c2);\nimagesetpixel($src_tc, 4,4, $c3);\n$dst_tc = imagecreatetruecolor(5,5);\nimagecopy($dst_tc, $src_tc, 0,0, 0,0, imagesx($src_tc), imagesy($src_tc));\n$p1 = imagecolorat($dst_tc, 3,3) == 0xff0000;\n$p2 = imagecolorat($dst_tc, 0,0) == 0x0000ff;\n$p3 = imagecolorat($dst_tc, 4,4) == 0x00ff00;\nif ($p1 && $p2 && $p3) {\n    echo \"P/TC: ok\\n\";\n}\n?>")).toMatchSnapshot();
  });
});
