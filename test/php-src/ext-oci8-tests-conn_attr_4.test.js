// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/oci8/tests/conn_attr_4.phpt
  it("Set and get of connection attributes with errors.", function () {
    expect(parser.parseCode("<?php\nerror_reporting(E_ALL ^ E_DEPRECATED);\n$testuser     = 'testuser_attr_4';  // Used in conn_attr.inc\n$testpassword = 'testuser';\nrequire(__DIR__.\"/conn_attr.inc\");\n$attr_array = array('MODULE','ACTION','CLIENT_INFO','CLIENT_IDENTIFIER');\necho\"**Test  Negative cases************\\n\";\necho \"\\nInvalid Connection resource 1\\n\";\n$nc1=NULL;\n// Invalid connection handle.\ntry {\n    oci_set_action($nc1,$nc1);\n} catch (TypeError $e) {\n    var_dump($e->getMessage());\n}\n// Variable instead of a connection resource.\necho \"\\nInvalid Connection resource 2\\n\";\n$str1= 'not a conn';\ntry {\n    oci_set_client_info($str1,$str1);\n} catch (TypeError $e) {\n    var_dump($e->getMessage());\n}\n// Setting an Invalid value.\necho \"\\nInvalid Action value \\n\";\n$c1=oci_connect($testuser,$testpassword,$dbase);\ntry {\n    oci_set_action($c1,$c1);\n} catch (TypeError $e) {\n    var_dump($e->getMessage());\n}\n// Setting values multiple times.\necho \"\\nSet Values multiple times \\n\";\nvar_dump(oci_set_action($c1,'ACTION1'));\nvar_dump(oci_set_action($c1,'ACTION1'));\nvar_dump(oci_set_action($c1,'ACTION2'));\nvar_dump(oci_set_action($c1,'ACTION1'));\nget_attr($c1,'ACTION');\n// Testing with different types of values\n// NB.  This may diff in 11.1.0.6 due to a bug causing CLIENT_INFO of NULL to be ignored.\necho \"\\nSetting to different values \\n\";\n$values_array = array(1000,NULL,'this is a very huge string with a length  > 64 !!!!!this is a very huge string with a length  > 64 !!!!!this is a very huge string with a length  > 64 !!!!!this is a very huge string with a length  > 64 !!!!!');\nforeach($values_array as $val ) {\n    oci_set_module_name($c1,$val);\n    oci_set_client_identifier($c1,$val);\n    oci_set_client_info($c1,$val);\n    $r = oci_set_action($c1,$val);\n    if ($r) {\n        echo \"Values set successfully to $val\\n\";\n        foreach($attr_array as $attr) {\n            get_attr($c1,$attr);\n        }\n    }\n}\nclean_up($c);\necho \"Done\\n\";\n?>")).toMatchSnapshot();
  });
});
