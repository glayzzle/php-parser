// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/phar/tests/fopen_edgecases.phpt
  it("Phar: fopen/stat/fseek/unlink/rename edge cases", function () {
    expect(parser.parseCode("<?php\n$fname = __DIR__ . '/' . basename(__FILE__, '.php') . '.phar.php';\n$fname2 = __DIR__ . '/' . basename(__FILE__, '.php') . '.2.phar.php';\n$fname3 = __DIR__ . '/' . basename(__FILE__, '.php') . '.3.phar.php';\n$pname = 'phar://' . $fname;\n$pname2 = 'phar://' . $fname2;\n$pname3 = 'phar://' . $fname3;\n// create in cwd\nchdir(__DIR__);\nfile_put_contents('phar://fopen_edgetest.phar/hi', 'hi');\n// append\n$a = fopen($pname . '/b/c.php', 'a');\n// invalid pharname\n$a = fopen($pname . '.phar.gz', 'r');\n// test phar_open_url() with quiet stat for code coverage\nvar_dump(file_exists($pname . '.phar.gz/hi'));\n// test open for write with new phar\n$a = fopen($pname . '/hi', 'w');\nfclose($a);\n// test open for write with corrupted phar\nfile_put_contents($fname2, '<?php oh crap __HALT_COMPILER();');\n$a = fopen($pname2 . '/hi', 'w');\n$a = fopen('phar://', 'r');\n$a = fopen('phar://foo.phar', 'r');\nfile_put_contents($pname . '/hi', 'hi');\n$a = fopen($pname . '/hi', 'r');\nvar_dump(fseek($a, 1), ftell($a));\nvar_dump(fseek($a, 1, SEEK_CUR), ftell($a));\nfclose($a);\nvar_dump(stat('phar://'));\nvar_dump(stat('phar://foo.phar'));\nvar_dump(is_dir($pname));\n// this tests coverage of the case where the phar exists and has no files\n$phar = new Phar($fname3);\nvar_dump(file_exists($pname3 . '/test'));\nunlink($pname2 . '/hi');\nunlink('phar://');\nunlink('phar://foo.phar');\nunlink($pname . '/oops');\nrename('phar://', 'phar://');\nrename($pname . '/hi', 'phar://');\nrename('phar://foo.phar/hi', 'phar://');\nrename($pname . '/hi', 'phar://foo.phar/hi');\nini_set('phar.readonly', 1);\nrename($pname . '/hi', $pname . '/there');\nini_set('phar.readonly', 0);\nPhar::unlinkArchive($fname);\nfile_put_contents($pname . '/test.php', '<?php\n$a = fopen(\"./notfound.php\", \"r\");\n?>');\ninclude $pname . '/test.php';\n?>")).toMatchSnapshot();
  });
});
