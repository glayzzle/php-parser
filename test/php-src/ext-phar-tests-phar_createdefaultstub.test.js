// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/phar/tests/phar_createdefaultstub.phpt
  it("Phar: Phar::createDefaultStub() with and without arg", function () {
    expect(parser.parseCode("<?php\ntry {\nvar_dump(Phar::createDefaultStub());\necho \"============================================================================\\n\";\necho \"============================================================================\\n\";\nvar_dump(Phar::createDefaultStub('my/custom/thingy.php'));\necho \"============================================================================\\n\";\necho \"============================================================================\\n\";\nvar_dump(strlen(Phar::createDefaultStub(str_repeat('a', 400))));\necho \"============================================================================\\n\";\necho \"============================================================================\\n\";\nvar_dump(Phar::createDefaultStub(str_repeat('a', 401)));\n} catch(Exception $e) {\necho $e->getMessage() . \"\\n\";\n}\necho \"============================================================================\\n\";\necho \"============================================================================\\n\";\necho \"============================================================================\\n\";\necho \"============================================================================\\n\";\ntry {\nvar_dump(Phar::createDefaultStub('my/custom/thingy.php', 'the/web.php'));\necho \"============================================================================\\n\";\necho \"============================================================================\\n\";\nvar_dump(strlen(Phar::createDefaultStub('index.php', str_repeat('a', 400))));\nvar_dump(Phar::createDefaultStub('hio', str_repeat('a', 401)));\n} catch (Exception $e) {\necho $e->getMessage() . \"\\n\";\n}\n?>")).toMatchSnapshot();
  });
});
