// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/file/fscanf_variation55.phpt
  it("Test fscanf() function: usage variations - tracking file pointer while reading", function () {
    expect(parser.parseCode("<?php\n/*\n  Test fscanf() to scan data using different format types and also\n  tracking the file pointer movement along with reading\n */\n$file_path = __DIR__;\necho \"*** Test fscanf(): tracking file pointer along with reading data from file ***\\n\";\n// create a file\n$filename = \"$file_path/fscanf_variation55.tmp\";\n$file_handle = fopen($filename, \"w\");\nif($file_handle == false)\n  exit(\"Error:failed to open file $filename\");\n// different valid data\n$valid_data = array(\n  12345,            // integer value\n  -12345,\n  123.45,\t    // float value\n  -123.45,\n  0x123B,           // hexadecimal value\n  0x12ab,\n  0123,             // octal value\n  -0123,\n  \"abcde\",          // string\n  'abcde',\n  10e3,             // exponential value\n  10e-3\n);\n// various formats\n$int_formats = array( \"%d\", \"%f\", \"%s\", \"%o\", \"%x\", \"%u\", \"%c\", \"%e\");\n$counter = 1;\n// writing to the file\nforeach($valid_data as $data) {\n  @fprintf($file_handle, $data);\n  @fprintf($file_handle, \"\\n\");\n}\n// closing the file\nfclose($file_handle);\n$modes = array(\"r\", \"rb\", \"rt\");\nforeach($modes as $mode) {\n  echo \"\\n*** File opened in $mode mode ***\\n\";\n  // opening the file for reading\n  $file_handle = fopen($filename, $mode);\n  if($file_handle == false) {\n    exit(\"Error:failed to open file $filename\");\n  }\n  $counter = 1;\n  // reading different data from file using different formats\n  foreach($int_formats as $int_format) {\n    // current file pointer position\n    var_dump( ftell($file_handle) );\n    // rewind the file so that for every foreach iteration the file pointer starts from bof\n    rewind($file_handle);\n    // current file pointer position after rewind operation\n    var_dump( ftell($file_handle) );\n    echo \"\\n-- iteration $counter --\\n\";\n    while( !feof($file_handle) ) {\n      var_dump( ftell($file_handle) );\n      var_dump( fscanf($file_handle,$int_format) );\n    }\n    $counter++;\n  } // end of inner for loop\n} // end of outer for loop\necho \"\\n*** Done ***\";\n?>")).toMatchSnapshot();
  });
});
