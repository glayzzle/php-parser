// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/file/file_variation.phpt
  it("Test file() function : usage variations", function () {
    expect(parser.parseCode("<?php\nrequire(__DIR__ . '/file.inc');\n$data_array = array( \"Garbage data\", \"Gar\\nba\\nge d\\nata\", \"Gar\\n\\nbage \\n\\n data\" );\necho \"*** Using various flags values with different data in a file\\n\";\n$count=1;\n$file_path = __DIR__;\nforeach( $data_array as $data ) {\n   echo \"--Iteration $count --\\n\";\n   $fh  = fopen($file_path.\"/file_variation.tmp\", \"w\");\n   fwrite($fh, $data);\n   var_dump( file($file_path.\"/file_variation.tmp\", FILE_IGNORE_NEW_LINES) );\n   var_dump( file($file_path.\"/file_variation.tmp\", FILE_SKIP_EMPTY_LINES) );\n   $count++;\n   fclose($fh);\n}\necho \"*** Testing with variation in use_include_path argument ***\\n\";\n$file_path1 = __DIR__.\"/file_variation\";\nmkdir($file_path1);\nini_set( 'include_path',$file_path.'/file_variation' );\nfile_put_contents( $file_path1.\"/file1_variation.tmp\", \"aaaaaaaaaaaaaaabbbbbbbbbbb111111111222222222\" );\nvar_dump( file(\"file1_variation.tmp\", FILE_USE_INCLUDE_PATH) );\nvar_dump( file($file_path1.\"/file1_variation.tmp\", 1) );\necho \"*** Using file function to remove line containing a key string ***\\n\";\n$file_handle = fopen($file_path.\"/file2_variation.tmp\", \"w\");\n$key = \"SEARCH_KEY\";\nfwrite( $file_handle,\"The key string to be searched is SEARCH_KEY\\nLine without key string\\nThe key string to be searched is SEARCH_KEY\" );\n$out_array = file($file_path.\"/file2_variation.tmp\");\necho \"File contents in array form Before replacement of the key\\n\";\nvar_dump( $out_array );\n$file_handle2 = fopen($file_path.\"/file3_variation.tmp\", \"w\");\n// Loop through file content array\nforeach($out_array as $line) {\n  if( !strstr( $line, $key ) )\n    fputs($file_handle2,$line);\n}\necho \"File contents in array form After replacement of the key\\n\";\nvar_dump( file($file_path.\"/file3_variation.tmp\" ));\nfclose($file_handle);\nfclose($file_handle2);\necho \"\\n--- Done ---\";\n?>")).toMatchSnapshot();
  });
});
