// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/mysqli_rollback.phpt
  it("mysqli_rollback()", function () {
    expect(parser.parseCode("<?php\n    require_once(\"connect.inc\");\n    if (!$link = my_mysqli_connect($host, $user, $passwd, $db, $port, $socket))\n        printf(\"[003] Cannot connect to the server using host=%s, user=%s, passwd=***, dbname=%s, port=%s, socket=%s\\n\",\n            $host, $user, $db, $port, $socket);\n    if (true !== ($tmp = mysqli_autocommit($link, false)))\n        printf(\"[005] Cannot turn off autocommit, expecting true, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (!mysqli_query($link, 'DROP TABLE IF EXISTS test'))\n        printf(\"[006] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    if (!mysqli_query($link, 'CREATE TABLE test(id INT) ENGINE = InnoDB'))\n        printf(\"[007] Cannot create test table, [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    if (!mysqli_query($link, 'INSERT INTO test(id) VALUES (1)'))\n        printf(\"[008] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    $tmp = mysqli_rollback($link);\n    if ($tmp !== true)\n        printf(\"[009] Expecting boolean/true, got %s/%s\\n\", gettype($tmp), $tmp);\n    if (!$res = mysqli_query($link, 'SELECT COUNT(*) AS num FROM test'))\n        printf(\"[011] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    $tmp = mysqli_fetch_assoc($res);\n    if (0 != $tmp['num'])\n        printf(\"[12] Expecting 0 rows in table test, found %d rows\\n\", $tmp['num']);\n    mysqli_free_result($res);\n    if (!mysqli_query($link, 'DROP TABLE IF EXISTS test'))\n        printf(\"[013] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    mysqli_close($link);\n    try {\n        mysqli_rollback($link);\n    } catch (Error $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    print \"done!\\n\";\n?>")).toMatchSnapshot();
  });
});
