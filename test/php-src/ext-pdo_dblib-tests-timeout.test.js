// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/pdo_dblib/tests/timeout.phpt
  it("PDO_DBLIB: Set query timeouts", function () {
    expect(parser.parseCode("<?php\nrequire __DIR__ . '/config.inc';\n$sql = 'WAITFOR DELAY \\'00:00:02\\'';\n// regular timeout attribute, set after instance created, will affect query timeout, causing this query to fail\n$db = new PDO($dsn, $user, $pass);\n$db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_SILENT);\n$db->setAttribute(PDO::ATTR_TIMEOUT, 1);\n$stmt = $db->prepare($sql);\nif (!$stmt->execute()) {\n    echo \"OK\\n\";\n    // expect some kind of error code\n    if ($stmt->errorCode() != '00000') {\n        echo \"OK\\n\";\n    }\n}\n// pdo_dblib-specific timeout attribute, set after instance created, will control query timeout, causing this query to fail\n$db = new PDO($dsn, $user, $pass);\n$db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_SILENT);\n$db->setAttribute(PDO::DBLIB_ATTR_QUERY_TIMEOUT, 1);\n$stmt = $db->prepare($sql);\nif (!$stmt->execute()) {\n    echo \"OK\\n\";\n    // expect some kind of error code\n    if ($stmt->errorCode() != '00000') {\n        echo \"OK\\n\";\n    }\n}\n// regular timeout attribute will affect query timeout, causing this query to fail\n$db = new PDO($dsn, $user, $pass, [PDO::ATTR_ERRMODE => PDO::ERRMODE_SILENT, PDO::ATTR_TIMEOUT => 1]);\n$stmt = $db->prepare($sql);\nif (!$stmt->execute()) {\n    echo \"OK\\n\";\n    // expect some kind of error code\n    if ($stmt->errorCode() != '00000') {\n        echo \"OK\\n\";\n    }\n}\n// pdo_dblib-specific timeout attribute will control query timeout, causing this query to fail\n$db = new PDO($dsn, $user, $pass, [PDO::ATTR_ERRMODE => PDO::ERRMODE_SILENT, PDO::DBLIB_ATTR_QUERY_TIMEOUT => 1]);\n$stmt = $db->prepare($sql);\nif (!$stmt->execute()) {\n    echo \"OK\\n\";\n    // expect some kind of error code\n    if ($stmt->errorCode() != '00000') {\n        echo \"OK\\n\";\n    }\n}\n?>")).toMatchSnapshot();
  });
});
