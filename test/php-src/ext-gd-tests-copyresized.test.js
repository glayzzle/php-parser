// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/gd/tests/copyresized.phpt
  it("imagecopyresized", function () {
    expect(parser.parseCode("<?php\nfunction get_hexcolor($im, $c) {\n    if (imageistruecolor($im)) {\n        return $c;\n    }\n    $colors = imagecolorsforindex($im, $c);\n    return ($colors['red'] << 16)  + ($colors['green'] << 8) + ($colors['blue']);\n}\nfunction check_doublesize($dst) {\n    $im = imagecreatetruecolor(38,38);\n    imagefill($im,0,0, 0xffffff);\n    imagefilledrectangle($im, 0,0,9,9, 0xff0000);\n    imagefilledrectangle($im, 0,28,9,37, 0xff0000);\n    imagefilledrectangle($im, 28,0,37,9, 0xff0000);\n    imagefilledrectangle($im, 28,28,37,37, 0xff0000);\n    imagefilledrectangle($im, 14,14,23,23, 0xff0000);\n    for ($x = 0; $x < 38; $x++) {\n        for ($y = 0; $y < 38; $y++) {\n            $p1 = imagecolorat($im, $x, $y);\n            $p2 = imagecolorat($dst, $x, $y);\n            if (get_hexcolor($im, $p1) != get_hexcolor($dst, $p2)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n$src_tc = imagecreatetruecolor(19,19);\nimagefill($src_tc, 0,0, 0xffffff);\nimagefilledrectangle($src_tc, 0,0,4,4, 0xff0000);\nimagefilledrectangle($src_tc, 14,0,18,4, 0xff0000);\nimagefilledrectangle($src_tc, 0,14,4,18, 0xff0000);\nimagefilledrectangle($src_tc, 14,14,18,18, 0xff0000);\nimagefilledrectangle($src_tc, 7,7,11,11, 0xff0000);\n$dst_tc = imagecreatetruecolor(38,38);\nimagecopyresized($dst_tc, $src_tc, 0,0, 0,0, imagesx($dst_tc), imagesy($dst_tc), 19,19);\nif (!check_doublesize($dst_tc)) exit(\"1 failed\\n\");\necho \"TC->TC: ok\\n\";\n$src_tc = imagecreate(19,19);\n$white = imagecolorallocate($src_tc, 255,255,255);\n$red = imagecolorallocate($src_tc, 255,0,0);\nimagefilledrectangle($src_tc, 0,0,4,4, $red);\nimagefilledrectangle($src_tc, 14,0,18,4, $red);\nimagefilledrectangle($src_tc, 0,14,4,18, $red);\nimagefilledrectangle($src_tc, 14,14,18,18, $red);\nimagefilledrectangle($src_tc, 7,7,11,11, $red);\n$dst_tc = imagecreatetruecolor(38,38);\nimagecopyresized($dst_tc, $src_tc, 0,0, 0,0, imagesx($dst_tc), imagesy($dst_tc), 19,19);\nif (!check_doublesize($dst_tc)) exit(\"2 failed\\n\");\necho \"P->TC: ok\\n\";\n$src_tc = imagecreate(19,19);\n$white = imagecolorallocate($src_tc, 255,255,255);\n$red = imagecolorallocate($src_tc, 255,0,0);\nimagefilledrectangle($src_tc, 0,0,4,4, $red);\nimagefilledrectangle($src_tc, 14,0,18,4, $red);\nimagefilledrectangle($src_tc, 0,14,4,18, $red);\nimagefilledrectangle($src_tc, 14,14,18,18, $red);\nimagefilledrectangle($src_tc, 7,7,11,11, $red);\n$dst_tc = imagecreate(38,38);\n$white = imagecolorallocate($src_tc, 255,255,255);\n$red = imagecolorallocate($src_tc, 255,0,0);\nimagecopyresized($dst_tc, $src_tc, 0,0, 0,0, imagesx($dst_tc), imagesy($dst_tc), 19,19);\nif (!check_doublesize($dst_tc)) exit(\"3 failed\\n\");\necho \"P->P: ok\\n\";\n?>")).toMatchSnapshot();
  });
});
