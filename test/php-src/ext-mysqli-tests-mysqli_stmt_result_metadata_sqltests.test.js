// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/mysqli_stmt_result_metadata_sqltests.phpt
  it("mysqli_stmt_result_metadata() - non SELECT statements", function () {
    expect(parser.parseCode("<?php\n    require('table.inc');\n    function testStatement($offset, $link, $sql, $expected_lib, $expected_mysqlnd, $check_mysqlnd, $compare) {\n        if (!$stmt = mysqli_stmt_init($link)) {\n            printf(\"[%04d - %s] [%d] %s\\n\",\n                $offset, $sql,\n                mysqli_errno($link), mysqli_error($link));\n            return false;\n        }\n        if (!@mysqli_stmt_prepare($stmt, $sql)) {\n            /* Not all server versions will support all statements */\n            /* Failing to prepare is OK */\n            return true;\n        }\n        if (empty($expected_lib) && (false !== $res)) {\n            printf(\"[%04d - %s] No metadata expected\\n\",\n                $offset + 1, $sql);\n            return false;\n        } else if (!empty($expected_lib) && (false == $res)) {\n            printf(\"[%04d - %s] Metadata expected\\n\",\n                $offset + 2, $sql);\n            return false;\n        }\n        if (!empty($expected_lib)) {\n            if (!is_object($res)) {\n                printf(\"[%04d - %s] [%d] %s\\n\",\n                    $offset + 3, $sql,\n                    mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n                return false;\n            }\n            if (get_class($res) != 'mysqli_result') {\n                printf(\"[%04d - %s] Expecting object/mysqli_result got object/%s\\n\",\n                    $offset + 4, $sql, get_class($res));\n                return false;\n            }\n            $meta = array(\n                'num_fields'\t\t=> mysqli_num_fields($res),\n                'fetch_field'\t\t=> mysqli_fetch_field($res),\n                'fetch_field_direct0'\t=> mysqli_fetch_field_direct($res, 0),\n                'fetch_field_direct1'\t=> @mysqli_fetch_field_direct($res, 1),\n                'fetch_fields'\t\t=> count(mysqli_fetch_fields($res)),\n                'field_count'\t\t=> $res->field_count,\n                'field_seek-1'\t\t=> @mysqli_field_seek($res, -1),\n                'field_seek0'\t\t=> mysqli_field_seek($res, 0),\n                'field_tell'\t\t=> mysqli_field_tell($res),\n            );\n            if (is_object($meta['fetch_field'])) {\n                $meta['fetch_field']->charsetnr\t= 'ignore';\n                $meta['fetch_field']->flags\t= 'ignore';\n            }\n            if (is_object($meta['fetch_field_direct0'])) {\n                $meta['fetch_field_direct0']->charsetnr\t= 'ignore';\n                $meta['fetch_field_direct0']->flags\t= 'ignore';\n            }\n            if (is_object($meta['fetch_field_direct1'])) {\n                $meta['fetch_field_direct1']->charsetnr\t= 'ignore';\n                $meta['fetch_field_direct1']->flags\t= 'ignore';\n            }\n            mysqli_free_result($res);\n            if ($meta != $expected_lib) {\n                printf(\"[%04d - %s] Metadata differs from expected values\\n\",\n                    $offset + 5, $sql);\n                var_dump($meta);\n                var_dump($expected_lib);\n                return false;\n            }\n        }\n        if (function_exists('mysqli_stmt_get_result')) {\n            /* mysqlnd only */\n            if (!mysqli_stmt_execute($stmt)) {\n                printf(\"[%04d - %s] [%d] %s\\n\",\n                    $offset + 6, $sql,\n                    mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n                return false;\n            }\n            $res = mysqli_stmt_get_result($stmt);\n            if (false === $res && !empty($expected_mysqlnd)) {\n                printf(\"[%04d - %s] Expecting resultset [%d] %s\\n\",\n                    $offset + 7, $sql,\n                    mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n                return false;\n            } else if (empty($expected_mysqlnd) && false !== $res) {\n                printf(\"[%04d - %s] Unexpected resultset [%d] %s\\n\",\n                    $offset + 8, $sql,\n                    mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n                return false;\n            }\n            if (!is_object($res)) {\n                printf(\"[%04d - %s] [%d] %s\\n\",\n                    $offset + 9, $sql,\n                    mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n                return false;\n            }\n            if ('mysqli_result' != get_class($res)) {\n                printf(\"[%04d - %s] Expecting object/mysqli_result got object/%s\\n\",\n                    $offset + 10, $sql,\n                    get_class($res));\n                return false;\n            }\n            $meta_res = array(\n                'num_fields'\t\t=> mysqli_num_fields($res),\n                'fetch_field'\t\t=> mysqli_fetch_field($res),\n                'fetch_field_direct0'\t=> mysqli_fetch_field_direct($res, 0),\n                'fetch_field_direct1'\t=> @mysqli_fetch_field_direct($res, 1),\n                'fetch_fields'\t\t=> count(mysqli_fetch_fields($res)),\n                'field_count'\t\t=> mysqli_field_count($link),\n                'field_seek-1'\t\t=> @mysqli_field_seek($res, -1),\n                'field_seek0'\t\t=> mysqli_field_seek($res, 0),\n                'field_tell'\t\t=> mysqli_field_tell($res),\n            );\n            if (is_object($meta_res['fetch_field'])) {\n                $meta_res['fetch_field']->charsetnr\t= 'ignore';\n                $meta_res['fetch_field']->flags\t= 'ignore';\n            }\n            if (is_object($meta_res['fetch_field_direct0'])) {\n                $meta_res['fetch_field_direct0']->charsetnr\t= 'ignore';\n                $meta_res['fetch_field_direct0']->flags\t= 'ignore';\n            }\n            if (is_object($meta_res['fetch_field_direct1'])) {\n                $meta_res['fetch_field_direct1']->charsetnr\t= 'ignore';\n                $meta_res['fetch_field_direct1']->flags\t= 'ignore';\n            }\n            mysqli_free_result($res);\n            if ($check_mysqlnd && $meta_res != $expected_mysqlnd) {\n                printf(\"[%04d - %s] Metadata differs from expected\\n\",\n                    $offset + 11, $sql);\n                var_dump($meta_res);\n                var_dump($expected_mysqlnd);\n            } else {\n                if ($meta_res['field_count'] < 1) {\n                    printf(\"[%04d - %s] Metadata seems wrong, no fields?\\n\",\n                    $offset + 12, $sql);\n                    var_dump($meta_res);\n                    var_dump(mysqli_fetch_assoc($res));\n                }\n            }\n            if ($compare && $meta_res != $meta) {\n                printf(\"[%04d - %s] Metadata returned by mysqli_stmt_result_metadata() and mysqli_stmt_get_result() differ\\n\",\n                    $offset + 13, $sql);\n                var_dump($meta_res);\n                var_dump($meta);\n            }\n        }\n        mysqli_stmt_close($stmt);\n        return true;\n    }\n    /* Note: very weak testing, we accept almost any result */\n    testStatement(100, $link, 'ANALYZE TABLE test', array(), array(1), false, false);\n    testStatement(120, $link, 'OPTIMIZE TABLE test', array(), array(1), false, false);\n    testStatement(140, $link, 'REPAIR TABLE test', array(), array(1), false, false);\n    testStatement(160, $link, 'SHOW AUTHORS', array(), array(1), false, false);\n    testStatement(180, $link, 'SHOW CHARACTER SET', array(), array(1), false, false);\n    testStatement(200, $link, 'SHOW COLLATION', array(), array(1), false, false);\n    testStatement(220, $link, 'SHOW CONTRIBUTORS', array(), array(1), false, false);\n    testStatement(240, $link, 'SHOW CREATE DATABASE ' . $db, array(), array(1), false, false);\n    testStatement(260, $link, 'SHOW DATABASES', array(), array(1), false, false);\n    testStatement(280, $link, 'SHOW ENGINE InnoDB STATUS', array(), array(1), false, false);\n    testStatement(300, $link, 'SHOW ENGINES', array(), array(1), false, false);\n    testStatement(320, $link, 'SHOW PLUGINS', array(), array(1), false, false);\n    testStatement(340, $link, 'SHOW PROCESSLIST', array(), array(1), false, false);\n    testStatement(360, $link, 'SHOW FULL PROCESSLIST', array(), array(1), false, false);\n    testStatement(380, $link, 'SHOW STATUS', array(), array(1), false, false);\n    testStatement(400, $link, 'SHOW TABLE STATUS', array(), array(1), false, false);\n    testStatement(420, $link, 'SHOW TABLE STATUS', array(), array(1), false, false);\n    testStatement(440, $link, 'SHOW TABLES', array(), array(1), false, false);\n    testStatement(460, $link, 'SHOW OPEN TABLES', array(), array(1), false, false);\n    testStatement(460, $link, 'SHOW VARIABLES', array(), array(1), false, false);\n    $field0 = new stdClass();\n    $field0->name \t\t= 'id';\n    $field0->orgname \t= 'id';\n    $field0->table\t\t= 'test';\n    $field0->orgtable\t= 'test';\n    $field0->def \t\t= '';\n    $field0->max_length\t= 0;\n    $field0->length\t\t= 11;\n    $field0->charsetnr\t= 'ignore';\n    $field0->flags\t\t= 'ignore';\n    $field0->type\t\t= MYSQLI_TYPE_LONG;\n    $field0->decimals\t= 0;\n    $meta_lib = array(\n        'num_fields'\t\t=> 1,\n        'fetch_field'\t\t=> $field0,\n        'fetch_field_direct0'\t=> $field0,\n        'fetch_field_direct1'\t=> false,\n        'fetch_fields'\t\t=> 1,\n        'field_count'\t\t=> 1,\n        'field_seek-1'\t\t=> false,\n        'field_seek0'\t\t=> true,\n        'field_tell'\t\t=> 0,\n    );\n    $meta_mysqlnd = $meta_lib;\n    testStatement(480, $link, 'SELECT id FROM test', $meta_lib, $meta_mysqlnd, true, true);\n    testStatement(500, $link, 'CHECKSUM TABLE test', array(), array(1), false, false);\n    mysqli_close($link);\n    print \"done!\";\n?>")).toMatchSnapshot();
  });
});
