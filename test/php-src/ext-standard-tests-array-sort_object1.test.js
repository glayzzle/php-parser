// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/array/sort_object1.phpt
  it("Test sort() function : object functionality - sorting objects, 'sort_flags' as default/SORT_REGULAR", function () {
    expect(parser.parseCode("<?php\n/*\n * testing sort() by providing integer/string object arrays with flag values are default, SORT_REGULAR\n*/\necho \"*** Testing sort() : object functionality ***\\n\";\n// class declaration for integer objects\nclass for_integer_sort\n{\n  public $class_value;\n  // initializing object member value\n  function __construct($value){\n    $this->class_value = $value;\n  }\n}\n// class declaration for string objects\nclass for_string_sort\n{\n  public $class_value;\n  // initializing object member value\n  function __construct($value){\n    $this->class_value = $value;\n   }\n  // return string value\n  function __tostring() {\n   return (string)$this->value;\n  }\n}\n// array of integer objects\n$unsorted_int_obj = array(\n  new for_integer_sort(11), new for_integer_sort(66),\n  new for_integer_sort(23), new for_integer_sort(-5),\n  new for_integer_sort(0.001), new for_integer_sort(0)\n);\n// array of string objects\n$unsorted_str_obj = array (\n  new for_string_sort(\"axx\"), new for_string_sort(\"t\"),\n  new for_string_sort(\"w\"), new for_string_sort(\"py\"),\n  new for_string_sort(\"apple\"), new for_string_sort(\"Orange\"),\n  new for_string_sort(\"Lemon\"), new for_string_sort(\"aPPle\")\n);\necho \"\\n-- Testing sort() by supplying various object arrays, 'flag' value is default --\\n\";\n// testing sort() function by supplying integer object array, flag value is default\n$temp_array = $unsorted_int_obj;\nvar_dump(sort($temp_array) );\nvar_dump($temp_array);\n// testing sort() function by supplying string object array, flag value is default\n$temp_array = $unsorted_str_obj;\nvar_dump(sort($temp_array) );\nvar_dump($temp_array);\necho \"\\n-- Testing sort() by supplying various object arrays, 'flag' value is SORT_REGULAR --\\n\";\n// testing sort() function by supplying integer object array, flag value = SORT_REGULAR\n$temp_array = $unsorted_int_obj;\nvar_dump(sort($temp_array, SORT_REGULAR) );\nvar_dump($temp_array);\n// testing sort() function by supplying string object array, flag value = SORT_REGULAR\n$temp_array = $unsorted_str_obj;\nvar_dump(sort($temp_array, SORT_REGULAR) );\nvar_dump($temp_array);\necho \"Done\\n\";\n?>")).toMatchSnapshot();
  });
});
