// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/strings/vprintf_variation2.phpt
  it("Test vprintf() function : usage variations - unexpected values for args argument", function () {
    expect(parser.parseCode("<?php\n/*\n * Test vprintf() when different unexpected values are passed to\n * the '$args' arguments of the function\n*/\necho \"*** Testing vprintf() : with unexpected values for args argument ***\\n\";\n// initialising the required variables\n$format = '%s';\n//get an unset variable\n$unset_var = 10;\nunset ($unset_var);\n// declaring a class\nclass sample\n{\n  public function __toString() {\n  return \"object\";\n  }\n}\n// Defining resource\n$file_handle = fopen(__FILE__, 'r');\n//array of values to iterate over\n$values = array(\n          // int data\n/*1*/\t  0,\n          1,\n          12345,\n          -2345,\n          // float data\n/*5*/\t  10.5,\n          -10.5,\n          10.1234567e10,\n          10.7654321E-10,\n          .5,\n          // null data\n/*10*/\t  NULL,\n          null,\n          // boolean data\n/*12*/\t  true,\n          false,\n          TRUE,\n          FALSE,\n          // empty data\n/*16*/\t  \"\",\n          '',\n          // string data\n/*18*/\t  \"string\",\n          'string',\n          // object data\n/*20*/\t  new sample(),\n          // undefined data\n/*21*/\t  @$undefined_var,\n          // unset data\n/*22*/\t  @$unset_var,\n          // resource data\n/*23*/\t\t  $file_handle\n);\n// loop through each element of the array for args\n$counter = 1;\nforeach($values as $value) {\n  echo \"\\n-- Iteration $counter --\\n\";\n  try {\n    $result = vprintf($format,$value);\n    echo \"\\n\";\n    var_dump($result);\n  } catch (\\TypeError $e) {\n    echo $e->getMessage(), \"\\n\";\n  } catch (\\ValueError $e) {\n    echo $e->getMessage(), \"\\n\";\n  }\n  $counter++;\n};\n// closing the resource\nfclose($file_handle);\n?>")).toMatchSnapshot();
  });
});
