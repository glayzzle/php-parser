// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/file/touch_variation5-win32.phpt
  it("Test touch() function : variation: various valid and invalid paths", function () {
    expect(parser.parseCode("<?php\n$workDir = \"touchVar5.tmp\";\n$subDirOrFile = \"aSubDirOrFile\";\n$cwd = __DIR__;\nchdir($cwd);\nif (!mkdir($cwd . '/' . $workDir)) die(\"cannot create directory $workDir\");\n$paths = array(\n             // relative\n             $workDir.'/'.$subDirOrFile,\n             './'.$workDir.'/'.$subDirOrFile,\n             $workDir.'/../'.$workDir.'/'.$subDirOrFile,\n             // relative bad path (note p8 msgs differ)\n             $workDir.'/../BADDIR/'.$subDirOrFile,\n             'BADDIR/'.$subDirOrFile,\n             //absolute\n             $cwd.'/'.$workDir.'/'.$subDirOrFile,\n             $cwd.'/./'.$workDir.'/'.$subDirOrFile,\n             $cwd.'/'.$workDir.'/../'.$workDir.'/'.$subDirOrFile,\n             //absolute bad path (note p8 msgs differ)\n             $cwd.'/BADDIR/'.$subDirOrFile,\n             //trailing separators\n             $workDir.'/'.$subDirOrFile.'/',\n             $cwd.'/'.$workDir.'/'.$subDirOrFile.'/',\n             // multiple separators\n             $workDir.'//'.$subDirOrFile,\n             $cwd.'//'.$workDir.'//'.$subDirOrFile,\n             );\necho \"*** Testing touch() : variation ***\\n\";\necho \"\\n*** testing nonexisting paths ***\\n\";\ntest_nonexisting($paths);\necho \"\\n*** testing existing files ***\\n\";\ntest_existing($paths, false);\necho \"\\n*** testing existing directories ***\\n\";\ntest_existing($paths, true);\nrmdir($workDir);\nfunction test_nonexisting($paths) {\n    foreach($paths as $path) {\n       echo \"--- testing $path ---\\n\";\n       if (is_dir($path) || is_file($path)) {\n          echo \"FAILED: $path - exists\\n\";\n       }\n       else {\n          $res = touch($path);\n          if ($res === true) {\n             // something was created\n             if (file_exists($path)) {\n                  // something found\n                  if (is_dir($path)) {\n                     echo \"FAILED: $path - unexpected directory\\n\";\n                  }\n                  else {\n                     echo \"PASSED: $path - created\\n\";\n                     unlink($path);\n                  }\n             }\n             else {\n                // nothing found\n                echo \"FAILED: $path - touch returned true, nothing there\\n\";\n             }\n          }\n          else {\n             // nothing created\n             if (file_exists($path)) {\n                  //something found\n                  echo \"FAILED: $path - touch returned false, something there\\n\";\n                  if (is_dir($path)) {\n                     rmdir($path);\n                  }\n                  else {\n                     unlink($path);\n                  }\n             }\n          }\n       }\n    }\n}\nfunction test_existing($paths, $are_dirs) {\n    foreach($paths as $path) {\n       if ($are_dirs) {\n          $res = @mkdir($path);\n          if ($res == true) {\n             test_path($path);\n             rmdir($path);\n          }\n       }\n       else {\n          $h = @fopen($path,\"w\");\n          if ($h !== false) {\n             fclose($h);\n             test_path($path);\n             unlink($path);\n          }\n       }\n    }\n}\nfunction test_path($path) {\n   echo \"--- testing $path ---\\n\";\n   $org_atime = get_atime($path);\n   clearstatcache();\n   $res = touch($path,0,0);\n   $next_atime = get_atime($path);\n   if ($next_atime == $org_atime) {\n      echo \"FAILED: $path - access time not changed\\n\";\n   }\n   else {\n      echo \"PASSED: $path - touched\\n\";\n   }\n}\nfunction get_atime($path) {\n   $temp = stat($path);\n   return $temp['atime'];\n}\n?>")).toMatchSnapshot();
  });
});
