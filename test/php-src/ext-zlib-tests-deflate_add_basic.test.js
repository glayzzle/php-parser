// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/zlib/tests/deflate_add_basic.phpt
  it("Test incremental deflate_add() functionality", function () {
    expect(parser.parseCode("<?php\nfunction deflateStream($mode, $flushSize, $flushType) {\n    $buffer = \"\";\n    $deflated = null;\n    $resource = deflate_init($mode);\n    while (true) {\n        $dataToCompress = yield $deflated;\n        if (isset($dataToCompress)) {\n            $buffer .= $dataToCompress;\n            if (strlen($buffer) >= $flushSize) {\n                $deflated = deflate_add($resource, $buffer, $flushType);\n                $buffer = \"\";\n            } else {\n                $deflated = null;\n            }\n        } else {\n            $deflated = deflate_add($resource, $buffer, ZLIB_FINISH);\n        }\n    }\n}\n$modes = [\n    'ZLIB_ENCODING_RAW'     => ZLIB_ENCODING_RAW,\n    'ZLIB_ENCODING_GZIP'    => ZLIB_ENCODING_GZIP,\n    'ZLIB_ENCODING_DEFLATE' => ZLIB_ENCODING_DEFLATE,\n];\n$flushSizes = [1, 4, 32768];\n$flushTypes = [\n    'ZLIB_SYNC_FLUSH' => ZLIB_SYNC_FLUSH,\n    'ZLIB_PARTIAL_FLUSH' => ZLIB_PARTIAL_FLUSH,\n    'ZLIB_FULL_FLUSH' => ZLIB_FULL_FLUSH,\n    'ZLIB_NO_FLUSH' => ZLIB_NO_FLUSH,\n];\n/* Z_BLOCK is only available for deflate when built against zlib >= 1.2.4 */\nif (ZLIB_VERNUM >= 0x1240) {\n    $flushTypes['ZLIB_BLOCK'] = ZLIB_BLOCK;\n}\nforeach ($modes as $modeKey => $mode) {\n    foreach ($flushSizes as $flushSize) {\n        foreach ($flushTypes as $flushTypeKey => $flushType) {\n            $uncompressed = $compressed = \"\";\n            $stream = deflateStream($mode, $flushSize, $flushType);\n            foreach (range(\"a\", \"z\") as $c) {\n                $uncompressed .= $c;\n                $compressed .= $stream->send($c);\n            }\n            $compressed .= $stream->send(null);\n            if ($uncompressed !== zlib_decode($compressed)) {\n                echo \"Error: {$modeKey} | {$flushSize} | {$flushTypeKey}\\n\";\n            }\n        }\n    }\n}\n?>\n===DONE===")).toMatchSnapshot();
  });
});
