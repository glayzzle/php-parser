// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/general_functions/floatval.phpt
  it("Testing floatval() and its alias doubleval() Functions", function () {
    expect(parser.parseCode("<?php\necho \"*** Testing floatval() with valid float values ***\\n\";\n// different valid  float values\n$valid_floats = array(\n                0.0,\n                1.0,\n                -1.0,\n                1.234,\n            -1.234,\n                1.2e3,\n            -1.2e3,\n        10.0000000000000000005,\n        10.5e+5,\n                1e5,\n            -1e5,\n                1e-5,\n        -1e-1,\n        1e+5,\n        -1e+5,\n        1E5,\n        -1E5,\n        1E+5,\n        -1E+5,\n        .5e+7,\n        -.5e+7\n);\n/* loop to check that floatval() recognizes different\n   float values, expected output:float value for valid floating point number */\nforeach ($valid_floats as $value ) {\n   var_dump( floatval($value) );\n}\necho \"\\n*** Testing doubleval() with valid float values ***\\n\";\n/* loop to check that doubleval() also recognizes different\n   float values, expected output:float value for valid floating point number */\nforeach ($valid_floats as $value ) {\n   var_dump( doubleval($value) );\n}\necho \"\\n*** Testing floatval() on non floating types ***\\n\";\n// get a resource type variable\n$fp = fopen (__FILE__, \"r\");\nfclose($fp);\n$dfp = opendir ( __DIR__ );\nclosedir($dfp);\n// other types in an array\n$not_float_types = array (\n                   -2147483648, // max negative integer value\n                   2147483648,  // max positive integer value\n                   $fp,  // resource\n                   $dfp,\n                   \"0.0\", // string\n                   \"1.0\",\n               \"-1.3e3\",\n           \"bob-1.3e3\",\n                   \"10 Some dollars\",\n               \"10.2 Some Dollars\",\n               \"10.0 dollar\" + 1,\n           \"10.0 dollar\" + 1.0,\n                   \"\",\n                   true,\n                   NULL,\n                   null,\n                 );\n/* loop through the $not_float_types to see working of\n   floatval() on non float types, expected output: float value valid floating point numbers */\nforeach ($not_float_types as $type ) {\n   var_dump( floatval($type) );\n}\necho \"\\n*** Testing doubleval() on non floating types ***\\n\";\n/* loop through the $not_float_types to see working of\n   doubleval() on non float types, expected output: float value valid floating point numbers */\nforeach ($not_float_types as $type ) {\n   var_dump( doubleval($type) );\n}\necho \"\\nDone\\n\";\n?>")).toMatchSnapshot();
  });
});
