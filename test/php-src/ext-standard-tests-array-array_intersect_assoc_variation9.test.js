// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/array/array_intersect_assoc_variation9.phpt
  it("Test array_intersect_assoc() function : usage variations - two dimensional arrays for $arr1 and $arr2 arguments", function () {
    expect(parser.parseCode("<?php\n/*\n* Testing the behavior of array_intersect_assoc() by passing 2-D arrays\n* to both $arr1 and $arr2 argument.\n* Optional argument takes the same value as that of $arr1\n*/\necho \"*** Testing array_intersect_assoc() : passing two dimensional array to both \\$arr1 and \\$arr2 arguments ***\\n\";\n// two dimensional arrays for $arr1 and $arr2 argument\n$arr1 = array (\n  // arrays with default keys\n  array(1, 2, \"hello\", 'world'),\n  array(1, 2, 3, 4),\n  // arrays with explicit keys\n  array(1 => \"one\", 2 => \"two\", 3 => \"three\"),\n  array(\"ten\" => 10, \"twenty\" => 20.00, \"thirty\" => 30)\n);\n$arr2 = array (\n  array(1, 2, 3, 4),\n  array(1 => \"one\", 2 => \"two\", 3 => \"three\")\n);\n/* Passing the entire array as argument to $arr1 and $arr2 */\n// Calling array_intersect_assoc() with default arguments\necho \"-- Passing the entire 2-D array to \\$arr1 and \\$arr2 --\\n\";\necho \"- With default arguments -\\n\";\nvar_dump( array_intersect_assoc($arr1, $arr2) );\n// Calling array_intersect_assoc() with more arguments\n// additional argument passed is the same as $arr1\necho \"- With more arguments -\\n\";\nvar_dump( array_intersect_assoc($arr1, $arr2, $arr1) );\n/* Passing the sub-array as argument to $arr1 and $arr2 */\n// Calling array_intersect_assoc() with default arguments\necho \"-- Passing the sub-array to \\$arr1 and \\$arr2 --\\n\";\necho \"- With default arguments -\\n\";\nvar_dump( array_intersect_assoc($arr1[0], $arr2[0]) );\n// Calling array_intersect_assoc() with more arguments\n// additional argument passed is the same as $arr1\necho \"- With more arguments -\\n\";\nvar_dump( array_intersect_assoc($arr1[0], $arr2[0], $arr1[0]) );\necho \"Done\";\n?>")).toMatchSnapshot();
  });
});
