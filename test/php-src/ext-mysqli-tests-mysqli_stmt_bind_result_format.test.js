// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/mysqli_stmt_bind_result_format.phpt
  it("Playing with SELECT FORMAT(...) AS _format - see also bugs.php.net/42378", function () {
    expect(parser.parseCode("<?php\n    require_once(\"connect.inc\");\n    function create_table($link, $column, $min, $max, $engine, $offset) {\n        if (!mysqli_query($link, 'DROP TABLE IF EXISTS test')) {\n            printf(\"[%03d] Cannot drop table test, [%d] %s\\n\",\n                $offset,\n                mysqli_errno($link), mysqli_error($link));\n            return array();\n        }\n        $sql = sprintf(\"CREATE TABLE test(id INT AUTO_INCREMENT PRIMARY KEY, col1 %s) ENGINE=%s\",\n            $column, $engine);\n        if (!mysqli_query($link, $sql)) {\n            printf(\"[%03d] Cannot create table test, [%d] %s\\n\",\n                $offset + 1,\n                mysqli_errno($link), mysqli_error($link));\n            return array();\n        }\n        $values = array();\n        for ($i = 1; $i <= 100; $i++) {\n            $col1 = mt_rand($min, $max);\n            $values[$i] = $col1;\n            $sql = sprintf(\"INSERT INTO test(id, col1) VALUES (%d, %f)\",\n                $i, $col1);\n            if (!mysqli_query($link, $sql)) {\n                printf(\"[%03d] Cannot insert data, [%d] %s\\n\",\n                    $offset + 2,\n                    mysqli_errno($link), mysqli_error($link));\n                return array();\n            }\n        }\n        return $values;\n    }\n    function test_format($link, $format, $from, $order_by, $expected, $offset) {\n        if (!$stmt = mysqli_stmt_init($link)) {\n            printf(\"[%03d] Cannot create PS, [%d] %s\\n\",\n                $offset,\n                mysqli_errno($link), mysqli_error($link));\n            return false;\n        }\n        if ($order_by)\n            $sql = sprintf('SELECT %s AS _format FROM %s ORDER BY %s', $format, $from, $order_by);\n        else\n            $sql = sprintf('SELECT %s AS _format FROM %s', $format, $from);\n        if (!mysqli_stmt_prepare($stmt, $sql)) {\n            printf(\"[%03d] Cannot prepare PS, [%d] %s\\n\",\n                $offset + 1,\n                mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n            return false;\n        }\n        if (!mysqli_stmt_execute($stmt)) {\n            printf(\"[%03d] Cannot execute PS, [%d] %s\\n\",\n                $offset + 2,\n                mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n            return false;\n        }\n        if (!mysqli_stmt_store_result($stmt)) {\n            printf(\"[%03d] Cannot store result set, [%d] %s\\n\",\n                $offset + 3,\n                mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n            return false;\n        }\n        if (!is_array($expected)) {\n            $result = null;\n            if (!mysqli_stmt_bind_result($stmt, $result)) {\n                printf(\"[%03d] Cannot bind result, [%d] %s\\n\",\n                    $offset + 4,\n                    mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n                return false;\n            }\n            if (!mysqli_stmt_fetch($stmt)) {\n                printf(\"[%03d] Cannot fetch result,, [%d] %s\\n\",\n                    $offset + 5,\n                    mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n                return false;\n            }\n            if ($result !== $expected) {\n                printf(\"[%03d] Expecting %s/%s got %s/%s with %s - %s.\\n\",\n                    $offset + 6,\n                    gettype($expected), $expected,\n                    gettype($result), $result,\n                    $format, $sql);\n            }\n        } else {\n            $order_by_col = $result = null;\n            if (!mysqli_stmt_bind_result($stmt, $order_by_col, $result)) {\n                printf(\"[%03d] Cannot bind result, [%d] %s\\n\",\n                    $offset + 7,\n                    mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n                return false;\n            }\n            foreach ($expected as $k => $v) {\n                if (!mysqli_stmt_fetch($stmt)) {\n                    break;\n                }\n                if ($result !== $v) {\n                    printf(\"[%03d] Row %d - expecting %s/%s got %s/%s [%s] with %s - %s.\\n\",\n                        $offset + 8,\n                        $k,\n                        gettype($v), $v,\n                        gettype($result), $result,\n                        $order_by_col,\n                        $format, $sql);\n                }\n            }\n        }\n        mysqli_stmt_free_result($stmt);\n        mysqli_stmt_close($stmt);\n        return true;\n    }\n    if (!$link = my_mysqli_connect($host, $user, $passwd, $db, $port, $socket))\n        printf(\"[001] Cannot connect - [%d] %s\\n\",\n            mysqli_connect_errno(),\n            mysqli_connect_error());\n    /* select from dual - pseudo table */\n    test_format($link, 'FORMAT(1.01, 0)', 'DUAL', null, '1', 10);\n    test_format($link, 'FORMAT(1.23, 1)', 'DUAL', null, '1.2', 20);\n    test_format($link, 'FORMAT(1.23, 2)', 'DUAL', null, '1.23', 30);\n    test_format($link, 'FORMAT(1234.567, 3)', 'DUAL', null, '1,234.567', 40);\n    /* no typo! */\n    test_format($link, 'FORMAT(1234.567, 4)', 'DUAL', null, '1,234.5670', 50);\n    mysqli_close($link);\n    require_once('table.inc');\n    /* select from existing table */\n    test_format($link, 'FORMAT(id, 0)', 'test', null, '1', 60);\n    test_format($link, 'FORMAT(id + 0.1, 1)', 'test', null, '1.1', 70);\n    test_format($link, 'FORMAT(id + 0.01, 2)', 'test', null, '1.01', 80);\n    /* create new table and select from it */\n    $expected = create_table($link, 'FLOAT', -10000, 10000, $engine, 90);\n    foreach ($expected as $k => $v)\n        $expected[$k] = number_format(round($v), 0, '.', ',');\n    test_format($link, 'id AS order_by_col, FORMAT(col1, 0)', 'test', 'id', $expected, 100);\n    $expected = create_table($link, 'FLOAT UNSIGNED', 0, 10000, $engine, 110);\n    foreach ($expected as $k => $v)\n        $expected[$k] = number_format(round($v), 0, '.', ',');\n    test_format($link, 'id AS order_by_col, FORMAT(col1, 0)', 'test', 'id', $expected, 120);\n    $expected = create_table($link, 'TINYINT', -128, 127, $engine, 130);\n    foreach ($expected as $k => $v)\n        $expected[$k] = number_format(round($v), 0, '.', ',');\n    test_format($link, 'id AS order_by_col, FORMAT(col1, 0)', 'test', 'id', $expected, 140);\n    $expected = create_table($link, 'SMALLINT UNSIGNED', 0, 65535, $engine, 150);\n    foreach ($expected as $k => $v)\n        $expected[$k] = number_format(round($v), 0, '.', ',');\n    test_format($link, 'id AS order_by_col, FORMAT(col1, 0)', 'test', 'id', $expected, 160);\n    $expected = create_table($link, 'MEDIUMINT', 0, 8388607, $engine, 170);\n    foreach ($expected as $k => $v)\n        $expected[$k] = number_format(round($v), 0, '.', ',');\n    test_format($link, 'id AS order_by_col, FORMAT(col1, 0)', 'test', 'id', $expected, 180);\n    $expected = create_table($link, 'INT UNSIGNED', 0, 1000, $engine, 190);\n    foreach ($expected as $k => $v)\n        $expected[$k] = number_format(round($v), 0, '.', ',');\n    test_format($link, 'id AS order_by_col, FORMAT(col1, 0)', 'test', 'id', $expected, 200);\n    $expected = create_table($link, 'BIGINT', -1000, 1000, $engine, 210);\n    foreach ($expected as $k => $v)\n        $expected[$k] = number_format(round($v), 0, '.', ',');\n    test_format($link, 'id AS order_by_col, FORMAT(col1, 0)', 'test', 'id', $expected, 220);\n    $expected = create_table($link, 'DECIMAL(5,0)', -1000, 1000, $engine, 230);\n    foreach ($expected as $k => $v)\n        $expected[$k] = number_format(round($v), 0, '.', ',');\n    test_format($link, 'id AS order_by_col, FORMAT(col1, 0)', 'test', 'id', $expected, 240);\n    // http://bugs.php.net/bug.php?id=42378\n    if (!mysqli_query($link, \"DROP TABLE IF EXISTS test\")) {\n        printf(\"[300] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    }\n    if (mysqli_query($link, \"CREATE TABLE `test` (\n  `targetport` int(11) NOT NULL default '0',\n  `sources` double(17,4) default NULL,\n  `current_sources` double(17,4) default NULL,\n  `reports` double(17,4) default NULL,\n  `current_reports` double(17,4) default NULL,\n  `targets` double(17,4) default NULL,\n  `current_targets` double(17,4) default NULL,\n  `maxsources` int(11) default NULL,\n  `maxtargets` int(11) default NULL,\n  `maxreports` int(11) default NULL,\n  `trend` float default NULL,\n  PRIMARY KEY  (`targetport`)\n) ENGINE=InnoDB DEFAULT CHARSET=latin1\")) {\n        do {\n            $values = array();\n            for ($i = 0; $i < 200; $i++) {\n                $current_targets = mt_rand(-100000, 100000) / 10;\n                do {\n                    $trend = (mt_rand(0, 3) > 1) ? (mt_rand(-10000, 10000) / 100) : 'NULL';\n                } while (isset($values[(string)$trend]));\n                $sql = sprintf('INSERT INTO test(targetport, current_targets, maxreports, trend) VALUES (%d, %f, %s, %s)',\n                    $i,\n                    $current_targets,\n                    (mt_rand(0, 1) > 0) ? mt_rand(0, 1000) : 'NULL',\n                    $trend);\n                if (!mysqli_query($link, $sql)) {\n                    printf(\"[301] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n                    break 2;\n                }\n                if ($current_targets > 0 && $trend !== 'NULL')\n                    $values[(string)$trend] = $i;\n            }\n            krsort($values);\n            if (!$stmt = mysqli_stmt_init($link)) {\n                printf(\"[302] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n                break;\n            }\n            if (!mysqli_stmt_prepare($stmt, 'SELECT trend, targetport, FORMAT(trend, 2) FROM test WHERE current_targets > 0 AND trend IS NOT NULL ORDER BY trend DESC LIMIT 100')) {\n                printf(\"[303] [%d] %s\\n\", mysqli_stmt_errno($link), mysqli_stmt_error($link));\n                break;\n            }\n            if (!mysqli_stmt_execute($stmt)) {\n                printf(\"[304] [%d] %s\\n\", mysqli_stmt_errno($link), mysqli_stmt_error($link));\n                break;\n            }\n            if (!mysqli_stmt_store_result($stmt)) {\n                printf(\"[305] [%d] %s\\n\", mysqli_stmt_errno($link), mysqli_stmt_error($link));\n                break;\n            }\n            $trend = $targetport = $format = null;\n            if (!mysqli_stmt_bind_result($stmt, $trend, $targetport, $format)) {\n                printf(\"[305] [%d] %s\\n\", mysqli_stmt_errno($link), mysqli_stmt_error($link));\n                break;\n            }\n            foreach ($values as $exp_trend => $exp_targetport) {\n                if (!mysqli_stmt_fetch($stmt)) {\n                    break;\n                }\n                if ($targetport != $exp_targetport) {\n                    printf(\"[306] Values fetched from MySQL seem to be wrong, check manually\\n\");\n                    printf(\"%s/%s - %s/%s - '%s'\\n\", $trend, $exp_trend, $targetport, $exp_targetport, $format);\n                }\n            }\n            mysqli_stmt_free_result($stmt);\n            mysqli_stmt_close($stmt);\n            // same but OO interface\n            if (!$stmt = mysqli_stmt_init($link)) {\n                printf(\"[307] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n                break;\n            }\n            if (!$stmt->prepare('SELECT trend, targetport, FORMAT(trend, 2) FROM test WHERE current_targets > 0 AND trend IS NOT NULL ORDER BY trend DESC LIMIT 100')) {\n                printf(\"[308] [%d] %s\\n\", mysqli_stmt_errno($link), mysqli_stmt_error($link));\n                break;\n            }\n            if (!$stmt->execute()) {\n                printf(\"[309] [%d] %s\\n\", mysqli_stmt_errno($link), mysqli_stmt_error($link));\n                break;\n            }\n            if (!$stmt->store_result()) {\n                printf(\"[310] [%d] %s\\n\", mysqli_stmt_errno($link), mysqli_stmt_error($link));\n                break;\n            }\n            $trend = $targetport = $format = null;\n            if (!$stmt->bind_result($trend, $targetport, $format)) {\n                printf(\"[311] [%d] %s\\n\", mysqli_stmt_errno($link), mysqli_stmt_error($link));\n                break;\n            }\n            foreach ($values as $exp_trend => $exp_targetport) {\n                if (!$stmt->fetch()) {\n                    break;\n                }\n                if ($targetport != $exp_targetport) {\n                    printf(\"[312] Values fetched from MySQL seem to be wrong, check manually\\n\");\n                    printf(\"%s/%s - %s/%s - '%s'\\n\", $trend, $exp_trend, $targetport, $exp_targetport, $format);\n                }\n            }\n            $stmt->free_result();\n            $stmt->close();\n        } while (false);\n    } else {\n        var_dump(mysqli_error($link));\n    }\n    mysqli_close($link);\n    print \"done!\";\n?>")).toMatchSnapshot();
  });
});
