// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/array/arsort_variation3.phpt
  it("Test arsort() function : usage variations - sort integer/float values", function () {
    expect(parser.parseCode("<?php\n/*\n * Testing arsort() by providing different integer/float value arrays for $array argument with following values\n * 1. flag value as default\n * 2. SORT_REGULAR - compare items normally\n * 3. SORT_NUMERIC - compare items numerically\n*/\necho \"*** Testing arsort() : usage variations ***\\n\";\n// group of various arrays with indices\n$various_arrays = array(\n  // negative/posative integer array\n  array(1 => 11, 2 => -11, 3 => 21, 4 => -21, 5 => 31, 6 => -31, 7 => 0, 8 => 41, 10 =>-41),\n  // float value array\n  array(1 => 10.5, 2 => -10.5, 3 => 10.5e2, 4 => 10.6E-2, 5 => .5, 6 => .0001, 7 => -.1),\n  // mixed value array\n  array(1 => .0001, 2 => .0021, 3 => -.01, 4 => -1, 5 => 0, 6 => .09, 7 => 2, 8 => -.9, 9 => 10.6E-2, 10 => -10.6E-2, 11 => 33),\n  // array values contains minimum and maximum ranges\n  array(1 => 2147483647, 2 => 2147483648, 3 => -2147483647, 4 => -2147483648, 5 => -0, 6 => 0, 7 => -2147483649)\n);\n// set of possible flag values\n$flag_value = array(\"SORT_REGULAR\" => SORT_REGULAR, \"SORT_NUMERIC\" => SORT_NUMERIC);\n$count = 1;\necho \"\\n-- Testing arsort() by supplying various integer/float arrays --\\n\";\n// loop through to test arsort() with different arrays\nforeach ($various_arrays as $array) {\n  echo \"\\n-- Iteration $count --\\n\";\n  echo \"- With default sort_flag -\\n\";\n  $temp_array = $array;\n  var_dump(arsort($temp_array) );\n  var_dump($temp_array);\n  // loop through $flag_value array and setting all possible flag values\n  foreach($flag_value as $key => $flag){\n    echo \"- Sort_flag = $key -\\n\";\n    $temp_array = $array;\n    var_dump(arsort($temp_array, $flag) );\n    var_dump($temp_array);\n  }\n  $count++;\n}\necho \"Done\\n\";\n?>")).toMatchSnapshot();
  });
});
