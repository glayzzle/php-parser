// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/pdo_oci/tests/pdo_oci_attr_autocommit_2.phpt
  it("PDO_OCI: Attribute: beginTransaction and native transactions", function () {
    expect(parser.parseCode("<?php\nrequire(__DIR__ . '/../../pdo/tests/pdo_test.inc');\n$dbh = PDOTest::factory();\n$dbh->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_SILENT);\n$dbh->exec(\"drop table pdo_ac_tab\");\n$dbh->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n$dbh->exec(\"create table pdo_ac_tab (col1 varchar2(25))\");\necho \"Test 1 Check beginTransaction insertion\\n\";\n$dbh->beginTransaction();\ntry {\n    $dbh->exec(\"insert into pdo_ac_tab (col1) values ('data 1')\");\n    $dbh->exec(\"insert into pdo_ac_tab (col1) values ('data 2')\");\n    $dbh->commit();\n}\ncatch (PDOException $e) {\n    echo \"Caught unexpected exception at line \" . __LINE__ . \"\\n\";\n    echo $e->getMessage() . \"\\n\";\n    $dbh->rollback();\n}\necho \"Test 2 Cause an exception and test beginTransaction rollback\\n\";\n$dbh->beginTransaction();\ntry {\n    $dbh->exec(\"insert into pdo_ac_tab (col1) values ('not committed #1')\");\n    $dbh->exec(\"insert into pdo_ac_tab (col1) values ('data that is too long to fit and will barf')\");\n    $dbh->commit();\n}\ncatch (PDOException $e) {\n    echo \"Caught expected exception at line \" . __LINE__ . \"\\n\";\n    echo $e->getMessage() . \"\\n\";\n    $dbh->rollback();\n}\necho \"Test 3 Setting ATTR_AUTOCOMMIT to true will commit and end the transaction\\n\";\n$dbh->exec(\"insert into pdo_ac_tab (col1) values ('data 3')\");\n$dbh->setAttribute(PDO::ATTR_AUTOCOMMIT, true);\nprint \"PDO::ATTR_AUTOCOMMIT: \";\nvar_dump($dbh->getAttribute(PDO::ATTR_AUTOCOMMIT));\ntry {\n    $dbh->rollback();\n}\ncatch (PDOException $e) {\n    echo \"Caught expected exception at line \" . __LINE__ . \"\\n\";\n    echo $e->getMessage() . \"\\n\";\n}\necho \"Test 4 Setting ATTR_AUTOCOMMIT to false will commit and end the transaction\\n\";\n$dbh->beginTransaction();\n$dbh->exec(\"insert into pdo_ac_tab (col1) values ('data 4')\");\n$dbh->setAttribute(PDO::ATTR_AUTOCOMMIT, false);\nprint \"PDO::ATTR_AUTOCOMMIT: \";\nvar_dump($dbh->getAttribute(PDO::ATTR_AUTOCOMMIT));\ntry {\n    $dbh->rollback();\n}\ncatch (PDOException $e) {\n    echo \"Caught expected exception at line \" . __LINE__ . \"\\n\";\n    echo $e->getMessage() . \"\\n\";\n}\necho \"Test 5 Handle transactions ourselves\\n\";\nprint \"PDO::ATTR_AUTOCOMMIT: \";\nvar_dump($dbh->getAttribute(PDO::ATTR_AUTOCOMMIT));\n$dbh->exec(\"insert into pdo_ac_tab (col1) values ('not committed #2')\");\n$dbh->exec(\"rollback\");\n$dbh->exec(\"insert into pdo_ac_tab (col1) values ('data 5')\");\n$dbh->exec(\"insert into pdo_ac_tab (col1) values ('data 6')\");\n$dbh->exec(\"commit\");\n// Open new connection to really verify what was inserted\n$dbh2 = PDOTest::factory();\necho \"Query Results are:\\n\";\n$s = $dbh2->prepare(\"select col1 from pdo_ac_tab\");\n$s->execute();\nwhile ($r = $s->fetch()) {\n    echo $r[0] . \"\\n\";\n}\necho \"Done\\n\";\n?>")).toMatchSnapshot();
  });
});
