// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/gd/tests/gif.phpt
  it("gif in/out", function () {
    expect(parser.parseCode("<?php\nfunction check_box($r,$g,$b, $error=0) {\n    $cwd = __DIR__;\n    $im2 = imagecreatefromgif($cwd . '/test_gif.gif');\n    $c = imagecolorsforindex($im2, imagecolorat($im2, 8,8));\n    if ($error>0) {\n        $r_min = $r - $error; $r_max = $r + $error;\n        $g_min = $g - $error; $g_max = $g + $error;\n        $b_min = $b - $error; $b_max = $b + $error;\n        if (\n            ($c['red'] >= $r_min || $c['red'] <= $r_max)\n            &&\n            ($c['green'] >= $g_min || $c['green'] <= $g_max)\n            &&\n            ($c['blue'] >= $b_min || $c['blue'] <= $b_max)\n            ) {\n            return true;\n        } else {\n            return false;\n        }\n    } else {\n        if ($c['red']==$r && $c['green']==$g && $c['blue']==$b) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n$cwd = __DIR__;\n$im = imagecreate(10,10);\n$c = imagecolorallocate($im, 255,255,255);\nimagefilledrectangle($im, 5,5, 10,10, $c);\nimagegif($im, $cwd . '/test_gif.gif');\nif (check_box(255,255,255)) {\n    echo \"<4 cols: ok\\n\";\n}\n$im = imagecreate(10,10);\nfor ($i=0; $i<7; $i++) {\n    $c = imagecolorallocate($im, $i,$i,$i);\n}\nimagefilledrectangle($im, 5,5, 10,10, $c);\nimagegif($im, $cwd . '/test_gif.gif');\n$i--;\nif (check_box($i,$i,$i)) {\n        echo \"<8 cols: ok\\n\";\n}\n$im = imagecreate(10,10);\nfor ($i=0; $i<15; $i++) {\n    $c = imagecolorallocate($im, $i,$i,$i);\n}\nimagefilledrectangle($im, 5,5, 10,10, $c);\nimagegif($im, $cwd . '/test_gif.gif');\n$i--;\nif (check_box($i,$i,$i)) {\n        echo \"<16 cols: ok\\n\";\n}\n$im = imagecreate(10,10);\nfor ($i=0; $i<31; $i++) {\n    $c = imagecolorallocate($im, $i,$i,$i);\n}\nimagefilledrectangle($im, 5,5, 10,10, $c);\nimagegif($im, $cwd . '/test_gif.gif');\n$i--;\nif (check_box($i,$i,$i)) {\n        echo \"<32 cols: ok\\n\";\n}\n$im = imagecreate(10,10);\nfor ($i=0; $i<63; $i++) {\n    $c = imagecolorallocate($im, $i,$i,$i);\n}\nimagefilledrectangle($im, 5,5, 10,10, $c);\nimagegif($im, $cwd . '/test_gif.gif');\n$i--;\nif (check_box($i,$i,$i)) {\n        echo \"<64 cols: ok\\n\";\n}\n$im = imagecreate(10,10);\nfor ($i=0; $i<127; $i++) {\n    $c = imagecolorallocate($im, $i,$i,$i);\n}\nimagefilledrectangle($im, 5,5, 10,10, $c);\nimagegif($im, $cwd . '/test_gif.gif');\n$i--;\nif (check_box($i,$i,$i)) {\n        echo \"<128 cols: ok\\n\";\n}\n$im = imagecreate(10,10);\nfor ($i=0; $i<255; $i++) {\n    $c = imagecolorallocate($im, $i,$i,$i);\n}\nimagefilledrectangle($im, 5,5, 10,10, $c);\nimagegif($im, $cwd . '/test_gif.gif');\n$i--;\nif (check_box($i,$i,$i)) {\n        echo \"<256 cols: ok\\n\";\n}\n$im = imagecreatefromjpeg($cwd . '/conv_test.jpg');\nimagefilledrectangle($im, 5,5, 10,10, 0xffffff);\nimagegif($im, $cwd . '/test_gif.gif');\nimagegif($im, $cwd . '/test_gif_2.gif');\nif (check_box(255,255,255, 10)) {\n    echo \">256 cols: ok\\n\";\n}\n@unlink($cwd . \"/test_gif.gif\");\n@unlink($cwd . \"/test_gif_2.gif\");\n?>")).toMatchSnapshot();
  });
});
