// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/gmp/tests/gmp_import.phpt
  it("gmp_import() basic tests", function () {
    expect(parser.parseCode("<?php\n// Tests taken from GMPs own test suite.\n// format is [expected, size, options, input]\n$import = [\n    ['0',1,GMP_BIG_ENDIAN,''],\n    ['12345678',1,GMP_BIG_ENDIAN,'12345678'],\n    ['12345678',4,GMP_BIG_ENDIAN,'12345678'],\n    ['12345678',4,GMP_LSW_FIRST | GMP_BIG_ENDIAN,'12345678'],\n    ['12345678',1,GMP_LSW_FIRST | GMP_LITTLE_ENDIAN,'78563412'],\n    ['12345678',4,GMP_LITTLE_ENDIAN,'78563412'],\n    ['12345678',4,GMP_LSW_FIRST | GMP_LITTLE_ENDIAN,'78563412'],\n    ['123456789abc',2,GMP_BIG_ENDIAN,'123456789abc'],\n    ['123456789abc',2,GMP_LSW_FIRST | GMP_BIG_ENDIAN,'9abc56781234'],\n    ['123456789abc',2,GMP_LITTLE_ENDIAN,'34127856bc9a'],\n    ['123456789abc',2,GMP_LSW_FIRST | GMP_LITTLE_ENDIAN,'bc9a78563412'],\n    ['112233445566778899aabbcc',4,GMP_BIG_ENDIAN,'112233445566778899aabbcc'],\n    ['112233445566778899aabbcc',4,GMP_LSW_FIRST | GMP_BIG_ENDIAN,'99aabbcc5566778811223344'],\n    ['112233445566778899aabbcc',4,GMP_LITTLE_ENDIAN,'4433221188776655ccbbaa99'],\n    ['112233445566778899aabbcc',4,GMP_LSW_FIRST | GMP_LITTLE_ENDIAN,'ccbbaa998877665544332211'],\n    ['100120023003400450056006700780089009a00ab00bc00c',8,GMP_BIG_ENDIAN,'100120023003400450056006700780089009a00ab00bc00c'],\n    ['100120023003400450056006700780089009a00ab00bc00c',8,GMP_LSW_FIRST | GMP_BIG_ENDIAN,'9009a00ab00bc00c50056006700780081001200230034004'],\n    ['100120023003400450056006700780089009a00ab00bc00c',8,GMP_LITTLE_ENDIAN,'044003300220011008800770066005500cc00bb00aa00990'],\n    ['100120023003400450056006700780089009a00ab00bc00c',8,GMP_LSW_FIRST | GMP_LITTLE_ENDIAN,'0cc00bb00aa0099008800770066005500440033002200110']\n];\n$passed = true;\nforeach ($import as $k => $test) {\n    $gmp = gmp_import(hex2bin($test[3]), $test[1], $test[2]);\n    if ($gmp instanceof GMP) {\n        $result = gmp_strval($gmp, 16);\n        if ($result !== $test[0]) {\n            echo \"$k: '$result' !== '{$test[0]}'\\n\";\n            $passed = false;\n        }\n    } else {\n        $type = gettype($gmp);\n        echo \"$k: $type !== '{$test[0]}'\\n\";\n    }\n}\nvar_dump($passed);\n// Invalid word sizes\ntry {\n    var_dump(gmp_import('a', -1));\n} catch (\\ValueError $e) {\n    echo $e->getMessage() . \\PHP_EOL;\n}\ntry {\n    var_dump(gmp_import('a', 0));\n} catch (\\ValueError $e) {\n    echo $e->getMessage() . \\PHP_EOL;\n}\n// Invalid data lengths\ntry {\n    var_dump(gmp_import('a', 2));\n} catch (\\ValueError $e) {\n    echo $e->getMessage() . \\PHP_EOL;\n}\ntry {\n    var_dump(gmp_import('aa', 3));\n} catch (\\ValueError $e) {\n    echo $e->getMessage() . \\PHP_EOL;\n}\ntry {\n    var_dump(gmp_import(str_repeat('a', 100), 64));\n} catch (\\ValueError $e) {\n    echo $e->getMessage() . \\PHP_EOL;\n}\n// Invalid options\ntry {\n    var_dump(gmp_import('a', 1, GMP_MSW_FIRST | GMP_LSW_FIRST));\n} catch (\\ValueError $e) {\n    echo $e->getMessage() . \\PHP_EOL;\n}\ntry {\n    var_dump(gmp_import('a', 1, GMP_BIG_ENDIAN | GMP_LITTLE_ENDIAN));\n} catch (\\ValueError $e) {\n    echo $e->getMessage() . \\PHP_EOL;\n}\n?>")).toMatchSnapshot();
  });
});
