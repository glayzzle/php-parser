// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/pdo_mysql/tests/pdo_mysql_attr_case.phpt
  it("PDO::ATTR_CASE", function () {
    expect(parser.parseCode("<?php\n    require_once(__DIR__ . DIRECTORY_SEPARATOR . 'mysql_pdo_test.inc');\n    $db = MySQLPDOTest::factory();\n    $db->setAttribute(PDO::ATTR_STRINGIFY_FETCHES, true);\n    MySQLPDOTest::createTestTable($db);\n    $default =  $db->getAttribute(PDO::ATTR_CASE);\n    $known = array(\n        PDO::CASE_LOWER => 'PDO::CASE_LOWER',\n        PDO::CASE_UPPER => 'PDO::CASE_UPPER',\n        PDO::CASE_NATURAL => 'PDO::CASE_NATURAL'\n    );\n    if (!isset($known[$default]))\n        printf(\"[001] getAttribute(PDO::ATTR_CASE) returns unknown value '%s'\\n\",\n            var_export($default, true));\n    else\n        var_dump($known[$default]);\n    // lets see what the default is...\n    if (!is_object($stmt = $db->query(\"SELECT id, id AS 'ID_UPPER', label FROM test ORDER BY id ASC LIMIT 2\")))\n        printf(\"[002] %s - %s\\n\",\n            var_export($db->errorInfo(), true), var_export($db->errorCode(), true));\n    var_dump($stmt->fetchAll(PDO::FETCH_BOTH));\n    if (true !== $db->setAttribute(PDO::ATTR_CASE, PDO::CASE_LOWER))\n        printf(\"[003] Cannot set PDO::ATTR_CASE = PDO::CASE_LOWER, %s - %s\\n\",\n            var_export($db->errorInfo(), true), var_export($db->errorCode(), true));\n    if (($tmp = $db->getAttribute(PDO::ATTR_CASE)) !== PDO::CASE_LOWER)\n        printf(\"[004] getAttribute(PDO::ATTR_CASE) returns wrong value '%s'\\n\",\n            var_export($tmp, true));\n    if (true === $db->exec('ALTER TABLE test ADD MiXeD CHAR(1)'))\n        printf(\"[005] Cannot add column %s - %s\\n\",\n            var_export($db->errorInfo(), true), var_export($db->errorCode(), true));\n    if (false === $db->exec('ALTER TABLE test ADD MYUPPER CHAR(1)'))\n        printf(\"[006] Cannot add column %s - %s\\n\",\n            var_export($db->errorInfo(), true), var_export($db->errorCode(), true));\n    if (!is_object($stmt = $db->query(\"SELECT id, id AS 'ID_UPPER', label, MiXeD, MYUPPER FROM test ORDER BY id ASC LIMIT 2\")))\n        printf(\"[007] %s - %s\\n\",\n            var_export($db->errorInfo(), true), var_export($db->errorCode(), true));\n    var_dump($stmt->fetchAll(PDO::FETCH_BOTH));\n    if (true !== $db->setAttribute(PDO::ATTR_CASE, PDO::CASE_UPPER))\n        printf(\"[008] Cannot set PDO::ATTR_CASE = PDO::CASE_UPPER %s - %s\\n\",\n            var_export($db->errorInfo(), true), var_export($db->errorCode(), true));\n    if (($tmp = $db->getAttribute(PDO::ATTR_CASE)) !== PDO::CASE_UPPER)\n        printf(\"[009] getAttribute(PDO::ATTR_CASE) returns wrong value '%s'\\n\",\n            var_export($tmp, true));\n    if (!is_object($stmt = $db->query(\"SELECT id, label, MiXeD, MYUPPER, MYUPPER AS 'lower' FROM test ORDER BY id ASC LIMIT 1\")))\n        printf(\"[010] %s - %s\\n\",\n            var_export($db->errorInfo(), true), var_export($db->errorCode(), true));\n    var_dump($stmt->fetchAll(PDO::FETCH_BOTH));\n    if (true !== $db->setAttribute(PDO::ATTR_CASE, PDO::CASE_NATURAL))\n        printf(\"[011] Cannot set PDO::ATTR_CASE = PDO::CASE_NATURAL %s - %s\\n\",\n            var_export($db->errorInfo(), true), var_export($db->errorCode(), true));\n    if (($tmp = $db->getAttribute(PDO::ATTR_CASE)) !== PDO::CASE_NATURAL)\n        printf(\"[012] getAttribute(PDO::ATTR_CASE) returns wrong value '%s'\\n\",\n            var_export($tmp, true));\n    if (!is_object($stmt = $db->query(\"SELECT id, label, MiXeD, MYUPPER, id AS 'ID' FROM test ORDER BY id ASC LIMIT 1\")))\n        printf(\"[013] %s - %s\\n\",\n            var_export($db->errorInfo(), true), var_export($db->errorCode(), true));\n    var_dump($stmt->fetchAll(PDO::FETCH_BOTH));\n    print \"done!\";\n?>")).toMatchSnapshot();
  });
});
