// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/file/fgets_basic.phpt
  it("Test fgets() function : basic functionality", function () {
    expect(parser.parseCode("<?php\n// include the file.inc for common test functions\ninclude (\"file.inc\");\n$file_modes = array(\"r\", \"rb\", \"rt\", \"r+\", \"r+b\", \"r+t\");\n$file_content_types = array(\"numeric\", \"text\", \"text_with_new_line\", \"alphanumeric\");\necho \"*** Testing fgets() : basic functionality ***\\n\";\nforeach($file_modes as $file_mode) {\n  echo \"\\n-- Testing fgets() with file opened using mode $file_mode --\\n\";\n  foreach($file_content_types as $file_content_type) {\n    echo \"-- File content type : $file_content_type --\\n\";\n    /* create files with $file_content_type */\n    create_files ( __DIR__, 1, $file_content_type, 0755, 50, \"w\", \"fgets_basic\", 1, \"bytes\"); //create a file\n    $filename = __DIR__.\"/fgets_basic1.tmp\"; // this is name of the file created by create_files()\n    $file_handle = fopen($filename, $file_mode);\n    if ( !$file_handle ) {\n      echo \"Error: failed to open file $filename!\";\n      exit();\n    }\n    echo \"-- fgets() with default length, file pointer at 0 --\\n\";\n    var_dump( fgets($file_handle) ); // with default length\n    var_dump( ftell($file_handle) ); // ensure the file pointer position\n    var_dump( feof($file_handle) );  // ensure if eof set\n    echo \"-- fgets() with length = 23, Expected: 22 chars, file pointer at 0 --\\n\";\n    var_dump( rewind($file_handle) );\n    var_dump( fgets($file_handle, 23) ); // expected: 22 chars\n    var_dump( ftell($file_handle) ); // ensure the file pointer position\n    var_dump( feof($file_handle) );  // ensure if eof set\n    //close file\n    fclose($file_handle);\n    // delete file\n    delete_file($filename);\n  } // file_content_type loop\n} // file_mode loop\necho \"Done\\n\";\n?>")).toMatchSnapshot();
  });
});
