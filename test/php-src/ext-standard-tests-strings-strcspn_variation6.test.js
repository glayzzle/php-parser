// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/strings/strcspn_variation6.phpt
  it("Test strcspn() function : usage variations - with heredoc strings, varying mask & default start and len args", function () {
    expect(parser.parseCode("<?php\n/*\n* Testing strcspn() : with heredoc string, varying mask and default start and len arguments\n*/\necho \"*** Testing strcspn() : with different mask strings ***\\n\";\n// initialing required variables\n// defining different heredoc strings\n$empty_heredoc = <<<EOT\nEOT;\n$heredoc_with_newline = <<<EOT\n\\n\nEOT;\n$heredoc_with_characters = <<<EOT\nfirst line of heredoc string\nsecond line of heredoc string\nthird line of heredocstring\nEOT;\n$heredoc_with_newline_and_tabs = <<<EOT\nhello\\tworld\\nhello\\nworld\\n\nEOT;\n$heredoc_with_alphanumerics = <<<EOT\nhello123world456\n1234hello\\t1234\nEOT;\n$heredoc_with_embedded_nulls = <<<EOT\nhello\\0world\\0hello\n\\0hello\\0\nEOT;\n$heredoc_with_hexa_octal = <<<EOT\nhello\\0\\100\\xaaworld\\0hello\n\\0hello\\0\nEOT;\n$heredoc_strings = array(\n                   $empty_heredoc,\n                   $heredoc_with_newline,\n                   $heredoc_with_characters,\n                   $heredoc_with_newline_and_tabs,\n                   $heredoc_with_alphanumerics,\n                   $heredoc_with_embedded_nulls,\n                   $heredoc_with_hexa_octal\n                   );\n// defining array of mask strings\n$mask_array = array(\n            \"\",\n            '',\n            \"\\n\\trsti \\l\",\n            '\\n\\trsti \\l',\n            \"\\t\",\n            \"t\\ \",\n            '\\t',\n            \"\\t\\ \",\n            \" \\t\",\n                    \"\\t\\i\\100\\xaa\"\n                   );\n// loop through each element of the arrays for string and mask arguments\n$count = 1;\nforeach($heredoc_strings as $str) {\n  echo \"\\n-- Iteration $count --\\n\";\n  foreach($mask_array as $mask) {\n      var_dump( strcspn($str,$mask) ); // with default start and len value\n  }\n  $count++;\n}\necho \"Done\"\n?>")).toMatchSnapshot();
  });
});
