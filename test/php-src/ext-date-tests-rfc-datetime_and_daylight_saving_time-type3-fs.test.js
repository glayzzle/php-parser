// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/date/tests/rfc-datetime_and_daylight_saving_time-type3-fs.phpt
  it("RFC: DateTime and Daylight Saving Time Transitions (zone type 3, fs)", function () {
    expect(parser.parseCode("<?php\ndate_default_timezone_set('America/New_York');\n$date_format = 'Y-m-d H:i:s T e';\n$interval_format = 'P%dDT%hH';\n/*\n * Forward Transitions, sub().\n */\n$end   = new DateTime('2010-03-14 03:00:00');\n$interval_spec = 'PT1S';\n$interval = new DateInterval($interval_spec);\necho 'fs1 ' . $end->format($date_format) . \" - $interval_spec = \"\n    . $end->sub($interval)->format($date_format) . \"\\n\";\n$end   = new DateTime('2010-03-14 04:30:00');\n$interval_spec = 'P1D';\n$interval = new DateInterval($interval_spec);\necho 'fs2 ' . $end->format($date_format) . \" - $interval_spec = \"\n    . $end->sub($interval)->format($date_format) . \"\\n\";\n$end   = new DateTime('2010-03-14 03:30:00');\n$interval_spec = 'PT22H';\n$interval = new DateInterval($interval_spec);\necho 'fs3 ' . $end->format($date_format) . \" - $interval_spec = \"\n    . $end->sub($interval)->format($date_format) . \"\\n\";\n$end   = new DateTime('2010-03-14 01:30:00');\n$interval_spec = 'PT21H';\n$interval = new DateInterval($interval_spec);\necho 'fs4 ' . $end->format($date_format) . \" - $interval_spec = \"\n    . $end->sub($interval)->format($date_format) . \"\\n\";\n$end   = new DateTime('2010-03-14 01:30:00');\n$interval_spec = 'P1D';\n$interval = new DateInterval($interval_spec);\necho 'fs5 ' . $end->format($date_format) . \" - $interval_spec = \"\n    . $end->sub($interval)->format($date_format) . \"\\n\";\n$end   = new DateTime('2010-03-15 03:30:00');\n$interval_spec = 'P1D';\n$interval = new DateInterval($interval_spec);\necho 'fs6 ' . $end->format($date_format) . \" - $interval_spec = \"\n    . $end->sub($interval)->format($date_format) . \"\\n\";\n$end   = new DateTime('2010-03-15 02:30:00');\n$interval_spec = 'P1D';\n$interval = new DateInterval($interval_spec);\necho 'fs7 ' . $end->format($date_format) . \" - $interval_spec = \"\n    . $end->sub($interval)->format($date_format) . \"\\n\";\n?>")).toMatchSnapshot();
  });
});
