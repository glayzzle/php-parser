// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/array/array_merge.phpt
  it("Test array_merge() function", function () {
    expect(parser.parseCode("<?php\necho \"\\n*** Testing array_merge() basic functionality ***\";\n$begin_array = array(\n  array(),\n  array( 1 => \"string\"),\n  array( \"\" => \"string\"),\n  array( -2 => 12),\n  array( \"a\" => 1, \"b\" => -2.344, \"b\" => \"string\", \"c\" => NULL,\t\"d\" => -2.344),\n  array( 4 => 1, 3 => -2.344, \"3\" => \"string\", \"2\" => NULL,1 => -2.344),\n  array( NULL, 1 => \"Hi\", \"string\" => \"hello\",\n  array(\"\" => \"World\", \"-2.34\" => \"a\", \"0\" => \"b\"))\n);\n$end_array   = array(\n  array(),\n  array( 1 => \"string\"),\n  array( \"\" => \"string\"),\n  array( -2 => 12),\n  array( \"a\" => 1, \"b\" => -2.344, \"b\" => \"string\", \"c\" => NULL, \"d\" => -2.344),\n  array( 4 => 1, 3 => -2.344, \"3\" => \"string\", \"2\" => NULL, 1=> -2.344),\n  array( NULL, 1 => \"Hi\", \"string\" => \"hello\",\n         array(\"\" => \"World\", \"-2.34\" => \"a\", \"0\" => \"b\"))\n);\n/* loop through to merge two arrays */\n$count_outer = 0;\nforeach($begin_array as $first) {\n  echo \"\\n\\n--- Iteration $count_outer ---\";\n  $count_inner = 0;\n  foreach($end_array as $second) {\n    echo \"\\n-- Inner iteration $count_inner of Iteration $count_outer --\\n\";\n    $result = array_merge($first, $second);\n    var_dump($result);\n    $count_inner++;\n  }\n  $count_outer++;\n}\necho \"\\n*** Testing array_merge() with three or more arrays ***\\n\";\nvar_dump( array_merge( $end_array[0],\n                       $end_array[5],\n                       $end_array[4],\n                       $end_array[6]\n                     )\n        );\nvar_dump( array_merge( $end_array[0],\n                       $end_array[5],\n                       array(\"array on fly\"),\n                       array(\"nullarray\" => array())\n                     )\n        );\necho \"\\n*** Testing single array argument ***\\n\";\n/* Empty array */\nvar_dump(array_merge(array()));\n/* associative array with string keys, which will not be re-indexed */\nvar_dump(array_merge($begin_array[4]));\n/* associative array with numeric keys, which will be re-indexed */\nvar_dump(array_merge($begin_array[5]));\n/* associative array with mixed keys and sub-array as element */\nvar_dump(array_merge($begin_array[6]));\necho \"\\n*** Testing array_merge() with typecasting non-array to array ***\\n\";\nvar_dump(array_merge($begin_array[4], (array)\"type1\", (array)10, (array)12.34));\necho \"\\n*** Testing array_merge without any arguments ***\\n\";\nvar_dump(array_merge());\necho \"Done\\n\";\n?>")).toMatchSnapshot();
  });
});
