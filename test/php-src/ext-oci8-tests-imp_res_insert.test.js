// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/oci8/tests/imp_res_insert.phpt
  it("Oracle Database 12c Implicit Result Sets: Commit modes", function () {
    expect(parser.parseCode("<?php\nrequire(__DIR__.'/connect.inc');\n// Initialization\n$c2 = oci_new_connect($user, $password, $dbase);\n$stmtarray = array(\n    \"drop table imp_res_insert_tab\",\n    \"create table imp_res_insert_tab (c1 number)\",\n    \"create or replace procedure imp_res_insert_proc_nc (p1 in number) as\n      c1 sys_refcursor;\n    begin\n      execute immediate 'insert into imp_res_insert_tab values ('||p1||')';\n      open c1 for select * from imp_res_insert_tab order by 1;\n      dbms_sql.return_result(c1);\n    end;\",\n    \"create or replace procedure imp_res_insert_proc_c (p1 in number) as\n      c1 sys_refcursor;\n    begin\n      execute immediate 'insert into imp_res_insert_tab values ('||p1||')';\n      commit;\n      open c1 for select * from imp_res_insert_tab order by 1;\n      dbms_sql.return_result(c1);\n    end;\"\n);\noci8_test_sql_execute($c, $stmtarray);\n// Run Test\necho \"Test 1 - No commit in procedure, OCI_COMMIT_ON_SUCCESS mode\\n\";\n$s = oci_parse($c, \"begin imp_res_insert_proc_nc(111); end;\");\noci_execute($s, OCI_COMMIT_ON_SUCCESS);\nwhile (($row = oci_fetch_row($s)) !== false)\n    echo $row[0], \"\\n\";\n$s2 = oci_parse($c2, \"select * from imp_res_insert_tab order by 1\");\noci_execute($s2, OCI_NO_AUTO_COMMIT);\noci_fetch_all($s2, $res);\nvar_dump($res['C1']);\necho \"\\nTest 2 - No commit in procedure, OCI_NO_AUTO_COMMIT mode\\n\";\n$s = oci_parse($c, \"begin imp_res_insert_proc_nc(222); end;\");\noci_execute($s, OCI_NO_AUTO_COMMIT);\nwhile (($row = oci_fetch_row($s)) !== false)\n    echo $row[0], \"\\n\";\n// The 2nd connection won't see the newly inserted data\n$s2 = oci_parse($c2, \"select * from imp_res_insert_tab order by 1\");\noci_execute($s2, OCI_NO_AUTO_COMMIT);\noci_fetch_all($s2, $res);\nvar_dump($res['C1']);\necho \"\\nTest 3 - Commit in procedure, OCI_COMMIT_ON_SUCCESS mode\\n\";\n$s = oci_parse($c, \"begin imp_res_insert_proc_c(333); end;\");\noci_execute($s, OCI_COMMIT_ON_SUCCESS);\n// The 2nd connection will now see the previously uncommitted data inserted in the previous test\nwhile (($row = oci_fetch_row($s)) !== false)\n    echo $row[0], \"\\n\";\n$s2 = oci_parse($c2, \"select * from imp_res_insert_tab order by 1\");\noci_execute($s2, OCI_NO_AUTO_COMMIT);\noci_fetch_all($s2, $res);\nvar_dump($res['C1']);\necho \"\\nTest 4 - Commit in procedure, OCI_NO_AUTO_COMMIT mode\\n\";\n$s = oci_parse($c, \"begin imp_res_insert_proc_c(444); end;\");\noci_execute($s, OCI_NO_AUTO_COMMIT);\nwhile (($row = oci_fetch_row($s)) !== false)\n    echo $row[0], \"\\n\";\n$s2 = oci_parse($c2, \"select * from imp_res_insert_tab order by 1\");\noci_execute($s2, OCI_NO_AUTO_COMMIT);\noci_fetch_all($s2, $res);\nvar_dump($res['C1']);\n// Clean up\n$stmtarray = array(\n    \"drop procedure imp_res_insert_proc_nc\",\n    \"drop procedure imp_res_insert_proc_c\",\n    \"drop table imp_res_insert_tab\",\n);\noci8_test_sql_execute($c, $stmtarray);\n?>")).toMatchSnapshot();
  });
});
