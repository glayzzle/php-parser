// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/general_functions/is_null.phpt
  it("Test is_null() function", function () {
    expect(parser.parseCode("<?php\necho \"*** Testing is_null() with valid null values ***\\n\";\n// different valid  null values\n$unset_array = array();\n$unset_int = 10;\n$unset_float = 10.5;\n$unset_bool = true;\n$unset_object = new stdclass;\n$unset_resource = fopen(__FILE__, \"r\");\n// unset them to make it null.\nunset ($unset_array, $unset_int, $unset_float, $unset_bool, $unset_object, $unset_resource);\n$null_var1 = NULL;\n$null_var2 = null;\n$valid_nulls = array(\n  NULL,\n  null,\n  @$null_var1,\n  @$null_var2,\n  @$unset_array,\n  @$unset_int,\n  @$unset_float,\n  @$unset_bool,\n  @$unset_object,\n  @$unset_resource,\n  @$undefined_var,\n);\n/* loop to check that is_null() recognizes different\n   null values, expected output: bool(true) */\n$loop_counter = 1;\nforeach ($valid_nulls as $null_val ) {\n  echo \"-- Iteration $loop_counter --\\n\"; $loop_counter++;\n  var_dump( is_null($null_val) );\n}\necho \"\\n*** Testing is_bool() on non null values ***\\n\";\n// get a resource type variable\n$fp = fopen (__FILE__, \"r\");\n$dfp = opendir ( __DIR__ );\n// other types in a array\n$not_null_types = array (\n/* integers */\n  0,\n  1,\n  -1,\n  -0,\n  543915,\n  -5322,\n  0x0,\n  0x1,\n  0x55F,\n  -0xCCF,\n  0123,\n  -0654,\n  00,\n  01,\n  /* strings */\n  \"\",\n  '',\n  \"0\",\n  '0',\n  \"1\",\n  '1',\n  'string',\n  \"string\",\n  \"true\",\n  \"false\",\n  \"FALSE\",\n  \"TRUE\",\n  'true',\n  'false',\n  'FALSE',\n  'TRUE',\n  \"NULL\",\n  \"null\",\n  /* floats */\n  0.0,\n  1.0,\n  -1.0,\n  10.0000000000000000005,\n  .5e6,\n  -.5E7,\n  .5E+8,\n  -.5e+90,\n  1e5,\n  -1e5,\n  1E5,\n  -1E7,\n  /* objects */\n  new stdclass,\n  /* resources */\n  $fp,\n  $dfp,\n  /* arrays */\n  array(),\n  array(0),\n  array(1),\n  array(NULL),\n  array(null),\n  array(\"string\"),\n  array(true),\n  array(TRUE),\n  array(false),\n  array(FALSE),\n  array(1,2,3,4),\n  array(1 => \"One\", \"two\" => 2),\n);\n/* loop through the $not_null_types to see working of\n   is_null() on non null types, expected output: bool(false) */\n$loop_counter = 1;\nforeach ($not_null_types as $type ) {\n  echo \"-- Iteration $loop_counter --\\n\"; $loop_counter++;\n  var_dump( is_null($type) );\n}\necho \"Done\\n\";\n// close the resources used\nfclose($fp);\nclosedir($dfp);\n?>")).toMatchSnapshot();
  });
});
