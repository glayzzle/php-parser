// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/http/bug47021.phpt
  it("Bug #47021 (SoapClient stumbles over WSDL delivered with \"Transfer-Encoding: chunked\")", function () {
    expect(parser.parseCode("<?php\nrequire 'server.inc';\nfunction stream_notification_callback($notification_code, $severity, $message, $message_code, $bytes_transferred, $bytes_max) {\n    switch($notification_code) {\n        case STREAM_NOTIFY_MIME_TYPE_IS:\n            echo \"Type='$message'\\n\";\n        break;\n        case STREAM_NOTIFY_FILE_SIZE_IS:\n            echo \"Size=$bytes_max\\n\";\n            break;\n    }\n}\nfunction do_test($num_spaces, $leave_trailing_space=false) {\n  // SOAPClient exhibits the bug because it forces HTTP/1.1,\n  // whereas file_get_contents() uses HTTP/1.0 by default.\n  $options = [\n    'http' => [\n      'protocol_version' => '1.1',\n      'header' => 'Connection: Close'\n    ],\n  ];\n  $ctx = stream_context_create($options);\n  stream_context_set_params($ctx, array(\"notification\" => \"stream_notification_callback\"));\n  $spaces = str_repeat(' ', $num_spaces);\n  $trailing = ($leave_trailing_space ? ' ' : '');\n  $responses = [\n    \"data://text/plain,HTTP/1.1 200 OK\\r\\n\"\n      . \"Content-Type:{$spaces}text/plain{$trailing}\\r\\n\"\n      . \"Transfer-Encoding:{$spaces}Chunked{$trailing}\\r\\n\\r\\n\"\n      . \"5\\nHello\\n0\\n\",\n    \"data://text/plain,HTTP/1.1 200 OK\\r\\n\"\n      . \"Content-Type\\r\\n\" // Deliberately invalid header\n      . \"Content-Length:{$spaces}5{$trailing}\\r\\n\\r\\n\"\n      . \"World\"\n  ];\n  ['pid' => $pid, 'uri' => $uri] = http_server($responses);\n  echo file_get_contents($uri, false, $ctx);\n  echo \"\\n\";\n  echo file_get_contents($uri, false, $ctx);\n  echo \"\\n\";\n  http_server_kill($pid);\n}\n// Chunked decoding should be recognised by the HTTP stream wrapper regardless of whitespace\n// Transfer-Encoding:Chunked\ndo_test(0);\necho \"\\n\";\n// Transfer-Encoding: Chunked\ndo_test(1);\necho \"\\n\";\n// Transfer-Encoding:  Chunked\ndo_test(2);\necho \"\\n\";\n// Trailing space at end of header\ndo_test(1, true);\necho \"\\n\";\n?>")).toMatchSnapshot();
  });
});
