// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/file/readlink_realpath_basic1.phpt
  it("Test readlink() and realpath functions: basic functionality - diff. path notation for links(Bug #42038)", function () {
    expect(parser.parseCode("<?php\n/* creating directories, symbolic links and files */\n$file_path = __DIR__;\nmkdir(\"$file_path/readlink_realpath_basic1/home/test/\", 0777, true);\n$file_handle1 = fopen(\"$file_path/readlink_realpath_basic1/home/test/readlink_realpath_basic1.tmp\", \"w\");\n$file_handle2 = fopen(\"$file_path/readlink_realpath_basic1/home/readlink_realpath_basic1.tmp\", \"w\");\n$file_handle3 = fopen(\"$file_path/readlink_realpath_basic1/readlink_realpath_basic1.tmp\", \"w\");\nfclose($file_handle1);\nfclose($file_handle2);\nfclose($file_handle3);\nsymlink(\"$file_path/readlink_realpath_basic1/home/test/readlink_realpath_basic1.tmp\",\n        \"$file_path/readlink_realpath_basic1/home/test/readlink_realpath_basic1_link.tmp\");\nsymlink(\"$file_path/readlink_realpath_basic1/home/readlink_realpath_basic1.tmp\",\n        \"$file_path/readlink_realpath_basic1/home/readlink_realpath_basic1_link.tmp\");\necho \"*** Testing readlink() and realpath(): with valid and invalid path ***\\n\";\n$linknames = array (\n  /* linknames resulting in valid paths */\n  \"$file_path/readlink_realpath_basic1/home/readlink_realpath_basic1_link.tmp\",\n  \"$file_path/readlink_realpath_basic1/home/test/readlink_realpath_basic1_link.tmp\",\n  \"$file_path/readlink_realpath_basic1//home/test//../test/./readlink_realpath_basic1_link.tmp\",\n  /* linknames with invalid linkpath */\n  \"$file_path///readlink_realpath_basic1/home//..//././test//readlink_realpath_basic1_link.tmp\",\n  \"$file_path/readlink_realpath_basic1/home/../home/../test/../readlink_realpath_basic1_link.tmp\",\n  \"$file_path/readlink_realpath_basic1/..readlink_realpath_basic1_link.tmp\",\n  \"$file_path/readlink_realpath_basic1/home/test/readlink_realpath_basic1_link.tmp/\"\n);\n$counter = 1;\n/* loop through $files to read the linkpath of\n   the link created from each $file in the above array */\nforeach($linknames as $link) {\n  echo \"\\n-- Iteration $counter --\\n\";\n  var_dump( readlink($link) );\n  var_dump( realpath($link) );\n  $counter++;\n}\necho \"Done\\n\";\n?>")).toMatchSnapshot();
  });
});
