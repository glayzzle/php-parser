// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/array/shuffle_variation4.phpt
  it("Test shuffle() function : usage variation - associative arrays with diff types of values", function () {
    expect(parser.parseCode("<?php\n/*\n* Test behaviour of shuffle() function when associative arrays\n* having different types of values, are passed to 'array_arg' argument\n*/\necho \"*** Testing shuffle() : associative arrays with diff types of values ***\\n\";\n// initialise different arrays\n$array_arg = array(\n       // array with positive int values\n/*1*/  array(\"zero\" => 0, 1 => 1, \"two\" => 2, \"max_int\" => 2147483647 ),\n       // array with negative int values\n       array(\"minus_one\" => -1, 'minus_two' => -2, \"min_int\" => -2147483647 ),\n       // array with positive float values\n/*3*/  array(\"float1\" => 0.23, 'float2' => 1.34, \"exp1\" => 0e2, 'exp2' => 200e-2, \"exp3\" =>  10e0),\n       // array with negative float values\n       array(-0 => -0.23, -1 => -1.34, -200 => -200e-2, -30 => -30e0, -2147473649.80),\n       // array with single and double quoted strings\n/*5*/  array('1' => 'one', \"str1\" => \"123numbers\", '' => 'hello\\tworld', \"\" => \"hello world\\0\", \"12.34floatnum\"),\n       // array with bool values\n       array('1' => TRUE, \"1\" => TRUE, \"0\" => FALSE, '0' => FALSE),\n       // array with positive hexa values\n/*7*/  array(\"hex1\" => 0x123, 'hex2' => 0xabc, \"hex\\t3\" => 0xABC, \"hex\\04\" => 0xAb1),\n       // array with negative hexa values\n       array(NULL => -0x123, \"NULL\" => -0xabc, \"-ABC\" => -0xABC, -0xAB1 => -0xAb1),\n       // array with positive octal values\n/*9*/  array(0123 => 0123, \"0234\" => 0234, '034' => 034, 00 => 00),\n       // array with negative octal values\n       array(-0123 => -0123, \"-0234\" => -0234, '-034' => -034),\n       // array with null values\n/*11*/ array(NULL => NULL, \"null\" => NULL, \"NULL\" => NULL)\n);\n// looping to test shuffle() with each sub-array in the $array_arg array\necho \"\\n*** Testing shuffle() with arrays having different types of values ***\\n\";\n$counter = 1;\nforeach($array_arg as $arr) {\n  echo \"\\n-- Iteration $counter --\\n\";\n  var_dump( shuffle($arr) );\n  echo \"\\nThe output array is:\\n\";\n  var_dump( $arr );\n  $counter++;\n}\necho \"Done\";\n?>")).toMatchSnapshot();
  });
});
