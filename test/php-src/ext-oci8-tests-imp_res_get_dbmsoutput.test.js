// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/oci8/tests/imp_res_get_dbmsoutput.phpt
  it("Oracle Database 12c Implicit Result Sets: oci_get_implicit_resultset: interleaved with DBMS_OUTPUT", function () {
    expect(parser.parseCode("<?php\nrequire(__DIR__.'/connect.inc');\n// Initialization\n$stmtarray = array(\n    \"drop table imp_res_get_dbmsoutput_tab_1\",\n    \"create table imp_res_get_dbmsoutput_tab_1 (c1 number, c2 varchar2(10))\",\n    \"insert into imp_res_get_dbmsoutput_tab_1 values (1, 'abcde')\",\n    \"insert into imp_res_get_dbmsoutput_tab_1 values (2, 'fghij')\",\n    \"insert into imp_res_get_dbmsoutput_tab_1 values (3, 'klmno')\",\n    \"drop table imp_res_get_dbmsoutput_tab_2\",\n    \"create table imp_res_get_dbmsoutput_tab_2 (c3 varchar2(1))\",\n    \"insert into imp_res_get_dbmsoutput_tab_2 values ('t')\",\n    \"insert into imp_res_get_dbmsoutput_tab_2 values ('u')\",\n    \"insert into imp_res_get_dbmsoutput_tab_2 values ('v')\",\n    \"create or replace procedure imp_res_get_dbmsoutput_proc as\n      c1 sys_refcursor;\n    begin\n      dbms_output.put_line('Line 1');\n      open c1 for select * from imp_res_get_dbmsoutput_tab_1 order by 1;\n      dbms_sql.return_result(c1);\n      dbms_output.put_line('Line 2');\n      open c1 for select * from imp_res_get_dbmsoutput_tab_2 order by 1;\n      dbms_sql.return_result(c1);\n      dbms_output.put_line('Line 3');\n      open c1 for select * from dual;\n      dbms_sql.return_result (c1);\n    end;\"\n);\noci8_test_sql_execute($c, $stmtarray);\n// Turn DBMS_OUTPUT on\nfunction setserveroutputon($c)\n{\n    $s = oci_parse($c, \"begin dbms_output.enable(null); end;\");\n    oci_execute($s);\n}\nfunction getdbmsoutput_do($c)\n{\n    $s = oci_parse($c, \"begin dbms_output.get_line(:ln, :st); end;\");\n    oci_bind_by_name($s, \":ln\", $ln, 100);\n    oci_bind_by_name($s, \":st\", $st, -1, SQLT_INT);\n    $res = [];\n    while (($succ = oci_execute($s)) && !$st) {\n        $res[] = $ln;  // append each line to the array\n    }\n    return $res;\n}\nsetserveroutputon($c);\n// Run Test\necho \"Test 1\\n\";\n$s = oci_parse($c, \"begin imp_res_get_dbmsoutput_proc(); end;\");\noci_execute($s);\nvar_dump(getdbmsoutput_do($c));\nwhile (($s1 = oci_get_implicit_resultset($s))) {\n    while (($row = oci_fetch_array($s1, OCI_ASSOC+OCI_RETURN_NULLS)) != false) {\n        foreach ($row as $item) {\n            echo \"  \".$item;\n        }\n        echo \"\\n\";\n    }\n}\necho \"Test 2\\n\";\n$s = oci_parse($c, \"begin imp_res_get_dbmsoutput_proc(); end;\");\noci_execute($s);\nwhile (($s1 = oci_get_implicit_resultset($s))) {\n    while (($row = oci_fetch_array($s1, OCI_ASSOC+OCI_RETURN_NULLS)) != false) {\n        foreach ($row as $item) {\n            echo \"  \".$item;\n        }\n        echo \"\\n\";\n    }\n}\nvar_dump(getdbmsoutput_do($c));\n// Clean up\n$stmtarray = array(\n    \"drop procedure imp_res_get_dbmsoutput_proc\",\n    \"drop table imp_res_get_dbmsoutput_tab_1\",\n    \"drop table imp_res_get_dbmsoutput_tab_2\"\n);\noci8_test_sql_execute($c, $stmtarray);\n?>")).toMatchSnapshot();
  });
});
