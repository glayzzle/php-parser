// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/file/fileinode_variation.phpt
  it("Test fileinode() function: Variations", function () {
    expect(parser.parseCode("<?php\necho \"*** Testing fileinode() with files, links and directories ***\\n\";\n$file_path = __DIR__;\n$file1 = $file_path.\"/fileinode1_variation.tmp\";\n$file2 = $file_path.\"/fileinode2_variation.tmp\";\n$link1 = $file_path.\"/fileinode1_variation_link.tmp\";\n$link2 = $file_path.\"/fileinode2_variation_link.tmp\";\necho \"-- Testing with files --\\n\";\n//creating the files\nfclose( fopen( $file1, \"w\" ) );\nfclose( fopen( $file2, \"w\" ) );\nprint( fileinode( $file1) ).\"\\n\";\nprint( fileinode( $file2) ).\"\\n\";\nclearstatcache();\necho \"-- Testing with links: hard link --\\n\";\nlink( $file1, $link1);  // Creating an hard link\nprint( fileinode( $file1) ).\"\\n\";\nclearstatcache();\nprint( fileinode( $link1) ).\"\\n\";\nclearstatcache();\necho \"-- Testing with links: soft link --\\n\";\nsymlink( $file2, $link2);  // Creating a soft link\nprint( fileinode( $file2) ).\"\\n\";\nclearstatcache();\nprint( fileinode( $link2) ).\"\\n\";\nunlink( $link1 );\nunlink( $link2 );\necho \"-- Testing after copying a file --\\n\";\ncopy( $file1, $file_path.\"/fileinode1_variation_new.tmp\");\nprint( fileinode( $file1) ).\"\\n\";\nclearstatcache();\nprint( fileinode( $file_path.\"/fileinode1_variation_new.tmp\") ).\"\\n\";\nunlink( $file_path.\"/fileinode1_variation_new.tmp\");\nunlink( $file1);\nunlink( $file2);\necho \"-- Testing after renaming the file --\\n\";\nfclose( fopen(\"$file_path/old.txt\", \"w\") );\nprint( fileinode(\"$file_path/old.txt\") ).\"\\n\";\nclearstatcache();\nrename(\"$file_path/old.txt\", \"$file_path/new.txt\");\nprint( fileinode(\"$file_path/new.txt\") ).\"\\n\";\nunlink(\"$file_path/new.txt\");\necho \"-- Testing with directories --\\n\";\nmkdir(\"$file_path/dir\");\nprint( fileinode(\"$file_path/dir\") ).\"\\n\";\nclearstatcache();\nmkdir(\"$file_path/dir/subdir\");\nprint( fileinode(\"$file_path/dir/subdir\") ).\"\\n\";\nclearstatcache();\necho \"-- Testing with binary input --\\n\";\nprint( fileinode(b\"$file_path/dir\") ).\"\\n\";\nclearstatcache();\nprint( fileinode(b\"$file_path/dir/subdir\") );\nrmdir(\"$file_path/dir/subdir\");\nrmdir(\"$file_path/dir\");\necho \"\\n*** Done ***\";\n?>")).toMatchSnapshot();
  });
});
