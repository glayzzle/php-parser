// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // sapi/cli/tests/sapi_windows_set_ctrl_handler.phpt
  it("sapi_windows_set_ctrl_handler() ", function () {
    expect(parser.parseCode("<?php\n$is_child = isset($argv[1]);\nif ($is_child) {\n    function handler($evt)\n    {\n        exit(3);\n    }\n    sapi_windows_set_ctrl_handler('handler');\n    while(1) usleep(100);\n} else {\n    $cmd = PHP_BINARY . \" -n \" . $argv[0] . \" 1\";\n    $spec = [0 => [\"pipe\", \"r\"], 1 => [\"pipe\", \"w\"]];\n    $proc = proc_open($cmd, $spec, $pipes, NULL, NULL, [\"bypass_shell\" => true, \"create_process_group\" => true]);\n    if (!is_resource($proc)) {\n        die(\"Failed to start child. \");\n    }\n    $child_pid = proc_get_status($proc)[\"pid\"];\n    echo \"Started child $child_pid\\n\";\n    usleep(300);\n    $cmd = \"tasklist /FI \\\"PID eq $child_pid\\\" /NH\";\n    echo \"Running `$cmd` to check the process indeed exists:\\n\";\n    echo trim(shell_exec($cmd)) . \"\\n\";\n    $evt = PHP_WINDOWS_EVENT_CTRL_C;\n    echo \"Sending \", get_evt_name($evt), \" to child $child_pid\\n\";\n    $ret = sapi_windows_generate_ctrl_event($evt, $child_pid);\n    echo ($ret ? \"Successfully\" : \"Unsuccessfuly\"), \" sent \", get_evt_name($evt), \" to child $child_pid\\n\";\n    $max = 5000; $total = 0; $step = 100;\n    while(proc_get_status($proc)[\"running\"] && $max > $total) {\n        usleep($step);\n        $total += $step;\n    }\n    $status = proc_get_status($proc);\n    if ($status[\"running\"]) {\n        echo \"Child $child_pid didn't exit after ${max}us\\n\";\n\t\tforeach ($pipes as $pipe) {\n\t\t\tfclose($pipe);\n\t\t}\n\t\tproc_terminate($proc);\n    } else {\n        echo \"Child $child_pid exit with status \", $status[\"exitcode\"], \" after ${total}us\\n\";\n    }\n}\nfunction get_evt_name(int $evt) : ?string\n{\n    if (PHP_WINDOWS_EVENT_CTRL_C == $evt) {\n        return \"CTRL+C\";\n    } if (PHP_WINDOWS_EVENT_CTRL_BREAK == $evt) {\n        return \"CTRL+BREAK\";\n    }\n    return NULL;\n}\n?>")).toMatchSnapshot();
  });
});
