// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/json/tests/pass001.1_64bit.phpt
  it("JSON (http://www.crockford.com/JSON/JSON_checker/test/pass1.json)", function () {
    expect(parser.parseCode("<?php\n/* Modified to test unescaped UNICODE as keys and values.\n * Modified to test numbers with exponents without a decimal point.\n * Modified to test empty string values.\n * Modified to test a mix of integers and strings as keys.\n */\n$test = \"\n[\n    \\\"JSON Test Pattern pass1\\\",\n    {\\\"object with 1 member\\\":[\\\"array with 1 element\\\"]},\n    {},\n    [],\n    -42,\n    true,\n    false,\n    null,\n    {\n        \\\"integer\\\": 1234567890,\n        \\\"real\\\": -9876.543210,\n        \\\"e\\\": 0.123456789e-12,\n        \\\"E\\\": 1.234567890E+34,\n        \\\"\\\":  23456789012E666,\n        \\\"E no .\\\":  4E12,\n        \\\"zero\\\": 0,\n        \\\"one\\\": 1,\n        \\\"space\\\": \\\" \\\",\n        \\\"quote\\\": \\\"\\\\\\\"\\\",\n        \\\"backslash\\\": \\\"\\\\\\\\\\\",\n        \\\"controls\\\": \\\"\\\\b\\\\f\\\\n\\\\r\\\\t\\\",\n        \\\"slash\\\": \\\"/ & \\\\/\\\",\n        \\\"alpha\\\": \\\"abcdefghijklmnopqrstuvwyz\\\",\n        \\\"ALPHA\\\": \\\"ABCDEFGHIJKLMNOPQRSTUVWYZ\\\",\n        \\\"digit\\\": \\\"0123456789\\\",\n        \\\"special\\\": \\\"`1~!@#$%^&*()_+-={':[,]}|;.</>?\\\",\n        \\\"hex\\\": \\\"\\\\u0123\\\\u4567\\\\u89AB\\\\uCDEF\\\\uabcd\\\\uef4A\\\",\n        \\\"unicode\\\": \\\"\\\\u30d7\\\\u30ec\\\\u30b9\\\\u30ad\\\\u30c3\\\\u30c8\\\",\n        \\\"プレスキット\\\": \\\"プレスキット\\\",\n        \\\"empty_string\\\": \\\"\\\",\n        \\\"true\\\": true,\n        \\\"false\\\": false,\n        \\\"null\\\": null,\n        \\\"array\\\":[  ],\n        \\\"object\\\":{  },\n        \\\"123\\\":{\\\"456\\\":{\\\"abc\\\":{\\\"789\\\":\\\"def\\\",\\\"012\\\":[1,2,\\\"5\\\",500],\\\"ghi\\\":[1,2,\\\"five\\\",50,\\\"sixty\\\"]}}},\n        \\\"address\\\": \\\"50 St. James Street\\\",\n        \\\"url\\\": \\\"http://www.JSON.org/\\\",\n        \\\"comment\\\": \\\"// /* <!-- --\\\",\n        \\\"# -- --> */\\\": \\\" \\\",\n        \\\" s p a c e d \\\" :[1,2 , 3\n,\n4 , 5        ,          6           ,7        ],\n        \\\"compact\\\": [1,2,3,4,5,6,7],\n        \\\"jsontext\\\": \\\"{\\\\\\\"object with 1 member\\\\\\\":[\\\\\\\"array with 1 element\\\\\\\"]}\\\",\n        \\\"quotes\\\": \\\"&#34; \\\\u0022 %22 0x22 034 &#x22;\\\",\n        \\\"\\\\/\\\\\\\\\\\\\\\"\\\\uCAFE\\\\uBABE\\\\uAB98\\\\uFCDE\\\\ubcda\\\\uef4A\\\\b\\\\f\\\\n\\\\r\\\\t`1~!@#$%^&*()_+-=[]{}|;:',./<>?\\\"\n: \\\"A key can be any string\\\"\n    },\n    0.5 ,98.6\n,\n99.44\n,\n1066\n,\\\"rosebud\\\"]\n\";\necho 'Testing:' . $test . \"\\n\";\necho \"DECODE: AS OBJECT\\n\";\n$obj = json_decode($test);\nvar_dump($obj);\necho \"DECODE: AS ARRAY\\n\";\n$arr = json_decode($test, true);\nvar_dump($arr);\necho \"ENCODE: FROM OBJECT\\n\";\n$obj_enc = json_encode($obj, JSON_PARTIAL_OUTPUT_ON_ERROR);\necho $obj_enc . \"\\n\";\necho \"ENCODE: FROM ARRAY\\n\";\n$arr_enc = json_encode($arr, JSON_PARTIAL_OUTPUT_ON_ERROR);\necho $arr_enc . \"\\n\";\necho \"DECODE AGAIN: AS OBJECT\\n\";\n$obj = json_decode($obj_enc);\nvar_dump($obj);\necho \"DECODE AGAIN: AS ARRAY\\n\";\n$arr = json_decode($arr_enc, true);\nvar_dump($arr);\n?>")).toMatchSnapshot();
  });
});
