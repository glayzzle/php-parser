// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/file/unlink_variation1.phpt
  it("Test unlink() function : usage variations - unlinking file in a directory", function () {
    expect(parser.parseCode("<?php\n/* Delete file having default permission but its dir having readonly permission\n   Delete file having readonly permission but dir having default permission\n*/\n$file_path = __DIR__;\n// temp dir name used here\n$dirname = \"$file_path/unlink_variation1\";\n// temp filename used here\n$filename = \"$dirname/unlink_variation1.tmp\";\necho \"\\n*** Testing unlink() on file inside a directory ***\\n\";\n// create temp dir\nmkdir($dirname);\n// create temp file inside $dirname\n$fp = fopen($filename, \"w\");\nfclose($fp);\necho \"-- Unlink file having default permission and its dir having read only permission --\\n\";\n// remove write permission of $dirname\nvar_dump( chmod($dirname, 0444) );\n// now try deleting $filename\nvar_dump( unlink($filename) );  // expected false\nvar_dump( file_exists($filename) );  // confirm file is deleted\n// remove the dir\nvar_dump( chmod($dirname, 0777) );\nvar_dump( unlink($filename) );  // expected true\nvar_dump( rmdir($dirname) );\necho \"\\n-- Unlinking file without write permission, its dir having default permission --\\n\";\n// create the temp dir\nvar_dump( mkdir($dirname) );\n// create the temp file\n$fp = fopen($filename, \"w\");\nfclose($fp);\n// remove write permission from file\nvar_dump( chmod($filename, 0444) );\n// now try deleting temp file inside $dirname\nvar_dump( unlink($filename) );  // expected: true\nvar_dump( file_exists($filename) );  // expected: false\n// remove temp dir\nvar_dump( rmdir($dirname) );\necho \"Done\\n\";\n?>")).toMatchSnapshot();
  });
});
