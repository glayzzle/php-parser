// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/mysqli_fetch_object_oo.phpt
  it("mysqli_fetch_object()", function () {
    expect(parser.parseCode("<?php\n    require_once(\"connect.inc\");\n    set_error_handler('handle_catchable_fatal');\n    $mysqli = new mysqli();\n    try {\n        new mysqli_result($mysqli);\n    } catch (Error $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    require('table.inc');\n    if (!$mysqli = new my_mysqli($host, $user, $passwd, $db, $port, $socket))\n        printf(\"[002] Cannot connect to the server using host=%s, user=%s, passwd=***, dbname=%s, port=%s, socket=%s\\n\",\n            $host, $user, $db, $port, $socket);\n    if (!$res = $mysqli->query(\"SELECT id AS ID, label FROM test AS TEST ORDER BY id LIMIT 5\")) {\n        printf(\"[003] [%d] %s\\n\", $mysqli->errno, $mysqli->error);\n    }\n    try {\n        if (!is_null($tmp = @$res->fetch_object($link, $link)))\n            printf(\"[005] Expecting NULL, got %s/%s\\n\", gettype($tmp), $tmp);\n    } catch (Error $e) {\n        handle_catchable_fatal($e->getCode(), $e->getMessage(), $e->getFile(), $e->getLine());\n    }\n    try {\n        if (!is_null($tmp = @$res->fetch_object($link, $link, $link)))\n            printf(\"[006] Expecting NULL, got %s/%s\\n\", gettype($tmp), $tmp);\n    } catch (Error $e) {\n        handle_catchable_fatal($e->getCode(), $e->getMessage(), $e->getFile(), $e->getLine());\n    }\n    $obj = mysqli_fetch_object($res);\n    if (($obj->ID !== \"1\") || ($obj->label !== \"a\") || (get_class($obj) != 'stdClass')) {\n        printf(\"[007] Object seems wrong. [%d] %s\\n\", $mysqli->errno, $mysqli->error);\n        var_dump($obj);\n    }\n    class mysqli_fetch_object_test {\n        public $a = null;\n        public $b = null;\n        public function toString() {\n            var_dump($this);\n        }\n    }\n    $obj = $res->fetch_object('mysqli_fetch_object_test');\n    if (($obj->ID !== \"2\") || ($obj->label !== \"b\") || ($obj->a !== NULL) || ($obj->b !== NULL) || (get_class($obj) != 'mysqli_fetch_object_test')) {\n        printf(\"[008] Object seems wrong. [%d] %s\\n\", $mysqli->errno, $mysqli->error);\n        var_dump($obj);\n    }\n    class mysqli_fetch_object_construct extends mysqli_fetch_object_test {\n        public function __construct($a, $b) {\n            $this->a = $a;\n            $this->b = $b;\n        }\n    }\n    try {\n        $res->fetch_object('mysqli_fetch_object_construct', null);\n    } catch (TypeError $exception) {\n        echo $exception->getMessage() . \"\\n\";\n        mysqli_fetch_object($res);\n    }\n    try {\n        $obj = $res->fetch_object('mysqli_fetch_object_construct', array('a'));\n        if (($obj->ID !== \"4\") || ($obj->label !== \"d\") || ($obj->a !== 'a') || ($obj->b !== NULL) || (get_class($obj) != 'mysqli_fetch_object_construct')) {\n            printf(\"[010] Object seems wrong. [%d] %s\\n\", $mysqli->errno, $mysqli->error);\n            var_dump($obj);\n        }\n    } catch (Throwable $e) {\n        echo \"Exception: \" . $e->getMessage() . \"\\n\";\n    }\n    $obj = $res->fetch_object('mysqli_fetch_object_construct', array('a', 'b'));\n    if (($obj->ID !== \"5\") || ($obj->label !== \"e\") || ($obj->a !== 'a') || ($obj->b !== 'b') || (get_class($obj) != 'mysqli_fetch_object_construct')) {\n        printf(\"[011] Object seems wrong. [%d] %s\\n\", $mysqli->errno, $mysqli->error);\n        var_dump($obj);\n    }\n    var_dump($res->fetch_object('mysqli_fetch_object_construct', array('a', 'b', 'c')));\n    var_dump(mysqli_fetch_object($res));\n    mysqli_free_result($res);\n    if (!$res = mysqli_query($link, \"SELECT id AS ID, label FROM test AS TEST\")) {\n        printf(\"[012] [%d] %s\\n\", $mysqli->errno, $mysqli->error);\n    }\n    mysqli_free_result($res);\n    try {\n        mysqli_fetch_object($res);\n    } catch (Error $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    try {\n        var_dump($res->fetch_object('this_class_does_not_exist'));\n    } catch (TypeError $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    $mysqli->close();\n    print \"done!\";\n?>")).toMatchSnapshot();
  });
});
