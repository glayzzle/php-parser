// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/strings/str_split_variation5.phpt
  it("Test str_split() function : usage variations - different heredoc strings as 'str' argument", function () {
    expect(parser.parseCode("<?php\n/*\n* Passing different heredoc strings as 'str' argument to the str_split()\n* with 'split_length' 10\n*/\necho \"*** Testing str_split() : heredoc strings as 'str' argument ***\\n\";\n// Initializing required variables\n$split_length = 10;\n// Null heredoc string\n$heredoc_null = <<<EOT1\nEOT1;\n// heredoc string with single character\n$heredoc_char = <<<EOT2\na\nEOT2;\n// simple heredoc string\n$heredoc_str = <<<EOT3\nThis is simple heredoc string\nEOT3;\n// heredoc with special characters\n$heredoc_spchar = <<<EOT4\nThis checks heredoc with $, %, &, chars\nEOT4;\n// blank heredoc string\n$heredoc_blank = <<<EOT5\nEOT5;\n// heredoc with different white space characters\n$heredoc_escchar = <<<EOT6\nThis checks\\t str_split()\\nEscape\\rchars\nEOT6;\n// heredoc with multiline\n$heredoc_multiline= <<<EOT7\nThis is to check str_split\nfunction with multiline\nheredoc\nEOT7;\n// heredoc with quotes and slashes\n$heredoc_quote_slash = <<<EOT8\n\"To check \" in heredoc\"\nI'm sure it'll work also with \\\nwhich is single slash\nEOT8;\n//different heredoc strings for 'str'\n$heredoc_array = array(\n  $heredoc_null,\n  $heredoc_blank,\n  $heredoc_char,\n  $heredoc_str,\n  $heredoc_multiline,\n  $heredoc_spchar,\n  $heredoc_escchar,\n  $heredoc_quote_slash\n);\n// loop through each element of the 'heredoc_array' for 'str'\n$count = 0;\nforeach($heredoc_array as $str) {\n  echo \"-- Iteration \".($count+1). \" --\\n\";\n  var_dump( str_split($str, $split_length) );\n  $count++;\n};\necho \"Done\"\n?>")).toMatchSnapshot();
  });
});
