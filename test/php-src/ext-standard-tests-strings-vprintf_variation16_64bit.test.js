// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/strings/vprintf_variation16_64bit.phpt
  it("Test vprintf() function : usage variations - unsigned formats with signed and other types of values", function () {
    expect(parser.parseCode("<?php\n/*\n * Test vprintf() when different unsigned formats and signed values and other types of values\n * are passed to the '$format' and '$args' arguments of the function\n*/\necho \"*** Testing vprintf() : unsigned formats and signed & other types of values ***\\n\";\n// defining array of unsigned formats\n$formats =\n    '%u %+u %-u\n    %lu %4u %-4u\n    %10.4u %-10.4u %.4u\n    %\\'#2u %\\'2u %\\'$2u %\\'_2u\n    %3$u %4$u %1$u %2$u';\n// Arrays of signed and other type of values for the format defined in $format.\n// Each sub array contains signed values which correspond to each format in $format\n$args_array = array(\n  // array of float values\n  array(+2.2, +.2, +10.2,\n        +123456.234, +123456.234, +1234.6789,\n        +2e10, +2e12, +22e+12,\n        +12345.780, +12.000000011111, -12.00000111111, -123456.234,\n        +3.33, +4.44, +1.11,-2.22 ),\n  // array of strings\n  array(\" \", ' ', 'hello',\n        '123hello', '-123hello', '+123hello',\n        \"\\12345678hello\", \"-\\12345678hello\", 'h123456ello',\n        \"1234hello\", \"hello\\0world\", \"NULL\", \"true\",\n        \"3\", \"4\", '1', '2'),\n  // different arrays\n  array( array(0), array(1, 2), array(-1, -1),\n         array(\"123\"), array('-123'), array(\"-123\"),\n         array(true), array(TRUE), array(FALSE),\n         array(\"123hello\"), array(\"1\", \"2\"), array('123hello'), array(12=>\"12twelve\"),\n         array(\"3\"), array(\"4\"), array(\"1\"), array(\"2\") ),\n  // array of boolean data\n  array( true, TRUE, false,\n         TRUE, FALSE, 1,\n         true, TRUE, FALSE,\n         0, 1, 1, 0,\n         1, TRUE, 0, FALSE),\n);\n// looping to test vprintf() with different unsigned formats from the above $format array\n// and with signed and other types of  values from the above $args_array array\n$counter = 1;\nforeach($args_array as $args) {\n  echo \"\\n-- Iteration $counter --\\n\";\n  $result = vprintf($formats, $args);\n  echo \"\\n\";\n  var_dump($result);\n  $counter++;\n}\n?>")).toMatchSnapshot();
  });
});
