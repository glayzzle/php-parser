// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/shmop/tests/001.phpt
  it("shmop extension test", function () {
    expect(parser.parseCode("<?php\n    $hex_shm_id = 0xff3;\n    $write_d1 = \"test #1 of the shmop() extension\";\n    $write_d2 = \"test #2 append data to shared memory segment\";\n    echo \"shm open for create: \";\n    $shm_id = shmop_open($hex_shm_id, \"n\", 0644, 1024);\n    if (!$shm_id) {\n        die(\"failed\\n\");\n    } else {\n        echo \"ok\\n\";\n    }\n    echo \"shm size is: \" . ($shm_size = shmop_size($shm_id)) . \"\\n\";\n    echo \"shm write test #1: \";\n    $written = shmop_write($shm_id, $write_d1, 0);\n    if ($written != strlen($write_d1)) {\n        echo \"failed\\n\";\n    } else {\n        echo \"ok\\n\";\n    }\n    echo \"data in memory is: \" . shmop_read($shm_id, 0, $written) . \"\\n\";\n    echo \"shm open for read only: \";\n    $shm_id = shmop_open($hex_shm_id, \"a\", 0644, 1024);\n    if (!$shm_id) {\n        echo \"failed\\n\";\n    } else {\n        echo \"ok\\n\";\n    }\n    echo \"data in memory is: \" . shmop_read($shm_id, 0, $written) . \"\\n\";\n    /* try to append data to the shared memory segment, this should fail */\n    try {\n        shmop_write($shm_id, $write_d1, $written);\n    } catch (Error $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    echo \"shm open for read only: \";\n    $shm_id = shmop_open($hex_shm_id, \"w\", 0644, 1024);\n    if (!$shm_id) {\n        echo \"failed\\n\";\n    } else {\n        echo \"ok\\n\";\n    }\n    echo \"shm write test #2: \";\n    $written = shmop_write($shm_id, $write_d2, $written);\n    if ($written != strlen($write_d2)) {\n        die(\"failed\\n\");\n    } else {\n        echo \"ok\\n\";\n    }\n    echo \"data in memory is: \" . shmop_read($shm_id, 0, strlen($write_d1 . $write_d2)) . \"\\n\";\n    echo \"deletion of shm segment: \";\n    if (!shmop_delete($shm_id)) {\n        echo \"failed\\n\";\n    } else {\n        echo \"ok\\n\";\n    }\n?>")).toMatchSnapshot();
  });
});
