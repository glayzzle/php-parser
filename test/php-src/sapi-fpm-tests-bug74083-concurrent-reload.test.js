// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // sapi/fpm/tests/bug74083-concurrent-reload.phpt
  it("Concurrent reload signals should not kill PHP-FPM master process. (Bug: #74083)", function () {
    expect(parser.parseCode("<?php\nrequire_once \"tester.inc\";\n$cfg = <<<EOT\n[global]\nerror_log = {{FILE:LOG}}\npid = {{FILE:PID}}\nprocess_control_timeout=1\n[unconfined]\nlisten = {{ADDR}}\nping.path = /ping\nping.response = pong\npm = dynamic\npm.max_children = 5\npm.start_servers = 1\npm.min_spare_servers = 1\npm.max_spare_servers = 1\nEOT;\n$code = <<<EOT\n<?php\n/* empty */\nEOT;\n$tester = new FPM\\Tester($cfg, $code);\n$tester->start();\n$tester->expectLogStartNotices();\n$tester->ping('{{ADDR}}');\n/* Vary interval between concurrent reload requests\n    since performance of test instance is not known in advance */\n$max_interval = 25000;\n$step = 1000;\n$pid = $tester->getPid();\nfor ($interval = 0; $interval < $max_interval; $interval += $step) {\n    exec(\"kill -USR2 $pid\", $out, $killExitCode);\n    if ($killExitCode) {\n        echo \"ERROR: master process is dead\\n\";\n        break;\n    }\n    usleep($interval);\n}\necho \"Reached interval $interval us with $step us steps\\n\";\n$tester->expectLogNotice('Reloading in progress ...');\n/* Consume mix of 'Reloading in progress ...' and 'reloading: .*' */\n$tester->getLogLines(2000);\n$tester->signal('USR2');\n$tester->expectLogNotice('Reloading in progress ...');\n$tester->expectLogNotice('reloading: .*');\n$tester->expectLogNotice('using inherited socket fd=\\d+, \"127.0.0.1:\\d+\"');\n$tester->expectLogStartNotices();\n$tester->ping('{{ADDR}}');\n$tester->terminate();\n$tester->expectLogTerminatingNotices();\n$tester->close();\n?>\nDone")).toMatchSnapshot();
  });
});
