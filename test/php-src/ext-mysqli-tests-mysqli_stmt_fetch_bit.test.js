// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/mysqli_stmt_fetch_bit.phpt
  it("Fetching BIT column values using the PS API", function () {
    expect(parser.parseCode("<?php\n    require('connect.inc');\n    if (!$link = my_mysqli_connect($host, $user, $passwd, $db, $port, $socket))\n        printf(\"[001] Cannot connect to the server using host=%s, user=%s, passwd=***, dbname=%s, port=%s, socket=%s\\n\",\n            $host, $user, $db, $port, $socket);\n    /* NOTE: works only for up to 31 bits! This limitation should be documented. */\n    for ($bits = 1; $bits < 32; $bits++) {\n        $max_value = pow(2, $bits) - 1;\n        $tests = 0;\n        if (!mysqli_query($link, \"DROP TABLE IF EXISTS test\") ||\n            !mysqli_query($link, $sql = sprintf('CREATE TABLE test(id INT, label BIT(%d)) ENGINE=\"%s\"', $bits, $engine)))\n            printf(\"[002 - %d] [%d] %s\\n\",$bits, mysqli_errno($link), mysqli_error($link));\n        if (!$stmt = mysqli_stmt_init($link))\n            printf(\"[003 - %d] [%d] %s\\n\", $bits, mysqli_errno($link), mysqli_error($link));\n        while ($tests < min($max_value, 20)) {\n            $tests++;\n            $value = mt_rand(0, $max_value);\n            $sql = sprintf(\"INSERT INTO test(id, label) VALUES (%d, b'%s')\", $value, decbin($value));\n            if (!mysqli_stmt_prepare($stmt, $sql) ||\n                    !mysqli_stmt_execute($stmt))\n                printf(\"[004 - %d] [%d] %s\\n\", $bits, mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n            $id = $_label0 = $label = null;\n            $sql = sprintf(\"SELECT id, label + 0 AS _label0, label FROM test WHERE id = %d\", $value);\n            if (!mysqli_stmt_prepare($stmt, $sql) ||\n                    !mysqli_stmt_execute($stmt) ||\n                    !mysqli_stmt_bind_result($stmt, $id, $_label0, $label))\n                printf(\"[005 - %d] [%d] %s\\n\", $bits, mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n            if (!mysqli_stmt_fetch($stmt))\n                printf(\"[006 - %d] [%d] %s\\n\", $bits, mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n            if (($id !== $_label0) || ($value !== $_label0)) {\n                printf(\"[007 - %d] Insert of %d in BIT(%d) column might have failed. MySQL reports odd values, id = %s, _label0 = %s, label = %s.\\n\", $bits, $value, $bits, $id, $_label0, $label);\n            }\n            if ($value != $label) {\n                printf(\"[008 - %d] Wrong values, (original) value = %s, id = %s,  label + 0 AS label0 = %s, label = %s\\n\",\n                    $bits, $value, $id, $_label0, $label);\n            }\n        }\n        mysqli_stmt_close($stmt);\n    }\n    mysqli_close($link);\n    print \"done!\";\n?>")).toMatchSnapshot();
  });
});
