// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/openssl/tests/bug68920.phpt
  it("Bug #68920: peer_fingerprint input checks should be strict", function () {
    expect(parser.parseCode("<?php\n$certFile = __DIR__ . DIRECTORY_SEPARATOR . 'bug68920.pem.tmp';\n$serverCode = <<<'CODE'\n    $serverUri = \"ssl://127.0.0.1:64321\";\n    $serverFlags = STREAM_SERVER_BIND | STREAM_SERVER_LISTEN;\n    $serverCtx = stream_context_create(['ssl' => [\n        'local_cert' => '%s',\n    ]]);\n    $server = stream_socket_server($serverUri, $errno, $errstr, $serverFlags, $serverCtx);\n    phpt_notify();\n    stream_socket_accept($server, 30);\n    stream_socket_accept($server, 30);\n    stream_socket_accept($server, 30);\n    stream_socket_accept($server, 30);\nCODE;\n$serverCode = sprintf($serverCode, $certFile);\n$clientCode = <<<'CODE'\n    $serverUri = \"ssl://127.0.0.1:64321\";\n    $clientFlags = STREAM_CLIENT_CONNECT;\n    phpt_wait();\n    $ctx = stream_context_create(['ssl' => ['verify_peer'=> false, 'peer_fingerprint' => true]]);\n    $sock = stream_socket_client($serverUri, $errno, $errstr, 30, $clientFlags, $ctx);\n    var_dump($sock);\n    $ctx = stream_context_create(['ssl' => ['verify_peer'=> false, 'peer_fingerprint' => null]]);\n    $sock = stream_socket_client($serverUri, $errno, $errstr, 30, $clientFlags, $ctx);\n    var_dump($sock);\n    $ctx = stream_context_create(['ssl' => ['verify_peer'=> false, 'peer_fingerprint' => []]]);\n    $sock = stream_socket_client($serverUri, $errno, $errstr, 30, $clientFlags, $ctx);\n    var_dump($sock);\n    $ctx = stream_context_create(['ssl' => ['verify_peer'=> false, 'peer_fingerprint' => ['foo']]]);\n    $sock = stream_socket_client($serverUri, $errno, $errstr, 30, $clientFlags, $ctx);\n    var_dump($sock);\nCODE;\ninclude 'CertificateGenerator.inc';\n$certificateGenerator = new CertificateGenerator();\n$certificateGenerator->saveNewCertAsFileWithKey('bug68920', $certFile);\ninclude 'ServerClientTestCase.inc';\nServerClientTestCase::getInstance()->run($clientCode, $serverCode);\n?>")).toMatchSnapshot();
  });
});
