// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/bug42378.phpt
  it("Bug #42378 (bind_result memory exhaustion, SELECT column, FORMAT(...) AS _format)", function () {
    expect(parser.parseCode("<?php\n    require_once(\"connect.inc\");\n    function create_table($link, $column, $min, $max, $engine, $offset) {\n        if (!mysqli_query($link, 'DROP TABLE IF EXISTS test')) {\n            printf(\"[%03d] Cannot drop table test, [%d] %s\\n\",\n                $offset,\n                mysqli_errno($link), mysqli_error($link));\n            return array();\n        }\n        print \"$column\\n\";\n        $sql = sprintf(\"CREATE TABLE test(id INT AUTO_INCREMENT PRIMARY KEY, col1 %s) ENGINE=%s\",\n            $column, $engine);\n        if (!mysqli_query($link, $sql)) {\n            printf(\"[%03d] Cannot create table test, [%d] %s\\n\",\n                $offset + 1,\n                mysqli_errno($link), mysqli_error($link));\n            return array();\n        }\n        $values = array();\n        for ($i = 1; $i <= 100; $i++) {\n            $col1 = mt_rand($min, $max);\n            $values[$i] = $col1;\n            $sql = sprintf(\"INSERT INTO test(id, col1) VALUES (%d, %f)\",\n                $i, $col1);\n            if (!mysqli_query($link, $sql)) {\n                printf(\"[%03d] Cannot insert data, [%d] %s\\n\",\n                    $offset + 2,\n                    mysqli_errno($link), mysqli_error($link));\n                return array();\n            }\n        }\n        return $values;\n    }\n    function test_format($link, $format, $from, $order_by, $expected, $offset) {\n        if (!$stmt = mysqli_stmt_init($link)) {\n            printf(\"[%03d] Cannot create PS, [%d] %s\\n\",\n                $offset,\n                mysqli_errno($link), mysqli_error($link));\n            return false;\n        }\n        print \"$format\\n\";\n        if ($order_by)\n            $sql = sprintf('SELECT %s AS _format FROM %s ORDER BY %s', $format, $from, $order_by);\n        else\n            $sql = sprintf('SELECT %s AS _format FROM %s', $format, $from);\n        if (!mysqli_stmt_prepare($stmt, $sql)) {\n            printf(\"[%03d] Cannot prepare PS, [%d] %s\\n\",\n                $offset + 1,\n                mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n            return false;\n        }\n        if (!mysqli_stmt_execute($stmt)) {\n            printf(\"[%03d] Cannot execute PS, [%d] %s\\n\",\n                $offset + 2,\n                mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n            return false;\n        }\n        if (!mysqli_stmt_store_result($stmt)) {\n            printf(\"[%03d] Cannot store result set, [%d] %s\\n\",\n                $offset + 3,\n                mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n            return false;\n        }\n        if (!is_array($expected)) {\n            $result = null;\n            if (!mysqli_stmt_bind_result($stmt, $result)) {\n                printf(\"[%03d] Cannot bind result, [%d] %s\\n\",\n                    $offset + 4,\n                    mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n                return false;\n            }\n            if (!mysqli_stmt_fetch($stmt)) {\n                printf(\"[%03d] Cannot fetch result,, [%d] %s\\n\",\n                    $offset + 5,\n                    mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n                return false;\n            }\n            if ($result !== $expected) {\n                printf(\"[%03d] Expecting %s/%s got %s/%s with %s - %s.\\n\",\n                    $offset + 6,\n                    gettype($expected), $expected,\n                    gettype($result), $result,\n                    $format, $sql);\n            }\n        } else {\n            $order_by_col = $result = null;\n            if (!is_null($order_by)) {\n                if (!mysqli_stmt_bind_result($stmt, $order_by_col, $result)) {\n                    printf(\"[%03d] Cannot bind result, [%d] %s\\n\",\n                        $offset + 7,\n                        mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n                    return false;\n                }\n            } else {\n                if (!mysqli_stmt_bind_result($stmt, $result)) {\n                    printf(\"[%03d] Cannot bind result, [%d] %s\\n\",\n                        $offset + 7,\n                        mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n                    return false;\n                }\n            }\n            foreach ($expected as $k => $v) {\n                if (!mysqli_stmt_fetch($stmt)) {\n                    break;\n                }\n                if ($result !== $v) {\n                    printf(\"[%03d] Row %d - expecting %s/%s got %s/%s [%s] with %s - %s.\\n\",\n                        $offset + 8,\n                        $k,\n                        gettype($v), $v,\n                        gettype($result), $result,\n                        $order_by_col,\n                        $format, $sql);\n                }\n            }\n        }\n        mysqli_stmt_free_result($stmt);\n        mysqli_stmt_close($stmt);\n        return true;\n    }\n    if (!$link = my_mysqli_connect($host, $user, $passwd, $db, $port, $socket))\n        printf(\"[001] Cannot connect - [%d] %s\\n\",\n            mysqli_connect_errno(),\n            mysqli_connect_error());\n    /* create new table and select from it */\n    $expected = create_table($link, 'FLOAT', -10000, 10000, $engine, 90);\n    foreach ($expected as $k => $v)\n        $expected[$k] = number_format(round($v), 0, '.', ',');\n    test_format($link, 'FORMAT(col1, 0)', 'test', NULL, array(), 100);\n    $expected = create_table($link, 'FLOAT', -10000, 10000, $engine, 110);\n    foreach ($expected as $k => $v)\n        $expected[$k] = number_format(round($v), 0, '.', ',');\n    test_format($link, 'id AS order_by_col, FORMAT(col1, 0)', 'test', 'id', $expected, 120);\n    $expected = create_table($link, 'FLOAT UNSIGNED', 0, 10000, $engine, 130);\n    foreach ($expected as $k => $v)\n        $expected[$k] = number_format(round($v), 0, '.', ',');\n    test_format($link, 'id AS order_by_col, FORMAT(col1, 0)', 'test', 'id', $expected, 140);\n    $expected = create_table($link, 'DECIMAL(5,0)', -1000, 1000, $engine, 150);\n    foreach ($expected as $k => $v)\n        $expected[$k] = number_format(round($v), 0, '.', ',');\n    test_format($link, 'id AS order_by_col, FORMAT(col1, 0)', 'test', 'id', $expected, 160);\n    mysqli_close($link);\n    print \"done!\";\n?>")).toMatchSnapshot();
  });
});
