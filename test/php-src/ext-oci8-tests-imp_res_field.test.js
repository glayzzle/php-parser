// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/oci8/tests/imp_res_field.phpt
  it("Oracle Database 12c Implicit Result Sets: field tests", function () {
    expect(parser.parseCode("<?php\nrequire(__DIR__.'/connect.inc');\n// Initialization\n$stmtarray = array(\n    \"drop table imp_res_field_tab_1\",\n    \"create table imp_res_field_tab_1 (c1_number number, c2_varchar210 varchar2(10))\",\n    \"insert into imp_res_field_tab_1 values (1111, 'abcde')\",\n    \"drop table imp_res_field_tab_2\",\n    \"create table imp_res_field_tab_2 (c3_varchar21 varchar2(4))\",\n    \"insert into imp_res_field_tab_2 values ('tttt')\",\n    \"drop table imp_res_field_tab_3\",\n    \"create table imp_res_field_tab_3 (c4_number52 number(5,2))\",\n    \"insert into imp_res_field_tab_3 values (33)\",\n    \"insert into imp_res_field_tab_3 values (NULL)\",\n    \"create or replace procedure imp_res_field_proc as\n      c1 sys_refcursor;\n    begin\n      open c1 for select * from imp_res_field_tab_1 order by 1;\n      dbms_sql.return_result(c1);\n      open c1 for select * from imp_res_field_tab_2 order by 1;\n      dbms_sql.return_result(c1);\n      open c1 for select * from imp_res_field_tab_3 order by 1;\n      dbms_sql.return_result(c1);\n    end;\"\n);\noci8_test_sql_execute($c, $stmtarray);\nfunction print_fields($s)\n{\n    echo \"num fields : \" . oci_num_fields($s) . \"\\n\";\n    for ($i = 1; $i <= oci_num_fields($s); $i++) {\n        $is_null = oci_field_is_null($s, $i) ? \"T\" : \"F\";\n        $name = oci_field_name($s, $i);\n        $precision = oci_field_precision($s, $i);\n        $scale = oci_field_scale($s, $i);\n        $size = oci_field_size($s, $i);\n        $typeraw = oci_field_type_raw($s, $i);\n        $type = oci_field_type($s, $i);\n        echo \"$name\\t: is_null $is_null, precision $precision, scale $scale, size $size, typeraw $typeraw, type $type\\n\";\n    }\n}\n// Run Test\necho \"Test 1 - can't get IRS fields from parent\\n\";\n$s = oci_parse($c, \"begin imp_res_field_proc(); end;\");\noci_execute($s);\nprint_fields($s);\necho \"\\nTest 2 - can't get IRS fields from parent when fetching\\n\";\n$s = oci_parse($c, \"begin imp_res_field_proc(); end;\");\noci_execute($s);\nwhile (($r = oci_fetch_row($s))) {\n    var_dump($r);\n    print_fields($s);\n}\necho \"\\nTest 3 - get IRS fields\\n\";\n$s = oci_parse($c, \"begin imp_res_field_proc(); end;\");\noci_execute($s);\nwhile (($s1 = oci_get_implicit_resultset($s))) {\n    print_fields($s1);\n}\necho \"\\nTest 4 - get IRS fields before fetching rows\\n\";\n$s = oci_parse($c, \"begin imp_res_field_proc(); end;\");\noci_execute($s);\n$i = 0;\nwhile (($s1 = oci_get_implicit_resultset($s))) {\n    echo \"===> Result set \".++$i.\"\\n\";\n    print_fields($s1);\n    while (($r = oci_fetch_row($s1)) !== false) {\n        var_dump($r);\n    }\n}\necho \"\\nTest 5 - get IRS fields when fetching rows\\n\";\n$s = oci_parse($c, \"begin imp_res_field_proc(); end;\");\noci_execute($s);\n$i = 0;\nwhile (($s1 = oci_get_implicit_resultset($s))) {\n    echo \"===> Result set \".++$i.\"\\n\";\n    while (($r = oci_fetch_row($s1)) !== false) {\n        var_dump($r);\n        print_fields($s1);\n    }\n}\n// Clean up\n$stmtarray = array(\n    \"drop procedure imp_res_field_proc\",\n    \"drop table imp_res_field_tab_1\",\n    \"drop table imp_res_field_tab_2\",\n    \"drop table imp_res_field_tab_3\"\n);\noci8_test_sql_execute($c, $stmtarray);\n?>")).toMatchSnapshot();
  });
});
