// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/mysqli_stmt_execute.phpt
  it("mysqli_stmt_execute()", function () {
    expect(parser.parseCode("<?php\n    require_once(\"connect.inc\");\n    require('table.inc');\n    if (!$stmt = mysqli_stmt_init($link))\n        printf(\"[003] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    // stmt object status test\n    try {\n        mysqli_stmt_execute($stmt);\n    } catch (Error $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    if (mysqli_stmt_prepare($stmt, \"SELECT i_do_not_exist_believe_me FROM test ORDER BY id\"))\n        printf(\"[005] Statement should have failed!\\n\");\n    // stmt object status test\n    try {\n        mysqli_stmt_execute($stmt);\n    } catch (Error $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    if (!mysqli_stmt_prepare($stmt, \"SELECT id FROM test ORDER BY id LIMIT 1\"))\n        printf(\"[007] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (true !== ($tmp = mysqli_stmt_execute($stmt)))\n        printf(\"[008] Expecting boolean/true, got %s/%s. [%d] %s\\n\",\n            gettype($tmp), $tmp, mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (!mysqli_stmt_prepare($stmt, \"INSERT INTO test(id, label) VALUES (?, ?)\"))\n        printf(\"[009] [%d] %s\\n\", mysqli_stmt_execute($stmt), mysqli_stmt_execute($stmt));\n    // no input variables bound\n    if (false !== ($tmp = mysqli_stmt_execute($stmt)))\n        printf(\"[010] Expecting boolean/false, got %s/%s\\n\", gettype($tmp), $tmp);\n    $id = 100;\n    $label = \"z\";\n    if (!mysqli_stmt_bind_param($stmt, \"is\", $id, $label))\n        printf(\"[011] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (true !== ($tmp = mysqli_stmt_execute($stmt)))\n        printf(\"[012] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    // calling reset between executions\n    mysqli_stmt_close($stmt);\n    if (!$stmt = mysqli_stmt_init($link))\n        printf(\"[013] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    if (!mysqli_stmt_prepare($stmt, \"SELECT id FROM test ORDER BY id LIMIT ?\"))\n        printf(\"[014] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    $limit = 1;\n    if (!mysqli_stmt_bind_param($stmt, \"i\", $limit))\n        printf(\"[015] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (true !== ($tmp = mysqli_stmt_execute($stmt)))\n        printf(\"[016] Expecting boolean/true, got %s/%s. [%d] %s\\n\",\n            gettype($tmp), $tmp, mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    $id = null;\n    if (!mysqli_stmt_bind_result($stmt, $id) || !mysqli_stmt_fetch($stmt))\n        printf(\"[017] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if ($id !== 1)\n        printf(\"[018] Expecting int/1 got %s/%s\\n\", gettype($id), $id);\n    if (true !== ($tmp = mysqli_stmt_reset($stmt)))\n        printf(\"[019] Expecting boolean/true, got %s/%s. [%d] %s\\n\",\n            gettype($tmp), $tmp, mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (true !== ($tmp = mysqli_stmt_execute($stmt)))\n        printf(\"[020] Expecting boolean/true after reset to prepare status, got %s/%s. [%d] %s\\n\",\n            gettype($tmp), $tmp, mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    $id = null;\n    if (!mysqli_stmt_fetch($stmt))\n        printf(\"[021] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if ($id !== 1)\n        printf(\"[022] Expecting int/1 got %s/%s\\n\", gettype($id), $id);\n    mysqli_stmt_close($stmt);\n    if (!$stmt = mysqli_stmt_init($link))\n        printf(\"[023] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    if (!mysqli_stmt_prepare($stmt, \"SELECT id FROM test ORDER BY id LIMIT 1\"))\n        printf(\"[024] [%d] %s\\n\", mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (true !== ($tmp = mysqli_stmt_execute($stmt)))\n        printf(\"[025] Expecting boolean/true, got %s/%s. [%d] %s\\n\",\n            gettype($tmp), $tmp, mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    if (true !== ($tmp = mysqli_stmt_reset($stmt)))\n        printf(\"[026] Expecting boolean/true, got %s/%s. [%d] %s\\n\",\n            gettype($tmp), $tmp, mysqli_stmt_errno($stmt), mysqli_stmt_error($stmt));\n    var_dump(mysqli_stmt_execute($stmt));\n    var_dump(mysqli_stmt_fetch($stmt));\n    mysqli_kill($link, mysqli_thread_id($link));\n    if (false !== ($tmp = mysqli_stmt_execute($stmt)))\n        printf(\"[027] Expecting boolean/false, got %s/%s\\n\", gettype($tmp), $tmp);\n    mysqli_stmt_close($stmt);\n    try {\n        mysqli_stmt_execute($stmt);\n    } catch (Error $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    mysqli_close($link);\n    print \"done!\";\n?>")).toMatchSnapshot();
  });
});
