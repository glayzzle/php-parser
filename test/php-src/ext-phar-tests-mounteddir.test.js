// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/phar/tests/mounteddir.phpt
  it("Phar: mounted manifest directory test", function () {
    expect(parser.parseCode("<?php\n$fname = __DIR__ . '/tempmanifest1.phar.php';\n$pname = 'phar://' . $fname;\n$a = new Phar($fname);\n$a['index.php'] = '<?php\nPhar::mount(\"testit\", dirname(Phar::running(0)) . \"/testit\");\necho file_get_contents(Phar::running(1) . \"/testit/extfile.php\"), \"\\n\";\necho file_get_contents(Phar::running(1) . \"/testit/directory\"), \"\\n\";\necho file_get_contents(Phar::running(1) . \"/testit/existing.txt\"), \"\\n\";\ninclude \"testit/extfile.php\";\ninclude \"testit/extfile2.php\";\ntry {\nPhar::mount(\".phar/stub.php\", dirname(Phar::running(0)) . \"/testit/extfile.php\");\n} catch (Exception $e) {\necho $e->getMessage(),\"\\n\";\n}\n?>';\n$a['testit/existing.txt'] = 'oops';\n$a->setStub('<?php\nset_include_path(\"phar://\" . __FILE__);\ninclude \"index.php\";\n__HALT_COMPILER();');\nunset($a);\nmkdir(__DIR__ . '/testit');\nmkdir(__DIR__ . '/testit/directory');\nfile_put_contents(__DIR__ . '/testit/extfile.php', '<?php\nvar_dump(__FILE__);\n?>');\nfile_put_contents(__DIR__ . '/testit/extfile2.php', '<?php\nvar_dump(__FILE__);\n?>');\ninclude __DIR__ . '/testit/extfile.php';\ninclude $fname;\n$a = opendir($pname . '/testit');\n$out = array();\nwhile (false !== ($b = readdir($a))) {\n    $out[] = $b;\n}\nsort($out);\nforeach ($out as $b) {\n    echo \"$b\\n\";\n}\n$out = array();\nforeach (new Phar($pname . '/testit') as $b) {\n    $out[] = $b->getPathName();\n}\nsort($out);\nforeach ($out as $b) {\n    echo \"$b\\n\";\n}\ntry {\nPhar::mount($pname . '/testit', 'another\\\\..\\\\mistake');\n} catch (Exception $e) {\necho $e->getMessage(), \"\\n\";\n}\ntry {\nPhar::mount($pname . '/notfound', __DIR__ . '/this/does/not/exist');\n} catch (Exception $e) {\necho $e->getMessage(), \"\\n\";\n}\ntry {\nPhar::mount($pname . '/testit', __DIR__);\n} catch (Exception $e) {\necho $e->getMessage(), \"\\n\";\n}\ntry {\nPhar::mount($pname . '/testit/extfile.php', __DIR__);\n} catch (Exception $e) {\necho $e->getMessage(), \"\\n\";\n}\n?>")).toMatchSnapshot();
  });
});
