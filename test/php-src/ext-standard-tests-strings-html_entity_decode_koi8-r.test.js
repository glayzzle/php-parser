// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/strings/html_entity_decode_koi8-r.phpt
  it("Translation of HTML entities for encoding KOI8-R", function () {
    expect(parser.parseCode("<?php\n$arr = array(\n0x2500 => array(0x80, \"BOX DRAWINGS LIGHT HORIZONTAL\"),\n0x2502 => array(0x81, \"BOX DRAWINGS LIGHT VERTICAL\"),\n0x250C => array(0x82, \"BOX DRAWINGS LIGHT DOWN AND RIGHT\"),\n0x2510 => array(0x83, \"BOX DRAWINGS LIGHT DOWN AND LEFT\"),\n0x2514 => array(0x84, \"BOX DRAWINGS LIGHT UP AND RIGHT\"),\n0x2518 => array(0x85, \"BOX DRAWINGS LIGHT UP AND LEFT\"),\n0x251C => array(0x86, \"BOX DRAWINGS LIGHT VERTICAL AND RIGHT\"),\n0x2524 => array(0x87, \"BOX DRAWINGS LIGHT VERTICAL AND LEFT\"),\n0x252C => array(0x88, \"BOX DRAWINGS LIGHT DOWN AND HORIZONTAL\"),\n0x2534 => array(0x89, \"BOX DRAWINGS LIGHT UP AND HORIZONTAL\"),\n0x253C => array(0x8A, \"BOX DRAWINGS LIGHT VERTICAL AND HORIZONTAL\"),\n0x2580 => array(0x8B, \"UPPER HALF BLOCK\"),\n0x2584 => array(0x8C, \"LOWER HALF BLOCK\"),\n0x2588 => array(0x8D, \"FULL BLOCK\"),\n0x258C => array(0x8E, \"LEFT HALF BLOCK\"),\n0x2590 => array(0x8F, \"RIGHT HALF BLOCK\"),\n0x2591 => array(0x90, \"LIGHT SHADE\"),\n0x2592 => array(0x91, \"MEDIUM SHADE\"),\n0x2593 => array(0x92, \"DARK SHADE\"),\n0x2320 => array(0x93, \"TOP HALF INTEGRAL\"),\n0x25A0 => array(0x94, \"BLACK SQUARE\"),\n0x2219 => array(0x95, \"BULLET OPERATOR\"),\n0x221A => array(0x96, \"SQUARE ROOT\"),\n0x2248 => array(0x97, \"ALMOST EQUAL TO\"),\n0x2264 => array(0x98, \"LESS-THAN OR EQUAL TO\"),\n0x2265 => array(0x99, \"GREATER-THAN OR EQUAL TO\"),\n0x00A0 => array(0x9A, \"NO-BREAK SPACE\"),\n0x2321 => array(0x9B, \"BOTTOM HALF INTEGRAL\"),\n0x00B0 => array(0x9C, \"DEGREE SIGN\"),\n0x00B2 => array(0x9D, \"SUPERSCRIPT TWO\"),\n0x00B7 => array(0x9E, \"MIDDLE DOT\"),\n0x00F7 => array(0x9F, \"DIVISION SIGN\"),\n0x2550 => array(0xA0, \"BOX DRAWINGS DOUBLE HORIZONTAL\"),\n0x2551 => array(0xA1, \"BOX DRAWINGS DOUBLE VERTICAL\"),\n0x2552 => array(0xA2, \"BOX DRAWINGS DOWN SINGLE AND RIGHT DOUBLE\"),\n0x0451 => array(0xA3, \"CYRILLIC SMALL LETTER IO\"),\n0x2553 => array(0xA4, \"BOX DRAWINGS DOWN DOUBLE AND RIGHT SINGLE\"),\n0x2554 => array(0xA5, \"BOX DRAWINGS DOUBLE DOWN AND RIGHT\"),\n0x2555 => array(0xA6, \"BOX DRAWINGS DOWN SINGLE AND LEFT DOUBLE\"),\n0x2556 => array(0xA7, \"BOX DRAWINGS DOWN DOUBLE AND LEFT SINGLE\"),\n0x2557 => array(0xA8, \"BOX DRAWINGS DOUBLE DOWN AND LEFT\"),\n0x2558 => array(0xA9, \"BOX DRAWINGS UP SINGLE AND RIGHT DOUBLE\"),\n0x2559 => array(0xAA, \"BOX DRAWINGS UP DOUBLE AND RIGHT SINGLE\"),\n0x255A => array(0xAB, \"BOX DRAWINGS DOUBLE UP AND RIGHT\"),\n0x255B => array(0xAC, \"BOX DRAWINGS UP SINGLE AND LEFT DOUBLE\"),\n0x255C => array(0xAD, \"BOX DRAWINGS UP DOUBLE AND LEFT SINGLE\"),\n0x255D => array(0xAE, \"BOX DRAWINGS DOUBLE UP AND LEFT\"),\n0x255E => array(0xAF, \"BOX DRAWINGS VERTICAL SINGLE AND RIGHT DOUBLE\"),\n0x255F => array(0xB0, \"BOX DRAWINGS VERTICAL DOUBLE AND RIGHT SINGLE\"),\n0x2560 => array(0xB1, \"BOX DRAWINGS DOUBLE VERTICAL AND RIGHT\"),\n0x2561 => array(0xB2, \"BOX DRAWINGS VERTICAL SINGLE AND LEFT DOUBLE\"),\n0x0401 => array(0xB3, \"CYRILLIC CAPITAL LETTER IO\"),\n0x2562 => array(0xB4, \"BOX DRAWINGS VERTICAL DOUBLE AND LEFT SINGLE\"),\n0x2563 => array(0xB5, \"BOX DRAWINGS DOUBLE VERTICAL AND LEFT\"),\n0x2564 => array(0xB6, \"BOX DRAWINGS DOWN SINGLE AND HORIZONTAL DOUBLE\"),\n0x2565 => array(0xB7, \"BOX DRAWINGS DOWN DOUBLE AND HORIZONTAL SINGLE\"),\n0x2566 => array(0xB8, \"BOX DRAWINGS DOUBLE DOWN AND HORIZONTAL\"),\n0x2567 => array(0xB9, \"BOX DRAWINGS UP SINGLE AND HORIZONTAL DOUBLE\"),\n0x2568 => array(0xBA, \"BOX DRAWINGS UP DOUBLE AND HORIZONTAL SINGLE\"),\n0x2569 => array(0xBB, \"BOX DRAWINGS DOUBLE UP AND HORIZONTAL\"),\n0x256A => array(0xBC, \"BOX DRAWINGS VERTICAL SINGLE AND HORIZONTAL DOUBLE\"),\n0x256B => array(0xBD, \"BOX DRAWINGS VERTICAL DOUBLE AND HORIZONTAL SINGLE\"),\n0x256C => array(0xBE, \"BOX DRAWINGS DOUBLE VERTICAL AND HORIZONTAL\"),\n0x00A9 => array(0xBF, \"COPYRIGHT SIGN\"),\n0x044E => array(0xC0, \"CYRILLIC SMALL LETTER YU\"),\n0x0430 => array(0xC1, \"CYRILLIC SMALL LETTER A\"),\n0x0431 => array(0xC2, \"CYRILLIC SMALL LETTER BE\"),\n0x0446 => array(0xC3, \"CYRILLIC SMALL LETTER TSE\"),\n0x0434 => array(0xC4, \"CYRILLIC SMALL LETTER DE\"),\n0x0435 => array(0xC5, \"CYRILLIC SMALL LETTER IE\"),\n0x0444 => array(0xC6, \"CYRILLIC SMALL LETTER EF\"),\n0x0433 => array(0xC7, \"CYRILLIC SMALL LETTER GHE\"),\n0x0445 => array(0xC8, \"CYRILLIC SMALL LETTER HA\"),\n0x0438 => array(0xC9, \"CYRILLIC SMALL LETTER I\"),\n0x0439 => array(0xCA, \"CYRILLIC SMALL LETTER SHORT I\"),\n0x043A => array(0xCB, \"CYRILLIC SMALL LETTER KA\"),\n0x043B => array(0xCC, \"CYRILLIC SMALL LETTER EL\"),\n0x043C => array(0xCD, \"CYRILLIC SMALL LETTER EM\"),\n0x043D => array(0xCE, \"CYRILLIC SMALL LETTER EN\"),\n0x043E => array(0xCF, \"CYRILLIC SMALL LETTER O\"),\n0x043F => array(0xD0, \"CYRILLIC SMALL LETTER PE\"),\n0x044F => array(0xD1, \"CYRILLIC SMALL LETTER YA\"),\n0x0440 => array(0xD2, \"CYRILLIC SMALL LETTER ER\"),\n0x0441 => array(0xD3, \"CYRILLIC SMALL LETTER ES\"),\n0x0442 => array(0xD4, \"CYRILLIC SMALL LETTER TE\"),\n0x0443 => array(0xD5, \"CYRILLIC SMALL LETTER U\"),\n0x0436 => array(0xD6, \"CYRILLIC SMALL LETTER ZHE\"),\n0x0432 => array(0xD7, \"CYRILLIC SMALL LETTER VE\"),\n0x044C => array(0xD8, \"CYRILLIC SMALL LETTER SOFT SIGN\"),\n0x044B => array(0xD9, \"CYRILLIC SMALL LETTER YERU\"),\n0x0437 => array(0xDA, \"CYRILLIC SMALL LETTER ZE\"),\n0x0448 => array(0xDB, \"CYRILLIC SMALL LETTER SHA\"),\n0x044D => array(0xDC, \"CYRILLIC SMALL LETTER E\"),\n0x0449 => array(0xDD, \"CYRILLIC SMALL LETTER SHCHA\"),\n0x0447 => array(0xDE, \"CYRILLIC SMALL LETTER CHE\"),\n0x044A => array(0xDF, \"CYRILLIC SMALL LETTER HARD SIGN\"),\n0x042E => array(0xE0, \"CYRILLIC CAPITAL LETTER YU\"),\n0x0410 => array(0xE1, \"CYRILLIC CAPITAL LETTER A\"),\n0x0411 => array(0xE2, \"CYRILLIC CAPITAL LETTER BE\"),\n0x0426 => array(0xE3, \"CYRILLIC CAPITAL LETTER TSE\"),\n0x0414 => array(0xE4, \"CYRILLIC CAPITAL LETTER DE\"),\n0x0415 => array(0xE5, \"CYRILLIC CAPITAL LETTER IE\"),\n0x0424 => array(0xE6, \"CYRILLIC CAPITAL LETTER EF\"),\n0x0413 => array(0xE7, \"CYRILLIC CAPITAL LETTER GHE\"),\n0x0425 => array(0xE8, \"CYRILLIC CAPITAL LETTER HA\"),\n0x0418 => array(0xE9, \"CYRILLIC CAPITAL LETTER I\"),\n0x0419 => array(0xEA, \"CYRILLIC CAPITAL LETTER SHORT I\"),\n0x041A => array(0xEB, \"CYRILLIC CAPITAL LETTER KA\"),\n0x041B => array(0xEC, \"CYRILLIC CAPITAL LETTER EL\"),\n0x041C => array(0xED, \"CYRILLIC CAPITAL LETTER EM\"),\n0x041D => array(0xEE, \"CYRILLIC CAPITAL LETTER EN\"),\n0x041E => array(0xEF, \"CYRILLIC CAPITAL LETTER O\"),\n0x041F => array(0xF0, \"CYRILLIC CAPITAL LETTER PE\"),\n0x042F => array(0xF1, \"CYRILLIC CAPITAL LETTER YA\"),\n0x0420 => array(0xF2, \"CYRILLIC CAPITAL LETTER ER\"),\n0x0421 => array(0xF3, \"CYRILLIC CAPITAL LETTER ES\"),\n0x0422 => array(0xF4, \"CYRILLIC CAPITAL LETTER TE\"),\n0x0423 => array(0xF5, \"CYRILLIC CAPITAL LETTER U\"),\n0x0416 => array(0xF6, \"CYRILLIC CAPITAL LETTER ZHE\"),\n0x0412 => array(0xF7, \"CYRILLIC CAPITAL LETTER VE\"),\n0x042C => array(0xF8, \"CYRILLIC CAPITAL LETTER SOFT SIGN\"),\n0x042B => array(0xF9, \"CYRILLIC CAPITAL LETTER YERU\"),\n0x0417 => array(0xFA, \"CYRILLIC CAPITAL LETTER ZE\"),\n0x0428 => array(0xFB, \"CYRILLIC CAPITAL LETTER SHA\"),\n0x042D => array(0xFC, \"CYRILLIC CAPITAL LETTER E\"),\n0x0429 => array(0xFD, \"CYRILLIC CAPITAL LETTER SHCHA\"),\n0x0427 => array(0xFE, \"CYRILLIC CAPITAL LETTER CHE\"),\n0x042A => array(0xFF, \"CYRILLIC CAPITAL LETTER HARD SIGN\"),\n);\nforeach ($arr as $u => $v) {\n    $ent = sprintf(\"&#x%X;\", $u);\n    $res = html_entity_decode($ent, ENT_QUOTES, 'KOI8-R');\n    $d = unpack(\"H*\", $res);\n    echo sprintf(\"%s: %s => %s\\n\", $v[1], $ent, $d[1]);\n    $ent = sprintf(\"&#x%X;\", $v[0]);\n    $res = html_entity_decode($ent, ENT_QUOTES, 'KOI8-R');\n    if ($res[0] != \"&\" || $res[1] != \"#\")\n        $res = unpack(\"H*\", $res)[1];\n    echo sprintf(\"%s => %s\\n\\n\", $ent, $res);\n}\n?>")).toMatchSnapshot();
  });
});
