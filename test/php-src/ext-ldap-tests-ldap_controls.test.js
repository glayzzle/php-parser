// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/ldap/tests/ldap_controls.phpt
  it("Test the use of controls", function () {
    expect(parser.parseCode("<?php\ninclude \"connect.inc\";\n$link = ldap_connect_and_bind($host, $port, $user, $passwd, $protocol_version);\ninsert_dummy_data($link, $base);\n/* Test assertion control */\nvar_dump(\n    $result = ldap_search($link, \"o=test,$base\", \"objectClass=*\", array('o'), 0, 0, 0, LDAP_DEREF_NEVER,\n        [['oid' => LDAP_CONTROL_ASSERT, 'iscritical' => TRUE, 'value' => ['filter' => '(objectClass=organization)']]]),\n    ldap_get_entries($link, $result),\n    $result = ldap_search($link, \"o=test,$base\", \"objectClass=*\", array('o'), 0, 0, 0, LDAP_DEREF_NEVER,\n        [['oid' => LDAP_CONTROL_ASSERT, 'iscritical' => TRUE, 'value' => ['filter' => '(objectClass=organizationalUnit)']]]),\n    ldap_modify($link, \"o=test,$base\", ['description' => 'desc'],\n        [['oid' => LDAP_CONTROL_ASSERT, 'iscritical' => TRUE, 'value' => ['filter' => '(!(description=*))']]]),\n    $result = ldap_read($link, \"o=test,$base\", \"objectClass=*\", array('description')),\n    ldap_get_entries($link, $result),\n    ldap_modify($link, \"o=test,$base\", ['description' => 'desc2'],\n        [['oid' => LDAP_CONTROL_ASSERT, 'iscritical' => TRUE, 'value' => ['filter' => '(!(description=*))']]]),\n    $result = ldap_read($link, \"o=test,$base\", \"objectClass=*\", array('description')),\n    ldap_get_entries($link, $result),\n    ldap_delete($link, \"o=test,$base\", [['oid' => LDAP_CONTROL_ASSERT, 'iscritical' => TRUE, 'value' => ['filter' => '(description=desc2)']]]),\n    ldap_errno($link),\n    ldap_error($link),\n    ldap_rename($link, \"o=test,$base\", \"o=test2\", \"\", TRUE, [['oid' => LDAP_CONTROL_ASSERT, 'iscritical' => TRUE, 'value' => ['filter' => '(description=desc2)']]]),\n    ldap_compare($link, \"o=test,$base\", \"o\", \"test\"),\n    ldap_compare($link, \"o=test,$base\", \"o\", \"test\", [['oid' => LDAP_CONTROL_ASSERT, 'iscritical' => TRUE, 'value' => ['filter' => '(description=desc2)']]]),\n    ldap_compare($link, \"o=test,$base\", \"o\", \"test\", [['oid' => LDAP_CONTROL_ASSERT, 'iscritical' => TRUE, 'value' => ['filter' => '(description=desc)']]])\n);\n/* Test valuesreturnfilter control */\nvar_dump(\n    $result = ldap_read($link, \"o=test2,$base\", \"objectClass=*\", [\"l\"]),\n    ldap_get_entries($link, $result)[0]['l'],\n    $result = ldap_read($link, \"o=test2,$base\", \"objectClass=*\", [\"l\"], 0, 0, 0, LDAP_DEREF_NEVER,\n        [['oid' => LDAP_CONTROL_VALUESRETURNFILTER, 'iscritical' => TRUE, 'value' => ['filter' => '(l=*here)']]]),\n    ldap_get_entries($link, $result)[0]['l']\n);\n?>")).toMatchSnapshot();
  });
});
