// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/bug66124.phpt
  it("Bug #66124 (mysqli under mysqlnd loses precision when bind_param with 'i')", function () {
    expect(parser.parseCode("<?php\n$table_drop = \"DROP TABLE IF EXISTS `test`\";\n$table_create = \"CREATE TABLE `test` (\n  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\";\n$table_insert = \"INSERT INTO `test` SET `id`=?\";\n$table_select = \"SELECT * FROM `test`\";\n$table_delete = \"DELETE FROM `test`\";\n$id = '1311200011005001566';\nrequire_once('connect.inc');\nif (!$link = my_mysqli_connect($host, $user, $passwd, $db, $port, $socket)) {\n    printf(\"Cannot connect to the server using host=%s, user=%s, passwd=***, dbname=%s, port=%s, socket=%s\\n\",\n        $host, $user, $db, $port, $socket);\n    exit(1);\n}\n$link->query($table_drop);\n$link->query($table_create);\n$stmt = $link->prepare($table_insert);\nif (!$stmt) {\n    printf(\"Can't prepare\\n\");\n    exit(1);\n}\necho \"Using 'i':\\n\";\n$stmt->bind_param('i', $id);\nif ($stmt->execute()){\n    echo \"insert id:{$id}=>{$stmt->insert_id}\\n\";\n} else {\n    printf(\"Can't execute\\n\");\n    exit(1);\n}\n$result = $link->query($table_select);\nif ($result){\n    while ($row = $result->fetch_assoc()) {\n        echo \"fetch  id:{$row['id']}\\n\";\n    }\n} else {\n    printf(\"Can't select\\n\");\n    exit(1);\n}\n$stmt->close();\n$link->query($table_drop);\n$link->query($table_create);\n$stmt = $link->prepare($table_insert);\n$stmt->bind_param('s', $id);\necho \"Using 's':\\n\";\nif ($stmt->execute()){\n    echo \"insert id:{$id}\\n\";\n} else{\n    printf(\"Can't execute\\n\");\n    exit(1);\n}\n$result = $link->query($table_select);\nif ($result){\n    while ($row = $result->fetch_assoc()) {\n        echo \"fetch  id:{$row['id']}\\n\";\n    }\n} else {\n    printf(\"Can't select\\n\");\n    exit(1);\n}\n$link->close();\n?>\ndone")).toMatchSnapshot();
  });
});
