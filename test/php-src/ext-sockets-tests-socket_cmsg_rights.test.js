// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/sockets/tests/socket_cmsg_rights.phpt
  it("recvmsg(): receive SCM_CREDENTIALS messages", function () {
    expect(parser.parseCode("<?php\ninclude __DIR__.\"/mcast_helpers.php.inc\";\n$path = __DIR__ . \"/socket_cmsg_rights.sock\";\n@unlink($path);\necho \"creating send socket\\n\";\n$sends1 = socket_create(AF_UNIX, SOCK_DGRAM, 0) or die(\"err\");\nvar_dump($sends1);\nsocket_set_nonblock($sends1) or die(\"Could not put in non-blocking mode\");\necho \"creating receive socket\\n\";\n$s = socket_create(AF_UNIX, SOCK_DGRAM, 0) or die(\"err\");\nvar_dump($s);\n$br = socket_bind($s, $path) or die(\"err\");\nvar_dump($br);\nsocket_set_nonblock($s) or die(\"Could not put in non-blocking mode\");\n$r = socket_sendmsg($sends1, [\n  \"name\" => [ \"path\" => $path ],\n  \"iov\" => [\"test \", \"thing\", \"\\n\"],\n  \"control\" => [\n    [\n      \"level\" => SOL_SOCKET,\n      \"type\" => SCM_RIGHTS,\n      \"data\" => [$sends1, STDIN, STDOUT, STDERR],\n    ]\n  ]\n], 0);\nvar_dump($r);\nchecktimeout($s, 500);\n$data = [\n    \"name\" => [],\n    \"buffer_size\" => 2000,\n    \"controllen\" => socket_cmsg_space(SOL_SOCKET, SCM_RIGHTS, 4)\n];\nvar_dump($data);\nif (!socket_recvmsg($s, $data, 0)) die(\"recvmsg\");\nif ($data[\"control\"]) {\n    $control = $data[\"control\"][0];\n    if ($control[\"level\"] == SOL_SOCKET &&\n        $control[\"type\"]  == SCM_RIGHTS) {\n        foreach ($control[\"data\"] as $resource) {\n            if (!is_resource($resource)) {\n                echo \"FAIL RES\\n\";\n                var_dump($data);\n                exit;\n            }\n        }\n        echo \"OK\";\n    } else {\n        echo \"FAIL RIGHTS\\n\";\n        var_dump($data);\n        exit;\n    }\n} else {\n    echo \"FAIL CONTROL\\n\";\n    var_dump($data);\n}\n?>")).toMatchSnapshot();
  });
});
