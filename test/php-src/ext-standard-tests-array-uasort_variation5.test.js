// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/array/uasort_variation5.phpt
  it("Test uasort() function : usage variations - sort diff. strings", function () {
    expect(parser.parseCode("<?php\n/*\n* sorting different strings:\n*  single quoted, double quoted and heredoc strings\n*/\n// comparison function\nfunction cmp_function($value1, $value2)\n{\n  if($value1 == $value2) {\n    return 0;\n  }\n  else if($value1 > $value2) {\n    return 1;\n  }\n  else {\n    return -1;\n  }\n}\n// Different heredoc strings to be sorted\n$empty_heredoc =<<<EOT\nEOT;\n$simple_heredoc1 =<<<EOT\nHeredoc\nEOT;\n$simple_heredoc2 =<<<EOT\nHEREDOC\nEOT;\n$multiline_heredoc =<<<EOT\nheredoc string\\twith!@# and 123\nTest this!!!\nEOT;\necho \"*** Testing uasort() : different string arrays as 'array_arg' ***\\n\";\n// Single quoted strings\n$single_quoted_values = array(\n  0 => ' ', 1 => 'test', 3 => 'Hello', 4 => 'HELLO',\n  5 => '', 6 => '\\t', 7 => '0', 8 => '123Hello', 9 => '\\'', 10 => '@#$%'\n);\necho \"-- Sorting Single Quoted String values --\\n\";\nvar_dump( uasort($single_quoted_values, 'cmp_function') );  // expecting: bool(true)\nvar_dump($single_quoted_values);\n// Double quoted strings\n$double_quoted_values = array(\n  0 => \" \", 1 => \"test\", 3 => \"Hello\", 4 => \"HELLO\",\n  5 => \"\", 6 => \"\\t\", 7 => \"0\", 8 => \"123Hello\", 9 => \"\\\"\", 10 => \"@#$%\"\n);\necho \"-- Sorting Double Quoted String values --\\n\";\nvar_dump( uasort($double_quoted_values, 'cmp_function') );  // expecting: bool(true)\nvar_dump($double_quoted_values);\n// Heredoc strings\n$heredoc_values = array(0 => $empty_heredoc, 1 => $simple_heredoc1, 2 => $simple_heredoc2, 3 => $multiline_heredoc);\necho \"-- Sorting Heredoc String values --\\n\";\nvar_dump( uasort($heredoc_values, 'cmp_function') );  // expecting: bool(true)\nvar_dump($heredoc_values);\necho \"Done\"\n?>")).toMatchSnapshot();
  });
});
