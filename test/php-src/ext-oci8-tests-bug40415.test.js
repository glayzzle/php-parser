// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/oci8/tests/bug40415.phpt
  it("Bug #40415 (Using oci_fetchall with nested cursors)", function () {
    expect(parser.parseCode("<?php\nrequire __DIR__.\"/connect.inc\";\n// Setup\n$create_1 = \"CREATE TABLE t1 (id1 INTEGER)\";\n$create_2 = \"CREATE TABLE t2 (id2 INTEGER)\";\n$drop_1 = \"DROP TABLE t1\";\n$drop_2 = \"DROP TABLE t2\";\n$s1 = oci_parse($c, $drop_1);\n$s2 = oci_parse($c, $drop_2);\n@oci_execute($s1);\n@oci_execute($s2);\n$s1 = oci_parse($c, $create_1);\n$s2 = oci_parse($c, $create_2);\noci_execute($s1);\noci_execute($s2);\nfor($i=1; $i < 4; $i++) {\n    $insert = \"INSERT INTO t1 VALUES(1\".$i.\")\";\n    $s = oci_parse($c, $insert);\n    oci_execute($s);\n}\nfor($i=1; $i < 4; $i++) {\n    $insert = \"INSERT INTO t2 VALUES(2\".$i.\")\";\n    $s = oci_parse($c, $insert);\n    oci_execute($s);\n}\nfunction do_assoc($c)\n{\n    $query = \"SELECT t1.*, CURSOR( SELECT * FROM t2 ) AS CURSOR FROM t1\";\n    $stmt = oci_parse($c, $query);\n    oci_execute($stmt);\n    while ($row = oci_fetch_assoc($stmt)) {\n        print \"Got row \\\"\".$row['ID1'].\"\\\". Now getting nested cursor:\\n\";\n        var_dump(oci_execute($row['CURSOR']));\n        while ($row_n = oci_fetch_assoc($row['CURSOR']) ) {\n            var_dump($row_n);\n        }\n    }\n}\nfunction do_all($c)\n{\n    $query = \"SELECT t1.*, CURSOR( SELECT * FROM t2 ) AS CURSOR FROM t1\";\n    $stmt = oci_parse($c, $query);\n    oci_execute($stmt);\n    $rc1 = oci_fetch_all($stmt, $res);\n    echo \"Rows returned $rc1\\n\";\n    var_dump($res);\n    foreach ($res['CURSOR'] as $cv) {\n        echo \"Getting nested cursor\\n\";\n        var_dump(oci_execute($cv));\n        $rc2 = oci_fetch_all($cv, $res2);\n        var_dump($res2);\n    }\n}\necho \"Test 1: Associate fetch of nested cursor\\n\";\ndo_assoc($c);\necho \"\\nTest 2: fetchall of nested cursor\\n\";\ndo_all($c);\n// Cleanup\n$s1 = oci_parse($c, $drop_1);\n$s2 = oci_parse($c, $drop_2);\n@oci_execute($s1);\n@oci_execute($s2);\necho \"Done\\n\";\n?>")).toMatchSnapshot();
  });
});
