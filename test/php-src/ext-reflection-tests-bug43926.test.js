// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/reflection/tests/bug43926.phpt
  it("Bug #43926 (isInstance() isn't equivalent to instanceof operator)", function () {
    expect(parser.parseCode("<?php\nclass E {\n}\nclass D extends E {\n}\nclass A extends D {\n}\nclass C extends A {\n}\n$ra = new ReflectionClass('A');\n$rc = new ReflectionClass('C');\n$rd = new ReflectionClass('D');\n$re = new ReflectionClass('E');\n$ca = $ra->newInstance();\n$cc = $rc->newInstance();\n$cd = $rd->newInstance();\n$ce = $re->newInstance();\nprint(\"Is? A \". ($ra->isInstance($ca) ? 'true' : 'false') .\", instanceof: \". (($ca instanceof A) ? 'true' : 'false') .\"\\n\");\nprint(\"Is? C \". ($rc->isInstance($ca) ? 'true' : 'false') .\", instanceof: \". (($ca instanceof C) ? 'true' : 'false') .\"\\n\");\nprint(\"Is? D \". ($rd->isInstance($ca) ? 'true' : 'false') .\", instanceof: \". (($ca instanceof D) ? 'true' : 'false') .\"\\n\");\nprint(\"Is? E \". ($re->isInstance($ca) ? 'true' : 'false') .\", instanceof: \". (($ca instanceof E) ? 'true' : 'false') .\"\\n\");\nprint \"-\\n\";\nprint(\"Is? A \". ($ra->isInstance($cc) ? 'true' : 'false') .\", instanceof: \". (($cc instanceof A) ? 'true' : 'false') .\"\\n\");\nprint(\"Is? C \". ($rc->isInstance($cc) ? 'true' : 'false') .\", instanceof: \". (($cc instanceof C) ? 'true' : 'false') .\"\\n\");\nprint(\"Is? D \". ($rd->isInstance($cc) ? 'true' : 'false') .\", instanceof: \". (($cc instanceof D) ? 'true' : 'false') .\"\\n\");\nprint(\"Is? E \". ($re->isInstance($cc) ? 'true' : 'false') .\", instanceof: \". (($cc instanceof E) ? 'true' : 'false') .\"\\n\");\nprint \"-\\n\";\nprint(\"Is? A \". ($ra->isInstance($cd) ? 'true' : 'false') .\", instanceof: \". (($cd instanceof A) ? 'true' : 'false') .\"\\n\");\nprint(\"Is? C \". ($rc->isInstance($cd) ? 'true' : 'false') .\", instanceof: \". (($cd instanceof C) ? 'true' : 'false') .\"\\n\");\nprint(\"Is? D \". ($rd->isInstance($cd) ? 'true' : 'false') .\", instanceof: \". (($cd instanceof D) ? 'true' : 'false') .\"\\n\");\nprint(\"Is? E \". ($re->isInstance($cd) ? 'true' : 'false') .\", instanceof: \". (($cd instanceof E) ? 'true' : 'false') .\"\\n\");\nprint \"-\\n\";\nprint(\"Is? A \". ($ra->isInstance($ce) ? 'true' : 'false') .\", instanceof: \". (($ce instanceof A) ? 'true' : 'false') .\"\\n\");\nprint(\"Is? C \". ($rc->isInstance($ce) ? 'true' : 'false') .\", instanceof: \". (($ce instanceof C) ? 'true' : 'false') .\"\\n\");\nprint(\"Is? D \". ($rd->isInstance($ce) ? 'true' : 'false') .\", instanceof: \". (($ce instanceof D) ? 'true' : 'false') .\"\\n\");\nprint(\"Is? E \". ($re->isInstance($ce) ? 'true' : 'false') .\", instanceof: \". (($ce instanceof E) ? 'true' : 'false') .\"\\n\");\n?>")).toMatchSnapshot();
  });
});
