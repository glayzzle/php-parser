// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/mail/mail_basic7.phpt
  it("Test mail() function : array extra header basic functionality", function () {
    expect(parser.parseCode("<?php\nerror_reporting(-1);\necho \"*** Testing mail() : basic functionality ***\\n\";\necho \"\\n\\n************* TEST ******************\\n\";\n// Should pass\n// Initialise all required variables\n$to = 'user@example.com';\n$subject = 'Test Subject';\n$message = 'A Message';\n$additional_headers = array(\n    'KHeaders' => 'aaaa',\n    'bcc'=>'foo@bar',\n    'foo'=>\n    array(\n        \"bar\\r\\n hoge\",\n        \"bar\\r\\n\\t fuga\",\n    ),\n);\n$outFile = \"mailBasic7.out\";\n@unlink($outFile);\necho \"-- All Mail Content Parameters --\\n\";\n// Calling mail() with all additional headers\nvar_dump(mail($to, $subject, $message, $additional_headers));\necho file_get_contents($outFile);\nunlink($outFile);\necho \"\\n\\n************* TEST ******************\\n\";\n// Should fail all\n// Initialise all required variables\n$to = 'user@example.com';\n$subject = 'Test Subject';\n$message = 'A Message';\ntry {\n    mail($to, $subject, $message, ['orig-date' => array('foo1')]);\n} catch (TypeError|ValueError $exception) {\n    echo get_class($exception) . \": \" . $exception->getMessage() . \"\\n\";\n}\ntry {\n    mail($to, $subject, $message, ['from' => array('foo2')]);\n} catch (TypeError|ValueError $exception) {\n    echo get_class($exception) . \": \" . $exception->getMessage() . \"\\n\";\n}\ntry {\n    mail($to, $subject, $message, ['sender' => array('foo3')]);\n} catch (TypeError|ValueError $exception) {\n    echo get_class($exception) . \": \" . $exception->getMessage() . \"\\n\";\n}\ntry {\n    mail($to, $subject, $message, ['reply-to' => array('foo4')]);\n} catch (TypeError|ValueError $exception) {\n    echo get_class($exception) . \": \" . $exception->getMessage() . \"\\n\";\n}\ntry {\n    mail($to, $subject, $message, ['to' => array('foo5')]);\n} catch (TypeError|ValueError $exception) {\n    echo get_class($exception) . \": \" . $exception->getMessage() . \"\\n\";\n}\ntry {\n    mail($to, $subject, $message, ['bcc' => array('foo6')]);\n} catch (TypeError|ValueError $exception) {\n    echo get_class($exception) . \": \" . $exception->getMessage() . \"\\n\";\n}\ntry {\n    mail($to, $subject, $message, ['message-id' => array('foo7')]);\n} catch (TypeError|ValueError $exception) {\n    echo get_class($exception) . \": \" . $exception->getMessage() . \"\\n\";\n}\ntry {\n    mail($to, $subject, $message, ['in-reply-to'=> array('foo8')]);\n} catch (TypeError|ValueError $exception) {\n    echo get_class($exception) . \": \" . $exception->getMessage() . \"\\n\";\n}\necho \"\\n\\n************* TEST ******************\\n\";\n// Should fail all\n// Initialise all required variables\n$to = 'user@example.com';\n$subject = 'Test Subject';\n$message = 'A Message';\ntry {\n    mail($to, $subject, $message, ['foo1' => array('foo2'=>'bar1')]);\n} catch (TypeError|ValueError $exception) {\n    echo get_class($exception) . \": \" . $exception->getMessage() . \"\\n\";\n}\ntry {\n    mail($to, $subject, $message, ['foo2' => array('foo2', array('foo3'))]);\n} catch (TypeError|ValueError $exception) {\n    echo get_class($exception) . \": \" . $exception->getMessage() . \"\\n\";\n}\ntry {\n    mail($to, $subject, $message, ['foo3' => array(123)]);\n} catch (TypeError|ValueError $exception) {\n    echo get_class($exception) . \": \" . $exception->getMessage() . \"\\n\";\n}\ntry {\n    mail($to, $subject, $message, ['foo4' => array(123.456)]);\n} catch (TypeError|ValueError $exception) {\n    echo get_class($exception) . \": \" . $exception->getMessage() . \"\\n\";\n}\ntry {\n    mail($to, $subject, $message, ['foo5' => array(FALSE)]);\n} catch (TypeError|ValueError $exception) {\n    echo get_class($exception) . \": \" . $exception->getMessage() . \"\\n\";\n}\ntry {\n    mail($to, $subject, $message, ['foo6' => array(NULL)]);\n} catch (TypeError|ValueError $exception) {\n    echo get_class($exception) . \": \" . $exception->getMessage() . \"\\n\";\n}\ntry {\n    mail($to, $subject, $message, ['foo7' => array(new StdClass)]);\n} catch (TypeError|ValueError $exception) {\n    echo get_class($exception) . \": \" . $exception->getMessage() . \"\\n\";\n}\necho \"\\n\\n************* TEST ******************\\n\";\n// Should fail most\n// Initialise all required variables\n$to = 'user@example.com';\n$subject = 'Test Subject';\n$message = 'A Message';\n$outFile = \"mailBasic7.out\";\n@unlink($outFile);\ntry {\n    mail($to, $subject, $message, ['*:foo1' => array('bar1')]);\n} catch (TypeError|ValueError $exception) {\n    echo get_class($exception) . \": \" . $exception->getMessage() . \"\\n\";\n}\ntry {\n    mail($to, $subject, $message, ['foo2:::' => array('bar1')]);\n} catch (TypeError|ValueError $exception) {\n    echo get_class($exception) . \": \" . $exception->getMessage() . \"\\n\";\n}\ntry {\n    mail($to, $subject, $message, ['foo3()' => array('bar1')]);\n} catch (TypeError|ValueError $exception) {\n    echo get_class($exception) . \": \" . $exception->getMessage() . \"\\n\";\n}\ntry {\n    mail($to, $subject, $message, ['foo4@' => array('bar1')]);\n} catch (TypeError|ValueError $exception) {\n    echo get_class($exception) . \": \" . $exception->getMessage() . \"\\n\";\n}\ntry {\n    mail($to, $subject, $message, ['foo5|' => array('bar1')]);\n} catch (TypeError|ValueError $exception) {\n    echo get_class($exception) . \": \" . $exception->getMessage() . \"\\n\";\n}\ntry {\n    mail($to, $subject, $message, [\"\\0foo6\" => array('bar1')]);\n} catch (TypeError|ValueError $exception) {\n    echo get_class($exception) . \": \" . $exception->getMessage() . \"\\n\";\n}\ntry {\n    mail($to, $subject, $message, [\"foo7\\0\" => array('bar1')]);\n} catch (TypeError|ValueError $exception) {\n    echo get_class($exception) . \": \" . $exception->getMessage() . \"\\n\";\n}\ntry {\n    mail($to, $subject, $message, [\"foo8\" => array()]);\n} catch (TypeError|ValueError $exception) {\n    echo get_class($exception) . \": \" . $exception->getMessage() . \"\\n\";\n}\nvar_dump(mail($to, $subject, $message, [\"foo9\" => '%&$#!']));\necho file_get_contents($outFile);\nunlink($outFile);\ntry {\n    mail($to, $subject, $message, [\"foo10\" => \"abc\\0\\tdef\"]);\n} catch (TypeError|ValueError $exception) {\n    echo get_class($exception) . \": \" . $exception->getMessage() . \"\\n\";\n}\n?>")).toMatchSnapshot();
  });
});
