// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/pdo_oci/tests/pdo_oci_templob_1.phpt
  it("PDO OCI: Test to verify all implicitly created temporary LOB are cleaned up", function () {
    expect(parser.parseCode("<?PHP\nrequire('ext/pdo/tests/pdo_test.inc');\n$db = PDOTest::test_factory('ext/pdo_oci/tests/common.phpt');\n$clobquery1 = \"select TO_CLOB('Hello World') CLOB_DATA from dual\";\n$clobquery2 = \"select TO_CLOB('Hello World') CLOB_DATA from dual\";\n$clobquery3 = \"select TO_CLOB('Hello World') CLOB_DATA from dual\";\n$clobquery4 = \"select TO_CLOB('Hello World') CLOB_DATA from dual\";\n$clobquery5 = \"select TO_CLOB('Hello World') CLOB_DATA from dual\";\n$clobquery6 = \"select TO_CLOB('Hello World') CLOB_DATA from dual\";\n$clobquery7 = \"select TO_CLOB('Hello World') CLOB_DATA from dual\";\n$clobquery8 = \"select TO_CLOB('Hello World') CLOB_DATA from dual\";\n$clobquery9 = \"select TO_CLOB('Hello World') CLOB_DATA from dual\";\n$clobquery10 = \"select TO_CLOB('Hello World') CLOB_DATA from dual\";\n$stmt= $db->prepare($clobquery1);\n$stmt->execute();\n$row = $stmt->fetch();\n$stmt= $db->prepare($clobquery2);\n$stmt->execute();\n$row = $stmt->fetch();\n$stmt= $db->prepare($clobquery3);\n$stmt->execute();\n$row = $stmt->fetch();\n$stmt= $db->prepare($clobquery4);\n$stmt->execute();\n$row = $stmt->fetch();\n$stmt= $db->prepare($clobquery5);\n$stmt->execute();\n$row = $stmt->fetch();\n$stmt= $db->prepare($clobquery6);\n$stmt->execute();\n$row = $stmt->fetch();\n$stmt= $db->prepare($clobquery7);\n$stmt->execute();\n$row = $stmt->fetch();\n$stmt= $db->prepare($clobquery8);\n$stmt->execute();\n$row = $stmt->fetch();\n$stmt= $db->prepare($clobquery9);\n$stmt->execute();\n$row = $stmt->fetch();\n$stmt= $db->prepare($clobquery10);\n$stmt->execute();\n$row = $stmt->fetch();\n$query1 = \"SELECT SYS_CONTEXT('USERENV', 'SID') SID FROM DUAL\";\n$stmt1 = $db->prepare($query1);\n$stmt1->execute();\n$row1 = $stmt1->fetch();\n$sid_value = $row1[0];\n$query2 = \"SELECT (CACHE_LOBS+NOCACHE_LOBS+ABSTRACT_LOBS) FROM V\\$TEMPORARY_LOBS WHERE SID = :SID_VALUE\";\n$stmt2 = $db->prepare($query2);\n$stmt2->bindParam(':SID_VALUE', $sid_value);\n$stmt2->execute();\n$row2 = $stmt2->fetch();\n/* 1 temporary LOB still exists in V$TEMPORARY_LOBS since the destructor of $stmt is not yet called by PHP */\nif ($row2[0] > 1)\n{\n  echo \"TEMP_LOB is not yet cleared!\" . $row2[0] . \"\\n\";\n}\nelse\n{\n  echo \"Success! All the temporary LOB in previously closed statements are properly cleaned.\\n\";\n}\n?>")).toMatchSnapshot();
  });
});
