// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/oci8/tests/bind_char_1.phpt
  it("SELECT oci_bind_by_name with SQLT_AFC aka CHAR", function () {
    expect(parser.parseCode("<?php\nrequire(__DIR__.'/connect.inc');\n// Initialization\n$stmtarray = array(\n    \"drop table bind_char_tab\",\n    \"create table bind_char_tab (id number, c1 char(10), c2 varchar2(10))\",\n    \"insert into bind_char_tab values (1, 'abc', NULL)\",\n    \"insert into bind_char_tab values (2, NULL, 'abc')\",\n    \"insert into bind_char_tab values (3, NULL, 'abc       ')\"\n);\noci8_test_sql_execute($c, $stmtarray);\n// Run Test\necho \"*** Non-null Data Tests against CHAR***\\n\";\n$bv1 = 'abc';\necho \"Test 1.1: Type: default.  Length: default\\n\";\n$s = oci_parse($c, \"select * from bind_char_tab where c1 = :bv\");\n$r = oci_bind_by_name($s, \":bv\", $bv1);\nif ($r)\n    do_e_q($s);\necho \"Test 1.2: Type: AFC.  Length: default\\n\";\n$r = oci_bind_by_name($s, \":bv\", $bv1, -1, SQLT_AFC);\nif ($r)\n    do_e_q($s);\necho \"Test 1.3: Type: AFC:  Length: 0\\n\";\n$r = oci_bind_by_name($s, \":bv\", $bv1, 0, SQLT_AFC);\nif ($r)\n    do_e_q($s);\necho \"Test 1.4: Type: AFC:  Length: strlen\\n\";\n$r = oci_bind_by_name($s, \":bv\", $bv1, strlen($bv1), SQLT_AFC);\nif ($r)\n    do_e_q($s);\necho \"Test 1.5: Type: AFC.  Length: strlen-1\\n\";\n$r = oci_bind_by_name($s, \":bv\", $bv1, strlen($bv1)-1, SQLT_AFC);\nif ($r)\n    do_e_q($s);\necho \"Test 1.6: Type: AFC.  Length: strlen+1\\n\";\n$r = oci_bind_by_name($s, \":bv\", $bv1, strlen($bv1)+1, SQLT_AFC);\nif ($r)\n    do_e_q($s);\necho \"\\n\\n*** NULL data tests against CHAR ***\\n\";\n$bv1 = null;\necho \"Test 2.1: Type: default.  Length: default\\n\";\n$s = oci_parse($c, \"select * from bind_char_tab where c1 = :bv\");\n$r = oci_bind_by_name($s, \":bv\", $bv1);\nif ($r)\n    do_e_q($s);\necho \"Test 2.2: Type: AFC.  Length: default\\n\";\n$r = oci_bind_by_name($s, \":bv\", $bv1, -1, SQLT_AFC);\nif ($r)\n    do_e_q($s);\necho \"Test 2.3: Type: AFC:  Length: 0\\n\";\n$r = oci_bind_by_name($s, \":bv\", $bv1, 0, SQLT_AFC);\nif ($r)\n    do_e_q($s);\necho \"Test 2.4: Type: AFC:  Length: strlen\\n\";\n$r = oci_bind_by_name($s, \":bv\", $bv1, 0, SQLT_AFC);\nif ($r)\n    do_e_q($s);\necho \"Test 2.5: Type: AFC.  Length: strlen-1\\n\";\n$r = oci_bind_by_name($s, \":bv\", $bv1, -1, SQLT_AFC);\nif ($r)\n    do_e_q($s);\necho \"Test 2.6: Type: AFC.  Length: strlen+1\\n\";\n$r = oci_bind_by_name($s, \":bv\", $bv1, 1, SQLT_AFC);\nif ($r)\n    do_e_q($s);\necho \"\\n\\n*** Non-null Data Tests against VARCHAR2***\\n\";\n$bv1 = 'abc';\necho \"Test 3.1: Type: default.  Length: default\\n\";\n$s = oci_parse($c, \"select * from bind_char_tab where c2 = :bv\");\n$r = oci_bind_by_name($s, \":bv\", $bv1);\nif ($r)\n    do_e_q($s);\necho \"Test 3.2: Type: AFC.  Length: default\\n\";\n$r = oci_bind_by_name($s, \":bv\", $bv1, -1, SQLT_AFC);\nif ($r)\n    do_e_q($s);\necho \"Test 3.3: Type: AFC:  Length: 0\\n\";\n$r = oci_bind_by_name($s, \":bv\", $bv1, 0, SQLT_AFC);\nif ($r)\n    do_e_q($s);\necho \"Test 3.4: Type: AFC:  Length: strlen\\n\";\n$r = oci_bind_by_name($s, \":bv\", $bv1, strlen($bv1), SQLT_AFC);\nif ($r)\n    do_e_q($s);\necho \"Test 3.5: Type: AFC.  Length: strlen-1\\n\";\n$r = oci_bind_by_name($s, \":bv\", $bv1, strlen($bv1)-1, SQLT_AFC);\nif ($r)\n    do_e_q($s);\necho \"Test 3.6: Type: AFC.  Length: strlen+1\\n\";\n$r = oci_bind_by_name($s, \":bv\", $bv1, strlen($bv1)+1, SQLT_AFC);\nif ($r)\n    do_e_q($s);\necho \"\\n\\n*** NULL data tests against VARCHAR2 ***\\n\";\n$bv1 = null;\necho \"Test 4.1: Type: default.  Length: default\\n\";\n$s = oci_parse($c, \"select * from bind_char_tab where c2 = :bv\");\n$r = oci_bind_by_name($s, \":bv\", $bv1);\nif ($r)\n    do_e_q($s);\necho \"Test 4.2: Type: AFC.  Length: default\\n\";\n$r = oci_bind_by_name($s, \":bv\", $bv1, -1, SQLT_AFC);\nif ($r)\n    do_e_q($s);\necho \"Test 4.3: Type: AFC:  Length: 0\\n\";\n$r = oci_bind_by_name($s, \":bv\", $bv1, 0, SQLT_AFC);\nif ($r)\n    do_e_q($s);\necho \"Test 4.4: Type: AFC:  Length: strlen\\n\";\n$r = oci_bind_by_name($s, \":bv\", $bv1, 0, SQLT_AFC);\nif ($r)\n    do_e_q($s);\necho \"Test 4.5: Type: AFC.  Length: strlen-1\\n\";\n$r = oci_bind_by_name($s, \":bv\", $bv1, -1, SQLT_AFC);\nif ($r)\n    do_e_q($s);\necho \"Test 4.6: Type: AFC.  Length: strlen+1\\n\";\n$r = oci_bind_by_name($s, \":bv\", $bv1, +1, SQLT_AFC);\nif ($r)\n    do_e_q($s);\nfunction do_e_q($s)\n{\n    echo \"  Querying:\\n\";\n    $r = @oci_execute($s);\n    if (!$r) {\n        $m = oci_error($s);\n        echo \"    Oci_execute error ORA-\".$m['code'].\" Exiting Query\\n\";\n        return;\n    }\n    while ($row = oci_fetch_array($s, OCI_ASSOC+OCI_RETURN_NULLS)) {\n        foreach ($row as $item) {\n            echo \"    :\" . $item . \":\\n\";\n        }\n    }\n}\n// Cleanup\n$stmtarray = array(\n    \"drop table bind_char_tab\"\n);\noci8_test_sql_execute($c, $stmtarray);\necho \"Done\\n\";\n?>")).toMatchSnapshot();
  });
});
