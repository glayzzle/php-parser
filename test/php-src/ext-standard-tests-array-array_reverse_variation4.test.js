// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/array/array_reverse_variation4.phpt
  it("Test array_reverse() function : usage variations - assoc. array with diff. keys for 'array' argument", function () {
    expect(parser.parseCode("<?php\n/*\n * Testing the functionality of array_reverse() by giving associative arrays with different\n * keys for $array argument\n*/\necho \"*** Testing array_reverse() : usage variations ***\\n\";\n//get an unset variable\n$unset_var = 10;\nunset ($unset_var);\n//get a resource variable\n$fp = fopen(__FILE__, \"r\");\n//get a class\nclass classA{\n  public function __toString(){\n    return \"Class A object\";\n  }\n}\n// get a heredoc string\n$heredoc = <<<EOT\nHello world\nEOT;\n// initializing the array\n$arrays = array (\n       // empty array\n/*1*/  array(),\n       // arrays with integer keys\n       array(0 => \"0\"),\n       array(1 => \"1\"),\n       array(1 => \"1\", 2 => \"2\", 3 => \"3\", 4 => \"4\"),\n       // arrays with string keys\n       array(\"\\tHello\" => 111, \"re\\td\" => \"color\", \"\\v\\fworld\" => 2.2, \"pen\\n\" => 33),\n/*8*/  array(\"\\tHello\" => 111, \"re\\td\" => \"color\", \"\\v\\fworld\" => 2.2, \"pen\\n\" => 33),\n       array(\"hello\", $heredoc => \"string\"), // heredoc\n       // array with object, unset variable and resource variable\n       array(@$unset_var => \"hello\", $fp => 'resource'),\n       // array with mixed values\n/*11*/ array('hello' => 1, \"fruit\" => 2.2, $fp => 'resource', 133 => \"int\", @$unset_var => \"unset\", $heredoc => \"heredoc\")\n);\n// loop through the various elements of $arrays to test array_reverse()\n$iterator = 1;\nforeach($arrays as $array) {\n  echo \"-- Iteration $iterator --\\n\";\n  // with default argument\n  echo \"- default argument -\\n\";\n  var_dump( array_reverse($array) );\n  // with $preserve_keys argument\n  echo \"- \\$preserve keys = true -\\n\";\n  var_dump( array_reverse($array, true) );\n  echo \"- \\$preserve_keys = false -\\n\";\n  var_dump( array_reverse($array, false) );\n  $iterator++;\n};\n// close the file resource used\nfclose($fp);\necho \"Done\";\n?>")).toMatchSnapshot();
  });
});
