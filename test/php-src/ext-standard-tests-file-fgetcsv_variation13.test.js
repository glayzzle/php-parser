// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/file/fgetcsv_variation13.phpt
  it("Test fgetcsv() : usage variations - with line without any csv fields", function () {
    expect(parser.parseCode("<?php\n/* Testing fgetcsv() to read a line from a file which doesn't have any CSV field */\necho \"*** Testing fgetcsv() : reading the line which is without csv fields ***\\n\";\n$filename = __DIR__ . '/fgetcsv_variation13.tmp';\n@unlink($filename);\n$file_modes = array (\"r\",\"rb\", \"rt\", \"r+\", \"r+b\", \"r+t\",\n                     \"a+\", \"a+b\", \"a+t\",\n                     \"w+\", \"w+b\", \"w+t\",\n                     \"x+\", \"x+b\", \"x+t\");\n$loop_counter = 1;\n  for($mode_counter = 0; $mode_counter < count($file_modes); $mode_counter++) {\n    // create the file and add the content with has csv fields\n    if ( strstr($file_modes[$mode_counter], \"r\") ) {\n      $file_handle = fopen($filename, \"w\");\n    } else {\n      $file_handle = fopen($filename, $file_modes[$mode_counter] );\n    }\n    if ( !$file_handle ) {\n      echo \"Error: failed to create file $filename!\\n\";\n      exit();\n    }\n    // write line of text\n    fwrite($file_handle, \"This is line of text without csv fields\\n\");\n    // close the file if the mode to be used is read mode  and re-open using read mode\n    // else rewind the file pointer to beginning of the file\n    if ( strstr($file_modes[$mode_counter], \"r\" ) ) {\n      fclose($file_handle);\n      $file_handle = fopen($filename, $file_modes[$mode_counter]);\n    } else {\n      // rewind the file pointer to bof\n      rewind($file_handle);\n    }\n    echo \"\\n-- Testing fgetcsv() with file opened using $file_modes[$mode_counter] mode --\\n\";\n    // read the line which is without csv fields, provide delimiter and see the working of fgetcsv\n    $fp_pos = ftell($file_handle);\n    var_dump( fgetcsv($file_handle) );\n    // check the file pointer position and if eof\n    var_dump( ftell($file_handle) );\n    var_dump( feof($file_handle) );\n    // close the file\n    fclose($file_handle);\n    //delete file\n    unlink($filename);\n  } //end of mode loop\necho \"Done\\n\";\n?>")).toMatchSnapshot();
  });
});
