// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/bz2/tests/002.phpt
  it("bzopen() using fd opened in wrong mode", function () {
    expect(parser.parseCode("<?php\n@unlink(\"bz_open_002.txt\");\n$fp = fopen(\"bz_open_002.txt\", \"w\");\nvar_dump(bzopen($fp, \"w\"));\n$fp = fopen(\"bz_open_002.txt\", \"r\");\nvar_dump(bzopen($fp, \"r\"));\n@unlink(\"bz_open_002.txt\");\n$fp = fopen(\"bz_open_002.txt\", \"x\");\nvar_dump(bzopen($fp, \"w\"));\n@unlink(\"bz_open_002.txt\");\n$fp = fopen(\"bz_open_002.txt\", \"x\");\nvar_dump(bzopen($fp, \"r\"));\n$fp = fopen(\"bz_open_002.txt\", \"rb\");\nvar_dump(bzopen($fp, \"r\"));\n$fp = fopen(\"bz_open_002.txt\", \"wb\");\nvar_dump(bzopen($fp, \"w\"));\n$fp = fopen(\"bz_open_002.txt\", \"br\");\ntry {\n    var_dump(bzopen($fp, \"r\"));\n} catch (\\TypeError $e) {\n    echo $e->getMessage() . \\PHP_EOL;\n}\n$fp = fopen(\"bz_open_002.txt\", \"br\");\ntry {\n    var_dump(bzopen($fp, \"w\"));\n} catch (\\TypeError $e) {\n    echo $e->getMessage() . \\PHP_EOL;\n}\n$fp = fopen(\"bz_open_002.txt\", \"r\");\nvar_dump(bzopen($fp, \"w\"));\n$fp = fopen(\"bz_open_002.txt\", \"w\");\nvar_dump(bzopen($fp, \"r\"));\n$fp = fopen(\"bz_open_002.txt\", \"rw\");\nvar_dump(bzopen($fp, \"w\"));\n$fp = fopen(\"bz_open_002.txt\", \"rw\");\nvar_dump(bzopen($fp, \"r\"));\n$fp = fopen(\"bz_open_002.txt\", \"wr\");\nvar_dump(bzopen($fp, \"w\"));\n$fp = fopen(\"bz_open_002.txt\", \"wr\");\nvar_dump(bzopen($fp, \"r\"));\n$fp = fopen(\"bz_open_002.txt\", \"r+\");\nvar_dump(bzopen($fp, \"r\"));\n$fp = fopen(\"bz_open_002.txt\", \"r+\");\nvar_dump(bzopen($fp, \"w\"));\n$fp = fopen(\"bz_open_002.txt\", \"w+\");\nvar_dump(bzopen($fp, \"r\"));\n$fp = fopen(\"bz_open_002.txt\", \"w+\");\nvar_dump(bzopen($fp, \"w\"));\n$fp = fopen(\"bz_open_002.txt\", \"a\");\nvar_dump(bzopen($fp, \"r\"));\n$fp = fopen(\"bz_open_002.txt\", \"a\");\nvar_dump(bzopen($fp, \"w\"));\n@unlink(\"bz_open_002.txt\");\n?>")).toMatchSnapshot();
  });
});
