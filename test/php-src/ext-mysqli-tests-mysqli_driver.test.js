// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/mysqli_driver.phpt
  it("mysqli_driver class", function () {
    expect(parser.parseCode("<?php\nrequire_once('connect.inc');\nif (!is_object($driver = new mysqli_driver())) {\n    printf(\"[001] Failed to create mysqli_driver object\\n\");\n}\n$client_info = mysqli_get_client_info();\nif (($tmp = $driver->client_info) !== $client_info) {\n    printf(\"[002] Expecting %s/%s, got %s/%s\\n\",\n        gettype($client_info), $client_info,\n        gettype($tmp), $tmp);\n}\n$client_version = mysqli_get_client_version();\nif (($tmp = $driver->client_version) !== $client_version) {\n    printf(\"[003] Expecting %s/%s, got %s/%s\\n\",\n    gettype($client_version), $client_version,\n    gettype($tmp), $tmp);\n}\n$all_modes = [\n    MYSQLI_REPORT_ALL,\n    MYSQLI_REPORT_STRICT,\n    MYSQLI_REPORT_STRICT|MYSQLI_REPORT_ERROR,\n    MYSQLI_REPORT_STRICT|MYSQLI_REPORT_INDEX,\n    MYSQLI_REPORT_ERROR,\n    MYSQLI_REPORT_ERROR|MYSQLI_REPORT_INDEX,\n    MYSQLI_REPORT_INDEX,\n    MYSQLI_REPORT_OFF\n];\n$report_mode = $driver->report_mode;\nif (!is_int($report_mode)) {\n    printf(\"[005] Expecting int/any, got %s/%s\\n\",\n    gettype($report_mode), $report_mode);\n}\nif (!in_array($report_mode, $all_modes)) {\n    printf(\"[006] Illegal report mode returned? Got %s, expected %s\\n\",\n        $report_mode, implode(', ', $all_modes));\n}\n$driver->report_mode = MYSQLI_REPORT_STRICT;\n$ok = false;\ntry {\n    if ($link = my_mysqli_connect($host, $user . 'unknown_really', $passwd . 'non_empty', $db, $port, $socket)) {\n        printf(\"[007] Can connect to the server using host=%s, user=%s, passwd=***non_empty, dbname=%s, port=%s, socket=%s\\n\",\n        $host, $user . 'unknown_really', $db, $port, $socket);\n    }\n    mysqli_close($link);\n} catch (mysqli_sql_exception $e) {\n    $ok = true;\n    if ('' == $e->getMessage()) {\n        printf(\"[008] getMessage() has returned an empty string.\\n\");\n    }\n    if ('' == $e->getCode()) {\n        printf(\"[009] getCode() has returned an empty string.\\n\");\n    }\n    if ('' == $e->getFile()) {\n        printf(\"[010] getFile() has returned an empty string.\\n\");\n    }\n    if ('' == $e->getLine()) {\n        printf(\"[011] getLine() has returned an empty string.\\n\");\n    }\n    if ([] == $e->getTrace()) {\n        printf(\"[012] getTrace() has returned an empty array.\\n\");\n    }\n    if ('' == $e->getTraceAsString()) {\n        printf(\"[013] getTraceAsString() has returned an empty string.\\n\");\n    }\n    if ('' == $e->__toString()) {\n        printf(\"[014] __toString() has returned an empty string.\\n\");\n    }\n}\nif (!$ok) {\n    printf(\"[015] Error reporting mode has not been switched to exceptions and or no exception thrown\\n\");\n}\n$driver->report_mode = MYSQLI_REPORT_OFF;\nif (!$link = my_mysqli_connect($host, $user, $passwd, $db, $port, $socket)) {\n    printf(\"[016] [%d] %s\\n\", mysqli_connect_errno(), mysqli_connect_error());\n}\nmysqli_query($link, \"NO_SQL\");\nmysqli_close($link);\n$driver->report_mode = MYSQLI_REPORT_ERROR;\nif (!$link = my_mysqli_connect($host, $user, $passwd, $db, $port, $socket)) {\n    printf(\"[017] [%d] %s\\n\", mysqli_connect_errno(), mysqli_connect_error());\n}\nmysqli_query($link, \"NO_SQL\");\nmysqli_close($link);\nif (MYSQLI_REPORT_ERROR !== $driver->report_mode) {\n    printf(\"[018] Error reporting mode should be different\\n\");\n}\n/* TODO - more report testing should go in here, but it's not really documented what behaviour is expected */\n$driver->report_mode = $report_mode;\n$reconnect = $driver->reconnect;\nif (!is_bool($reconnect)) {\n    printf(\"[019] Expecting boolean/any, got %s/%s\\n\",\n    gettype($reconnect), $reconnect);\n}\n/* pointless, but I need more documentation */\n$driver->reconnect = true;\n$driver->reconnect = false;\n$driver->reconnect = $reconnect;\nprint \"done!\";\n?>")).toMatchSnapshot();
  });
});
