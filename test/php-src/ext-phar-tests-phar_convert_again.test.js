// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/phar/tests/phar_convert_again.phpt
  it("Phar::conversion to other formats", function () {
    expect(parser.parseCode("<?php\n$fname = __DIR__ . '/' . basename(__FILE__, '.php') . '.phar';\n$fname2 = __DIR__ . '/' . basename(__FILE__, '.php') . '2.tbz';\n$pname = 'phar://' . $fname;\n$stub = '<?php echo \"first stub\\n\"; __HALT_COMPILER(); ?>';\n$file = $stub;\n$files = array();\n$files['a'] = 'a';\n$files['b'] = 'b';\n$files['c'] = 'c';\ninclude 'files/phar_test.inc';\n$phar = new Phar($fname);\n$zip = $phar->convertToData(Phar::ZIP);\necho $zip->getPath() . \"\\n\";\n$tgz = $phar->convertToData(Phar::TAR, Phar::GZ);\necho $tgz->getPath() . \"\\n\";\n$tbz = $phar->convertToData(Phar::TAR, Phar::BZ2);\necho $tbz->getPath() . \"\\n\";\ntry {\n$phar = $tbz->convertToExecutable(Phar::PHAR, Phar::NONE);\n} catch (Exception $e) {\necho $e->getMessage() . \"\\n\";\n}\ncopy($tbz->getPath(), $fname2);\n$tbz = new PharData($fname2);\n$phar = $tbz->convertToExecutable(Phar::PHAR, Phar::NONE);\necho $phar->getPath() . \"\\n\";\n$phar['a'] = 'hi';\n$phar['a']->setMetadata('hi');\n$zip = $phar->convertToExecutable(Phar::ZIP);\necho $zip->getPath() . \"\\n\";\necho $zip['a']->getMetadata() . \"\\n\";\n$data = $zip->convertToData();\necho $data->getPath() . \"\\n\";\n// extra code coverage\ntry {\n$data->setStub('hi');\n} catch (Exception $e) {\necho $e->getMessage() . \"\\n\";\n}\ntry {\n$data->setDefaultStub();\n} catch (Exception $e) {\necho $e->getMessage() . \"\\n\";\n}\ntry {\n$data->setAlias('hi');\n} catch (Exception $e) {\necho $e->getMessage() . \"\\n\";\n}\n$tar = $phar->convertToExecutable(Phar::TAR);\necho $tar->getPath() . \"\\n\";\n$data = $tar->convertToData();\necho $data->getPath() . \"\\n\";\n$tgz = $tar->convertToExecutable(null, Phar::GZ);\necho $tgz->getPath() . \"\\n\";\ntry {\n$tgz->convertToExecutable(25);\n} catch (Exception $e) {\necho $e->getMessage() . \"\\n\";\n}\ntry {\n$tgz->convertToExecutable(Phar::ZIP, Phar::GZ);\n} catch (Exception $e) {\necho $e->getMessage() . \"\\n\";\n}\ntry {\n$tgz->convertToExecutable(Phar::ZIP, Phar::BZ2);\n} catch (Exception $e) {\necho $e->getMessage() . \"\\n\";\n}\ntry {\n$phar->convertToData();\n} catch (Exception $e) {\necho $e->getMessage() . \"\\n\";\n}\ntry {\n$tgz->convertToData(Phar::PHAR);\n} catch (Exception $e) {\necho $e->getMessage() . \"\\n\";\n}\ntry {\n$tgz->convertToData(25);\n} catch (Exception $e) {\necho $e->getMessage() . \"\\n\";\n}\ntry {\n$tgz->convertToData(Phar::ZIP, Phar::GZ);\n} catch (Exception $e) {\necho $e->getMessage() . \"\\n\";\n}\ntry {\n$tgz->convertToData(Phar::ZIP, Phar::BZ2);\n} catch (Exception $e) {\necho $e->getMessage() . \"\\n\";\n}\ntry {\n$tgz->convertToExecutable(Phar::TAR, 25);\n} catch (Exception $e) {\necho $e->getMessage() . \"\\n\";\n}\ntry {\n$tgz->convertToData(Phar::TAR, 25);\n} catch (Exception $e) {\necho $e->getMessage() . \"\\n\";\n}\n// extra code coverage\ntry {\n$data->setStub('hi');\n} catch (Exception $e) {\necho $e->getMessage() . \"\\n\";\n}\ntry {\n$data->setAlias('hi');\n} catch (Exception $e) {\necho $e->getMessage() . \"\\n\";\n}\ntry {\n$data->setDefaultStub();\n} catch (Exception $e) {\necho $e->getMessage() . \"\\n\";\n}\ntry {\n$tgz->convertToData(Phar::TAR, Phar::GZ, '.phar.tgz.oops');\n} catch (Exception $e) {\necho $e->getMessage() . \"\\n\";\n}\ntry {\n$phar->convertToExecutable(Phar::TAR, Phar::GZ, '.tgz.oops');\n} catch (Exception $e) {\necho $e->getMessage() . \"\\n\";\n}\ntry {\n$tgz->convertToData(Phar::TAR, Phar::GZ, '.phar/.tgz.oops');\n} catch (Exception $e) {\necho $e->getMessage() . \"\\n\";\n}\n?>")).toMatchSnapshot();
  });
});
