// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/array/asort_variation8.phpt
  it("Test asort() function : usage variations - sort array with diff. sub arrays, 'sort_flags' as default/SORT_REGULAR", function () {
    expect(parser.parseCode("<?php\n/*\n * testing asort() by providing arrays contains sub arrays for $array argument with flowing flag values\n * flag value as default\n * SORT_REGULAR - compare items normally\n * Note: arrays are sorted based on total count of elements inside it, when all the elements are arrays\n*/\necho \"*** Testing asort() : usage variations ***\\n\";\n// array of arrays\n$various_arrays = array (\n  // null array\n  \"array[0]\" => array(),\n  // array contains null sub array\n  \"array[1]\" => array( \"sub_array[1][0]\" => array() ),\n  // array of arrays along with some values\n  \"array[2]\" => array(\"data[2,0]\" => 44, \"data[2,1]\" => 11, \"sub_array[2][0] \" => array(64,61) ),\n  // array contains sub arrays\n  \"array[3]\" => array ( \"sub_array[3][0]\" => array(33,-5,6), \"sub_array[3][1]\" => array(11),\n                        \"sub_array[3][2]\" => array(22,-55), \"sub_array[3][3]\" => array() )\n);\n$count = 1;\necho \"\\n-- Testing asort() by supplying various arrays containing sub arrays --\\n\";\n// loop through to test asort() with different arrays\nforeach ($various_arrays as $array) {\n  echo \"\\n-- Iteration $count --\\n\";\n  // testing asort() function by supplying different arrays, flag value is default\n  echo \"- With default sort_flag -\\n\";\n  $temp_array = $array;\n  var_dump(asort($temp_array) );\n  var_dump($temp_array);\n  // testing asort() function by supplying different arrays, flag value = SORT_REGULAR\n  echo \"- Sort_flag = SORT_REGULAR -\\n\";\n  $temp_array = $array;\n  var_dump(asort($temp_array, SORT_REGULAR) );\n  var_dump($temp_array);\n  $count++;\n}\necho \"Done\\n\";\n?>")).toMatchSnapshot();
  });
});
