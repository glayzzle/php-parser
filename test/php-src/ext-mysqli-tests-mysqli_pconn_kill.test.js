// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/mysqli_pconn_kill.phpt
  it("Killing a persistent connection.", function () {
    expect(parser.parseCode("<?php\n    require_once(\"connect.inc\");\n    require_once(\"table.inc\");\n    $host = 'p:' . $host;\n    if (!$plink = my_mysqli_connect($host, $user, $passwd, $db, $port, $socket))\n        printf(\"[001] Cannot connect to the server using host=%s, user=%s, passwd=***, dbname=%s, port=%s, socket=%s\\n\",\n            $host, $user, $db, $port, $socket);\n    // get the thread ids of the two connections...\n    $thread_id = mysqli_thread_id($link);\n    $pthread_id = mysqli_thread_id($plink);\n    if (!$res = mysqli_query($link, 'SHOW FULL PROCESSLIST'))\n        printf(\"[002] Cannot get processlist, [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    $running_threads = array();\n    while ($row = mysqli_fetch_assoc($res))\n        $running_threads[$row['Id']] = $row;\n    mysqli_free_result($res);\n    if (count($running_threads) < 2)\n        printf(\"[003] Processlist is too short, [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    if (!isset($running_threads[$thread_id]))\n        printf(\"[004] Cannot find thread id of the regular link, [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    if (!isset($running_threads[$pthread_id]))\n        printf(\"[005] Cannot find thread id of the persistent link, [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    // Kill the persistent connection - don't use mysqli_kill, mysqlnd will catch that...\n    if (!mysqli_query($link, sprintf('KILL %d', $pthread_id)))\n        printf(\"[006] Cannot kill persistent connection, [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    mysqli_close($plink);\n    // Give the server think-time to kill the pthread\n    sleep(1);\n    if (!$res = mysqli_query($link, 'SHOW FULL PROCESSLIST'))\n        printf(\"[007] Cannot get processlist, [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    $running_threads2 = array();\n    while ($row = mysqli_fetch_assoc($res))\n        $running_threads2[$row['Id']] = $row;\n    mysqli_free_result($res);\n    if (isset($running_threads2[$pthread_id]))\n        printf(\"[008] Thread of the persistent connection should have been gone, [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    if (!isset($running_threads2[$thread_id]))\n        printf(\"[009] Thread of the regular connection should be still there, [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    // On PHP side this should do nothing. PHP should not try to close the connection or something.\n    try {\n        mysqli_close($plink);\n    } catch (Error $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    if (!$plink = @my_mysqli_connect($host, $user, $passwd, $db, $port, $socket))\n        printf(\"[011] Cannot connect to the server using host=%s, user=%s, passwd=***, dbname=%s, port=%s, socket=%s\\n\",\n            $host, $user, $db, $port, $socket);\n    if (!$res3 = @mysqli_query($plink, 'SELECT id FROM test ORDER BY id LIMIT 1')) {\n        printf(\"[012] New persistent connection cannot execute queries, [%d] %s\\n\", @mysqli_errno($plink), @mysqli_error($plink));\n    }\n    @mysqli_free_result($res3);\n    @mysqli_close($plink);\n    mysqli_close($link);\n    // remove the \"p:<host>\" from the host variable\n    $host = substr($host, 2);\n    if (!$link = my_mysqli_connect($host, $user, $passwd, $db, $port, $socket))\n        printf(\"[013] Cannot connect to the server using host=%s, user=%s, passwd=***, dbname=%s, port=%s, socket=%s\\n\",\n            $host, $user, $db, $port, $socket);\n    if (!$res4 = mysqli_query($link, 'SELECT id FROM test ORDER BY id LIMIT 1'))\n        printf(\"[014] New regular connection cannot execute queries, [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    mysqli_free_result($res4);\n    mysqli_close($link);\n    print \"done!\";\n?>")).toMatchSnapshot();
  });
});
