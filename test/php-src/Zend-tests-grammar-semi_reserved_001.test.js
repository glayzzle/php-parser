// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // Zend/tests/grammar/semi_reserved_001.phpt
  it("Test semi-reserved words as class methods", function () {
    expect(parser.parseCode("<?php\nclass Obj\n{\n    function empty(){ echo __METHOD__, PHP_EOL; }\n    function callable(){ echo __METHOD__, PHP_EOL; }\n    function class(){ echo __METHOD__, PHP_EOL; }\n    function trait(){ echo __METHOD__, PHP_EOL; }\n    function extends(){ echo __METHOD__, PHP_EOL; }\n    function implements(){ echo __METHOD__, PHP_EOL; }\n    function static(){ echo __METHOD__, PHP_EOL; }\n    function abstract(){ echo __METHOD__, PHP_EOL; }\n    function final(){ echo __METHOD__, PHP_EOL; }\n    function public(){ echo __METHOD__, PHP_EOL; }\n    function protected(){ echo __METHOD__, PHP_EOL; }\n    function private(){ echo __METHOD__, PHP_EOL; }\n    function const(){ echo __METHOD__, PHP_EOL; }\n    function enddeclare(){ echo __METHOD__, PHP_EOL; }\n    function endfor(){ echo __METHOD__, PHP_EOL; }\n    function endforeach(){ echo __METHOD__, PHP_EOL; }\n    function endif(){ echo __METHOD__, PHP_EOL; }\n    function endwhile(){ echo __METHOD__, PHP_EOL; }\n    function and(){ echo __METHOD__, PHP_EOL; }\n    function global(){ echo __METHOD__, PHP_EOL; }\n    function goto(){ echo __METHOD__, PHP_EOL; }\n    function instanceof(){ echo __METHOD__, PHP_EOL; }\n    function insteadof(){ echo __METHOD__, PHP_EOL; }\n    function interface(){ echo __METHOD__, PHP_EOL; }\n    function namespace(){ echo __METHOD__, PHP_EOL; }\n    function new(){ echo __METHOD__, PHP_EOL; }\n    function or(){ echo __METHOD__, PHP_EOL; }\n    function xor(){ echo __METHOD__, PHP_EOL; }\n    function try(){ echo __METHOD__, PHP_EOL; }\n    function use(){ echo __METHOD__, PHP_EOL; }\n    function var(){ echo __METHOD__, PHP_EOL; }\n    function exit(){ echo __METHOD__, PHP_EOL; }\n    function list(){ echo __METHOD__, PHP_EOL; }\n    function clone(){ echo __METHOD__, PHP_EOL; }\n    function include(){ echo __METHOD__, PHP_EOL; }\n    function include_once(){ echo __METHOD__, PHP_EOL; }\n    function throw(){ echo __METHOD__, PHP_EOL; }\n    function array(){ echo __METHOD__, PHP_EOL; }\n    function print(){ echo __METHOD__, PHP_EOL; }\n    function echo(){ echo __METHOD__, PHP_EOL; }\n    function readonly(){ echo __METHOD__, PHP_EOL; }\n    function require(){ echo __METHOD__, PHP_EOL; }\n    function require_once(){ echo __METHOD__, PHP_EOL; }\n    function return(){ echo __METHOD__, PHP_EOL; }\n    function else(){ echo __METHOD__, PHP_EOL; }\n    function elseif(){ echo __METHOD__, PHP_EOL; }\n    function default(){ echo __METHOD__, PHP_EOL; }\n    function break(){ echo __METHOD__, PHP_EOL; }\n    function continue(){ echo __METHOD__, PHP_EOL; }\n    function switch(){ echo __METHOD__, PHP_EOL; }\n    function yield(){ echo __METHOD__, PHP_EOL; }\n    function function(){ echo __METHOD__, PHP_EOL; }\n    function fn(){ echo __METHOD__, PHP_EOL; }\n    function if(){ echo __METHOD__, PHP_EOL; }\n    function endswitch(){ echo __METHOD__, PHP_EOL; }\n    function finally(){ echo __METHOD__, PHP_EOL; }\n    function for(){ echo __METHOD__, PHP_EOL; }\n    function foreach(){ echo __METHOD__, PHP_EOL; }\n    function declare(){ echo __METHOD__, PHP_EOL; }\n    function case(){ echo __METHOD__, PHP_EOL; }\n    function do(){ echo __METHOD__, PHP_EOL; }\n    function while(){ echo __METHOD__, PHP_EOL; }\n    function as(){ echo __METHOD__, PHP_EOL; }\n    function catch(){ echo __METHOD__, PHP_EOL; }\n    function die(){ echo __METHOD__, PHP_EOL; }\n    function self(){ echo __METHOD__, PHP_EOL; }\n    function parent(){ echo __METHOD__, PHP_EOL; }\n    function isset(){ echo __METHOD__, PHP_EOL; }\n    function unset(){ echo __METHOD__, PHP_EOL; }\n    function __CLASS__(){ echo __METHOD__, PHP_EOL; }\n    function __TRAIT__(){ echo __METHOD__, PHP_EOL; }\n    function __FUNCTION__(){ echo __METHOD__, PHP_EOL; }\n    function __METHOD__(){ echo __METHOD__, PHP_EOL; }\n    function __LINE__(){ echo __METHOD__, PHP_EOL; }\n    function __FILE__(){ echo __METHOD__, PHP_EOL; }\n    function __DIR__(){ echo __METHOD__, PHP_EOL; }\n    function __NAMESPACE__(){ echo __METHOD__, PHP_EOL; }\n}\n$obj = new Obj;\n$obj->empty();\n$obj->callable();\n$obj->class();\n$obj->trait();\n$obj->extends();\n$obj->implements();\n$obj->static();\n$obj->abstract();\n$obj->final();\n$obj->public();\n$obj->protected();\n$obj->private();\n$obj->const();\n$obj->enddeclare();\n$obj->endfor();\n$obj->endforeach();\n$obj->endif();\n$obj->endwhile();\n$obj->and();\n$obj->global();\n$obj->goto();\n$obj->instanceof();\n$obj->insteadof();\n$obj->interface();\n$obj->namespace();\n$obj->new();\n$obj->or();\n$obj->xor();\n$obj->try();\n$obj->use();\n$obj->var();\n$obj->exit();\n$obj->list();\n$obj->clone();\n$obj->include();\n$obj->include_once();\n$obj->throw();\n$obj->array();\n$obj->print();\n$obj->echo();\n$obj->readonly();\n$obj->require();\n$obj->require_once();\n$obj->return();\n$obj->else();\n$obj->elseif();\n$obj->default();\n$obj->break();\n$obj->continue();\n$obj->switch();\n$obj->yield();\n$obj->function();\n$obj->fn();\n$obj->if();\n$obj->endswitch();\n$obj->finally();\n$obj->for();\n$obj->foreach();\n$obj->declare();\n$obj->case();\n$obj->do();\n$obj->while();\n$obj->as();\n$obj->catch();\n$obj->die();\n$obj->self();\n$obj->parent();\n$obj->isset();\n$obj->unset();\n$obj->__CLASS__();\n$obj->__TRAIT__();\n$obj->__FUNCTION__();\n$obj->__METHOD__();\n$obj->__LINE__();\n$obj->__FILE__();\n$obj->__DIR__();\n$obj->__NAMESPACE__();\necho \"\\nDone\\n\";\n?>")).toMatchSnapshot();
  });
});
