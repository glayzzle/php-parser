// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/filter/tests/filter_ipv4_rfc6890.phpt
  it("Bug #71745 FILTER_FLAG_NO_RES_RANGE does not cover whole 127.0.0.0/8 range", function () {
    expect(parser.parseCode("<?php\n//https://tools.ietf.org/html/rfc6890#section-2.1\n$privateRanges = array();\n// 10.0.0.0/8\n$privateRanges['10.0.0.0/8'] = array('10.0.0.0', '10.255.255.255');\n// 169.254.0.0/16\n$privateRanges['168.254.0.0/16'] = array('169.254.0.0', '169.254.255.255');\n// 172.16.0.0/12\n$privateRanges['172.16.0.0/12'] = array('172.16.0.0', '172.31.0.0');\n// 192.168.0.0/16\n$privateRanges['192.168.0.0/16'] = array('192.168.0.0', '192.168.255.255');\nforeach ($privateRanges as $key => $range) {\n    list($min, $max) = $range;\n    var_dump($key);\n    var_dump(filter_var($min, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4 | FILTER_FLAG_NO_PRIV_RANGE));\n    var_dump(filter_var($max, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4 | FILTER_FLAG_NO_PRIV_RANGE));\n}\n$reservedRanges = array();\n// 0.0.0.0/8\n$reservedRanges['0.0.0.0/8'] = array('0.0.0.0', '0.255.255.255');\n// 10.0.0.0/8\n$reservedRanges['10.0.0.0/8'] = array('10.0.0.0', '10.255.255.255');\n// 100.64.0.0/10\n$reservedRanges['10.64.0.0/10'] = array('100.64.0.0', '100.127.255.255');\n// 127.0.0.0/8\n$reservedRanges['127.0.0.0/8'] = array('127.0.0.0', '127.255.255.255');\n// 169.254.0.0/16\n$reservedRanges['169.254.0.0/16'] = array('169.254.0.0', '169.254.255.255');\n// 172.16.0.0/12\n$reservedRanges['172.16.0.0/12'] = array('172.16.0.0', '172.31.0.0');\n// 192.0.0.0/24\n$reservedRanges['192.0.0.0/24'] = array('192.0.0.0', '192.0.0.255');\n// 192.0.0.0/29\n$reservedRanges['192.0.0.0/29'] = array('192.0.0.0', '192.0.0.7');\n// 192.0.2.0/24\n$reservedRanges['192.0.2.0/24'] = array('192.0.2.0', '192.0.2.255');\n// 198.18.0.0/15\n$reservedRanges['198.18.0.0/15'] = array('198.18.0.0', '198.19.255.255');\n// 198.51.100.0/24\n$reservedRanges['198.51.100.0/24'] = array('198.51.100.0', '198.51.100.255');\n// 192.88.99.0/24\n$reservedRanges['192.88.99.0/24'] = array('192.88.99.0', '192.88.99.255');\n// 192.168.0.0/16\n$reservedRanges['192.168.0.0/16'] = array('192.168.0.0', '192.168.255.255');\n// 203.0.113.0/24\n$reservedRanges['203.0.113.0/24'] = array('203.0.113.0', '203.0.113.255');\n// 240.0.0.0/4 + 255.255.255.255/32\n$reservedRanges['240.0.0.0/4'] = array('224.0.0.0', '255.255.255.255');\nforeach ($reservedRanges as $key => $range) {\n    list($min, $max) = $range;\n    var_dump($key);\n    var_dump(filter_var($min, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4 | FILTER_FLAG_NO_RES_RANGE));\n    var_dump(filter_var($max, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4 | FILTER_FLAG_NO_RES_RANGE));\n}\n?>")).toMatchSnapshot();
  });
});
