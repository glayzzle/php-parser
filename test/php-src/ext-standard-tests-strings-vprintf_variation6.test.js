// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/strings/vprintf_variation6.phpt
  it("Test vprintf() function : usage variations - float formats with non-float values", function () {
    expect(parser.parseCode("<?php\n/*\n * Test vprintf() when different float formats and non-float values are passed to\n * the '$format' and '$args' arguments of the function\n*/\necho \"*** Testing vprintf() : float formats and non-float values ***\\n\";\n// defining array of float formats\n$formats =\n    '%f %+f %-f\n    %lf %4f %-4f\n    %10.4f %-10.4f %04f %04.4f\n    %\\'#2f %\\'2f %\\'$2f %\\'_2f\n    %3$f %4$f %1$f %2$f';\n// Arrays of non float values for the format defined in $format.\n// Each sub array contains non float values which correspond to each format in $format\n$args_array = array(\n  // array of int values\n  array(2, -2, +2,\n        123456, -12346789, +12346789,\n        123200, +20000, -40000, 22212,\n        12345780, 1211111, -12111111, -12345634,\n        3, +4, 1,-2 ),\n  // array of strings\n  array(\" \", ' ', 'hello',\n        '123hello', '-123hello', '+123hello',\n        \"\\12345678hello\", \"-\\12345678hello\", '0123456hello', 'h123456ello',\n        \"1234hello\", \"hello\\0world\", \"NULL\", \"true\",\n        \"3\", \"4\", '1', '2'),\n  // different arrays\n  array( array(0), array(1, 2), array(-1, -1),\n         array(\"123\"), array('-123'), array(\"-123\"),\n         array(true), array(false), array(TRUE), array(FALSE),\n         array(\"123hello\"), array(\"1\", \"2\"), array('123hello'), array(12=>\"12twelve\"),\n         array(\"3\"), array(\"4\"), array(\"1\"), array(\"2\") ),\n  // array of boolean data\n  array( true, TRUE, false,\n         TRUE, FALSE, 1,\n         true, false, TRUE, FALSE,\n         0, 1, 1, 0,\n         1, TRUE, 0, FALSE),\n);\n// looping to test vprintf() with different float formats from the above $format array\n// and with non-float values from the above $args_array array\n$counter = 1;\nforeach($args_array as $args) {\n  echo \"\\n-- Iteration $counter --\\n\";\n  $result = vprintf($formats, $args);\n  echo \"\\n\";\n  var_dump($result);\n  $counter++;\n}\n?>")).toMatchSnapshot();
  });
});
