// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/file/fgetcsv_variation2.phpt
  it("Test fgetcsv() : usage variations - with length as 0", function () {
    expect(parser.parseCode("<?php\n/* Testing fgetcsv() to rwad from a file with length argument equal to zero */\necho \"*** Testing fgetcsv() : with length as 0 ***\\n\";\n/* the array is with three elements in it. Each element should be read as\n   1st element is delimiter, 2nd element is enclosure\n   and 3rd element is csv fields\n*/\n$csv_lists = array (\n  array(',', '\"', '\"water\",fruit'),\n  array(',', '\"', '\"water\",\"fruit\"'),\n  array(' ', '^', '^water^ ^fruit^'),\n  array(':', '&', '&water&:&fruit&'),\n  array('=', '=', '=water===fruit='),\n  array('-', '-', '-water--fruit-air'),\n  array('-', '-', '-water---fruit---air-'),\n  array(':', '&', '&\"\"\"\"&:&\"&:,:\":&,&:,,,,')\n);\n$filename = __DIR__ . '/fgetcsv_variation2.tmp';\n@unlink($filename);\n$file_modes = array (\"r\",\"rb\", \"rt\", \"r+\", \"r+b\", \"r+t\",\n                     \"a+\", \"a+b\", \"a+t\",\n                     \"w+\", \"w+b\", \"w+t\",\n                     \"x+\", \"x+b\", \"x+t\");\n$loop_counter = 1;\nforeach ($csv_lists as $csv_list) {\n  for($mode_counter = 0; $mode_counter < count($file_modes); $mode_counter++) {\n    // create the file and add the content with has csv fields\n    if ( strstr($file_modes[$mode_counter], \"r\") ) {\n      $file_handle = fopen($filename, \"w\");\n    } else {\n      $file_handle = fopen($filename, $file_modes[$mode_counter] );\n    }\n    if ( !$file_handle ) {\n      echo \"Error: failed to create file $filename!\\n\";\n      exit();\n    }\n    $delimiter = $csv_list[0];\n    $enclosure = $csv_list[1];\n    $csv_field = $csv_list[2];\n    fwrite($file_handle, $csv_field . \"\\n\");\n    // write another line of text and a blank line\n    // this will be used to test, if the fgetcsv() read more than a line and its\n    // working when only a blank line is read\n    fwrite($file_handle, \"This is line of text without csv fields\\n\");\n    fwrite($file_handle, \"\\n\"); // blank line\n    // close the file if the mode to be used is read mode  and re-open using read mode\n    // else rewind the file pointer to beginning of the file\n    if ( strstr($file_modes[$mode_counter], \"r\" ) ) {\n      fclose($file_handle);\n      $file_handle = fopen($filename, $file_modes[$mode_counter]);\n    } else {\n      // rewind the file pointer to bof\n      rewind($file_handle);\n    }\n    echo \"\\n-- Testing fgetcsv() with file opened using $file_modes[$mode_counter] mode --\\n\";\n    // call fgetcsv() to parse csv fields\n    // use length as 0\n    fseek($file_handle, 0, SEEK_SET);\n    var_dump( fgetcsv($file_handle, 0, $delimiter, $enclosure) );\n    // check the file pointer position and if eof\n    var_dump( ftell($file_handle) );\n    var_dump( feof($file_handle) );\n    // close the file\n    fclose($file_handle);\n    //delete file\n    unlink($filename);\n  } //end of mode loop\n} // end of foreach\necho \"Done\\n\";\n?>")).toMatchSnapshot();
  });
});
