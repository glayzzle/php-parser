// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/file/001-win32.phpt
  it("File type functions", function () {
    expect(parser.parseCode("<?php\nchdir(__DIR__);\n@unlink('test.file');\nif (file_exists('test.file')) {\n    echo \"test.file exists\\n\";\n} else {\n    echo \"test.file does not exist\\n\";\n}\nfclose (fopen('test.file', 'w'));\nchmod ('test.file', 0744);\nif (file_exists('test.file')) {\n    echo \"test.file exists\\n\";\n} else {\n    echo \"test.file does not exist\\n\";\n}\nif (is_link('test.file')) {\n    echo \"test.file is a symlink\\n\";\n} else {\n    echo \"test.file is not a symlink\\n\";\n}\nif (file_exists('test.file')) {\n    echo \"test.file exists\\n\";\n} else {\n    echo \"test.file does not exist\\n\";\n}\n$s = stat ('test.file');\n$ls = lstat ('test.file');\nfor ($i = 0; $i <= 12; $i++) {\n    if ($ls[$i] != $s[$i]) {\n        echo \"test.file lstat and stat differ at element $i\\n\";\n    }\n}\necho \"test.file is \" . filetype('test.file') . \"\\n\";\nprintf (\"test.file permissions are 0%o\\n\", 0777 & fileperms('test.file'));\necho \"test.file size is \" . filesize('test.file') . \"\\n\";\nif (is_writeable('test.file')) {\n    echo \"test.file is writeable\\n\";\n} else {\n    echo \"test.file is not writeable\\n\";\n}\nif (is_readable('test.file')) {\n    echo \"test.file is readable\\n\";\n} else {\n    echo \"test.file is not readable\\n\";\n}\nif (is_file('test.file')) {\n    echo \"test.file is a regular file\\n\";\n} else {\n    echo \"test.file is not a regular file\\n\";\n}\nif (is_dir('../file')) {\n    echo \"../file is a directory\\n\";\n} else {\n    echo \"../file is not a directory\\n\";\n}\nif (is_dir('test.file')) {\n    echo \"test.file is a directory\\n\";\n} else {\n    echo \"test.file is not a directory\\n\";\n}\nunlink('test.file');\nif (file_exists('test.file')) {\n    echo \"test.file exists (cached)\\n\";\n} else {\n    echo \"test.file does not exist\\n\";\n}\nclearstatcache();\nif (file_exists('test.file')) {\n    echo \"test.file exists\\n\";\n} else {\n    echo \"test.file does not exist\\n\";\n}\n?>")).toMatchSnapshot();
  });
});
