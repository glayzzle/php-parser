// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/strings/html_entity_decode_cp866.phpt
  it("Translation of HTML entities for encoding CP866", function () {
    expect(parser.parseCode("<?php\n$arr = array(\n0x0410 => array(0x80, \"CYRILLIC CAPITAL LETTER A\"),\n0x0411 => array(0x81, \"CYRILLIC CAPITAL LETTER BE\"),\n0x0412 => array(0x82, \"CYRILLIC CAPITAL LETTER VE\"),\n0x0413 => array(0x83, \"CYRILLIC CAPITAL LETTER GHE\"),\n0x0414 => array(0x84, \"CYRILLIC CAPITAL LETTER DE\"),\n0x0415 => array(0x85, \"CYRILLIC CAPITAL LETTER IE\"),\n0x0416 => array(0x86, \"CYRILLIC CAPITAL LETTER ZHE\"),\n0x0417 => array(0x87, \"CYRILLIC CAPITAL LETTER ZE\"),\n0x0418 => array(0x88, \"CYRILLIC CAPITAL LETTER I\"),\n0x0419 => array(0x89, \"CYRILLIC CAPITAL LETTER SHORT I\"),\n0x041a => array(0x8a, \"CYRILLIC CAPITAL LETTER KA\"),\n0x041b => array(0x8b, \"CYRILLIC CAPITAL LETTER EL\"),\n0x041c => array(0x8c, \"CYRILLIC CAPITAL LETTER EM\"),\n0x041d => array(0x8d, \"CYRILLIC CAPITAL LETTER EN\"),\n0x041e => array(0x8e, \"CYRILLIC CAPITAL LETTER O\"),\n0x041f => array(0x8f, \"CYRILLIC CAPITAL LETTER PE\"),\n0x0420 => array(0x90, \"CYRILLIC CAPITAL LETTER ER\"),\n0x0421 => array(0x91, \"CYRILLIC CAPITAL LETTER ES\"),\n0x0422 => array(0x92, \"CYRILLIC CAPITAL LETTER TE\"),\n0x0423 => array(0x93, \"CYRILLIC CAPITAL LETTER U\"),\n0x0424 => array(0x94, \"CYRILLIC CAPITAL LETTER EF\"),\n0x0425 => array(0x95, \"CYRILLIC CAPITAL LETTER HA\"),\n0x0426 => array(0x96, \"CYRILLIC CAPITAL LETTER TSE\"),\n0x0427 => array(0x97, \"CYRILLIC CAPITAL LETTER CHE\"),\n0x0428 => array(0x98, \"CYRILLIC CAPITAL LETTER SHA\"),\n0x0429 => array(0x99, \"CYRILLIC CAPITAL LETTER SHCHA\"),\n0x042a => array(0x9a, \"CYRILLIC CAPITAL LETTER HARD SIGN\"),\n0x042b => array(0x9b, \"CYRILLIC CAPITAL LETTER YERU\"),\n0x042c => array(0x9c, \"CYRILLIC CAPITAL LETTER SOFT SIGN\"),\n0x042d => array(0x9d, \"CYRILLIC CAPITAL LETTER E\"),\n0x042e => array(0x9e, \"CYRILLIC CAPITAL LETTER YU\"),\n0x042f => array(0x9f, \"CYRILLIC CAPITAL LETTER YA\"),\n0x0430 => array(0xa0, \"CYRILLIC SMALL LETTER A\"),\n0x0431 => array(0xa1, \"CYRILLIC SMALL LETTER BE\"),\n0x0432 => array(0xa2, \"CYRILLIC SMALL LETTER VE\"),\n0x0433 => array(0xa3, \"CYRILLIC SMALL LETTER GHE\"),\n0x0434 => array(0xa4, \"CYRILLIC SMALL LETTER DE\"),\n0x0435 => array(0xa5, \"CYRILLIC SMALL LETTER IE\"),\n0x0436 => array(0xa6, \"CYRILLIC SMALL LETTER ZHE\"),\n0x0437 => array(0xa7, \"CYRILLIC SMALL LETTER ZE\"),\n0x0438 => array(0xa8, \"CYRILLIC SMALL LETTER I\"),\n0x0439 => array(0xa9, \"CYRILLIC SMALL LETTER SHORT I\"),\n0x043a => array(0xaa, \"CYRILLIC SMALL LETTER KA\"),\n0x043b => array(0xab, \"CYRILLIC SMALL LETTER EL\"),\n0x043c => array(0xac, \"CYRILLIC SMALL LETTER EM\"),\n0x043d => array(0xad, \"CYRILLIC SMALL LETTER EN\"),\n0x043e => array(0xae, \"CYRILLIC SMALL LETTER O\"),\n0x043f => array(0xaf, \"CYRILLIC SMALL LETTER PE\"),\n0x2591 => array(0xb0, \"LIGHT SHADE\"),\n0x2592 => array(0xb1, \"MEDIUM SHADE\"),\n0x2593 => array(0xb2, \"DARK SHADE\"),\n0x2502 => array(0xb3, \"BOX DRAWINGS LIGHT VERTICAL\"),\n0x2524 => array(0xb4, \"BOX DRAWINGS LIGHT VERTICAL AND LEFT\"),\n0x2561 => array(0xb5, \"BOX DRAWINGS VERTICAL SINGLE AND LEFT DOUBLE\"),\n0x2562 => array(0xb6, \"BOX DRAWINGS VERTICAL DOUBLE AND LEFT SINGLE\"),\n0x2556 => array(0xb7, \"BOX DRAWINGS DOWN DOUBLE AND LEFT SINGLE\"),\n0x2555 => array(0xb8, \"BOX DRAWINGS DOWN SINGLE AND LEFT DOUBLE\"),\n0x2563 => array(0xb9, \"BOX DRAWINGS DOUBLE VERTICAL AND LEFT\"),\n0x2551 => array(0xba, \"BOX DRAWINGS DOUBLE VERTICAL\"),\n0x2557 => array(0xbb, \"BOX DRAWINGS DOUBLE DOWN AND LEFT\"),\n0x255d => array(0xbc, \"BOX DRAWINGS DOUBLE UP AND LEFT\"),\n0x255c => array(0xbd, \"BOX DRAWINGS UP DOUBLE AND LEFT SINGLE\"),\n0x255b => array(0xbe, \"BOX DRAWINGS UP SINGLE AND LEFT DOUBLE\"),\n0x2510 => array(0xbf, \"BOX DRAWINGS LIGHT DOWN AND LEFT\"),\n0x2514 => array(0xc0, \"BOX DRAWINGS LIGHT UP AND RIGHT\"),\n0x2534 => array(0xc1, \"BOX DRAWINGS LIGHT UP AND HORIZONTAL\"),\n0x252c => array(0xc2, \"BOX DRAWINGS LIGHT DOWN AND HORIZONTAL\"),\n0x251c => array(0xc3, \"BOX DRAWINGS LIGHT VERTICAL AND RIGHT\"),\n0x2500 => array(0xc4, \"BOX DRAWINGS LIGHT HORIZONTAL\"),\n0x253c => array(0xc5, \"BOX DRAWINGS LIGHT VERTICAL AND HORIZONTAL\"),\n0x255e => array(0xc6, \"BOX DRAWINGS VERTICAL SINGLE AND RIGHT DOUBLE\"),\n0x255f => array(0xc7, \"BOX DRAWINGS VERTICAL DOUBLE AND RIGHT SINGLE\"),\n0x255a => array(0xc8, \"BOX DRAWINGS DOUBLE UP AND RIGHT\"),\n0x2554 => array(0xc9, \"BOX DRAWINGS DOUBLE DOWN AND RIGHT\"),\n0x2569 => array(0xca, \"BOX DRAWINGS DOUBLE UP AND HORIZONTAL\"),\n0x2566 => array(0xcb, \"BOX DRAWINGS DOUBLE DOWN AND HORIZONTAL\"),\n0x2560 => array(0xcc, \"BOX DRAWINGS DOUBLE VERTICAL AND RIGHT\"),\n0x2550 => array(0xcd, \"BOX DRAWINGS DOUBLE HORIZONTAL\"),\n0x256c => array(0xce, \"BOX DRAWINGS DOUBLE VERTICAL AND HORIZONTAL\"),\n0x2567 => array(0xcf, \"BOX DRAWINGS UP SINGLE AND HORIZONTAL DOUBLE\"),\n0x2568 => array(0xd0, \"BOX DRAWINGS UP DOUBLE AND HORIZONTAL SINGLE\"),\n0x2564 => array(0xd1, \"BOX DRAWINGS DOWN SINGLE AND HORIZONTAL DOUBLE\"),\n0x2565 => array(0xd2, \"BOX DRAWINGS DOWN DOUBLE AND HORIZONTAL SINGLE\"),\n0x2559 => array(0xd3, \"BOX DRAWINGS UP DOUBLE AND RIGHT SINGLE\"),\n0x2558 => array(0xd4, \"BOX DRAWINGS UP SINGLE AND RIGHT DOUBLE\"),\n0x2552 => array(0xd5, \"BOX DRAWINGS DOWN SINGLE AND RIGHT DOUBLE\"),\n0x2553 => array(0xd6, \"BOX DRAWINGS DOWN DOUBLE AND RIGHT SINGLE\"),\n0x256b => array(0xd7, \"BOX DRAWINGS VERTICAL DOUBLE AND HORIZONTAL SINGLE\"),\n0x256a => array(0xd8, \"BOX DRAWINGS VERTICAL SINGLE AND HORIZONTAL DOUBLE\"),\n0x2518 => array(0xd9, \"BOX DRAWINGS LIGHT UP AND LEFT\"),\n0x250c => array(0xda, \"BOX DRAWINGS LIGHT DOWN AND RIGHT\"),\n0x2588 => array(0xdb, \"FULL BLOCK\"),\n0x2584 => array(0xdc, \"LOWER HALF BLOCK\"),\n0x258c => array(0xdd, \"LEFT HALF BLOCK\"),\n0x2590 => array(0xde, \"RIGHT HALF BLOCK\"),\n0x2580 => array(0xdf, \"UPPER HALF BLOCK\"),\n0x0440 => array(0xe0, \"CYRILLIC SMALL LETTER ER\"),\n0x0441 => array(0xe1, \"CYRILLIC SMALL LETTER ES\"),\n0x0442 => array(0xe2, \"CYRILLIC SMALL LETTER TE\"),\n0x0443 => array(0xe3, \"CYRILLIC SMALL LETTER U\"),\n0x0444 => array(0xe4, \"CYRILLIC SMALL LETTER EF\"),\n0x0445 => array(0xe5, \"CYRILLIC SMALL LETTER HA\"),\n0x0446 => array(0xe6, \"CYRILLIC SMALL LETTER TSE\"),\n0x0447 => array(0xe7, \"CYRILLIC SMALL LETTER CHE\"),\n0x0448 => array(0xe8, \"CYRILLIC SMALL LETTER SHA\"),\n0x0449 => array(0xe9, \"CYRILLIC SMALL LETTER SHCHA\"),\n0x044a => array(0xea, \"CYRILLIC SMALL LETTER HARD SIGN\"),\n0x044b => array(0xeb, \"CYRILLIC SMALL LETTER YERU\"),\n0x044c => array(0xec, \"CYRILLIC SMALL LETTER SOFT SIGN\"),\n0x044d => array(0xed, \"CYRILLIC SMALL LETTER E\"),\n0x044e => array(0xee, \"CYRILLIC SMALL LETTER YU\"),\n0x044f => array(0xef, \"CYRILLIC SMALL LETTER YA\"),\n0x0401 => array(0xf0, \"CYRILLIC CAPITAL LETTER IO\"),\n0x0451 => array(0xf1, \"CYRILLIC SMALL LETTER IO\"),\n0x0404 => array(0xf2, \"CYRILLIC CAPITAL LETTER UKRAINIAN IE\"),\n0x0454 => array(0xf3, \"CYRILLIC SMALL LETTER UKRAINIAN IE\"),\n0x0407 => array(0xf4, \"CYRILLIC CAPITAL LETTER YI\"),\n0x0457 => array(0xf5, \"CYRILLIC SMALL LETTER YI\"),\n0x040e => array(0xf6, \"CYRILLIC CAPITAL LETTER SHORT U\"),\n0x045e => array(0xf7, \"CYRILLIC SMALL LETTER SHORT U\"),\n0x00b0 => array(0xf8, \"DEGREE SIGN\"),\n0x2219 => array(0xf9, \"BULLET OPERATOR\"),\n0x00b7 => array(0xfa, \"MIDDLE DOT\"),\n0x221a => array(0xfb, \"SQUARE ROOT\"),\n0x2116 => array(0xfc, \"NUMERO SIGN\"),\n0x00a4 => array(0xfd, \"CURRENCY SIGN\"),\n0x25a0 => array(0xfe, \"BLACK SQUARE\"),\n0x00a0 => array(0xff, \"NO-BREAK SPACE\"),\n);\nforeach ($arr as $u => $v) {\n    $ent = sprintf(\"&#x%X;\", $u);\n    $res = html_entity_decode($ent, ENT_QUOTES, 'CP866');\n    $d = unpack(\"H*\", $res);\n    echo sprintf(\"%s: %s => %s\\n\", $v[1], $ent, $d[1]);\n    $ent = sprintf(\"&#x%X;\", $v[0]);\n    $res = html_entity_decode($ent, ENT_QUOTES, 'CP866');\n    if ($res[0] != \"&\" || $res[1] != \"#\")\n        $res = unpack(\"H*\", $res)[1];\n    echo sprintf(\"%s => %s\\n\\n\", $ent, $res);\n}\n?>")).toMatchSnapshot();
  });
});
