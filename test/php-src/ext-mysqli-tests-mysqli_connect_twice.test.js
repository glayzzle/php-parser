// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/mysqli_connect_twice.phpt
  it("Calling connect() on an open connection to create a new connection", function () {
    expect(parser.parseCode("<?php\n    require_once(\"connect.inc\");\n    if (!$link = my_mysqli_connect($host, $user, $passwd, $db, $port, $socket))\n        printf(\"[001] Cannot connect to the server using host=%s, user=%s, passwd=***, dbname=%s, port=%s, socket=%s\\n\",\n            $host, $user, $db, $port, $socket);\n    if (!$thread_id = mysqli_thread_id($link))\n        printf(\"[002] Cannot determine thread id, test will fail, [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    if (true !== ($tmp = my_mysqli_real_connect($link, $host, $user, $passwd, $db, $port, $socket)))\n        printf(\"[003] Expecting boolean/true got %s/%s\\n\", gettype($tmp), $tmp);\n    if (!is_int($new_thread_id = mysqli_thread_id($link)) || ($new_thread_id < 0))\n        printf(\"[004] Expecting int/any got %s/%s\\n\", gettype($tmp), $tmp);\n    if ($thread_id == $new_thread_id)\n        printf(\"[005] Expecting new connection and new thread id. Old thread id %d, new thread id %d\\n\", $thread_id, $new_thread_id);\n    if (!($res = mysqli_query($link, \"SELECT 'ok' AS it_works\")) ||\n        !($row = mysqli_fetch_assoc($res)))\n        printf(\"[006] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    var_dump($row);\n    mysqli_free_result($res);\n    mysqli_close($link);\n    if (!$link = new my_mysqli($host, $user, $passwd, $db, $port, $socket))\n        printf(\"[007] Cannot connect to the server using host=%s, user=%s, passwd=***, dbname=%s, port=%s, socket=%s\\n\",\n            $host, $user, $db, $port, $socket);\n    if (!$thread_id = $link->thread_id)\n        printf(\"[008] Cannot determine thread id, test will fail, [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    if (true !== ($tmp = $link->real_connect($host, $user, $passwd, $db, $port, $socket)))\n        printf(\"[009] Expecting boolean/true got %s/%s\\n\", gettype($tmp), $tmp);\n    if (!is_int($new_thread_id = $link->thread_id) || ($new_thread_id < 0))\n        printf(\"[010] Expecting int/any got %s/%s\\n\", gettype($tmp), $tmp);\n    if ($thread_id == $new_thread_id)\n        printf(\"[011] Expecting new connection and new thread id. Old thread id %d, new thread id %d\\n\", $thread_id, $new_thread_id);\n    if (!($res = $link->query(\"SELECT 'works also with oo' AS syntax\")) ||\n            !($row = $res->fetch_assoc()))\n        printf(\"[012] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    var_dump($row);\n    mysqli_free_result($res);\n    mysqli_close($link);\n    if (true !== ($tmp = $link->connect($host, $user, $passwd, $db, $port, $socket)))\n        printf(\"[013] Expecting true got %s/%s\\n\", gettype($tmp), $tmp);\n    if (!$link = mysqli_connect($host, $user, $passwd, $db, $port, $socket))\n        printf(\"[014] Cannot connect to the server using host=%s, user=%s, passwd=***, dbname=%s, port=%s, socket=%s\\n\",\n            $host, $user, $db, $port, $socket);\n    if (true !== ($tmp = $link->connect($host, $user, $passwd, $db, $port, $socket)))\n        printf(\"[015] Expecting NULL got %s/%s\\n\", gettype($tmp), $tmp);\n    print \"done!\";\n?>")).toMatchSnapshot();
  });
});
