// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/strings/html_entity_decode3.phpt
  it("html_entity_decode: Do not decode numerical entities that refer to non-SGML or otherwise disallowed chars", function () {
    expect(parser.parseCode("<?php\n$tests = array(\n    \"&#0;\", //C0\n    \"&#1;\",\n    \"&#x09;\",\n    \"&#x0A;\",\n    \"&#x0B;\",\n    \"&#x0C;\",\n    \"&#x0D;\", //note that HTML5 is unique in that it forbids this entity, but allows a literal U+0D\n    \"&#x0E;\",\n    \"&#x1F;\",\n    \"&#x20;\", //allowed always\n    \"&#x27;\", //single quote, depends on flags\n    \"&#x7F;\", //DEL\n    \"&#x80;\", //C1\n    \"&#x9F;\",\n    \"&#xA0;\", //allowed always\n    \"&#xD7FF;\", //surrogates\n    \"&#xD800;\",\n    \"&#xDFFF;\",\n    \"&#xE000;\", //allowed always\n    \"&#xFFFE;\", //nonchar\n    \"&#xFFFF;\",\n    \"&#xFDCF;\", //allowed always\n    \"&#xFDD0;\", //nonchar\n    \"&#xFDEF;\",\n    \"&#xFDF0;\", //allowed always\n    \"&#x2FFFE;\", //nonchar\n    \"&#x2FFFF;\",\n);\necho \"*** HTML 4.01  ***\\n\";\nforeach ($tests as $t) {\n    $dec = html_entity_decode($t, ENT_QUOTES | ENT_HTML401, \"UTF-8\");\n    if ($t == $dec) {\n        echo \"$t\\tNOT DECODED\\n\";\n    } else {\n        echo \"$t\\tDECODED\\n\";\n    }\n}\necho \"\\n*** XHTML 1.0  ***\\n\";\nforeach ($tests as $t) {\n    $dec = html_entity_decode($t, ENT_QUOTES | ENT_XHTML, \"UTF-8\");\n    if ($t == $dec) {\n        echo \"$t\\tNOT DECODED\\n\";\n    } else {\n        echo \"$t\\tDECODED\\n\";\n    }\n}\necho \"\\n*** HTML5  ***\\n\";\nforeach ($tests as $t) {\n    $dec = html_entity_decode($t, ENT_QUOTES | ENT_HTML5, \"UTF-8\");\n    if ($t == $dec) {\n        echo \"$t\\tNOT DECODED\\n\";\n    } else {\n        echo \"$t\\tDECODED\\n\";\n    }\n}\necho \"\\n*** XML 1.0  ***\\n\";\nforeach ($tests as $t) {\n    $dec = html_entity_decode($t, ENT_QUOTES | ENT_XML1, \"UTF-8\");\n    if ($t == $dec) {\n        echo \"$t\\tNOT DECODED\\n\";\n    } else {\n        echo \"$t\\tDECODED\\n\";\n    }\n}\necho \"\\n*** Default options ***\\n\";\nforeach ($tests as $t) {\n    $dec = html_entity_decode($t);\n    if ($t == $dec) {\n        echo \"$t\\tNOT DECODED\\n\";\n    } else {\n        echo \"$t\\tDECODED\\n\";\n    }\n}\necho \"\\nDone.\\n\";\n?>")).toMatchSnapshot();
  });
});
