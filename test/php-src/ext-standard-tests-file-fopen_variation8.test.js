// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/file/fopen_variation8.phpt
  it("Test fopen() function : variation: use include path and stream context (relative directories in path)", function () {
    expect(parser.parseCode("<?php\n$thisTestDir =  basename(__FILE__, \".php\") . \".dir\";\nmkdir($thisTestDir);\nchdir($thisTestDir);\n//create the include directory structure\n$workingDir = \"workdir\";\n$filename =  basename(__FILE__, \".php\") . \".tmp\";\n$scriptDir = __DIR__;\n$baseDir = getcwd();\n$secondFile = $baseDir.\"/dir2/\".$filename;\n$firstFile = \"../dir1/\".$filename;\n$scriptFile = $scriptDir.'/'.$filename;\n$newdirs = array(\"dir1\", \"dir2\", \"dir3\");\n$pathSep = \":\";\n$newIncludePath = \"\";\nif(substr(PHP_OS, 0, 3) == 'WIN' ) {\n   $pathSep = \";\";\n}\nforeach($newdirs as $newdir) {\n   mkdir($newdir);\n   $newIncludePath .= '../'.$newdir.$pathSep;\n}\nmkdir($workingDir);\nchdir($workingDir);\n//define the files to go into these directories, create one in dir2\necho \"\\n--- testing include path ---\\n\";\nset_include_path($newIncludePath);\n$modes = array(\"r\", \"r+\", \"rt\");\nforeach($modes as $mode) {\n    test_fopen($mode);\n}\n// remove the directory structure\nchdir($baseDir);\nrmdir($workingDir);\nforeach($newdirs as $newdir) {\n   rmdir($newdir);\n}\nchdir(\"..\");\nrmdir($thisTestDir);\nfunction test_fopen($mode) {\n   global $scriptFile, $secondFile, $firstFile, $filename;\n   // create a file in the middle directory\n   $h = fopen($secondFile, \"w\");\n   fwrite($h, \"in dir2\");\n   fclose($h);\n   echo \"\\n** testing with mode=$mode **\\n\";\n   // should read dir2 file\n   $h = fopen($filename, $mode, true);\n   fpassthru($h);\n   fclose($h);\n   echo \"\\n\";\n   //create a file in dir1\n   $h = fopen($firstFile, \"w\");\n   fwrite($h, \"in dir1\");\n   fclose($h);\n   //should now read dir1 file\n   $h = fopen($filename, $mode, true);\n   fpassthru($h);\n   fclose($h);\n   echo \"\\n\";\n   // create a file in working directory\n   $h = fopen($filename, \"w\");\n   fwrite($h, \"in working dir\");\n   fclose($h);\n   //should read the dir1 file\n   $h = fopen($filename, $mode, true);\n   fpassthru($h);\n   fclose($h);\n   echo \"\\n\";\n   unlink($firstFile);\n   unlink($secondFile);\n   //should read the working dir file\n   $h = fopen($filename, $mode, true);\n   fpassthru($h);\n   fclose($h);\n   echo \"\\n\";\n   // create a file in the script directory\n   $h = fopen($scriptFile, \"w\");\n   fwrite($h, \"in script dir\");\n   fclose($h);\n   //should read the file in script dir\n   $h = fopen($filename, $mode, true);\n   fpassthru($h);\n   fclose($h);\n   echo \"\\n\";\n   //cleanup\n   unlink($filename);\n   unlink($scriptFile);\n}\n?>")).toMatchSnapshot();
  });
});
