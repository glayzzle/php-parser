// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/mysqli_set_charset.phpt
  it("mysqli_set_charset()", function () {
    expect(parser.parseCode("<?php\n    require_once(\"connect.inc\");\n    require('table.inc');\n    if (!$res = mysqli_query($link, 'SELECT @@character_set_connection AS charset, @@collation_connection AS collation'))\n        printf(\"[007] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    $tmp = mysqli_fetch_assoc($res);\n    mysqli_free_result($res);\n    if (!$character_set_connection = $tmp['charset'])\n        printf(\"[008] Cannot determine current character set and collation\\n\");\n    $new_charset = ('latin1' == $character_set_connection) ? 'latin2' : 'latin1';\n    if (!$res = mysqli_query($link, sprintf('SHOW CHARACTER SET LIKE \"%s\"', $new_charset), MYSQLI_STORE_RESULT))\n        printf(\"[009] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    if (mysqli_num_rows($res) == 0)\n        printf(\"[010] Test will fail, because alternative test character set '%s' seems not supported\\n\", $new_charset);\n    if (false !== ($ret = mysqli_set_charset($link, \"this is not a valid character set\")))\n        printf(\"[011] Expecting boolean/false because of invalid character set, got %s/%s\\n\", gettype($ret), $ret);\n    mysqli_close($link);\n    if (!$link = my_mysqli_connect($host, $user, $passwd, $db, $port, $socket))\n        printf(\"[012] Cannot connect to the server using host=%s, user=%s, passwd=***, dbname=%s, port=%s, socket=%s\\n\",\n            $host, $user, $db, $port, $socket);\n    if (true !== ($ret = mysqli_set_charset($link, $new_charset)))\n        printf(\"[013] Expecting boolean/true, got %s/%s\\n\", gettype($ret), $ret);\n    if (!$res = mysqli_query($link, 'SELECT @@character_set_connection AS charset, @@collation_connection AS collation'))\n        printf(\"[014] [%d] %s\\n\", mysqli_errno($link), mysqli_error($link));\n    $tmp = mysqli_fetch_assoc($res);\n    mysqli_free_result($res);\n    if ($new_charset !== $tmp['charset'])\n        printf(\"[015] Character set not changed? Expecting %s, got %s\\n\", $new_charset, $tmp['charset']);\n    if (!$res = mysqli_query($link, \"SHOW CHARACTER SET\"))\n        printf(\"[016] Cannot get list of character sets\\n\");\n    while ($tmp = mysqli_fetch_assoc($res)) {\n        /* As of MySQL 8.0.28, `SHOW CHARACTER SET` contains utf8mb3, but that is not yet supported by mysqlnd */\n        if ('ucs2' == $tmp['Charset'] || 'utf16' == $tmp['Charset'] || 'utf32' == $tmp['Charset'] || 'utf16le' == $tmp['Charset'] || 'utf8mb3' == $tmp['Charset'])\n            continue;\n        /* Uncomment to see where it hangs - var_dump($tmp); flush(); */\n        if (!@mysqli_set_charset($link, $tmp['Charset'])) {\n            printf(\"[017] Cannot set character set to '%s', [%d] %s\\n\", $tmp['Charset'],\n                mysqli_errno($link), mysqli_error($link));\n            continue;\n        }\n        /* Uncomment to see where it hangs - var_dump($tmp); flush(); */\n        if (!mysqli_query($link, sprintf(\"SET NAMES %s\", mysqli_real_escape_string($link, $tmp['Charset']))))\n            printf(\"[018] Cannot run SET NAMES %s, [%d] %s\\n\", $tmp['Charset'], mysqli_errno($link), mysqli_error($link));\n    }\n    mysqli_free_result($res);\n    // Make sure that set_charset throws an exception in exception mode\n    mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);\n    try {\n        $link->set_charset('invalid');\n    } catch (\\mysqli_sql_exception $exception) {\n        echo \"Exception: \" . $exception->getMessage() . \"\\n\";\n    }\n    try {\n        $link->set_charset('ucs2');\n    } catch (\\mysqli_sql_exception $exception) {\n        echo \"Exception: \" . $exception->getMessage() . \"\\n\";\n    }\n    mysqli_close($link);\n    try {\n        mysqli_set_charset($link, $new_charset);\n    } catch (Error $exception) {\n        echo $exception->getMessage() . \"\\n\";\n    }\n    print \"done!\";\n?>")).toMatchSnapshot();
  });
});
