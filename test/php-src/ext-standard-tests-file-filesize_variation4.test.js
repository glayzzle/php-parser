// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/file/filesize_variation4.phpt
  it("Test filesize() function: usage variations - file mode & holes in file", function () {
    expect(parser.parseCode("<?php\n/* Testing filesize() with data written using different file modes and by creating holes in file */\n$file_path = __DIR__;\necho \"*** Testing filesize(): usage variations ***\\n\";\necho \"\\n*** Testing filesize() with data written using different file modes and by creating holes in file ***\\n\";\n$filename = $file_path.\"/filesize_variation4.tmp\";\n$string = \"Test 2 test the filesize() fn, with data containing all the types like !@@##$%^&*():<>?|~+!;',.\\][{}(special) cha\nrs, 12345(numeric) chars, and \\n(newline char), \\t(tab), \\0, \\r and so on........\\0\";\necho \"-- opening the file in 'w' mode and get the size --\\n\";\n$file_handle = fopen($filename, \"w\");\nvar_dump( strlen($string) );  //strlen of the string\nfwrite($file_handle, $string);\nfclose($file_handle);\nvar_dump( filesize($filename) );  //size of the file = strlen of string\nclearstatcache();\necho \"-- opening the file in 'wt' mode and get the size --\\n\";\n$file_handle = fopen($filename, \"wt\");\nvar_dump( strlen($string) );  //strlen of the string = 191 bytes\nfwrite($file_handle, $string);\nfclose($file_handle);\nvar_dump( filesize($filename) );  //size of the file = strlen of string = 191 bytes\nclearstatcache();\necho \"-- opening the file in 'a' mode, adding data and checking the file --\\n\";\n$file_handle = fopen($filename, \"a\");\nfwrite($file_handle, \"Hello, world\");\nfclose($file_handle);\nvar_dump( filesize($filename) );  //203 bytes\nclearstatcache();\necho \"-- opening the file in 'at' mode, adding data and checking the file --\\n\";\n$file_handle = fopen($filename, \"at\");\nfwrite($file_handle, \"Hello, world\\n\");\nfclose($file_handle);\nvar_dump( filesize($filename) );  //216 bytes\nclearstatcache();\necho \"-- creating a hole and checking the size --\\n\";\n$file_handle = fopen($filename, \"a\");\nvar_dump( ftruncate($file_handle, 220) );  //creating 4 bytes of hole\nfclose($file_handle);\nvar_dump( filesize($filename) );  //220 bytes\nclearstatcache();\necho \"-- writing data after hole and checking the size --\\n\";\n$file_handle = fopen($filename, \"a\");\nfwrite($file_handle, \"Hello\\0\");  //writing 6 bytes of data\nfclose($file_handle);\nvar_dump( filesize($filename) );  //226 bytes\nclearstatcache();\necho \"-- opening the existing file in write mode --\\n\";\nfclose( fopen($filename, \"w\") );\nvar_dump( filesize($filename) );  //0 bytes\nclearstatcache();\necho \"-- with empty file --\\n\";\n$filename = __DIR__.\"/filesize_variation4_empty.tmp\";\nfclose( fopen($filename, \"w\") );\nvar_dump( filesize($filename) );  //0 bytes\necho \"*** Done ***\\n\";\n?>")).toMatchSnapshot();
  });
});
