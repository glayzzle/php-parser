// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/general_functions/is_bool.phpt
  it("Test is_bool() function", function () {
    expect(parser.parseCode("<?php\necho \"*** Testing is_bool() with valid boolean values ***\\n\";\n// different valid  boolean values\n$valid_bools = array(\n  TRUE,\n  FALSE,\n  true,\n  false,\n);\n/* loop to check that is_bool() recognizes different\n   bool values, expected output: bool(true) */\n$loop_counter = 1;\nforeach ($valid_bools as $bool_val ) {\n  echo \"-- Iteration $loop_counter --\\n\"; $loop_counter++;\n  var_dump( is_bool($bool_val) );\n}\necho \"\\n*** Testing is_bool() on non boolean values ***\\n\";\n// get a resource type variable\n$fp = fopen (__FILE__, \"r\");\n$dfp = opendir ( __DIR__ );\n// unset variable\n$unset_bool1 = true;\n$unset_bool2 = false;\n$unset_var = 0;\nunset ($unset_bool1);\nunset ($unset_bool2);\nunset ($unset_var);\n// other types in a array\n$not_bool_types = array (\n  /* integers */\n  0,\n  1,\n  -1,\n  -0,\n  543915,\n  -5322,\n  0x0,\n  0x1,\n  0x55F,\n  -0xCCF,\n  0123,\n  -0654,\n  00,\n  01,\n  /* strings */\n  \"\",\n  '',\n  \"0\",\n  '0',\n  \"1\",\n  '1',\n  'string',\n  \"string\",\n  \"true\",\n  \"false\",\n  \"FALSE\",\n  \"TRUE\",\n  'true',\n  'false',\n  'FALSE',\n  'TRUE',\n  \"NULL\",\n  \"null\",\n  /* floats */\n  0.0,\n  1.0,\n  -1.0,\n  10.0000000000000000005,\n  .5e6,\n  -.5E7,\n  .5E+8,\n  -.5e+90,\n  1e5,\n  -1e5,\n  1E5,\n  -1E7,\n  /* objects */\n  new stdclass,\n  /* resources */\n  $fp,\n  $dfp,\n  /* nulls */\n  null,\n  NULL,\n  /* arrays */\n  array(),\n  array(0),\n  array(1),\n  array(NULL),\n  array(null),\n  array(\"string\"),\n  array(true),\n  array(TRUE),\n  array(false),\n  array(FALSE),\n  array(1,2,3,4),\n  array(1 => \"One\", \"two\" => 2),\n  /* unset bool vars and undefined var */\n  @$unset_bool1,\n  @$unset_bool2,\n  @$unset_var,\n  @$undefined_var\n);\n/* loop through the $not_bool_types to see working of\n   is_bool() on non bull types, expected output: bool(false) */\n$loop_counter = 1;\nforeach ($not_bool_types as $type ) {\n  echo \"-- Iteration $loop_counter --\\n\"; $loop_counter++;\n  var_dump( is_bool($type) );\n}\necho \"Done\\n\";\n// close resources\nfclose($fp);\nclosedir($dfp);\n?>")).toMatchSnapshot();
  });
});
