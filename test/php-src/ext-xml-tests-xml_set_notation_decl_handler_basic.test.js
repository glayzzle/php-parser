// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/xml/tests/xml_set_notation_decl_handler_basic.phpt
  it("Test xml_set_notation_decl_handler function : basic", function () {
    expect(parser.parseCode("<?php\nclass XML_Parser\n{\n    function unparsed_entity_decl_handler($parser, $entity_name, $base, $system_ID, $public_ID, $notation_name)\n    {\n        echo \"unparsed_entity_decl_handler called\\n\";\n        echo \"...Entity name=\" . $entity_name . \"\\n\";\n        echo \"...Base=\" . $base . \"\\n\";\n        echo \"...System ID=\" . $system_ID . \"\\n\";\n        echo \"...Public ID=\" . $public_ID . \"\\n\";\n        echo \"...Notation name=\" . $notation_name . \"\\n\";\n    }\n    function notation_decl_handler($parser, $name, $base, $system_ID,$public_ID)\n    {\n        echo \"notation_decl_handler called\\n\";\n        echo \"...Name=\" . $name . \"\\n\";\n        echo \"...Base=\" . $base . \"\\n\";\n        echo \"...System ID=\" . $system_ID . \"\\n\";\n        echo \"...Public ID=\" . $public_ID . \"\\n\";\n    }\n    function parse($data)\n    {\n        $parser = xml_parser_create();\n        xml_set_object($parser, $this);\n        xml_set_notation_decl_handler($parser, \"notation_decl_handler\");\n        xml_set_unparsed_entity_decl_handler($parser, \"unparsed_entity_decl_handler\");\n        xml_parse($parser, $data, true);\n        xml_parser_free($parser);\n    }\n}\n$xml = <<<HERE\n<?xml version=\"1.0\"?>\n<!DOCTYPE dates [\n    <!NOTATION USDATE SYSTEM \"http://www.schema.net/usdate.not\">\n    <!NOTATION AUSDATE SYSTEM \"http://www.schema.net/ausdate.not\">\n    <!NOTATION ISODATE SYSTEM \"http://www.schema.net/isodate.not\">\n    <!ENTITY testUS  SYSTEM \"test_usdate.xml\" NDATA USDATE>\n    <!ENTITY testAUS SYSTEM \"test_ausdate.xml\" NDATA AUSDATE>\n    <!ENTITY testISO SYSTEM \"test_isodate_xml\" NDATA ISODATE>]>\n]>\nHERE;\necho \"Simple test of xml_set_notation_decl_handler(() function\\n\";\n$p1 = new Xml_Parser();\n$p1->parse($xml);\necho \"Done\\n\";\n?>")).toMatchSnapshot();
  });
});
