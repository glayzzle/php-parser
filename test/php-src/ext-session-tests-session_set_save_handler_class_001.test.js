// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/session/tests/session_set_save_handler_class_001.phpt
  it("Test session_set_save_handler() : basic class wrapping existing handler", function () {
    expect(parser.parseCode("<?php\nob_start();\necho \"*** Testing session_set_save_handler() : basic class wrapping existing handler ***\\n\";\nclass MySession extends SessionHandler {\n    public $i = 0;\n    public function open($path, $name): bool {\n        ++$this->i;\n        echo 'Open ', session_id(), \"\\n\";\n        return parent::open($path, $name);\n    }\n    public function create_sid(): string {\n        // This method should be removed when 5.5 become unsupported.\n        ++$this->i;\n        echo 'Old Create SID ', session_id(), \"\\n\";\n        return parent::create_sid();\n    }\n    public function read($key): string|false {\n        ++$this->i;\n        echo 'Read ', session_id(), \"\\n\";\n        return parent::read($key);\n    }\n    public function write($key, $data): bool {\n        ++$this->i;\n        echo 'Write ', session_id(), \"\\n\";\n        return parent::write($key, $data);\n    }\n    public function close(): bool {\n        ++$this->i;\n        echo 'Close ', session_id(), \"\\n\";\n        return parent::close();\n    }\n    public function createSid(): string {\n        // User should use this rather than create_sid()\n        // If both create_sid() and createSid() exists,\n        // createSid() is used.\n        ++$this->i;\n        echo 'New Create ID ', session_id(), \"\\n\";\n        return parent::create_sid();\n    }\n    public function validateId($key): bool {\n        ++$this->i;\n        echo 'Validate ID ', session_id(), \"\\n\";\n        return TRUE;\n        // User must implement their own method and\n        // cannot call parent as follows.\n        // return parent::validateSid($key);\n    }\n    public function updateTimestamp($key, $data): bool {\n        ++$this->i;\n        echo 'Update Timestamp ', session_id(), \"\\n\";\n        return parent::write($key, $data);\n        // User must implement their own method and\n        // cannot call parent as follows\n        // return parent::updateTimestamp($key, $data);\n    }\n}\n$oldHandler = ini_get('session.save_handler');\n$handler = new MySession;\nsession_set_save_handler($handler);\nsession_start();\nvar_dump(session_id(), $oldHandler, ini_get('session.save_handler'), $handler->i, $_SESSION);\n$_SESSION['foo'] = \"hello\";\nsession_write_close();\nsession_unset();\nsession_start();\nvar_dump($_SESSION);\nsession_write_close();\nsession_unset();\nvar_dump($handler->i);\n?>")).toMatchSnapshot();
  });
});
