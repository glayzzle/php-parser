// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/streams/bug40459.phpt
  it("bug 40459 - Test whether the constructor of the user-space stream wrapper is called when stream functions are called", function () {
    expect(parser.parseCode("<?php\n// Test whether the constructor of the user-space stream wrapper is called when stream functions are called\nclass testwrapper {\n    private $constructorCalled = false;\n    function __construct() {\n        $this->constructorCalled = true;\n    }\n    function stream_open($path, $mode, $options, &$opened_path)\n    {\n        echo $this->constructorCalled ? 'yes' : 'no';\n        return true;\n    }\n    function url_stat($url, $flags)\n    {\n        echo $this->constructorCalled ? 'yes' : 'no';\n        return array();\n    }\n    function unlink($url)\n    {\n        echo $this->constructorCalled ? 'yes' : 'no';\n    }\n    function rename($from, $to)\n    {\n        echo $this->constructorCalled ? 'yes' : 'no';\n    }\n    function mkdir($dir, $mode, $options)\n    {\n        echo $this->constructorCalled ? 'yes' : 'no';\n    }\n    function rmdir($dir, $options)\n    {\n        echo $this->constructorCalled ? 'yes' : 'no';\n    }\n    function dir_opendir($url, $options)\n    {\n        echo $this->constructorCalled ? 'yes' : 'no';\n        return TRUE;\n    }\n    function stream_metadata()\n    {\n        echo $this->constructorCalled ? 'yes' : 'no';\n        return TRUE;\n    }\n}\nstream_wrapper_register('test', 'testwrapper', STREAM_IS_URL);\necho 'stream_open: ';\nfopen('test://test', 'r');\necho \"\\n\";\necho 'url_stat: ';\nstat('test://test');\necho \"\\n\";\necho 'dir_opendir: ';\nopendir('test://test');\necho \"\\n\";\necho 'rmdir: ';\nrmdir('test://test');\necho \"\\n\";\necho 'mkdir: ';\nmkdir('test://test');\necho \"\\n\";\necho 'rename: ';\nrename('test://test', 'test://test2');\necho \"\\n\";\necho 'unlink: ';\nunlink('test://test');\necho \"\\n\";\necho 'touch: ';\ntouch('test://test', time());\necho \"\\n\";\n?>")).toMatchSnapshot();
  });
});
