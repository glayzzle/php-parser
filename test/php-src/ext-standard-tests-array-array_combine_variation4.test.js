// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/array/array_combine_variation4.phpt
  it("Test array_combine() function : usage variations - associative array with different keys(Bug#43424)", function () {
    expect(parser.parseCode("<?php\n/*\n * Testing the functionality of array_combine() by passing different\n * associative arrays having different possible keys to $keys argument and\n * associative arrays having different possible keys to $values argument.\n*/\necho \"*** Testing array_combine() : assoc array with diff keys to both \\$keys and \\$values argument ***\\n\";\n// get an unset variable\n$unset_var = 10;\nunset ($unset_var);\n// get a resource variable\n$fp = fopen(__FILE__, \"r\");\n// get a class\nclass classA\n{\n  public function __toString(){\n    return \"Class A object\";\n  }\n}\n// get a heredoc string\n$heredoc = <<<EOT\nHello world\nEOT;\n// different variations of associative arrays to be passed to $arr1 argument\n$arrays = array (\n       // empty array\n/*1*/  array(),\n       // arrays with integer keys\n       array(0 => \"0\"),\n       array(1 => \"1\"),\n       array(1 => \"1\", 2 => \"2\", 3 => \"3\", 4 => \"4\"),\n       // arrays with string keys\n/*7*/  array('\\tHello' => 111, 're\\td' => \"color\",\n             '\\v\\fworld' => 2.2, 'pen\\n' => 33),\n       array(\"\\tHello\" => 111, \"re\\td\" => \"color\",\n             \"\\v\\fworld\" => 2.2, \"pen\\n\" => 33),\n       array(\"hello\", $heredoc => \"string\"), // heredoc\n       // array with object, unset variable and resource variable\n/*10*/ array(@$unset_var => \"hello\", $fp => 'resource'),\n       // array with mixed keys\n/*11*/ array('hello' => 1, \"fruit\" => 2.2,\n             $fp => 'resource', 133 => \"int\",\n             @$unset_var => \"unset\", $heredoc => \"heredoc\")\n);\n// array to be passsed to $arr2 argument\n$arr2 = array(0 => 0, 2 => \"float\", 4 => \"f3\", 33333333 => \"f4\",\n              \"\\tHello\" => 111, 2.2, 'color', \"Hello world\" => \"string\",\n              \"pen\\n\" => 33, 133 => \"int\");\n// loop through each sub-array within $arrays to check the behavior of array_combine()\n// same arrays are passed to both $keys and $values\n$iterator = 1;\nforeach($arrays as $array) {\n  echo \"-- Iteration $iterator --\\n\";\n  var_dump( array_combine($array, $array) );\n  $iterator++;\n}\n// close the file resource used\nfclose($fp);\necho \"Done\";\n?>")).toMatchSnapshot();
  });
});
