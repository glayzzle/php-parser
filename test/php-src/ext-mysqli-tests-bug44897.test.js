// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/mysqli/tests/bug44897.phpt
  it("Bug #44879 (failed to prepare statement)", function () {
    expect(parser.parseCode("<?php\n    require_once(\"table.inc\");\n    if (!$link->query('DROP PROCEDURE IF EXISTS p'))\n        printf(\"[001] [%d] %s\\n\", $link->errno, $link->error);\n    if (!$link->query('CREATE PROCEDURE p(IN new_id INT, IN new_label CHAR(1)) BEGIN INSERT INTO test(id, label) VALUES (new_id, new_label); SELECT new_label; END;'))\n        printf(\"[002] [%d] %s\\n\", $link->errno, $link->error);\n    $new_id = 100;\n    $new_label = 'z';\n    if (!$stmt = $link->prepare('CALL p(?, ?)'))\n        printf(\"[003] [%d] %s\\n\", $link->errno, $link->error);\n    if (!$stmt->bind_param('is', $new_id, $new_label) || !$stmt->execute())\n        printf(\"[004] [%d] %s\\n\", $stmt->errno, $stmt->error);\n    $out_new_label = null;\n    if (!$stmt->bind_result($out_new_label) || !$stmt->fetch())\n        printf(\"[005] [%d] %s\\n\", $stmt->errno, $stmt->error);\n    if ($out_new_label != $new_label)\n        printf(\"[006] IN value and returned value differ. Expecting %s/%s got %s/%s\\n\",\n            $new_label, gettype($new_label), $out_new_label, gettype($out_new_label));\n    $stmt->close();\n    $stmt2 = $link->prepare('SELECT label FROM test WHERE id = ?');\n    if (!is_object($stmt2)) {\n        printf(\"[007] Failed to create new statement object, [%d] %s\\n\",\n            $link->errno, $link->error);\n    } else {\n        if (!$stmt2->bind_param(\"i\", $new_id) || !$stmt2->execute())\n            printf(\"[008] [%d] %s\\n\", $stmt2->errno, $stmt2->error);\n        $out_new_label = null;\n        if (!$stmt2->bind_result($out_new_label) || !$stmt2->fetch())\n            printf(\"[009] [%d] %s\\n\", $stmt2->errno, $stmt2->error);\n        if ($out_new_label != $new_label)\n            printf(\"[010] IN value and returned value differ. Expecting %s/%s got %s/%s\\n\",\n                $new_label, gettype($new_label), $out_new_label, gettype($out_new_label));\n    }\n    $link->close();\n    print \"done!\";\n?>")).toMatchSnapshot();
  });
});
