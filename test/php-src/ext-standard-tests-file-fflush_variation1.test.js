// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/standard/tests/file/fflush_variation1.phpt
  it("Test fflush() function: usage variations - files in different modes", function () {
    expect(parser.parseCode("<?php\n/* test fflush() with handle of files opened in different modes */\n$file_path = __DIR__;\nrequire $file_path.'/file.inc';\necho \"*** Testing fflush(): with various types of files ***\\n\";\n$file_types = array(\"empty\", \"numeric\", \"text\", \"text_with_new_line\", \"alphanumeric\");\n$file_modes = array(\"w\", \"wb\", \"wt\", \"w+\", \"w+b\", \"w+t\",\n                    \"a\", \"ab\", \"at\", \"a+\",\"a+b\", \"a+t\",\n                    \"x\", \"xb\", \"xt\", \"x+\", \"x+b\", \"x+t\");\n$file_name = \"$file_path/fflush_variation1.tmp\";\n$count = 1;\nforeach( $file_types as $type ) {\n  echo \"-- Iteration $count with file containing $type Data--\\n\";\n  foreach( $file_modes as $mode ) {\n    echo \"-- File opened in $mode mode --\\n\";\n    // creating the file except for x mode\n    if( substr($mode, 0, 1) != \"x\" ) {\n      $file_handle = fopen($file_name, \"w\");\n    if($file_handle == false)\n      exit(\"Error:failed to open file $file_name\");\n    // filling the file with some data if mode is append mode\n    if( substr($mode, 0, 1) == \"a\")\n      fill_file($file_handle, $type, 10);\n    fclose($file_handle);\n    }\n    // opening the file in different modes\n    $file_handle = fopen($file_name, $mode);\n    if($file_handle == false)\n      exit(\"Error:failed to open file $file_name\");\n    // writing data to the file\n    var_dump( fill_file($file_handle, $type, 50) );\n    var_dump( fflush($file_handle) );\n    fclose($file_handle);\n    // reading the contents of the file after flushing\n     var_dump( readfile($file_name) );\n     unlink($file_name);\n  }\n  $count++;\n}\necho \"\\n*** Done ***\";\n?>")).toMatchSnapshot();
  });
});
