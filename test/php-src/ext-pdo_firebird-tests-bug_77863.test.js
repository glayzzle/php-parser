// eslint-disable prettier/prettier
const parser = require("../main");

describe("php-src tests", function () {
  // ext/pdo_firebird/tests/bug_77863.phpt
  it("PDO_Firebird: Bug #76488 PDO Firebird does not support boolean datatype in input parameters", function () {
    expect(parser.parseCode("<?php\nrequire 'testdb.inc';\n$sql = <<<SQL\nwith t(b, s) as (\n  select true, 'true' from rdb\\$database\n  union all\n  select false, 'false' from rdb\\$database\n  union all\n  select unknown, 'unknown' from rdb\\$database\n)\nselect trim(s) as s from t where b is not distinct from :p\nSQL;\ntry {\n  $query = $dbh->prepare($sql);\n  // PDO::PARAM_BOOL\n  $query->bindValue('p', 0, PDO::PARAM_BOOL);\n  $query->execute();\n  var_dump($query->fetchColumn(0));\n  $query->bindValue('p', 1, PDO::PARAM_BOOL);\n  $query->execute();\n  var_dump($query->fetchColumn(0));\n  $query->bindValue('p', false, PDO::PARAM_BOOL);\n  $query->execute();\n  var_dump($query->fetchColumn(0));\n  $query->bindValue('p', true, PDO::PARAM_BOOL);\n  $query->execute();\n  var_dump($query->fetchColumn(0));\n  $query->bindValue('p', 'false', PDO::PARAM_BOOL);\n  $query->execute();\n  var_dump($query->fetchColumn(0));\n  $query->bindValue('p', 'True', PDO::PARAM_BOOL);\n  $query->execute();\n  var_dump($query->fetchColumn(0));\n  $query->bindValue('p', null, PDO::PARAM_BOOL);\n  $query->execute();\n  var_dump($query->fetchColumn(0));\n  // PDO::PARAM_STR\n  $query->bindValue('p', false, PDO::PARAM_STR);\n  $query->execute();\n  var_dump($query->fetchColumn(0));\n  $query->bindValue('p', true, PDO::PARAM_STR);\n  $query->execute();\n  var_dump($query->fetchColumn(0));\n  $query->bindValue('p', 0, PDO::PARAM_STR);\n  $query->execute();\n  var_dump($query->fetchColumn(0));\n  $query->bindValue('p', 1, PDO::PARAM_STR);\n  $query->execute();\n  var_dump($query->fetchColumn(0));\n  $query->bindValue('p', 'false', PDO::PARAM_STR);\n  $query->execute();\n  var_dump($query->fetchColumn(0));\n  $query->bindValue('p', 'true', PDO::PARAM_STR);\n  $query->execute();\n  var_dump($query->fetchColumn(0));\n  $query->bindValue('p', null, PDO::PARAM_STR);\n  $query->execute();\n  var_dump($query->fetchColumn(0));\n  // PDO::PARAM_INT\n  $query->bindValue('p', false, PDO::PARAM_INT);\n  $query->execute();\n  var_dump($query->fetchColumn(0));\n  $query->bindValue('p', true, PDO::PARAM_INT);\n  $query->execute();\n  var_dump($query->fetchColumn(0));\n  $query->bindValue('p', 0, PDO::PARAM_INT);\n  $query->execute();\n  var_dump($query->fetchColumn(0));\n  $query->bindValue('p', 1, PDO::PARAM_INT);\n  $query->execute();\n  var_dump($query->fetchColumn(0));\n  $query->bindValue('p', 'false', PDO::PARAM_INT);\n  $query->execute();\n  var_dump($query->fetchColumn(0));\n  $query->bindValue('p', 'true', PDO::PARAM_INT);\n  $query->execute();\n  var_dump($query->fetchColumn(0));\n  echo \"OK\\n\";\n}\ncatch(Exception $e) {\n    echo $e->getMessage() . '<br>';\n    echo $e->getTraceAsString();\n}\n?>")).toMatchSnapshot();
  });
});
